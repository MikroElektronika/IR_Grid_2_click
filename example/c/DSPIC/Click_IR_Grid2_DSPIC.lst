;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 28.8.2018. 14:52:07
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x00000004338E  	GOTO	_main
0x0004	0x000000  	0
0x0006	0x000000  	0
0x0008	0x000000  	0
0x000A	0x000000  	0
0x000C	0x000000  	0
0x000E	0x000000  	0
0x0010	0x000000  	0
0x0012	0x000000  	0
0x0014	0x000000  	0
0x0016	0x000000  	0
0x0018	0x000000  	0
0x001A	0x000000  	0
0x001C	0x000000  	0
0x001E	0x000000  	0
0x0020	0x000000  	0
0x0022	0x000000  	0
0x0024	0x000000  	0
0x0026	0x000000  	0
0x0028	0x000000  	0
0x002A	0x000000  	0
0x002C	0x000000  	0
0x002E	0x000000  	0
0x0030	0x000000  	0
0x0032	0x000000  	0
0x0034	0x000000  	0
0x0036	0x000000  	0
0x0038	0x000000  	0
0x003A	0x000000  	0
0x003C	0x000000  	0
0x003E	0x000000  	0
0x0040	0x000000  	0
0x0042	0x000000  	0
0x0044	0x000000  	0
0x0046	0x000000  	0
0x0048	0x000000  	0
0x004A	0x000000  	0
0x004C	0x000000  	0
0x004E	0x000000  	0
0x0050	0x000000  	0
0x0052	0x000000  	0
0x0054	0x000000  	0
0x0056	0x000000  	0
0x0058	0x000000  	0
0x005A	0x000000  	0
0x005C	0x000000  	0
0x005E	0x000000  	0
0x0060	0x000000  	0
0x0062	0x000000  	0
0x0064	0x000000  	0
0x0066	0x000000  	0
0x0068	0x000000  	0
0x006A	0x000000  	0
0x006C	0x000000  	0
0x006E	0x000000  	0
0x0070	0x000000  	0
0x0072	0x000000  	0
0x0074	0x000000  	0
0x0076	0x000000  	0
0x0078	0x000000  	0
0x007A	0x000000  	0
0x007C	0x000000  	0
0x007E	0x000000  	0
0x0080	0x000000  	0
0x0082	0x000000  	0
0x0084	0x000000  	0
0x0086	0x000000  	0
0x0088	0x000000  	0
0x008A	0x000000  	0
0x008C	0x000000  	0
0x008E	0x000000  	0
0x0090	0x000000  	0
0x0092	0x000000  	0
0x0094	0x000000  	0
0x0096	0x000000  	0
0x0098	0x000000  	0
0x009A	0x000000  	0
0x009C	0x000000  	0
0x009E	0x000000  	0
0x00A0	0x000000  	0
0x00A2	0x000000  	0
0x00A4	0x000000  	0
0x00A6	0x000000  	0
0x00A8	0x000000  	0
0x00AA	0x000000  	0
0x00AC	0x000000  	0
0x00AE	0x000000  	0
0x00B0	0x000000  	0
0x00B2	0x000000  	0
0x00B4	0x000000  	0
0x00B6	0x000000  	0
0x00B8	0x000000  	0
0x00BA	0x000000  	0
0x00BC	0x000000  	0
0x00BE	0x000000  	0
0x00C0	0x000000  	0
0x00C2	0x000000  	0
0x00C4	0x000000  	0
0x00C6	0x000000  	0
0x00C8	0x000000  	0
0x00CA	0x000000  	0
0x00CC	0x000000  	0
0x00CE	0x000000  	0
0x00D0	0x000000  	0
0x00D2	0x000000  	0
0x00D4	0x000000  	0
0x00D6	0x000000  	0
0x00D8	0x000000  	0
0x00DA	0x000000  	0
0x00DC	0x000000  	0
0x00DE	0x000000  	0
0x00E0	0x000000  	0
0x00E2	0x000000  	0
0x00E4	0x000000  	0
0x00E6	0x000000  	0
0x00E8	0x000000  	0
0x00EA	0x000000  	0
0x00EC	0x000000  	0
0x00EE	0x000000  	0
0x00F0	0x000000  	0
0x00F2	0x000000  	0
0x00F4	0x000000  	0
0x00F6	0x000000  	0
0x00F8	0x000000  	0
0x00FA	0x000000  	0
0x00FC	0x000000  	0
0x00FE	0x000000  	0
0x0100	0x000000  	0
0x0102	0x000000  	0
0x0104	0x000000  	0
0x0106	0x000000  	0
0x0108	0x000000  	0
0x010A	0x000000  	0
0x010C	0x000000  	0
0x010E	0x000000  	0
0x0110	0x000000  	0
0x0112	0x000000  	0
0x0114	0x000000  	0
0x0116	0x000000  	0
0x0118	0x000000  	0
0x011A	0x000000  	0
0x011C	0x000000  	0
0x011E	0x000000  	0
0x0120	0x000000  	0
0x0122	0x000000  	0
0x0124	0x000000  	0
0x0126	0x000000  	0
0x0128	0x000000  	0
0x012A	0x000000  	0
0x012C	0x000000  	0
0x012E	0x000000  	0
0x0130	0x000000  	0
0x0132	0x000000  	0
0x0134	0x000000  	0
0x0136	0x000000  	0
0x0138	0x000000  	0
0x013A	0x000000  	0
0x013C	0x000000  	0
0x013E	0x000000  	0
0x0140	0x000000  	0
0x0142	0x000000  	0
0x0144	0x000000  	0
0x0146	0x000000  	0
0x0148	0x000000  	0
0x014A	0x000000  	0
0x014C	0x000000  	0
0x014E	0x000000  	0
0x0150	0x000000  	0
0x0152	0x000000  	0
0x0154	0x000000  	0
0x0156	0x000000  	0
0x0158	0x000000  	0
0x015A	0x000000  	0
0x015C	0x000000  	0
0x015E	0x000000  	0
0x0160	0x000000  	0
0x0162	0x000000  	0
0x0164	0x000000  	0
0x0166	0x000000  	0
0x0168	0x000000  	0
0x016A	0x000000  	0
0x016C	0x000000  	0
0x016E	0x000000  	0
0x0170	0x000000  	0
0x0172	0x000000  	0
0x0174	0x000000  	0
0x0176	0x000000  	0
0x0178	0x000000  	0
0x017A	0x000000  	0
0x017C	0x000000  	0
0x017E	0x000000  	0
0x0180	0x000000  	0
0x0182	0x000000  	0
0x0184	0x000000  	0
0x0186	0x000000  	0
0x0188	0x000000  	0
0x018A	0x000000  	0
0x018C	0x000000  	0
0x018E	0x000000  	0
0x0190	0x000000  	0
0x0192	0x000000  	0
0x0194	0x000000  	0
0x0196	0x000000  	0
0x0198	0x000000  	0
0x019A	0x000000  	0
0x019C	0x000000  	0
0x019E	0x000000  	0
0x01A0	0x000000  	0
0x01A2	0x000000  	0
0x01A4	0x000000  	0
0x01A6	0x000000  	0
0x01A8	0x000000  	0
0x01AA	0x000000  	0
0x01AC	0x000000  	0
0x01AE	0x000000  	0
0x01B0	0x000000  	0
0x01B2	0x000000  	0
0x01B4	0x000000  	0
0x01B6	0x000000  	0
0x01B8	0x000000  	0
0x01BA	0x000000  	0
0x01BC	0x000000  	0
0x01BE	0x000000  	0
0x01C0	0x000000  	0
0x01C2	0x000000  	0
0x01C4	0x000000  	0
0x01C6	0x000000  	0
0x01C8	0x000000  	0
0x01CA	0x000000  	0
0x01CC	0x000000  	0
0x01CE	0x000000  	0
0x01D0	0x000000  	0
0x01D2	0x000000  	0
0x01D4	0x000000  	0
0x01D6	0x000000  	0
0x01D8	0x000000  	0
0x01DA	0x000000  	0
0x01DC	0x000000  	0
0x01DE	0x000000  	0
0x01E0	0x000000  	0
0x01E2	0x000000  	0
0x01E4	0x000000  	0
0x01E6	0x000000  	0
0x01E8	0x000000  	0
0x01EA	0x000000  	0
0x01EC	0x000000  	0
0x01EE	0x000000  	0
0x01F0	0x000000  	0
0x01F2	0x000000  	0
0x01F4	0x000000  	0
0x01F6	0x000000  	0
0x01F8	0x000000  	0
0x01FA	0x000000  	0
0x01FC	0x000000  	0
0x01FE	0x000000  	0
_main:
0x338E	0x24C7AF  	MOV	#19578, W15
0x3390	0x27FFF0  	MOV	#32767, W0
0x3392	0xB7A020  	MOV	WREG, SPLIM
0x3394	0x200010  	MOV	#1, W0
0x3396	0xB7A034  	MOV	WREG, PSVPAG
0x3398	0x200040  	MOV	#4, W0
0x339A	0xB72044  	IOR	CORCON
0x339C	0x0000000233AE  	CALL	13230
0x33A0	0x0000000233B8  	CALL	13240
;Click_IR_Grid2_DSPIC.c,81 :: 		void main()
;Click_IR_Grid2_DSPIC.c,83 :: 		systemInit();
0x33A4	0x07FFDB  	RCALL	_systemInit
;Click_IR_Grid2_DSPIC.c,84 :: 		applicationInit();
0x33A6	0x07FFCA  	RCALL	_applicationInit
;Click_IR_Grid2_DSPIC.c,86 :: 		while (1)
L_main10:
;Click_IR_Grid2_DSPIC.c,88 :: 		applicationTask();
0x33A8	0x07FF81  	RCALL	_applicationTask
;Click_IR_Grid2_DSPIC.c,89 :: 		}
0x33AA	0x37FFFE  	BRA	L_main10
;Click_IR_Grid2_DSPIC.c,90 :: 		}
L_end_main:
L__main_end_loop:
0x33AC	0x37FFFF  	BRA	L__main_end_loop
; end of _main
_systemInit:
;Click_IR_Grid2_DSPIC.c,38 :: 		void systemInit()
;Click_IR_Grid2_DSPIC.c,40 :: 		Delay_80us();
0x335C	0x781F8A  	PUSH	W10
0x335E	0x781F8B  	PUSH	W11
0x3360	0x781F8C  	PUSH	W12
0x3362	0x07FF9E  	RCALL	_Delay_80us
;Click_IR_Grid2_DSPIC.c,41 :: 		mikrobus_i2cInit( _MIKROBUS1, &_IRGRID2_I2C_CFG[0] );
0x3364	0x287940  	MOV	#lo_addr(__IRGRID2_I2C_CFG), W0
0x3366	0x780580  	MOV	W0, W11
0x3368	0xEF2014  	CLR	W10
0x336A	0x07FF89  	RCALL	_mikrobus_i2cInit
;Click_IR_Grid2_DSPIC.c,42 :: 		mikrobus_logInit( _LOG_USBUART_A, 9600 );
0x336C	0x22580B  	MOV	#9600, W11
0x336E	0x20000C  	MOV	#0, W12
0x3370	0xB3C20A  	MOV.B	#32, W10
0x3372	0x07FF60  	RCALL	_mikrobus_logInit
;Click_IR_Grid2_DSPIC.c,43 :: 		mikrobus_logWrite(" --- System Init --- ", _LOG_LINE);
0x3374	0xB3C02B  	MOV.B	#2, W11
0x3376	0x20855A  	MOV	#lo_addr(?lstr1_Click_IR_Grid2_DSPIC), W10
0x3378	0x07FF26  	RCALL	_mikrobus_logWrite
;Click_IR_Grid2_DSPIC.c,44 :: 		Delay_ms( 100 );
0x337A	0x200038  	MOV	#3, W8
0x337C	0x208D57  	MOV	#2261, W7
L_systemInit0:
0x337E	0xED200E  	DEC	W7
0x3380	0x3AFFFE  	BRA NZ	L_systemInit0
0x3382	0xED2010  	DEC	W8
0x3384	0x3AFFFC  	BRA NZ	L_systemInit0
;Click_IR_Grid2_DSPIC.c,45 :: 		}
L_end_systemInit:
0x3386	0x78064F  	POP	W12
0x3388	0x7805CF  	POP	W11
0x338A	0x78054F  	POP	W10
0x338C	0x060000  	RETURN
; end of _systemInit
_Delay_80us:
;__Lib_Delays.c,484 :: 		void Delay_80us()
;__Lib_Delays.c,486 :: 		Delay_us(80);
0x32A0	0x2006A7  	MOV	#106, W7
L_Delay_80us17:
0x32A2	0xED200E  	DEC	W7
0x32A4	0x3AFFFE  	BRA NZ	L_Delay_80us17
0x32A6	0x000000  	NOP
0x32A8	0x000000  	NOP
;__Lib_Delays.c,487 :: 		}
L_end_Delay_80us:
0x32AA	0x060000  	RETURN
; end of _Delay_80us
_mikrobus_i2cInit:
;easypicfusion_v7_P33FJ256GP710A.c,222 :: 		T_mikrobus_ret mikrobus_i2cInit(T_mikrobus_soc bus, const uint32_t *cfg)
;easypicfusion_v7_P33FJ256GP710A.c,224 :: 		switch( bus )
0x327E	0x781F8A  	PUSH	W10
0x3280	0x370008  	BRA	L_mikrobus_i2cInit35
;easypicfusion_v7_P33FJ256GP710A.c,227 :: 		case _MIKROBUS1 : return _i2cInit_1( cfg );
L_mikrobus_i2cInit37:
0x3282	0x78050B  	MOV	W11, W10
0x3284	0x07F991  	RCALL	easypicfusion_v7_P33FJ256GP710A__i2cInit_1
0x3286	0x37000A  	BRA	L_end_mikrobus_i2cInit
;easypicfusion_v7_P33FJ256GP710A.c,230 :: 		case _MIKROBUS2 : return _i2cInit_2( cfg );
L_mikrobus_i2cInit38:
0x3288	0x78050B  	MOV	W11, W10
0x328A	0x07F940  	RCALL	easypicfusion_v7_P33FJ256GP710A__i2cInit_2
0x328C	0x370007  	BRA	L_end_mikrobus_i2cInit
;easypicfusion_v7_P33FJ256GP710A.c,244 :: 		default : return _MIKROBUS_ERR_BUS;
L_mikrobus_i2cInit39:
0x328E	0xB3C010  	MOV.B	#1, W0
0x3290	0x370005  	BRA	L_end_mikrobus_i2cInit
;easypicfusion_v7_P33FJ256GP710A.c,245 :: 		}
L_mikrobus_i2cInit35:
0x3292	0xE15460  	CP.B	W10, #0
0x3294	0x32FFF6  	BRA Z	L_mikrobus_i2cInit37
L__mikrobus_i2cInit142:
0x3296	0xE15461  	CP.B	W10, #1
0x3298	0x32FFF7  	BRA Z	L_mikrobus_i2cInit38
L__mikrobus_i2cInit143:
0x329A	0x37FFF9  	BRA	L_mikrobus_i2cInit39
;easypicfusion_v7_P33FJ256GP710A.c,248 :: 		}
L_end_mikrobus_i2cInit:
0x329C	0x78054F  	POP	W10
0x329E	0x060000  	RETURN
; end of _mikrobus_i2cInit
easypicfusion_v7_P33FJ256GP710A__i2cInit_1:
;__epf_33fj256gp710a_i2c.c,33 :: 		static T_mikrobus_ret _i2cInit_1(const uint32_t* cfg)
;__epf_33fj256gp710a_i2c.c,35 :: 		I2C2_Init( (unsigned long) cfg[0] );
0x25A8	0x781F8A  	PUSH	W10
0x25AA	0x781F8B  	PUSH	W11
0x25AC	0xBE051A  	MOV.D	[W10], W10
0x25AE	0x07F78A  	RCALL	_I2C2_Init
;__epf_33fj256gp710a_i2c.c,36 :: 		return _MIKROBUS_OK;
0x25B0	0xB3C000  	MOV.B	#0, W0
;__epf_33fj256gp710a_i2c.c,37 :: 		}
;__epf_33fj256gp710a_i2c.c,36 :: 		return _MIKROBUS_OK;
;__epf_33fj256gp710a_i2c.c,37 :: 		}
L_end__i2cInit_1:
0x25B2	0x7805CF  	POP	W11
0x25B4	0x78054F  	POP	W10
0x25B6	0x060000  	RETURN
; end of easypicfusion_v7_P33FJ256GP710A__i2cInit_1
_I2C2_Init:
0x14C4	0xFA0004  	LNK	#4
;__Lib_I2C_12_p24_p33.c,285 :: 		
;__Lib_I2C_12_p24_p33.c,292 :: 		
0x14C6	0x07FCC8  	RCALL	__Lib_I2C_12_p24_p33_SetI2C2Ptrs
;__Lib_I2C_12_p24_p33.c,294 :: 		
0x14C8	0x07FCC4  	RCALL	_Get_Fosc_kHz
0x14CA	0x201F42  	MOV	#500, W2
0x14CC	0x200003  	MOV	#0, W3
0x14CE	0x07FCB8  	RCALL	__Multiply_32x32
; fcy start address is: 4 (W2)
0x14D0	0xBE0100  	MOV.D	W0, W2
;__Lib_I2C_12_p24_p33.c,295 :: 		
0x14D2	0xBE9F82  	PUSH.D	W2
0x14D4	0xBE9F8A  	PUSH.D	W10
0x14D6	0xBE0002  	MOV.D	W2, W0
0x14D8	0x296802  	MOV	#38528, W2
0x14DA	0x200983  	MOV	#152, W3
0x14DC	0xEB0200  	CLR	W4
0x14DE	0x07FC54  	RCALL	__Divide_32x32
0x14E0	0xBE054F  	POP.D	W10
0x14E2	0xBE014F  	POP.D	W2
0x14E4	0x980700  	MOV	W0, [W14+0]
0x14E6	0x980711  	MOV	W1, [W14+2]
;__Lib_I2C_12_p24_p33.c,296 :: 		
0x14E8	0xBE0002  	MOV.D	W2, W0
0x14EA	0xBE010A  	MOV.D	W10, W2
0x14EC	0xEB0200  	CLR	W4
0x14EE	0x07FC4C  	RCALL	__Divide_32x32
0x14F0	0xBE0100  	MOV.D	W0, W2
;__Lib_I2C_12_p24_p33.c,297 :: 		
0x14F2	0x470060  	ADD	W14, #0, W0
0x14F4	0x510130  	SUB	W2, [W0++], W2
0x14F6	0x5981A0  	SUBB	W3, [W0--], W3
0x14F8	0x510061  	SUB	W2, #1, W0
0x14FA	0x5980E0  	SUBB	W3, #0, W1
; fcy end address is: 4 (W2)
; fcy start address is: 0 (W0)
;__Lib_I2C_12_p24_p33.c,299 :: 		
0x14FC	0x8810A0  	MOV	W0, I2C2BRG
; fcy end address is: 0 (W0)
;__Lib_I2C_12_p24_p33.c,300 :: 		
0x14FE	0xA8E217  	BSET	I2C2CON, #15
;__Lib_I2C_12_p24_p33.c,301 :: 		
0x1500	0x07FCE0  	RCALL	_Delay_100ms
;__Lib_I2C_12_p24_p33.c,302 :: 		
0x1502	0xEF2218  	CLR	I2C2STAT
;__Lib_I2C_12_p24_p33.c,304 :: 		
0x1504	0x07FCD7  	RCALL	__Lib_I2C_12_p24_p33_I2C2_Wait_For_Idle
;__Lib_I2C_12_p24_p33.c,306 :: 		
0x1506	0x07FCD1  	RCALL	_Delay_1us
;__Lib_I2C_12_p24_p33.c,307 :: 		
L_end_I2C2_Init:
0x1508	0xFA8000  	ULNK
0x150A	0x060000  	RETURN
; end of _I2C2_Init
__Lib_I2C_12_p24_p33_SetI2C2Ptrs:
0x0E58	0xFA0000  	LNK	#0
;__Lib_I2C_12_p24_p33.c,276 :: 		
;__Lib_I2C_12_p24_p33.c,277 :: 		
0x0E5A	0x20BE40  	MOV	#lo_addr(_I2C2_Is_Idle), W0
0x0E5C	0x891030  	MOV	W0, _I2C_Is_Idle_Ptr
;__Lib_I2C_12_p24_p33.c,278 :: 		
0x0E5E	0x2096C0  	MOV	#lo_addr(_I2C2_Start), W0
0x0E60	0x884470  	MOV	W0, _I2C_Start_Ptr
;__Lib_I2C_12_p24_p33.c,279 :: 		
0x0E62	0x20BBC0  	MOV	#lo_addr(_I2C2_Restart), W0
0x0E64	0x884460  	MOV	W0, _I2C_Restart_Ptr
;__Lib_I2C_12_p24_p33.c,280 :: 		
0x0E66	0x209E40  	MOV	#lo_addr(_I2C2_Read), W0
0x0E68	0x884450  	MOV	W0, _I2C_Read_Ptr
;__Lib_I2C_12_p24_p33.c,281 :: 		
0x0E6A	0x20B7C0  	MOV	#lo_addr(_I2C2_Write), W0
0x0E6C	0x884480  	MOV	W0, _I2C_Write_Ptr
;__Lib_I2C_12_p24_p33.c,282 :: 		
0x0E6E	0x209D00  	MOV	#lo_addr(_I2C2_Stop), W0
0x0E70	0x884490  	MOV	W0, _I2C_Stop_Ptr
;__Lib_I2C_12_p24_p33.c,283 :: 		
L_end_SetI2C2Ptrs:
0x0E72	0xFA8000  	ULNK
0x0E74	0x060000  	RETURN
; end of __Lib_I2C_12_p24_p33_SetI2C2Ptrs
_Get_Fosc_kHz:
;__Lib_Delays.c,38 :: 		unsigned long Get_Fosc_kHz() {
;__Lib_Delays.c,39 :: 		return Clock_kHz();
0x0E52	0x21F400  	MOV	#8000, W0
0x0E54	0x200001  	MOV	#0, W1
;__Lib_Delays.c,40 :: 		}
L_end_Get_Fosc_kHz:
0x0E56	0x060000  	RETURN
; end of _Get_Fosc_kHz
_Delay_100ms:
;__Lib_Delays.c,666 :: 		void Delay_100ms()
;__Lib_Delays.c,668 :: 		Delay_ms(100);
0x0EC2	0x200038  	MOV	#3, W8
0x0EC4	0x208D57  	MOV	#2261, W7
L_Delay_100ms31:
0x0EC6	0xED200E  	DEC	W7
0x0EC8	0x3AFFFE  	BRA NZ	L_Delay_100ms31
0x0ECA	0xED2010  	DEC	W8
0x0ECC	0x3AFFFC  	BRA NZ	L_Delay_100ms31
;__Lib_Delays.c,669 :: 		}
L_end_Delay_100ms:
0x0ECE	0x060000  	RETURN
; end of _Delay_100ms
__Lib_I2C_12_p24_p33_I2C2_Wait_For_Idle:
0x0EB4	0xFA0000  	LNK	#0
;__Lib_I2C_12_p24_p33.c,194 :: 		
;__Lib_I2C_12_p24_p33.c,196 :: 		
L___Lib_I2C_12_p24_p33_I2C2_Wait_For_Idle23:
0x0EB6	0x07FE96  	RCALL	_I2C2_Is_Idle
0x0EB8	0xE20000  	CP0	W0
0x0EBA	0x3A0001  	BRA NZ	L___Lib_I2C_12_p24_p33_I2C2_Wait_For_Idle24
L___Lib_I2C_12_p24_p33_I2C2_Wait_For_Idle66:
;__Lib_I2C_12_p24_p33.c,197 :: 		
0x0EBC	0x37FFFC  	BRA	L___Lib_I2C_12_p24_p33_I2C2_Wait_For_Idle23
L___Lib_I2C_12_p24_p33_I2C2_Wait_For_Idle24:
;__Lib_I2C_12_p24_p33.c,198 :: 		
L_end_I2C2_Wait_For_Idle:
0x0EBE	0xFA8000  	ULNK
0x0EC0	0x060000  	RETURN
; end of __Lib_I2C_12_p24_p33_I2C2_Wait_For_Idle
_I2C2_Is_Idle:
0x0BE4	0xFA0000  	LNK	#0
;__Lib_I2C_12_p24_p33.c,185 :: 		
;__Lib_I2C_12_p24_p33.c,187 :: 		
0x0BE6	0xEF6002  	CLR.B	W1
0x0BE8	0xAF0216  	BTSC	I2C2CON, #0
0x0BEA	0xEC6002  	INC.B	W1
0x0BEC	0xEF6000  	CLR.B	W0
0x0BEE	0xAF4216  	BTSC	I2C2CON, #2
0x0BF0	0xEC6000  	INC.B	W0
0x0BF2	0xFB8081  	ZE	W1, W1
0x0BF4	0xFB8000  	ZE	W0, W0
0x0BF6	0x708080  	IOR	W1, W0, W1
0x0BF8	0xEF6000  	CLR.B	W0
0x0BFA	0xAF6216  	BTSC	I2C2CON, #3
0x0BFC	0xEC6000  	INC.B	W0
0x0BFE	0xFB8000  	ZE	W0, W0
0x0C00	0x708080  	IOR	W1, W0, W1
0x0C02	0xEF6000  	CLR.B	W0
0x0C04	0xAF8216  	BTSC	I2C2CON, #4
0x0C06	0xEC6000  	INC.B	W0
0x0C08	0xFB8000  	ZE	W0, W0
0x0C0A	0x708080  	IOR	W1, W0, W1
;__Lib_I2C_12_p24_p33.c,188 :: 		
0x0C0C	0xEF6000  	CLR.B	W0
0x0C0E	0xAF2216  	BTSC	I2C2CON, #1
0x0C10	0xEC6000  	INC.B	W0
0x0C12	0xFB8000  	ZE	W0, W0
0x0C14	0x708080  	IOR	W1, W0, W1
0x0C16	0xEF6000  	CLR.B	W0
0x0C18	0xAFC219  	BTSC	I2C2STAT, #14
0x0C1A	0xEC6000  	INC.B	W0
0x0C1C	0xFB8000  	ZE	W0, W0
0x0C1E	0x708000  	IOR	W1, W0, W0
;__Lib_I2C_12_p24_p33.c,190 :: 		
0x0C20	0xE20000  	CP0	W0
0x0C22	0xEF6000  	CLR.B	W0
0x0C24	0x3A0001  	BRA NZ	L__I2C2_Is_Idle64
0x0C26	0xEC6000  	INC.B	W0
L__I2C2_Is_Idle64:
0x0C28	0xFB8000  	ZE	W0, W0
;__Lib_I2C_12_p24_p33.c,191 :: 		
L_end_I2C2_Is_Idle:
0x0C2A	0xFA8000  	ULNK
0x0C2C	0x060000  	RETURN
; end of _I2C2_Is_Idle
_Delay_1us:
;__Lib_Delays.c,380 :: 		void Delay_1us()
;__Lib_Delays.c,382 :: 		Delay_us(1);
0x0EAA	0x000000  	NOP
0x0EAC	0x000000  	NOP
0x0EAE	0x000000  	NOP
0x0EB0	0x000000  	NOP
;__Lib_Delays.c,383 :: 		}
L_end_Delay_1us:
0x0EB2	0x060000  	RETURN
; end of _Delay_1us
__Multiply_32x32:
0x0E40	0xFA0000  	LNK	#0
;__Lib_Math.c,43 :: 		
;__Lib_Math.c,46 :: 		
0x0E42	0xB80A02  	MUL.UU	W1, W2, W4
;__Lib_Math.c,47 :: 		
0x0E44	0x880050  	MOV	W0, W5
;__Lib_Math.c,48 :: 		
0x0E46	0xB80002  	MUL.UU	W0, W2, W0
;__Lib_Math.c,49 :: 		
0x0E48	0x420081  	ADD	W4, W1, W1
;__Lib_Math.c,50 :: 		
0x0E4A	0xB82A03  	MUL.UU	W5, W3, W4
;__Lib_Math.c,51 :: 		
0x0E4C	0x420081  	ADD	W4, W1, W1
;__Lib_Math.c,54 :: 		
L_end__Multiply_32x32:
0x0E4E	0xFA8000  	ULNK
0x0E50	0x060000  	RETURN
; end of __Multiply_32x32
__Divide_32x32:
0x0D88	0xFA0000  	LNK	#0
;__Lib_Math.c,78 :: 		
;__Lib_Math.c,81 :: 		
0x0D8A	0x070002  	RCALL	Divide_32x32___testsus
;__Lib_Math.c,83 :: 		
0x0D8C	0x000000040DD6  	GOTO	the_end_Divide_32x32
;__Lib_Math.c,88 :: 		
Divide_32x32___testsus:
;__Lib_Math.c,89 :: 		
0x0D90	0xE20008  	CP0	W4
;__Lib_Math.c,90 :: 		
0x0D92	0x3A0002  	BRA NZ	Divide_32x32___divsi3
;__Lib_Math.c,92 :: 		
0x0D94	0x070010  	RCALL	Divide_32x32___udivsi3
;__Lib_Math.c,93 :: 		
0x0D96	0x060000  	RETURN
;__Lib_Math.c,95 :: 		
Divide_32x32___divsi3:
;__Lib_Math.c,96 :: 		
0x0D98	0x689F83  	XOR	W1, W3, [W15++]
;__Lib_Math.c,97 :: 		
0x0D9A	0xE20002  	CP0	W1
;__Lib_Math.c,98 :: 		
0x0D9C	0x3D0002  	BRA GE	Divide_32x32_divtestb
;__Lib_Math.c,99 :: 		
0x0D9E	0x100060  	SUBR	W0, #0, W0
;__Lib_Math.c,100 :: 		
0x0DA0	0x1880E0  	SUBBR	W1, #0, W1
;__Lib_Math.c,101 :: 		
Divide_32x32_divtestb:
;__Lib_Math.c,102 :: 		
0x0DA2	0xE20006  	CP0	W3
;__Lib_Math.c,103 :: 		
0x0DA4	0x3D0002  	BRA GE	Divide_32x32_calcquot
;__Lib_Math.c,104 :: 		
0x0DA6	0x110160  	SUBR	W2, #0, W2
;__Lib_Math.c,105 :: 		
0x0DA8	0x1981E0  	SUBBR	W3, #0, W3
;__Lib_Math.c,106 :: 		
Divide_32x32_calcquot:
;__Lib_Math.c,107 :: 		
0x0DAA	0x070005  	RCALL	Divide_32x32___udivsi3
;__Lib_Math.c,108 :: 		
0x0DAC	0xE0004F  	CP0	[--W15]
;__Lib_Math.c,109 :: 		
0x0DAE	0x3B0002  	BRA NN	Divide_32x32_returnq
;__Lib_Math.c,110 :: 		
0x0DB0	0x100060  	SUBR	W0, #0, W0
;__Lib_Math.c,111 :: 		
0x0DB2	0x1880E0  	SUBBR	W1, #0, W1
;__Lib_Math.c,112 :: 		
Divide_32x32_returnq:
;__Lib_Math.c,113 :: 		
0x0DB4	0x060000  	RETURN
;__Lib_Math.c,114 :: 		
Divide_32x32___udivsi3:
;__Lib_Math.c,115 :: 		
0x0DB6	0xB82260  	MUL.UU	W4, #0, W4
;__Lib_Math.c,116 :: 		
0x0DB8	0x200206  	MOV	#32, W6
;__Lib_Math.c,117 :: 		
Divide_32x32_nextbit:
;__Lib_Math.c,118 :: 		
0x0DBA	0xD00000  	SL	W0, W0
;__Lib_Math.c,119 :: 		
0x0DBC	0xD28081  	RLC	W1, W1
;__Lib_Math.c,120 :: 		
0x0DBE	0xD28204  	RLC	W4, W4
;__Lib_Math.c,121 :: 		
0x0DC0	0xD28285  	RLC	W5, W5
;__Lib_Math.c,122 :: 		
0x0DC2	0xA80000  	BSET	W0, #0
;__Lib_Math.c,123 :: 		
0x0DC4	0x520202  	SUB	W4, W2, W4
;__Lib_Math.c,124 :: 		
0x0DC6	0x5A8283  	SUBB	W5, W3, W5
;__Lib_Math.c,125 :: 		
0x0DC8	0x3B0003  	BRA NN	Divide_32x32_iterate
;__Lib_Math.c,126 :: 		
0x0DCA	0x420202  	ADD	W4, W2, W4
;__Lib_Math.c,127 :: 		
0x0DCC	0x4A8283  	ADDC	W5, W3, W5
;__Lib_Math.c,128 :: 		
0x0DCE	0xA10000  	BCLR	W0, #0
;__Lib_Math.c,129 :: 		
Divide_32x32_iterate:
;__Lib_Math.c,130 :: 		
0x0DD0	0xE90306  	DEC	W6, W6
;__Lib_Math.c,131 :: 		
0x0DD2	0x3AFFF3  	BRA NZ	Divide_32x32_nextbit
;__Lib_Math.c,132 :: 		
0x0DD4	0x060000  	RETURN
;__Lib_Math.c,135 :: 		
the_end_Divide_32x32:
;__Lib_Math.c,138 :: 		
L_end__Divide_32x32:
0x0DD6	0xFA8000  	ULNK
0x0DD8	0x060000  	RETURN
; end of __Divide_32x32
easypicfusion_v7_P33FJ256GP710A__i2cInit_2:
;__epf_33fj256gp710a_i2c.c,39 :: 		static T_mikrobus_ret _i2cInit_2(const uint32_t* cfg)
;__epf_33fj256gp710a_i2c.c,41 :: 		I2C2_Init( (unsigned long) cfg[0] );
0x250C	0x781F8A  	PUSH	W10
0x250E	0x781F8B  	PUSH	W11
0x2510	0xBE051A  	MOV.D	[W10], W10
0x2512	0x07F7D8  	RCALL	_I2C2_Init
;__epf_33fj256gp710a_i2c.c,42 :: 		return _MIKROBUS_OK;
0x2514	0xB3C000  	MOV.B	#0, W0
;__epf_33fj256gp710a_i2c.c,43 :: 		}
;__epf_33fj256gp710a_i2c.c,42 :: 		return _MIKROBUS_OK;
;__epf_33fj256gp710a_i2c.c,43 :: 		}
L_end__i2cInit_2:
0x2516	0x7805CF  	POP	W11
0x2518	0x78054F  	POP	W10
0x251A	0x060000  	RETURN
; end of easypicfusion_v7_P33FJ256GP710A__i2cInit_2
_mikrobus_logInit:
;easypicfusion_v7_P33FJ256GP710A.c,283 :: 		T_mikrobus_ret mikrobus_logInit(T_log_bus port, const uint32_t baud)
;easypicfusion_v7_P33FJ256GP710A.c,285 :: 		switch( port )
0x3234	0x781F8A  	PUSH	W10
0x3236	0x781F8B  	PUSH	W11
0x3238	0x781F8C  	PUSH	W12
0x323A	0x370012  	BRA	L_mikrobus_logInit40
;easypicfusion_v7_P33FJ256GP710A.c,288 :: 		case _MIKROBUS1 : return _log_init1( baud );
L_mikrobus_logInit42:
0x323C	0x78050B  	MOV	W11, W10
0x323E	0x78058C  	MOV	W12, W11
0x3240	0x07F960  	RCALL	easypicfusion_v7_P33FJ256GP710A__log_init1
0x3242	0x370019  	BRA	L_end_mikrobus_logInit
;easypicfusion_v7_P33FJ256GP710A.c,291 :: 		case _MIKROBUS2: return _log_init2( baud );
L_mikrobus_logInit43:
0x3244	0x78050B  	MOV	W11, W10
0x3246	0x78058C  	MOV	W12, W11
0x3248	0x07F9A2  	RCALL	easypicfusion_v7_P33FJ256GP710A__log_init2
0x324A	0x370015  	BRA	L_end_mikrobus_logInit
;easypicfusion_v7_P33FJ256GP710A.c,309 :: 		case _LOG_USBUART_A : return _log_initUartA( baud );
L_mikrobus_logInit44:
0x324C	0x78050B  	MOV	W11, W10
0x324E	0x78058C  	MOV	W12, W11
0x3250	0x07F98D  	RCALL	easypicfusion_v7_P33FJ256GP710A__log_initUartA
0x3252	0x370011  	BRA	L_end_mikrobus_logInit
;easypicfusion_v7_P33FJ256GP710A.c,312 :: 		case _LOG_USBUART_B : return _log_initUartB( baud );
L_mikrobus_logInit45:
0x3254	0x78050B  	MOV	W11, W10
0x3256	0x78058C  	MOV	W12, W11
0x3258	0x07F98E  	RCALL	easypicfusion_v7_P33FJ256GP710A__log_initUartB
0x325A	0x37000D  	BRA	L_end_mikrobus_logInit
;easypicfusion_v7_P33FJ256GP710A.c,314 :: 		default : return _MIKROBUS_ERR_BUS;
L_mikrobus_logInit46:
0x325C	0xB3C010  	MOV.B	#1, W0
0x325E	0x37000B  	BRA	L_end_mikrobus_logInit
;easypicfusion_v7_P33FJ256GP710A.c,315 :: 		}
L_mikrobus_logInit40:
0x3260	0xE15460  	CP.B	W10, #0
0x3262	0x32FFEC  	BRA Z	L_mikrobus_logInit42
L__mikrobus_logInit145:
0x3264	0xE15461  	CP.B	W10, #1
0x3266	0x32FFEE  	BRA Z	L_mikrobus_logInit43
L__mikrobus_logInit146:
0x3268	0xB3C200  	MOV.B	#32, W0
0x326A	0xE15400  	CP.B	W10, W0
0x326C	0x32FFEF  	BRA Z	L_mikrobus_logInit44
L__mikrobus_logInit147:
0x326E	0xB3C300  	MOV.B	#48, W0
0x3270	0xE15400  	CP.B	W10, W0
0x3272	0x32FFF0  	BRA Z	L_mikrobus_logInit45
L__mikrobus_logInit148:
0x3274	0x37FFF3  	BRA	L_mikrobus_logInit46
;easypicfusion_v7_P33FJ256GP710A.c,317 :: 		}
L_end_mikrobus_logInit:
0x3276	0x78064F  	POP	W12
0x3278	0x7805CF  	POP	W11
0x327A	0x78054F  	POP	W10
0x327C	0x060000  	RETURN
; end of _mikrobus_logInit
easypicfusion_v7_P33FJ256GP710A__log_init1:
;__epf_33fj256gp710a_log.c,23 :: 		static T_mikrobus_ret _log_init1(uint32_t baud)
;__epf_33fj256gp710a_log.c,25 :: 		UART2_Init(baud);
0x2502	0x07FAAD  	RCALL	_UART2_Init
;__epf_33fj256gp710a_log.c,26 :: 		logger = UART2_Write;
0x2504	0x2149A0  	MOV	#lo_addr(_UART2_Write), W0
0x2506	0x88ACF0  	MOV	W0, _logger
;__epf_33fj256gp710a_log.c,27 :: 		return 0;
0x2508	0xEF2000  	CLR	W0
;__epf_33fj256gp710a_log.c,28 :: 		}
L_end__log_init1:
0x250A	0x060000  	RETURN
; end of easypicfusion_v7_P33FJ256GP710A__log_init1
_UART2_Init:
0x1A5E	0xFA0008  	LNK	#8
;__Lib_UART_12_p24_p33.c,380 :: 		
;__Lib_UART_12_p24_p33.c,383 :: 		
0x1A60	0x2149A0  	MOV	#lo_addr(_UART2_Write), W0
0x1A62	0x884440  	MOV	W0, _UART_Wr_Ptr
;__Lib_UART_12_p24_p33.c,384 :: 		
0x1A64	0x208E00  	MOV	#lo_addr(_UART2_Read), W0
0x1A66	0x884430  	MOV	W0, _UART_Rd_Ptr
;__Lib_UART_12_p24_p33.c,385 :: 		
0x1A68	0x208D60  	MOV	#lo_addr(_UART2_Data_Ready), W0
0x1A6A	0x88ACD0  	MOV	W0, _UART_Rdy_Ptr
;__Lib_UART_12_p24_p33.c,386 :: 		
0x1A6C	0x209960  	MOV	#lo_addr(_UART2_Tx_Idle), W0
0x1A6E	0x88ACC0  	MOV	W0, _UART_Tx_Idle_Ptr
;__Lib_UART_12_p24_p33.c,391 :: 		
0x1A70	0xEF2230  	CLR	U2MODE
;__Lib_UART_12_p24_p33.c,392 :: 		
0x1A72	0x280000  	MOV	#32768, W0
0x1A74	0xB7A232  	MOV	WREG, U2STA
;__Lib_UART_12_p24_p33.c,396 :: 		
0x1A76	0xA96230  	BCLR.B	U2MODE, #3
;__Lib_UART_12_p24_p33.c,397 :: 		
0x1A78	0x07F9EC  	RCALL	_Get_Fosc_kHz
; tmp start address is: 4 (W2)
0x1A7A	0xBE0100  	MOV.D	W0, W2
;__Lib_UART_12_p24_p33.c,399 :: 		
0x1A7C	0x203E80  	MOV	#1000, W0
0x1A7E	0x200001  	MOV	#0, W1
0x1A80	0x07F9DF  	RCALL	__Multiply_32x32
0x1A82	0xBE0100  	MOV.D	W0, W2
;__Lib_UART_12_p24_p33.c,401 :: 		
0x1A84	0x07F9D6  	RCALL	_Get_Fosc_Per_Cyc
0x1A86	0xDE0041  	LSR	W0, #1, W0
0x1A88	0x400064  	ADD	W0, #4, W0
0x1A8A	0x780080  	MOV	W0, W1
0x1A8C	0x470060  	ADD	W14, #0, W0
0x1A8E	0xBE880A  	MOV.D	W10, [W0]
L__UART2_Init120:
0x1A90	0xE90081  	DEC	W1, W1
0x1A92	0x350003  	BRA LT	L__UART2_Init121
0x1A94	0xD01810  	SL	[W0], [W0++]
0x1A96	0xD29010  	RLC	[W0], [W0--]
0x1A98	0x37FFFB  	BRA	L__UART2_Init120
L__UART2_Init121:
;__Lib_UART_12_p24_p33.c,403 :: 		
0x1A9A	0xBE9F82  	PUSH.D	W2
0x1A9C	0xBE9F8A  	PUSH.D	W10
0x1A9E	0xBE0002  	MOV.D	W2, W0
0x1AA0	0x90010E  	MOV	[W14+0], W2
0x1AA2	0x90019E  	MOV	[W14+2], W3
0x1AA4	0xEB0200  	CLR	W4
0x1AA6	0x07F999  	RCALL	__Modulus_32x32
0x1AA8	0xBE054F  	POP.D	W10
0x1AAA	0xBE014F  	POP.D	W2
0x1AAC	0x980720  	MOV	W0, [W14+4]
0x1AAE	0x980731  	MOV	W1, [W14+6]
;__Lib_UART_12_p24_p33.c,404 :: 		
0x1AB0	0xBE9F8A  	PUSH.D	W10
; tmp end address is: 4 (W2)
0x1AB2	0xBE0002  	MOV.D	W2, W0
0x1AB4	0x90010E  	MOV	[W14+0], W2
0x1AB6	0x90019E  	MOV	[W14+2], W3
0x1AB8	0xEB0200  	CLR	W4
0x1ABA	0x07F966  	RCALL	__Divide_32x32
0x1ABC	0xBE054F  	POP.D	W10
; tmp start address is: 6 (W3)
0x1ABE	0x780180  	MOV	W0, W3
0x1AC0	0x780201  	MOV	W1, W4
;__Lib_UART_12_p24_p33.c,406 :: 		
0x1AC2	0x470060  	ADD	W14, #0, W0
0x1AC4	0xD10150  	LSR	[++W0], W2
0x1AC6	0xD380C0  	RRC	[--W0], W1
0x1AC8	0x470064  	ADD	W14, #4, W0
0x1ACA	0xE10830  	CP	W1, [W0++]
0x1ACC	0xE19020  	CPB	W2, [W0--]
0x1ACE	0x310007  	BRA GEU	L__UART2_Init66
L__UART2_Init122:
;__Lib_UART_12_p24_p33.c,407 :: 		
0x1AD0	0x418061  	ADD	W3, #1, W0
0x1AD2	0x4A00E0  	ADDC	W4, #0, W1
; tmp end address is: 6 (W3)
; tmp start address is: 10 (W5)
0x1AD4	0x780280  	MOV	W0, W5
0x1AD6	0x780301  	MOV	W1, W6
; tmp end address is: 10 (W5)
0x1AD8	0x780105  	MOV	W5, W2
0x1ADA	0x780186  	MOV	W6, W3
0x1ADC	0x370002  	BRA	L_UART2_Init38
L__UART2_Init66:
;__Lib_UART_12_p24_p33.c,406 :: 		
0x1ADE	0x780103  	MOV	W3, W2
0x1AE0	0x780184  	MOV	W4, W3
;__Lib_UART_12_p24_p33.c,407 :: 		
L_UART2_Init38:
;__Lib_UART_12_p24_p33.c,410 :: 		
; tmp start address is: 4 (W2)
0x1AE2	0x718002  	IOR	W3, W2, W0
0x1AE4	0x3A0033  	BRA NZ	L__UART2_Init68
L__UART2_Init123:
; tmp end address is: 4 (W2)
;__Lib_UART_12_p24_p33.c,412 :: 		
0x1AE6	0x07F9B5  	RCALL	_Get_Fosc_kHz
; tmp start address is: 4 (W2)
0x1AE8	0xBE0100  	MOV.D	W0, W2
;__Lib_UART_12_p24_p33.c,414 :: 		
0x1AEA	0x203E80  	MOV	#1000, W0
0x1AEC	0x200001  	MOV	#0, W1
0x1AEE	0x07F9A8  	RCALL	__Multiply_32x32
0x1AF0	0xBE0100  	MOV.D	W0, W2
;__Lib_UART_12_p24_p33.c,416 :: 		
0x1AF2	0x07F99F  	RCALL	_Get_Fosc_Per_Cyc
0x1AF4	0xDE0041  	LSR	W0, #1, W0
0x1AF6	0xECA000  	INC2	W0
0x1AF8	0x780080  	MOV	W0, W1
0x1AFA	0x470060  	ADD	W14, #0, W0
0x1AFC	0xBE880A  	MOV.D	W10, [W0]
L__UART2_Init124:
0x1AFE	0xE90081  	DEC	W1, W1
0x1B00	0x350003  	BRA LT	L__UART2_Init125
0x1B02	0xD01810  	SL	[W0], [W0++]
0x1B04	0xD29010  	RLC	[W0], [W0--]
0x1B06	0x37FFFB  	BRA	L__UART2_Init124
L__UART2_Init125:
;__Lib_UART_12_p24_p33.c,418 :: 		
0x1B08	0xBE9F82  	PUSH.D	W2
0x1B0A	0xBE0002  	MOV.D	W2, W0
0x1B0C	0x90010E  	MOV	[W14+0], W2
0x1B0E	0x90019E  	MOV	[W14+2], W3
0x1B10	0xEB0200  	CLR	W4
0x1B12	0x07F963  	RCALL	__Modulus_32x32
0x1B14	0xBE014F  	POP.D	W2
0x1B16	0x980720  	MOV	W0, [W14+4]
0x1B18	0x980731  	MOV	W1, [W14+6]
;__Lib_UART_12_p24_p33.c,419 :: 		
0x1B1A	0xBE0002  	MOV.D	W2, W0
0x1B1C	0x90010E  	MOV	[W14+0], W2
0x1B1E	0x90019E  	MOV	[W14+2], W3
0x1B20	0xEB0200  	CLR	W4
0x1B22	0x07F932  	RCALL	__Divide_32x32
; tmp end address is: 4 (W2)
; tmp start address is: 6 (W3)
0x1B24	0x780180  	MOV	W0, W3
0x1B26	0x780201  	MOV	W1, W4
;__Lib_UART_12_p24_p33.c,421 :: 		
0x1B28	0x470060  	ADD	W14, #0, W0
0x1B2A	0xD10150  	LSR	[++W0], W2
0x1B2C	0xD380C0  	RRC	[--W0], W1
0x1B2E	0x470064  	ADD	W14, #4, W0
0x1B30	0xE10830  	CP	W1, [W0++]
0x1B32	0xE19020  	CPB	W2, [W0--]
0x1B34	0x310007  	BRA GEU	L__UART2_Init67
L__UART2_Init126:
;__Lib_UART_12_p24_p33.c,422 :: 		
0x1B36	0x418061  	ADD	W3, #1, W0
0x1B38	0x4A00E0  	ADDC	W4, #0, W1
; tmp end address is: 6 (W3)
; tmp start address is: 10 (W5)
0x1B3A	0x780280  	MOV	W0, W5
0x1B3C	0x780301  	MOV	W1, W6
; tmp end address is: 10 (W5)
0x1B3E	0x780105  	MOV	W5, W2
0x1B40	0x780186  	MOV	W6, W3
0x1B42	0x370002  	BRA	L_UART2_Init40
L__UART2_Init67:
;__Lib_UART_12_p24_p33.c,421 :: 		
0x1B44	0x780103  	MOV	W3, W2
0x1B46	0x780184  	MOV	W4, W3
;__Lib_UART_12_p24_p33.c,422 :: 		
L_UART2_Init40:
;__Lib_UART_12_p24_p33.c,424 :: 		
; tmp start address is: 4 (W2)
0x1B48	0xA86230  	BSET.B	U2MODE, #3
; tmp end address is: 4 (W2)
;__Lib_UART_12_p24_p33.c,425 :: 		
0x1B4A	0x370000  	BRA	L_UART2_Init39
L__UART2_Init68:
;__Lib_UART_12_p24_p33.c,410 :: 		
;__Lib_UART_12_p24_p33.c,425 :: 		
L_UART2_Init39:
;__Lib_UART_12_p24_p33.c,427 :: 		
; tmp start address is: 4 (W2)
0x1B4C	0x510061  	SUB	W2, #1, W0
0x1B4E	0x5980E0  	SUBB	W3, #0, W1
; tmp end address is: 4 (W2)
; tmp start address is: 0 (W0)
0x1B50	0x8811C0  	MOV	W0, U2BRG
; tmp end address is: 0 (W0)
;__Lib_UART_12_p24_p33.c,430 :: 		
0x1B52	0xA92232  	BCLR.B	U2STA, #1
;__Lib_UART_12_p24_p33.c,432 :: 		
0x1B54	0xA8E231  	BSET	U2MODE, #15
;__Lib_UART_12_p24_p33.c,433 :: 		
0x1B56	0xA84233  	BSET	U2STA, #10
;__Lib_UART_12_p24_p33.c,435 :: 		
0x1B58	0x07F9B4  	RCALL	_Delay_100ms
0x1B5A	0x07F9B3  	RCALL	_Delay_100ms
;__Lib_UART_12_p24_p33.c,437 :: 		
L_end_UART2_Init:
0x1B5C	0xFA8000  	ULNK
0x1B5E	0x060000  	RETURN
; end of _UART2_Init
_Get_Fosc_Per_Cyc:
;__Lib_Delays.c,63 :: 		unsigned int Get_Fosc_Per_Cyc() {
;__Lib_Delays.c,64 :: 		return __FOSC_PER_CYC;
0x0E32	0x200020  	MOV	#2, W0
;__Lib_Delays.c,65 :: 		}
L_end_Get_Fosc_Per_Cyc:
0x0E34	0x060000  	RETURN
; end of _Get_Fosc_Per_Cyc
__Modulus_32x32:
0x0DDA	0xFA0000  	LNK	#0
;__Lib_Math.c,162 :: 		
;__Lib_Math.c,164 :: 		
0x0DDC	0x070002  	RCALL	Modulus_32x32___testsus
;__Lib_Math.c,166 :: 		
0x0DDE	0x000000040E2E  	GOTO	the_end_Modulus_32x32
;__Lib_Math.c,171 :: 		
Modulus_32x32___testsus:
;__Lib_Math.c,172 :: 		
0x0DE2	0xE20008  	CP0	W4
;__Lib_Math.c,173 :: 		
0x0DE4	0x3A0002  	BRA NZ	Modulus_32x32___modsi3
;__Lib_Math.c,175 :: 		
0x0DE6	0x070010  	RCALL	Modulus_32x32___umodsi3
;__Lib_Math.c,176 :: 		
0x0DE8	0x060000  	RETURN
;__Lib_Math.c,178 :: 		
Modulus_32x32___modsi3:
;__Lib_Math.c,179 :: 		
0x0DEA	0x781F81  	MOV	W1, [W15++]
;__Lib_Math.c,180 :: 		
0x0DEC	0xE20002  	CP0	W1
;__Lib_Math.c,181 :: 		
0x0DEE	0x3D0002  	BRA GE	Modulus_32x32_modtestb
;__Lib_Math.c,182 :: 		
0x0DF0	0x100060  	SUBR	W0, #0, W0
;__Lib_Math.c,183 :: 		
0x0DF2	0x1880E0  	SUBBR	W1, #0, W1
;__Lib_Math.c,184 :: 		
Modulus_32x32_modtestb:
;__Lib_Math.c,185 :: 		
0x0DF4	0xE20006  	CP0	W3
;__Lib_Math.c,186 :: 		
0x0DF6	0x3D0002  	BRA GE	Modulus_32x32_calcrem
;__Lib_Math.c,187 :: 		
0x0DF8	0x110160  	SUBR	W2, #0, W2
;__Lib_Math.c,188 :: 		
0x0DFA	0x1981E0  	SUBBR	W3, #0, W3
;__Lib_Math.c,189 :: 		
Modulus_32x32_calcrem:
;__Lib_Math.c,190 :: 		
0x0DFC	0x070005  	RCALL	Modulus_32x32___umodsi3
;__Lib_Math.c,191 :: 		
0x0DFE	0xE0004F  	CP0	[--W15]
;__Lib_Math.c,192 :: 		
0x0E00	0x3B0002  	BRA NN	Modulus_32x32_exitr
;__Lib_Math.c,193 :: 		
0x0E02	0x100060  	SUBR	W0, #0, W0
;__Lib_Math.c,194 :: 		
0x0E04	0x1880E0  	SUBBR	W1, #0, W1
;__Lib_Math.c,195 :: 		
Modulus_32x32_exitr:
;__Lib_Math.c,196 :: 		
0x0E06	0x060000  	RETURN
;__Lib_Math.c,197 :: 		
Modulus_32x32___umodsi3:
;__Lib_Math.c,198 :: 		
0x0E08	0x070002  	RCALL	Modulus_32x32___udivsi3
;__Lib_Math.c,199 :: 		
0x0E0A	0xBE8004  	MOV.D	W4, W0
;__Lib_Math.c,200 :: 		
0x0E0C	0x060000  	RETURN
;__Lib_Math.c,201 :: 		
Modulus_32x32___udivsi3:
;__Lib_Math.c,202 :: 		
0x0E0E	0xB82260  	MUL.UU	W4, #0, W4
;__Lib_Math.c,203 :: 		
0x0E10	0x200206  	MOV	#32, W6
;__Lib_Math.c,204 :: 		
Modulus_32x32_nextbit:
;__Lib_Math.c,205 :: 		
0x0E12	0xD00000  	SL	W0, W0
;__Lib_Math.c,206 :: 		
0x0E14	0xD28081  	RLC	W1, W1
;__Lib_Math.c,207 :: 		
0x0E16	0xD28204  	RLC	W4, W4
;__Lib_Math.c,208 :: 		
0x0E18	0xD28285  	RLC	W5, W5
;__Lib_Math.c,209 :: 		
0x0E1A	0xA80000  	BSET	W0, #0
;__Lib_Math.c,210 :: 		
0x0E1C	0x520202  	SUB	W4, W2, W4
;__Lib_Math.c,211 :: 		
0x0E1E	0x5A8283  	SUBB	W5, W3, W5
;__Lib_Math.c,212 :: 		
0x0E20	0x3B0003  	BRA NN	Modulus_32x32_iterate
;__Lib_Math.c,213 :: 		
0x0E22	0x420202  	ADD	W4, W2, W4
;__Lib_Math.c,214 :: 		
0x0E24	0x4A8283  	ADDC	W5, W3, W5
;__Lib_Math.c,215 :: 		
0x0E26	0xA10000  	BCLR	W0, #0
;__Lib_Math.c,216 :: 		
Modulus_32x32_iterate:
;__Lib_Math.c,217 :: 		
0x0E28	0xE90306  	DEC	W6, W6
;__Lib_Math.c,218 :: 		
0x0E2A	0x3AFFF3  	BRA NZ	Modulus_32x32_nextbit
;__Lib_Math.c,219 :: 		
0x0E2C	0x060000  	RETURN
;__Lib_Math.c,222 :: 		
the_end_Modulus_32x32:
;__Lib_Math.c,225 :: 		
L_end__Modulus_32x32:
0x0E2E	0xFA8000  	ULNK
0x0E30	0x060000  	RETURN
; end of __Modulus_32x32
easypicfusion_v7_P33FJ256GP710A__log_init2:
;__epf_33fj256gp710a_log.c,30 :: 		static T_mikrobus_ret _log_init2(uint32_t baud)
;__epf_33fj256gp710a_log.c,32 :: 		return _MIKROBUS_ERR_LOG;
0x258E	0xB3C060  	MOV.B	#6, W0
;__epf_33fj256gp710a_log.c,33 :: 		}
L_end__log_init2:
0x2590	0x060000  	RETURN
; end of easypicfusion_v7_P33FJ256GP710A__log_init2
easypicfusion_v7_P33FJ256GP710A__log_initUartA:
;__epf_33fj256gp710a_log.c,35 :: 		static T_mikrobus_ret _log_initUartA(uint32_t baud)
;__epf_33fj256gp710a_log.c,37 :: 		UART2_Init(baud);
0x256C	0x07FA78  	RCALL	_UART2_Init
;__epf_33fj256gp710a_log.c,38 :: 		logger = UART2_Write;
0x256E	0x2149A0  	MOV	#lo_addr(_UART2_Write), W0
0x2570	0x88ACF0  	MOV	W0, _logger
;__epf_33fj256gp710a_log.c,39 :: 		return 0;
0x2572	0xEF2000  	CLR	W0
;__epf_33fj256gp710a_log.c,40 :: 		}
L_end__log_initUartA:
0x2574	0x060000  	RETURN
; end of easypicfusion_v7_P33FJ256GP710A__log_initUartA
easypicfusion_v7_P33FJ256GP710A__log_initUartB:
;__epf_33fj256gp710a_log.c,42 :: 		static T_mikrobus_ret _log_initUartB(uint32_t baud)
;__epf_33fj256gp710a_log.c,44 :: 		UART1_Init(baud);
0x2576	0x07FB9B  	RCALL	_UART1_Init
;__epf_33fj256gp710a_log.c,45 :: 		logger = UART1_Write;
0x2578	0x2148C0  	MOV	#lo_addr(_UART1_Write), W0
0x257A	0x88ACF0  	MOV	W0, _logger
;__epf_33fj256gp710a_log.c,46 :: 		return 0;
0x257C	0xEF2000  	CLR	W0
;__epf_33fj256gp710a_log.c,47 :: 		}
L_end__log_initUartB:
0x257E	0x060000  	RETURN
; end of easypicfusion_v7_P33FJ256GP710A__log_initUartB
_UART1_Init:
0x1CAE	0xFA0008  	LNK	#8
;__Lib_UART_12_p24_p33.c,145 :: 		
;__Lib_UART_12_p24_p33.c,148 :: 		
0x1CB0	0x2148C0  	MOV	#lo_addr(_UART1_Write), W0
0x1CB2	0x884440  	MOV	W0, _UART_Wr_Ptr
;__Lib_UART_12_p24_p33.c,149 :: 		
0x1CB4	0x209600  	MOV	#lo_addr(_UART1_Read), W0
0x1CB6	0x884430  	MOV	W0, _UART_Rd_Ptr
;__Lib_UART_12_p24_p33.c,150 :: 		
0x1CB8	0x208C00  	MOV	#lo_addr(_UART1_Data_Ready), W0
0x1CBA	0x88ACD0  	MOV	W0, _UART_Rdy_Ptr
;__Lib_UART_12_p24_p33.c,151 :: 		
0x1CBC	0x208CA0  	MOV	#lo_addr(_UART1_Tx_Idle), W0
0x1CBE	0x88ACC0  	MOV	W0, _UART_Tx_Idle_Ptr
;__Lib_UART_12_p24_p33.c,156 :: 		
0x1CC0	0xEF2220  	CLR	U1MODE
;__Lib_UART_12_p24_p33.c,157 :: 		
0x1CC2	0x280000  	MOV	#32768, W0
0x1CC4	0xB7A222  	MOV	WREG, U1STA
;__Lib_UART_12_p24_p33.c,161 :: 		
0x1CC6	0xA96220  	BCLR.B	U1MODE, #3
;__Lib_UART_12_p24_p33.c,162 :: 		
0x1CC8	0x07F8C4  	RCALL	_Get_Fosc_kHz
; tmp start address is: 4 (W2)
0x1CCA	0xBE0100  	MOV.D	W0, W2
;__Lib_UART_12_p24_p33.c,164 :: 		
0x1CCC	0x203E80  	MOV	#1000, W0
0x1CCE	0x200001  	MOV	#0, W1
0x1CD0	0x07F8B7  	RCALL	__Multiply_32x32
0x1CD2	0xBE0100  	MOV.D	W0, W2
;__Lib_UART_12_p24_p33.c,166 :: 		
0x1CD4	0x07F8AE  	RCALL	_Get_Fosc_Per_Cyc
0x1CD6	0xDE0041  	LSR	W0, #1, W0
0x1CD8	0x400064  	ADD	W0, #4, W0
0x1CDA	0x780080  	MOV	W0, W1
0x1CDC	0x470060  	ADD	W14, #0, W0
0x1CDE	0xBE880A  	MOV.D	W10, [W0]
L__UART1_Init83:
0x1CE0	0xE90081  	DEC	W1, W1
0x1CE2	0x350003  	BRA LT	L__UART1_Init84
0x1CE4	0xD01810  	SL	[W0], [W0++]
0x1CE6	0xD29010  	RLC	[W0], [W0--]
0x1CE8	0x37FFFB  	BRA	L__UART1_Init83
L__UART1_Init84:
;__Lib_UART_12_p24_p33.c,168 :: 		
0x1CEA	0xBE9F82  	PUSH.D	W2
0x1CEC	0xBE9F8A  	PUSH.D	W10
0x1CEE	0xBE0002  	MOV.D	W2, W0
0x1CF0	0x90010E  	MOV	[W14+0], W2
0x1CF2	0x90019E  	MOV	[W14+2], W3
0x1CF4	0xEB0200  	CLR	W4
0x1CF6	0x07F871  	RCALL	__Modulus_32x32
0x1CF8	0xBE054F  	POP.D	W10
0x1CFA	0xBE014F  	POP.D	W2
0x1CFC	0x980720  	MOV	W0, [W14+4]
0x1CFE	0x980731  	MOV	W1, [W14+6]
;__Lib_UART_12_p24_p33.c,169 :: 		
0x1D00	0xBE9F8A  	PUSH.D	W10
; tmp end address is: 4 (W2)
0x1D02	0xBE0002  	MOV.D	W2, W0
0x1D04	0x90010E  	MOV	[W14+0], W2
0x1D06	0x90019E  	MOV	[W14+2], W3
0x1D08	0xEB0200  	CLR	W4
0x1D0A	0x07F83E  	RCALL	__Divide_32x32
0x1D0C	0xBE054F  	POP.D	W10
; tmp start address is: 6 (W3)
0x1D0E	0x780180  	MOV	W0, W3
0x1D10	0x780201  	MOV	W1, W4
;__Lib_UART_12_p24_p33.c,171 :: 		
0x1D12	0x470060  	ADD	W14, #0, W0
0x1D14	0xD10150  	LSR	[++W0], W2
0x1D16	0xD380C0  	RRC	[--W0], W1
0x1D18	0x470064  	ADD	W14, #4, W0
0x1D1A	0xE10830  	CP	W1, [W0++]
0x1D1C	0xE19020  	CPB	W2, [W0--]
0x1D1E	0x310007  	BRA GEU	L__UART1_Init62
L__UART1_Init85:
;__Lib_UART_12_p24_p33.c,172 :: 		
0x1D20	0x418061  	ADD	W3, #1, W0
0x1D22	0x4A00E0  	ADDC	W4, #0, W1
; tmp end address is: 6 (W3)
; tmp start address is: 10 (W5)
0x1D24	0x780280  	MOV	W0, W5
0x1D26	0x780301  	MOV	W1, W6
; tmp end address is: 10 (W5)
0x1D28	0x780105  	MOV	W5, W2
0x1D2A	0x780186  	MOV	W6, W3
0x1D2C	0x370002  	BRA	L_UART1_Init13
L__UART1_Init62:
;__Lib_UART_12_p24_p33.c,171 :: 		
0x1D2E	0x780103  	MOV	W3, W2
0x1D30	0x780184  	MOV	W4, W3
;__Lib_UART_12_p24_p33.c,172 :: 		
L_UART1_Init13:
;__Lib_UART_12_p24_p33.c,175 :: 		
; tmp start address is: 4 (W2)
0x1D32	0x718002  	IOR	W3, W2, W0
0x1D34	0x3A0033  	BRA NZ	L__UART1_Init64
L__UART1_Init86:
; tmp end address is: 4 (W2)
;__Lib_UART_12_p24_p33.c,177 :: 		
0x1D36	0x07F88D  	RCALL	_Get_Fosc_kHz
; tmp start address is: 4 (W2)
0x1D38	0xBE0100  	MOV.D	W0, W2
;__Lib_UART_12_p24_p33.c,179 :: 		
0x1D3A	0x203E80  	MOV	#1000, W0
0x1D3C	0x200001  	MOV	#0, W1
0x1D3E	0x07F880  	RCALL	__Multiply_32x32
0x1D40	0xBE0100  	MOV.D	W0, W2
;__Lib_UART_12_p24_p33.c,181 :: 		
0x1D42	0x07F877  	RCALL	_Get_Fosc_Per_Cyc
0x1D44	0xDE0041  	LSR	W0, #1, W0
0x1D46	0xECA000  	INC2	W0
0x1D48	0x780080  	MOV	W0, W1
0x1D4A	0x470060  	ADD	W14, #0, W0
0x1D4C	0xBE880A  	MOV.D	W10, [W0]
L__UART1_Init87:
0x1D4E	0xE90081  	DEC	W1, W1
0x1D50	0x350003  	BRA LT	L__UART1_Init88
0x1D52	0xD01810  	SL	[W0], [W0++]
0x1D54	0xD29010  	RLC	[W0], [W0--]
0x1D56	0x37FFFB  	BRA	L__UART1_Init87
L__UART1_Init88:
;__Lib_UART_12_p24_p33.c,183 :: 		
0x1D58	0xBE9F82  	PUSH.D	W2
0x1D5A	0xBE0002  	MOV.D	W2, W0
0x1D5C	0x90010E  	MOV	[W14+0], W2
0x1D5E	0x90019E  	MOV	[W14+2], W3
0x1D60	0xEB0200  	CLR	W4
0x1D62	0x07F83B  	RCALL	__Modulus_32x32
0x1D64	0xBE014F  	POP.D	W2
0x1D66	0x980720  	MOV	W0, [W14+4]
0x1D68	0x980731  	MOV	W1, [W14+6]
;__Lib_UART_12_p24_p33.c,184 :: 		
0x1D6A	0xBE0002  	MOV.D	W2, W0
0x1D6C	0x90010E  	MOV	[W14+0], W2
0x1D6E	0x90019E  	MOV	[W14+2], W3
0x1D70	0xEB0200  	CLR	W4
0x1D72	0x07F80A  	RCALL	__Divide_32x32
; tmp end address is: 4 (W2)
; tmp start address is: 6 (W3)
0x1D74	0x780180  	MOV	W0, W3
0x1D76	0x780201  	MOV	W1, W4
;__Lib_UART_12_p24_p33.c,186 :: 		
0x1D78	0x470060  	ADD	W14, #0, W0
0x1D7A	0xD10150  	LSR	[++W0], W2
0x1D7C	0xD380C0  	RRC	[--W0], W1
0x1D7E	0x470064  	ADD	W14, #4, W0
0x1D80	0xE10830  	CP	W1, [W0++]
0x1D82	0xE19020  	CPB	W2, [W0--]
0x1D84	0x310007  	BRA GEU	L__UART1_Init63
L__UART1_Init89:
;__Lib_UART_12_p24_p33.c,187 :: 		
0x1D86	0x418061  	ADD	W3, #1, W0
0x1D88	0x4A00E0  	ADDC	W4, #0, W1
; tmp end address is: 6 (W3)
; tmp start address is: 10 (W5)
0x1D8A	0x780280  	MOV	W0, W5
0x1D8C	0x780301  	MOV	W1, W6
; tmp end address is: 10 (W5)
0x1D8E	0x780105  	MOV	W5, W2
0x1D90	0x780186  	MOV	W6, W3
0x1D92	0x370002  	BRA	L_UART1_Init15
L__UART1_Init63:
;__Lib_UART_12_p24_p33.c,186 :: 		
0x1D94	0x780103  	MOV	W3, W2
0x1D96	0x780184  	MOV	W4, W3
;__Lib_UART_12_p24_p33.c,187 :: 		
L_UART1_Init15:
;__Lib_UART_12_p24_p33.c,189 :: 		
; tmp start address is: 4 (W2)
0x1D98	0xA86220  	BSET.B	U1MODE, #3
; tmp end address is: 4 (W2)
;__Lib_UART_12_p24_p33.c,190 :: 		
0x1D9A	0x370000  	BRA	L_UART1_Init14
L__UART1_Init64:
;__Lib_UART_12_p24_p33.c,175 :: 		
;__Lib_UART_12_p24_p33.c,190 :: 		
L_UART1_Init14:
;__Lib_UART_12_p24_p33.c,192 :: 		
; tmp start address is: 4 (W2)
0x1D9C	0x510061  	SUB	W2, #1, W0
0x1D9E	0x5980E0  	SUBB	W3, #0, W1
; tmp end address is: 4 (W2)
; tmp start address is: 0 (W0)
0x1DA0	0x881140  	MOV	W0, U1BRG
; tmp end address is: 0 (W0)
;__Lib_UART_12_p24_p33.c,195 :: 		
0x1DA2	0xA92222  	BCLR.B	U1STA, #1
;__Lib_UART_12_p24_p33.c,197 :: 		
0x1DA4	0xA8E221  	BSET	U1MODE, #15
;__Lib_UART_12_p24_p33.c,198 :: 		
0x1DA6	0xA84223  	BSET	U1STA, #10
;__Lib_UART_12_p24_p33.c,200 :: 		
0x1DA8	0x07F88C  	RCALL	_Delay_100ms
0x1DAA	0x07F88B  	RCALL	_Delay_100ms
;__Lib_UART_12_p24_p33.c,202 :: 		
L_end_UART1_Init:
0x1DAC	0xFA8000  	ULNK
0x1DAE	0x060000  	RETURN
; end of _UART1_Init
_mikrobus_logWrite:
0x31C6	0xFA0002  	LNK	#2
;easypicfusion_v7_P33FJ256GP710A.c,319 :: 		T_mikrobus_ret mikrobus_logWrite(uint8_t* data_, T_log_format format)
;easypicfusion_v7_P33FJ256GP710A.c,321 :: 		uint8_t *ptr = data_;
0x31C8	0x781F8A  	PUSH	W10
; ptr start address is: 2 (W1)
0x31CA	0x78008A  	MOV	W10, W1
;easypicfusion_v7_P33FJ256GP710A.c,322 :: 		uint8_t row = 13;
0x31CC	0x2000D0  	MOV	#13, W0
0x31CE	0x984700  	MOV.B	W0, [W14+0]
0x31D0	0x2000A0  	MOV	#10, W0
0x31D2	0x984710  	MOV.B	W0, [W14+1]
;easypicfusion_v7_P33FJ256GP710A.c,323 :: 		uint8_t line = 10;
;easypicfusion_v7_P33FJ256GP710A.c,324 :: 		switch( format )
0x31D4	0x370025  	BRA	L_mikrobus_logWrite47
;easypicfusion_v7_P33FJ256GP710A.c,326 :: 		case _LOG_BYTE :
L_mikrobus_logWrite49:
;easypicfusion_v7_P33FJ256GP710A.c,327 :: 		_log_write( ptr );
0x31D6	0x780501  	MOV	W1, W10
; ptr end address is: 2 (W1)
0x31D8	0x07F9D3  	RCALL	easypicfusion_v7_P33FJ256GP710A__log_write
;easypicfusion_v7_P33FJ256GP710A.c,328 :: 		break;
0x31DA	0x370029  	BRA	L_mikrobus_logWrite48
;easypicfusion_v7_P33FJ256GP710A.c,329 :: 		case _LOG_TEXT :
L_mikrobus_logWrite50:
;easypicfusion_v7_P33FJ256GP710A.c,330 :: 		while( *ptr )
; ptr start address is: 2 (W1)
0x31DC	0x780001  	MOV	W1, W0
L_mikrobus_logWrite51:
; ptr end address is: 2 (W1)
; ptr start address is: 0 (W0)
0x31DE	0xE00410  	CP0.B	[W0]
0x31E0	0x320008  	BRA Z	L_mikrobus_logWrite52
L__mikrobus_logWrite150:
;easypicfusion_v7_P33FJ256GP710A.c,332 :: 		_log_write( ptr );
0x31E2	0x781F80  	PUSH	W0
0x31E4	0xBE9F8A  	PUSH.D	W10
0x31E6	0x780500  	MOV	W0, W10
0x31E8	0x07F9CB  	RCALL	easypicfusion_v7_P33FJ256GP710A__log_write
0x31EA	0xBE054F  	POP.D	W10
0x31EC	0x78004F  	POP	W0
;easypicfusion_v7_P33FJ256GP710A.c,333 :: 		ptr++;
0x31EE	0xEC2000  	INC	W0
;easypicfusion_v7_P33FJ256GP710A.c,334 :: 		}
; ptr end address is: 0 (W0)
0x31F0	0x37FFF6  	BRA	L_mikrobus_logWrite51
L_mikrobus_logWrite52:
;easypicfusion_v7_P33FJ256GP710A.c,335 :: 		break;
0x31F2	0x37001D  	BRA	L_mikrobus_logWrite48
;easypicfusion_v7_P33FJ256GP710A.c,336 :: 		case _LOG_LINE :
L_mikrobus_logWrite53:
;easypicfusion_v7_P33FJ256GP710A.c,337 :: 		while( *ptr )
; ptr start address is: 2 (W1)
0x31F4	0x780001  	MOV	W1, W0
L_mikrobus_logWrite54:
; ptr end address is: 2 (W1)
; ptr start address is: 0 (W0)
0x31F6	0xE00410  	CP0.B	[W0]
0x31F8	0x320008  	BRA Z	L_mikrobus_logWrite55
L__mikrobus_logWrite151:
;easypicfusion_v7_P33FJ256GP710A.c,339 :: 		_log_write( ptr );
0x31FA	0x781F80  	PUSH	W0
0x31FC	0xBE9F8A  	PUSH.D	W10
0x31FE	0x780500  	MOV	W0, W10
0x3200	0x07F9BF  	RCALL	easypicfusion_v7_P33FJ256GP710A__log_write
0x3202	0xBE054F  	POP.D	W10
0x3204	0x78004F  	POP	W0
;easypicfusion_v7_P33FJ256GP710A.c,340 :: 		ptr++;
0x3206	0xEC2000  	INC	W0
;easypicfusion_v7_P33FJ256GP710A.c,341 :: 		}
; ptr end address is: 0 (W0)
0x3208	0x37FFF6  	BRA	L_mikrobus_logWrite54
L_mikrobus_logWrite55:
;easypicfusion_v7_P33FJ256GP710A.c,342 :: 		_log_write( &row );
0x320A	0x470060  	ADD	W14, #0, W0
0x320C	0xBE9F8A  	PUSH.D	W10
0x320E	0x780500  	MOV	W0, W10
0x3210	0x07F9B7  	RCALL	easypicfusion_v7_P33FJ256GP710A__log_write
;easypicfusion_v7_P33FJ256GP710A.c,343 :: 		_log_write( &line );
0x3212	0x470061  	ADD	W14, #1, W0
0x3214	0x780500  	MOV	W0, W10
0x3216	0x07F9B4  	RCALL	easypicfusion_v7_P33FJ256GP710A__log_write
0x3218	0xBE054F  	POP.D	W10
;easypicfusion_v7_P33FJ256GP710A.c,344 :: 		break;
0x321A	0x370009  	BRA	L_mikrobus_logWrite48
;easypicfusion_v7_P33FJ256GP710A.c,345 :: 		default :
L_mikrobus_logWrite56:
;easypicfusion_v7_P33FJ256GP710A.c,346 :: 		return _MIKROBUS_ERR_LOG;
0x321C	0xB3C060  	MOV.B	#6, W0
0x321E	0x370007  	BRA	L_end_mikrobus_logWrite
;easypicfusion_v7_P33FJ256GP710A.c,347 :: 		}
L_mikrobus_logWrite47:
; ptr start address is: 2 (W1)
0x3220	0xE15C60  	CP.B	W11, #0
0x3222	0x32FFD9  	BRA Z	L_mikrobus_logWrite49
L__mikrobus_logWrite152:
0x3224	0xE15C61  	CP.B	W11, #1
0x3226	0x32FFDA  	BRA Z	L_mikrobus_logWrite50
L__mikrobus_logWrite153:
0x3228	0xE15C62  	CP.B	W11, #2
0x322A	0x32FFE4  	BRA Z	L_mikrobus_logWrite53
L__mikrobus_logWrite154:
; ptr end address is: 2 (W1)
0x322C	0x37FFF7  	BRA	L_mikrobus_logWrite56
L_mikrobus_logWrite48:
;easypicfusion_v7_P33FJ256GP710A.c,348 :: 		}
L_end_mikrobus_logWrite:
0x322E	0x78054F  	POP	W10
0x3230	0xFA8000  	ULNK
0x3232	0x060000  	RETURN
; end of _mikrobus_logWrite
easypicfusion_v7_P33FJ256GP710A__log_write:
;__epf_33fj256gp710a_log.c,17 :: 		static T_mikrobus_ret _log_write(uint8_t *data_)
;__epf_33fj256gp710a_log.c,19 :: 		logger( *data_ );
0x2580	0x781F8A  	PUSH	W10
0x2582	0xFB851A  	ZE	[W10], W10
0x2584	0x80ACF0  	MOV	_logger, W0
0x2586	0x010000  	CALL	W0
;__epf_33fj256gp710a_log.c,20 :: 		return 0;
0x2588	0xEF2000  	CLR	W0
;__epf_33fj256gp710a_log.c,21 :: 		}
;__epf_33fj256gp710a_log.c,20 :: 		return 0;
;__epf_33fj256gp710a_log.c,21 :: 		}
L_end__log_write:
0x258A	0x78054F  	POP	W10
0x258C	0x060000  	RETURN
; end of easypicfusion_v7_P33FJ256GP710A__log_write
_UART1_Write:
0x148C	0xFA0000  	LNK	#0
;__Lib_UART_12_p24_p33.c,70 :: 		
;__Lib_UART_12_p24_p33.c,71 :: 		
L_UART1_Write0:
0x148E	0xAF0223  	BTSC	U1STA, #8
0x1490	0x370001  	BRA	L_UART1_Write1
0x1492	0x37FFFD  	BRA	L_UART1_Write0
L_UART1_Write1:
;__Lib_UART_12_p24_p33.c,72 :: 		
0x1494	0x88112A  	MOV	W10, U1TXREG
;__Lib_UART_12_p24_p33.c,73 :: 		
L_end_UART1_Write:
0x1496	0xFA8000  	ULNK
0x1498	0x060000  	RETURN
; end of _UART1_Write
_UART2_Write:
0x149A	0xFA0000  	LNK	#0
;__Lib_UART_12_p24_p33.c,305 :: 		
;__Lib_UART_12_p24_p33.c,306 :: 		
L_UART2_Write25:
0x149C	0xAF0233  	BTSC	U2STA, #8
0x149E	0x370001  	BRA	L_UART2_Write26
0x14A0	0x37FFFD  	BRA	L_UART2_Write25
L_UART2_Write26:
;__Lib_UART_12_p24_p33.c,307 :: 		
0x14A2	0x8811AA  	MOV	W10, U2TXREG
;__Lib_UART_12_p24_p33.c,308 :: 		
L_end_UART2_Write:
0x14A4	0xFA8000  	ULNK
0x14A6	0x060000  	RETURN
; end of _UART2_Write
_applicationInit:
;Click_IR_Grid2_DSPIC.c,47 :: 		void applicationInit()
;Click_IR_Grid2_DSPIC.c,49 :: 		irgrid2_i2cDriverInit( (T_IRGRID2_P)&_MIKROBUS1_GPIO, (T_IRGRID2_P)&_MIKROBUS1_I2C, 0x33 );
0x333C	0x781F8A  	PUSH	W10
0x333E	0x781F8B  	PUSH	W11
0x3340	0x781F8C  	PUSH	W12
0x3342	0xB3C33C  	MOV.B	#51, W12
0x3344	0x28782B  	MOV	#lo_addr(__MIKROBUS1_I2C), W11
0x3346	0x286DCA  	MOV	#lo_addr(__MIKROBUS1_GPIO), W10
0x3348	0x07FF29  	RCALL	_irgrid2_i2cDriverInit
;Click_IR_Grid2_DSPIC.c,50 :: 		irgrid2_init();
0x334A	0x07FF30  	RCALL	_irgrid2_init
;Click_IR_Grid2_DSPIC.c,51 :: 		mikrobus_logWrite("--- Start measurement ---", _LOG_LINE);
0x334C	0xB3C02B  	MOV.B	#2, W11
0x334E	0x2086BA  	MOV	#lo_addr(?lstr2_Click_IR_Grid2_DSPIC), W10
0x3350	0x07FF3A  	RCALL	_mikrobus_logWrite
;Click_IR_Grid2_DSPIC.c,52 :: 		Delay_100ms();
0x3352	0x07EDB7  	RCALL	_Delay_100ms
;Click_IR_Grid2_DSPIC.c,53 :: 		}
L_end_applicationInit:
0x3354	0x78064F  	POP	W12
0x3356	0x7805CF  	POP	W11
0x3358	0x78054F  	POP	W10
0x335A	0x060000  	RETURN
; end of _applicationInit
_irgrid2_i2cDriverInit:
;__irgrid2_Driver.c,890 :: 		void irgrid2_i2cDriverInit(T_IRGRID2_P gpioObj, T_IRGRID2_P i2cObj, uint8_t slave)
;__irgrid2_Driver.c,892 :: 		_slaveAddress = slave;
0x319C	0x208290  	MOV	#lo_addr(__irgrid2_Driver__slaveAddress), W0
0x319E	0x78480C  	MOV.B	W12, [W0]
;__irgrid2_Driver.c,893 :: 		hal_i2cMap( (T_HAL_P)i2cObj );
0x31A0	0x781F8A  	PUSH	W10
0x31A2	0x78050B  	MOV	W11, W10
0x31A4	0x07FEA3  	RCALL	__irgrid2_Driver_hal_i2cMap
0x31A6	0x78054F  	POP	W10
;__irgrid2_Driver.c,894 :: 		hal_gpioMap( (T_HAL_P)gpioObj );
0x31A8	0x07FA99  	RCALL	__irgrid2_Driver_hal_gpioMap
;__irgrid2_Driver.c,895 :: 		}
L_end_irgrid2_i2cDriverInit:
0x31AA	0x060000  	RETURN
; end of _irgrid2_i2cDriverInit
__irgrid2_Driver_hal_i2cMap:
;__hal_dspic.c,93 :: 		static void hal_i2cMap(T_HAL_P i2cObj)
;__hal_dspic.c,97 :: 		fp_i2cStart    = tmp->i2cStart;
0x2EEC	0x78001A  	MOV	[W10], W0
0x2EEE	0x891050  	MOV	W0, __irgrid2_Driver_fp_i2cStart
;__hal_dspic.c,98 :: 		fp_i2cStop     = tmp->i2cStop;
0x2EF0	0x4500E2  	ADD	W10, #2, W1
0x2EF2	0x780011  	MOV	[W1], W0
0x2EF4	0x891060  	MOV	W0, __irgrid2_Driver_fp_i2cStop
;__hal_dspic.c,99 :: 		fp_i2cRestart  = tmp->i2cRestart;
0x2EF6	0x4500E4  	ADD	W10, #4, W1
0x2EF8	0x780011  	MOV	[W1], W0
0x2EFA	0x891070  	MOV	W0, __irgrid2_Driver_fp_i2cRestart
;__hal_dspic.c,100 :: 		fp_i2cWrite    = tmp->i2cWrite;
0x2EFC	0x4500E6  	ADD	W10, #6, W1
0x2EFE	0x780011  	MOV	[W1], W0
0x2F00	0x88ACE0  	MOV	W0, __irgrid2_Driver_fp_i2cWrite
;__hal_dspic.c,101 :: 		fp_i2cRead     = tmp->i2cRead;
0x2F02	0x4500E8  	ADD	W10, #8, W1
0x2F04	0x780011  	MOV	[W1], W0
0x2F06	0x891040  	MOV	W0, __irgrid2_Driver_fp_i2cRead
;__hal_dspic.c,102 :: 		}
L_end_hal_i2cMap:
0x2F08	0x060000  	RETURN
; end of __irgrid2_Driver_hal_i2cMap
__irgrid2_Driver_hal_gpioMap:
;__irgrid2_hal.c,321 :: 		static void hal_gpioMap(T_HAL_P gpioObj)
;__irgrid2_hal.c,397 :: 		}
L_end_hal_gpioMap:
0x26DC	0x060000  	RETURN
; end of __irgrid2_Driver_hal_gpioMap
_irgrid2_init:
;__irgrid2_Driver.c,1020 :: 		void irgrid2_init()
;__irgrid2_Driver.c,1024 :: 		irgrid2_readEEPROM(eeMLX90640);
0x31AC	0x781F8A  	PUSH	W10
0x31AE	0x781F8B  	PUSH	W11
0x31B0	0x20F18A  	MOV	#lo_addr(irgrid2_init_eeMLX90640_L0), W10
0x31B2	0x07F9EF  	RCALL	_irgrid2_readEEPROM
;__irgrid2_Driver.c,1025 :: 		irgrid2_ExtractParameters(eeMLX90640, &mlx90640);
0x31B4	0x22210B  	MOV	#lo_addr(__irgrid2_Driver_mlx90640), W11
0x31B6	0x20F18A  	MOV	#lo_addr(irgrid2_init_eeMLX90640_L0), W10
0x31B8	0x07F9B1  	RCALL	_irgrid2_ExtractParameters
;__irgrid2_Driver.c,1026 :: 		irgrid2_setRefreshRate( 0x03 );
0x31BA	0xB3C03A  	MOV.B	#3, W10
0x31BC	0x07F979  	RCALL	_irgrid2_setRefreshRate
;__irgrid2_Driver.c,1027 :: 		Delay_100ms();
0x31BE	0x07EE81  	RCALL	_Delay_100ms
;__irgrid2_Driver.c,1028 :: 		}
L_end_irgrid2_init:
0x31C0	0x7805CF  	POP	W11
0x31C2	0x78054F  	POP	W10
0x31C4	0x060000  	RETURN
; end of _irgrid2_init
_irgrid2_readEEPROM:
;__irgrid2_Driver.c,972 :: 		void irgrid2_readEEPROM(uint16_t *eeData)
;__irgrid2_Driver.c,974 :: 		irgrid2_readData(0x2400, 832, eeData);
0x2592	0x781F8A  	PUSH	W10
0x2594	0x781F8B  	PUSH	W11
0x2596	0x781F8C  	PUSH	W12
0x2598	0x78060A  	MOV	W10, W12
0x259A	0x20340B  	MOV	#832, W11
0x259C	0x22400A  	MOV	#9216, W10
0x259E	0x07F5BC  	RCALL	_irgrid2_readData
;__irgrid2_Driver.c,975 :: 		}
L_end_irgrid2_readEEPROM:
0x25A0	0x78064F  	POP	W12
0x25A2	0x7805CF  	POP	W11
0x25A4	0x78054F  	POP	W10
0x25A6	0x060000  	RETURN
; end of _irgrid2_readEEPROM
_irgrid2_readData:
0x1118	0xFA0682  	LNK	#1666
;__irgrid2_Driver.c,943 :: 		void irgrid2_readData(uint16_t startAddr, uint16_t nBytes, uint16_t *dataOUT)
;__irgrid2_Driver.c,946 :: 		uint8_t readReg[ 1664 ] = {0};
0x111A	0x781F8A  	PUSH	W10
0x111C	0x781F8D  	PUSH	W13
0x111E	0x4700E2  	ADD	W14, #2, W1
0x1120	0x280000  	MOV	#lo_addr(?ICSirgrid2_readData_readReg_L0), W0
0x1122	0x09067F  	REPEAT	#1663
0x1124	0x7858B0  	MOV.B	[W0++], [W1++]
;__irgrid2_Driver.c,947 :: 		uint16_t cnt = 0;
;__irgrid2_Driver.c,948 :: 		uint16_t dataCnt = 0;
;__irgrid2_Driver.c,949 :: 		uint16_t nMemAddressRead = 0;
;__irgrid2_Driver.c,950 :: 		uint16_t i = 0;
;__irgrid2_Driver.c,952 :: 		nMemAddressRead = 2 * nBytes;
0x1126	0xDD5841  	SL	W11, #1, W0
; nMemAddressRead start address is: 4 (W2)
0x1128	0x780100  	MOV	W0, W2
;__irgrid2_Driver.c,954 :: 		writeReg[ 0 ] = (uint8_t)(startAddr >> 8);
0x112A	0x4700E0  	ADD	W14, #0, W1
0x112C	0xDE5048  	LSR	W10, #8, W0
0x112E	0x784880  	MOV.B	W0, [W1]
;__irgrid2_Driver.c,955 :: 		writeReg[ 1 ] = (uint8_t)(startAddr & 0x00FF);
0x1130	0xEC2002  	INC	W1
0x1132	0x200FF0  	MOV	#255, W0
0x1134	0x650000  	AND	W10, W0, W0
0x1136	0x784880  	MOV.B	W0, [W1]
;__irgrid2_Driver.c,957 :: 		hal_i2cStart();
0x1138	0x781F82  	PUSH	W2
0x113A	0x781F8C  	PUSH	W12
0x113C	0x781F8B  	PUSH	W11
0x113E	0x07FEFF  	RCALL	__irgrid2_Driver_hal_i2cStart
;__irgrid2_Driver.c,958 :: 		hal_i2cWrite(_slaveAddress, writeReg, 2, END_MODE_RESTART);
0x1140	0x4700E0  	ADD	W14, #0, W1
0x1142	0x208290  	MOV	#lo_addr(__irgrid2_Driver__slaveAddress), W0
0x1144	0xB3C01D  	MOV.B	#1, W13
0x1146	0x20002C  	MOV	#2, W12
0x1148	0x780581  	MOV	W1, W11
0x114A	0x784510  	MOV.B	[W0], W10
0x114C	0x07FEC1  	RCALL	__irgrid2_Driver_hal_i2cWrite
0x114E	0x7805CF  	POP	W11
0x1150	0x78064F  	POP	W12
0x1152	0x78014F  	POP	W2
;__irgrid2_Driver.c,959 :: 		Delay_10ms();
0x1154	0x07FE70  	RCALL	_Delay_10ms
;__irgrid2_Driver.c,960 :: 		hal_i2cRead(_slaveAddress, readReg, nMemAddressRead, END_MODE_STOP);
0x1156	0x4700E2  	ADD	W14, #2, W1
0x1158	0x208290  	MOV	#lo_addr(__irgrid2_Driver__slaveAddress), W0
0x115A	0x781F8C  	PUSH	W12
0x115C	0x781F8B  	PUSH	W11
0x115E	0xEF201A  	CLR	W13
0x1160	0x780602  	MOV	W2, W12
; nMemAddressRead end address is: 4 (W2)
0x1162	0x780581  	MOV	W1, W11
0x1164	0x784510  	MOV.B	[W0], W10
0x1166	0x07FD63  	RCALL	__irgrid2_Driver_hal_i2cRead
0x1168	0x7805CF  	POP	W11
0x116A	0x78064F  	POP	W12
;__irgrid2_Driver.c,962 :: 		for(cnt=0; cnt < nBytes; cnt++)
; cnt start address is: 8 (W4)
0x116C	0xEF2008  	CLR	W4
; cnt end address is: 8 (W4)
L_irgrid2_readData163:
; cnt start address is: 8 (W4)
0x116E	0xE1200B  	CP	W4, W11
0x1170	0x310017  	BRA GEU	L_irgrid2_readData164
L__irgrid2_readData404:
;__irgrid2_Driver.c,964 :: 		i = cnt << 1;
0x1172	0xDD2141  	SL	W4, #1, W2
; i start address is: 10 (W5)
0x1174	0x780282  	MOV	W2, W5
;__irgrid2_Driver.c,965 :: 		dataOUT[cnt] = readReg[ i ];
0x1176	0xDD2041  	SL	W4, #1, W0
0x1178	0x460080  	ADD	W12, W0, W1
0x117A	0x4701E2  	ADD	W14, #2, W3
0x117C	0x418002  	ADD	W3, W2, W0
0x117E	0xFB8010  	ZE	[W0], W0
0x1180	0x780880  	MOV	W0, [W1]
;__irgrid2_Driver.c,966 :: 		dataOUT[cnt] <<= 8;
0x1182	0xDD2041  	SL	W4, #1, W0
0x1184	0x460080  	ADD	W12, W0, W1
0x1186	0x780011  	MOV	[W1], W0
0x1188	0xDD0048  	SL	W0, #8, W0
0x118A	0x780880  	MOV	W0, [W1]
;__irgrid2_Driver.c,967 :: 		dataOUT[cnt] |= readReg[ i + 1 ];
0x118C	0xDD2041  	SL	W4, #1, W0
0x118E	0x460100  	ADD	W12, W0, W2
0x1190	0x428061  	ADD	W5, #1, W0
; i end address is: 10 (W5)
0x1192	0x418000  	ADD	W3, W0, W0
0x1194	0x780092  	MOV	[W2], W1
0x1196	0xFB8010  	ZE	[W0], W0
0x1198	0x708000  	IOR	W1, W0, W0
0x119A	0x780900  	MOV	W0, [W2]
;__irgrid2_Driver.c,962 :: 		for(cnt=0; cnt < nBytes; cnt++)
0x119C	0xEC2008  	INC	W4
;__irgrid2_Driver.c,968 :: 		}
; cnt end address is: 8 (W4)
0x119E	0x37FFE7  	BRA	L_irgrid2_readData163
L_irgrid2_readData164:
;__irgrid2_Driver.c,969 :: 		}
L_end_irgrid2_readData:
0x11A0	0x7806CF  	POP	W13
0x11A2	0x78054F  	POP	W10
0x11A4	0xFA8000  	ULNK
0x11A6	0x060000  	RETURN
; end of _irgrid2_readData
__irgrid2_Driver_hal_i2cStart:
0x0F3E	0xFA0002  	LNK	#2
;__hal_dspic.c,104 :: 		static int hal_i2cStart()
;__hal_dspic.c,106 :: 		int res = 0;
0x0F40	0x200000  	MOV	#0, W0
0x0F42	0x980700  	MOV	W0, [W14+0]
;__hal_dspic.c,107 :: 		res |= fp_i2cStart();
0x0F44	0x811051  	MOV	__irgrid2_Driver_fp_i2cStart, W1
0x0F46	0x010001  	CALL	W1
0x0F48	0x4700E0  	ADD	W14, #0, W1
0x0F4A	0x700011  	IOR	W0, [W1], W0
;__hal_dspic.c,108 :: 		return res;
;__hal_dspic.c,109 :: 		}
L_end_hal_i2cStart:
0x0F4C	0xFA8000  	ULNK
0x0F4E	0x060000  	RETURN
; end of __irgrid2_Driver_hal_i2cStart
_I2C1_Is_Idle:
0x08EC	0xFA0000  	LNK	#0
;__Lib_I2C_12_p24_p33.c,55 :: 		
;__Lib_I2C_12_p24_p33.c,57 :: 		
0x08EE	0xEF6002  	CLR.B	W1
0x08F0	0xAF0206  	BTSC	I2C1CON, #0
0x08F2	0xEC6002  	INC.B	W1
0x08F4	0xEF6000  	CLR.B	W0
0x08F6	0xAF4206  	BTSC	I2C1CON, #2
0x08F8	0xEC6000  	INC.B	W0
0x08FA	0xFB8081  	ZE	W1, W1
0x08FC	0xFB8000  	ZE	W0, W0
0x08FE	0x708080  	IOR	W1, W0, W1
0x0900	0xEF6000  	CLR.B	W0
0x0902	0xAF6206  	BTSC	I2C1CON, #3
0x0904	0xEC6000  	INC.B	W0
0x0906	0xFB8000  	ZE	W0, W0
0x0908	0x708080  	IOR	W1, W0, W1
0x090A	0xEF6000  	CLR.B	W0
0x090C	0xAF8206  	BTSC	I2C1CON, #4
0x090E	0xEC6000  	INC.B	W0
0x0910	0xFB8000  	ZE	W0, W0
0x0912	0x708080  	IOR	W1, W0, W1
;__Lib_I2C_12_p24_p33.c,58 :: 		
0x0914	0xEF6000  	CLR.B	W0
0x0916	0xAF2206  	BTSC	I2C1CON, #1
0x0918	0xEC6000  	INC.B	W0
0x091A	0xFB8000  	ZE	W0, W0
0x091C	0x708080  	IOR	W1, W0, W1
0x091E	0xEF6000  	CLR.B	W0
0x0920	0xAFC209  	BTSC	I2C1STAT, #14
0x0922	0xEC6000  	INC.B	W0
0x0924	0xFB8000  	ZE	W0, W0
0x0926	0x708000  	IOR	W1, W0, W0
;__Lib_I2C_12_p24_p33.c,59 :: 		
0x0928	0xE20000  	CP0	W0
0x092A	0xEF6000  	CLR.B	W0
0x092C	0x3A0001  	BRA NZ	L__I2C1_Is_Idle44
0x092E	0xEC6000  	INC.B	W0
L__I2C1_Is_Idle44:
0x0930	0xFB8000  	ZE	W0, W0
;__Lib_I2C_12_p24_p33.c,60 :: 		
L_end_I2C1_Is_Idle:
0x0932	0xFA8000  	ULNK
0x0934	0x060000  	RETURN
; end of _I2C1_Is_Idle
_I2C1_Start:
0x0936	0xFA0000  	LNK	#0
;__Lib_I2C_12_p24_p33.c,69 :: 		
;__Lib_I2C_12_p24_p33.c,75 :: 		
; j start address is: 4 (W2)
0x0938	0xEF2004  	CLR	W2
; j end address is: 4 (W2)
L_I2C1_Start4:
; j start address is: 4 (W2)
0x093A	0x227100  	MOV	#10000, W0
0x093C	0xE11000  	CP	W2, W0
0x093E	0x3E0006  	BRA GTU	L_I2C1_Start5
L__I2C1_Start48:
;__Lib_I2C_12_p24_p33.c,76 :: 		
0x0940	0x07FFD5  	RCALL	_I2C1_Is_Idle
0x0942	0xE20000  	CP0	W0
0x0944	0x320001  	BRA Z	L_I2C1_Start7
L__I2C1_Start49:
;__Lib_I2C_12_p24_p33.c,77 :: 		
0x0946	0x370002  	BRA	L_I2C1_Start5
L_I2C1_Start7:
;__Lib_I2C_12_p24_p33.c,75 :: 		
0x0948	0xEC2004  	INC	W2
;__Lib_I2C_12_p24_p33.c,78 :: 		
0x094A	0x37FFF7  	BRA	L_I2C1_Start4
L_I2C1_Start5:
;__Lib_I2C_12_p24_p33.c,80 :: 		
0x094C	0x227110  	MOV	#10001, W0
0x094E	0xE11000  	CP	W2, W0
0x0950	0x390002  	BRA LTU	L_I2C1_Start8
L__I2C1_Start50:
; j end address is: 4 (W2)
;__Lib_I2C_12_p24_p33.c,81 :: 		
0x0952	0x200FF0  	MOV	#255, W0
0x0954	0x370003  	BRA	L_end_I2C1_Start
L_I2C1_Start8:
;__Lib_I2C_12_p24_p33.c,83 :: 		
0x0956	0xA80206  	BSET.B	I2C1CON, #0
;__Lib_I2C_12_p24_p33.c,84 :: 		
0x0958	0x07FECD  	RCALL	__Lib_I2C_12_p24_p33_I2C1_Is_Finished
;__Lib_I2C_12_p24_p33.c,85 :: 		
0x095A	0xEF2000  	CLR	W0
;__Lib_I2C_12_p24_p33.c,87 :: 		
L_end_I2C1_Start:
0x095C	0xFA8000  	ULNK
0x095E	0x060000  	RETURN
; end of _I2C1_Start
__Lib_I2C_12_p24_p33_I2C1_Is_Finished:
0x06F4	0xFA0000  	LNK	#0
;__Lib_I2C_12_p24_p33.c,47 :: 		
;__Lib_I2C_12_p24_p33.c,48 :: 		
L___Lib_I2C_12_p24_p33_I2C1_Is_Finished0:
0x06F6	0xAF2086  	BTSC	IFS1, #1
0x06F8	0x370001  	BRA	L___Lib_I2C_12_p24_p33_I2C1_Is_Finished1
;__Lib_I2C_12_p24_p33.c,49 :: 		
0x06FA	0x37FFFD  	BRA	L___Lib_I2C_12_p24_p33_I2C1_Is_Finished0
L___Lib_I2C_12_p24_p33_I2C1_Is_Finished1:
;__Lib_I2C_12_p24_p33.c,50 :: 		
0x06FC	0xA92086  	BCLR.B	IFS1, #1
;__Lib_I2C_12_p24_p33.c,51 :: 		
L_end_I2C1_Is_Finished:
0x06FE	0xFA8000  	ULNK
0x0700	0x060000  	RETURN
; end of __Lib_I2C_12_p24_p33_I2C1_Is_Finished
_I2C2_Start:
0x096C	0xFA0000  	LNK	#0
;__Lib_I2C_12_p24_p33.c,202 :: 		
;__Lib_I2C_12_p24_p33.c,208 :: 		
; j start address is: 4 (W2)
0x096E	0xEF2004  	CLR	W2
; j end address is: 4 (W2)
L_I2C2_Start25:
; j start address is: 4 (W2)
0x0970	0x227100  	MOV	#10000, W0
0x0972	0xE11000  	CP	W2, W0
0x0974	0x3E0006  	BRA GTU	L_I2C2_Start26
L__I2C2_Start68:
;__Lib_I2C_12_p24_p33.c,209 :: 		
0x0976	0x070136  	RCALL	_I2C2_Is_Idle
0x0978	0xE20000  	CP0	W0
0x097A	0x320001  	BRA Z	L_I2C2_Start28
L__I2C2_Start69:
;__Lib_I2C_12_p24_p33.c,210 :: 		
0x097C	0x370002  	BRA	L_I2C2_Start26
L_I2C2_Start28:
;__Lib_I2C_12_p24_p33.c,208 :: 		
0x097E	0xEC2004  	INC	W2
;__Lib_I2C_12_p24_p33.c,211 :: 		
0x0980	0x37FFF7  	BRA	L_I2C2_Start25
L_I2C2_Start26:
;__Lib_I2C_12_p24_p33.c,213 :: 		
0x0982	0x227110  	MOV	#10001, W0
0x0984	0xE11000  	CP	W2, W0
0x0986	0x390002  	BRA LTU	L_I2C2_Start29
L__I2C2_Start70:
; j end address is: 4 (W2)
;__Lib_I2C_12_p24_p33.c,214 :: 		
0x0988	0x200FF0  	MOV	#255, W0
0x098A	0x370003  	BRA	L_end_I2C2_Start
L_I2C2_Start29:
;__Lib_I2C_12_p24_p33.c,216 :: 		
0x098C	0xA80216  	BSET.B	I2C2CON, #0
;__Lib_I2C_12_p24_p33.c,217 :: 		
0x098E	0x07FEAB  	RCALL	__Lib_I2C_12_p24_p33_I2C2_Is_Finished
;__Lib_I2C_12_p24_p33.c,218 :: 		
0x0990	0xEF2000  	CLR	W0
;__Lib_I2C_12_p24_p33.c,220 :: 		
L_end_I2C2_Start:
0x0992	0xFA8000  	ULNK
0x0994	0x060000  	RETURN
; end of _I2C2_Start
__Lib_I2C_12_p24_p33_I2C2_Is_Finished:
0x06E6	0xFA0000  	LNK	#0
;__Lib_I2C_12_p24_p33.c,177 :: 		
;__Lib_I2C_12_p24_p33.c,178 :: 		
L___Lib_I2C_12_p24_p33_I2C2_Is_Finished21:
0x06E8	0xAF408A  	BTSC	IFS3, #2
0x06EA	0x370001  	BRA	L___Lib_I2C_12_p24_p33_I2C2_Is_Finished22
;__Lib_I2C_12_p24_p33.c,179 :: 		
0x06EC	0x37FFFD  	BRA	L___Lib_I2C_12_p24_p33_I2C2_Is_Finished21
L___Lib_I2C_12_p24_p33_I2C2_Is_Finished22:
;__Lib_I2C_12_p24_p33.c,180 :: 		
0x06EE	0xA9408A  	BCLR.B	IFS3, #2
;__Lib_I2C_12_p24_p33.c,181 :: 		
L_end_I2C2_Is_Finished:
0x06F0	0xFA8000  	ULNK
0x06F2	0x060000  	RETURN
; end of __Lib_I2C_12_p24_p33_I2C2_Is_Finished
_UART1_Read:
0x0960	0xFA0000  	LNK	#0
;__Lib_UART_12_p24_p33.c,92 :: 		
;__Lib_UART_12_p24_p33.c,93 :: 		
0x0962	0x000000  	NOP
;__Lib_UART_12_p24_p33.c,94 :: 		
0x0964	0x000000  	NOP
;__Lib_UART_12_p24_p33.c,95 :: 		
0x0966	0xBF8226  	MOV	U1RXREG, WREG
;__Lib_UART_12_p24_p33.c,96 :: 		
L_end_UART1_Read:
0x0968	0xFA8000  	ULNK
0x096A	0x060000  	RETURN
; end of _UART1_Read
_UART1_Data_Ready:
0x08C0	0xFA0000  	LNK	#0
;__Lib_UART_12_p24_p33.c,87 :: 		
;__Lib_UART_12_p24_p33.c,88 :: 		
0x08C2	0xBF8222  	MOV	U1STA, WREG
0x08C4	0x600061  	AND	W0, #1, W0
;__Lib_UART_12_p24_p33.c,90 :: 		
L_end_UART1_Data_Ready:
0x08C6	0xFA8000  	ULNK
0x08C8	0x060000  	RETURN
; end of _UART1_Data_Ready
_UART1_Tx_Idle:
0x08CA	0xFA0000  	LNK	#0
;__Lib_UART_12_p24_p33.c,139 :: 		
;__Lib_UART_12_p24_p33.c,140 :: 		
0x08CC	0xEF2000  	CLR	W0
0x08CE	0xAF0223  	BTSC	U1STA, #8
0x08D0	0xEC2000  	INC	W0
;__Lib_UART_12_p24_p33.c,141 :: 		
L_end_UART1_Tx_Idle:
0x08D2	0xFA8000  	ULNK
0x08D4	0x060000  	RETURN
; end of _UART1_Tx_Idle
_UART2_Read:
0x08E0	0xFA0000  	LNK	#0
;__Lib_UART_12_p24_p33.c,327 :: 		
;__Lib_UART_12_p24_p33.c,328 :: 		
0x08E2	0x000000  	NOP
;__Lib_UART_12_p24_p33.c,329 :: 		
0x08E4	0x000000  	NOP
;__Lib_UART_12_p24_p33.c,330 :: 		
0x08E6	0xBF8236  	MOV	U2RXREG, WREG
;__Lib_UART_12_p24_p33.c,331 :: 		
L_end_UART2_Read:
0x08E8	0xFA8000  	ULNK
0x08EA	0x060000  	RETURN
; end of _UART2_Read
_UART2_Data_Ready:
0x08D6	0xFA0000  	LNK	#0
;__Lib_UART_12_p24_p33.c,322 :: 		
;__Lib_UART_12_p24_p33.c,323 :: 		
0x08D8	0xBF8232  	MOV	U2STA, WREG
0x08DA	0x600061  	AND	W0, #1, W0
;__Lib_UART_12_p24_p33.c,325 :: 		
L_end_UART2_Data_Ready:
0x08DC	0xFA8000  	ULNK
0x08DE	0x060000  	RETURN
; end of _UART2_Data_Ready
_UART2_Tx_Idle:
0x0996	0xFA0000  	LNK	#0
;__Lib_UART_12_p24_p33.c,374 :: 		
;__Lib_UART_12_p24_p33.c,375 :: 		
0x0998	0xEF2000  	CLR	W0
0x099A	0xAF0233  	BTSC	U2STA, #8
0x099C	0xEC2000  	INC	W0
;__Lib_UART_12_p24_p33.c,376 :: 		
L_end_UART2_Tx_Idle:
0x099E	0xFA8000  	ULNK
0x09A0	0x060000  	RETURN
; end of _UART2_Tx_Idle
__irgrid2_Driver_hal_i2cWrite:
0x0ED0	0xFA0004  	LNK	#4
;__hal_dspic.c,111 :: 		static int hal_i2cWrite(uint8_t slaveAddress, uint8_t *pBuf, uint16_t nBytes, uint8_t endMode)
;__hal_dspic.c,113 :: 		int res = 0;
0x0ED2	0x781F8A  	PUSH	W10
0x0ED4	0x200000  	MOV	#0, W0
0x0ED6	0x980710  	MOV	W0, [W14+2]
;__hal_dspic.c,114 :: 		uint8_t *ptr = pBuf;
0x0ED8	0x98070B  	MOV	W11, [W14+0]
;__hal_dspic.c,115 :: 		res |= fp_i2cWrite(slaveAddress << 1);
0x0EDA	0xFB800A  	ZE	W10, W0
0x0EDC	0xDD0041  	SL	W0, #1, W0
0x0EDE	0xBE9F8C  	PUSH.D	W12
0x0EE0	0x784500  	MOV.B	W0, W10
0x0EE2	0x80ACE1  	MOV	__irgrid2_Driver_fp_i2cWrite, W1
0x0EE4	0x010001  	CALL	W1
0x0EE6	0xBE064F  	POP.D	W12
0x0EE8	0x470162  	ADD	W14, #2, W2
0x0EEA	0x4700E2  	ADD	W14, #2, W1
0x0EEC	0x700892  	IOR	W0, [W2], [W1]
;__hal_dspic.c,116 :: 		while(nBytes--)
L___irgrid2_Driver_hal_i2cWrite0:
0x0EEE	0x78008C  	MOV	W12, W1
0x0EF0	0x560061  	SUB	W12, #1, W0
0x0EF2	0x780600  	MOV	W0, W12
0x0EF4	0xE20002  	CP0	W1
0x0EF6	0x32000F  	BRA Z	L___irgrid2_Driver_hal_i2cWrite1
L___irgrid2_Driver_hal_i2cWrite249:
;__hal_dspic.c,117 :: 		res |= fp_i2cWrite(*( ptr++ ));
0x0EF8	0x90000E  	MOV	[W14+0], W0
0x0EFA	0xBE9F8C  	PUSH.D	W12
0x0EFC	0xBE9F8A  	PUSH.D	W10
0x0EFE	0x784510  	MOV.B	[W0], W10
0x0F00	0x80ACE1  	MOV	__irgrid2_Driver_fp_i2cWrite, W1
0x0F02	0x010001  	CALL	W1
0x0F04	0xBE054F  	POP.D	W10
0x0F06	0xBE064F  	POP.D	W12
0x0F08	0x470162  	ADD	W14, #2, W2
0x0F0A	0x4700E2  	ADD	W14, #2, W1
0x0F0C	0x700892  	IOR	W0, [W2], [W1]
0x0F0E	0x90008E  	MOV	[W14+0], W1
0x0F10	0x470060  	ADD	W14, #0, W0
0x0F12	0x408861  	ADD	W1, #1, [W0]
0x0F14	0x37FFEC  	BRA	L___irgrid2_Driver_hal_i2cWrite0
L___irgrid2_Driver_hal_i2cWrite1:
;__hal_dspic.c,118 :: 		if(endMode == END_MODE_STOP)
0x0F16	0xE16C60  	CP.B	W13, #0
0x0F18	0x3A0006  	BRA NZ	L___irgrid2_Driver_hal_i2cWrite2
L___irgrid2_Driver_hal_i2cWrite250:
;__hal_dspic.c,119 :: 		fp_i2cStop();
0x0F1A	0x811060  	MOV	__irgrid2_Driver_fp_i2cStop, W0
0x0F1C	0xBE9F8C  	PUSH.D	W12
0x0F1E	0xBE9F8A  	PUSH.D	W10
0x0F20	0x010000  	CALL	W0
0x0F22	0xBE054F  	POP.D	W10
0x0F24	0xBE064F  	POP.D	W12
L___irgrid2_Driver_hal_i2cWrite2:
;__hal_dspic.c,120 :: 		if(endMode == END_MODE_RESTART)
0x0F26	0xE16C61  	CP.B	W13, #1
0x0F28	0x3A0006  	BRA NZ	L___irgrid2_Driver_hal_i2cWrite3
L___irgrid2_Driver_hal_i2cWrite251:
;__hal_dspic.c,121 :: 		fp_i2cStart();
0x0F2A	0x811050  	MOV	__irgrid2_Driver_fp_i2cStart, W0
0x0F2C	0xBE9F8C  	PUSH.D	W12
0x0F2E	0xBE9F8A  	PUSH.D	W10
0x0F30	0x010000  	CALL	W0
0x0F32	0xBE054F  	POP.D	W10
0x0F34	0xBE064F  	POP.D	W12
L___irgrid2_Driver_hal_i2cWrite3:
;__hal_dspic.c,122 :: 		return res;
0x0F36	0x90001E  	MOV	[W14+2], W0
;__hal_dspic.c,123 :: 		}
;__hal_dspic.c,122 :: 		return res;
;__hal_dspic.c,123 :: 		}
L_end_hal_i2cWrite:
0x0F38	0x78054F  	POP	W10
0x0F3A	0xFA8000  	ULNK
0x0F3C	0x060000  	RETURN
; end of __irgrid2_Driver_hal_i2cWrite
_I2C1_Write:
0x0B92	0xFA0000  	LNK	#0
;__Lib_I2C_12_p24_p33.c,106 :: 		
;__Lib_I2C_12_p24_p33.c,107 :: 		
0x0B94	0xFB800A  	ZE	W10, W0
0x0B96	0xB7A202  	MOV	WREG, I2C1TRN
;__Lib_I2C_12_p24_p33.c,108 :: 		
0x0B98	0xAEE208  	BTSS	I2C1STAT, #7
0x0B9A	0x370002  	BRA	L_I2C1_Write14
;__Lib_I2C_12_p24_p33.c,109 :: 		
0x0B9C	0x200010  	MOV	#1, W0
0x0B9E	0x370002  	BRA	L_end_I2C1_Write
L_I2C1_Write14:
;__Lib_I2C_12_p24_p33.c,111 :: 		
0x0BA0	0x07FDA9  	RCALL	__Lib_I2C_12_p24_p33_I2C1_Is_Finished
;__Lib_I2C_12_p24_p33.c,113 :: 		
0x0BA2	0xEF2000  	CLR	W0
;__Lib_I2C_12_p24_p33.c,114 :: 		
L_end_I2C1_Write:
0x0BA4	0xFA8000  	ULNK
0x0BA6	0x060000  	RETURN
; end of _I2C1_Write
_I2C2_Write:
0x0B7C	0xFA0000  	LNK	#0
;__Lib_I2C_12_p24_p33.c,239 :: 		
;__Lib_I2C_12_p24_p33.c,240 :: 		
0x0B7E	0xFB800A  	ZE	W10, W0
0x0B80	0xB7A212  	MOV	WREG, I2C2TRN
;__Lib_I2C_12_p24_p33.c,241 :: 		
0x0B82	0xAEE218  	BTSS	I2C2STAT, #7
0x0B84	0x370002  	BRA	L_I2C2_Write35
;__Lib_I2C_12_p24_p33.c,242 :: 		
0x0B86	0x200010  	MOV	#1, W0
0x0B88	0x370002  	BRA	L_end_I2C2_Write
L_I2C2_Write35:
;__Lib_I2C_12_p24_p33.c,244 :: 		
0x0B8A	0x07FDAD  	RCALL	__Lib_I2C_12_p24_p33_I2C2_Is_Finished
;__Lib_I2C_12_p24_p33.c,246 :: 		
0x0B8C	0xEF2000  	CLR	W0
;__Lib_I2C_12_p24_p33.c,247 :: 		
L_end_I2C2_Write:
0x0B8E	0xFA8000  	ULNK
0x0B90	0x060000  	RETURN
; end of _I2C2_Write
_I2C1_Restart:
0x0BA8	0xFA0000  	LNK	#0
;__Lib_I2C_12_p24_p33.c,89 :: 		
;__Lib_I2C_12_p24_p33.c,90 :: 		
L_I2C1_Restart10:
0x0BAA	0xBF8206  	MOV	I2C1CON, WREG
0x0BAC	0x60007F  	AND	W0, #31, W0
0x0BAE	0xE20000  	CP0	W0
0x0BB0	0x320001  	BRA Z	L_I2C1_Restart11
L__I2C1_Restart52:
;__Lib_I2C_12_p24_p33.c,91 :: 		
0x0BB2	0x37FFFB  	BRA	L_I2C1_Restart10
L_I2C1_Restart11:
;__Lib_I2C_12_p24_p33.c,92 :: 		
0x0BB4	0xA82206  	BSET.B	I2C1CON, #1
;__Lib_I2C_12_p24_p33.c,94 :: 		
0x0BB6	0x07FD9E  	RCALL	__Lib_I2C_12_p24_p33_I2C1_Is_Finished
;__Lib_I2C_12_p24_p33.c,95 :: 		
L_end_I2C1_Restart:
0x0BB8	0xFA8000  	ULNK
0x0BBA	0x060000  	RETURN
; end of _I2C1_Restart
_I2C1_Stop:
0x0BD0	0xFA0000  	LNK	#0
;__Lib_I2C_12_p24_p33.c,97 :: 		
;__Lib_I2C_12_p24_p33.c,98 :: 		
L_I2C1_Stop12:
0x0BD2	0xBF8206  	MOV	I2C1CON, WREG
0x0BD4	0x60007F  	AND	W0, #31, W0
0x0BD6	0xE20000  	CP0	W0
0x0BD8	0x320001  	BRA Z	L_I2C1_Stop13
L__I2C1_Stop54:
;__Lib_I2C_12_p24_p33.c,99 :: 		
0x0BDA	0x37FFFB  	BRA	L_I2C1_Stop12
L_I2C1_Stop13:
;__Lib_I2C_12_p24_p33.c,101 :: 		
0x0BDC	0xA84206  	BSET.B	I2C1CON, #2
;__Lib_I2C_12_p24_p33.c,102 :: 		
0x0BDE	0x07FD8A  	RCALL	__Lib_I2C_12_p24_p33_I2C1_Is_Finished
;__Lib_I2C_12_p24_p33.c,103 :: 		
L_end_I2C1_Stop:
0x0BE0	0xFA8000  	ULNK
0x0BE2	0x060000  	RETURN
; end of _I2C1_Stop
_I2C2_Restart:
0x0BBC	0xFA0000  	LNK	#0
;__Lib_I2C_12_p24_p33.c,222 :: 		
;__Lib_I2C_12_p24_p33.c,223 :: 		
L_I2C2_Restart31:
0x0BBE	0xBF8206  	MOV	I2C1CON, WREG
0x0BC0	0x60007F  	AND	W0, #31, W0
0x0BC2	0xE20000  	CP0	W0
0x0BC4	0x320001  	BRA Z	L_I2C2_Restart32
L__I2C2_Restart72:
;__Lib_I2C_12_p24_p33.c,224 :: 		
0x0BC6	0x37FFFB  	BRA	L_I2C2_Restart31
L_I2C2_Restart32:
;__Lib_I2C_12_p24_p33.c,225 :: 		
0x0BC8	0xA82216  	BSET.B	I2C2CON, #1
;__Lib_I2C_12_p24_p33.c,227 :: 		
0x0BCA	0x07FD8D  	RCALL	__Lib_I2C_12_p24_p33_I2C2_Is_Finished
;__Lib_I2C_12_p24_p33.c,228 :: 		
L_end_I2C2_Restart:
0x0BCC	0xFA8000  	ULNK
0x0BCE	0x060000  	RETURN
; end of _I2C2_Restart
_I2C2_Stop:
0x09D0	0xFA0000  	LNK	#0
;__Lib_I2C_12_p24_p33.c,230 :: 		
;__Lib_I2C_12_p24_p33.c,231 :: 		
L_I2C2_Stop33:
0x09D2	0xBF8216  	MOV	I2C2CON, WREG
0x09D4	0x60007F  	AND	W0, #31, W0
0x09D6	0xE20000  	CP0	W0
0x09D8	0x320001  	BRA Z	L_I2C2_Stop34
L__I2C2_Stop74:
;__Lib_I2C_12_p24_p33.c,232 :: 		
0x09DA	0x37FFFB  	BRA	L_I2C2_Stop33
L_I2C2_Stop34:
;__Lib_I2C_12_p24_p33.c,234 :: 		
0x09DC	0xA84216  	BSET.B	I2C2CON, #2
;__Lib_I2C_12_p24_p33.c,235 :: 		
0x09DE	0x07FE83  	RCALL	__Lib_I2C_12_p24_p33_I2C2_Is_Finished
;__Lib_I2C_12_p24_p33.c,236 :: 		
L_end_I2C2_Stop:
0x09E0	0xFA8000  	ULNK
0x09E2	0x060000  	RETURN
; end of _I2C2_Stop
_Delay_10ms:
;__Lib_Delays.c,640 :: 		void Delay_10ms()
;__Lib_Delays.c,642 :: 		Delay_ms(10);
0x0E36	0x234157  	MOV	#13333, W7
L_Delay_10ms29:
0x0E38	0xED200E  	DEC	W7
0x0E3A	0x3AFFFE  	BRA NZ	L_Delay_10ms29
0x0E3C	0x000000  	NOP
;__Lib_Delays.c,643 :: 		}
L_end_Delay_10ms:
0x0E3E	0x060000  	RETURN
; end of _Delay_10ms
__irgrid2_Driver_hal_i2cRead:
0x0C2E	0xFA0004  	LNK	#4
;__hal_dspic.c,125 :: 		static int hal_i2cRead(uint8_t slaveAddress, uint8_t *pBuf, uint16_t nBytes, uint8_t endMode)
;__hal_dspic.c,127 :: 		int res = 0;
0x0C30	0x781F8A  	PUSH	W10
0x0C32	0x200000  	MOV	#0, W0
0x0C34	0x980710  	MOV	W0, [W14+2]
;__hal_dspic.c,128 :: 		uint8_t *ptr = pBuf;
0x0C36	0x98070B  	MOV	W11, [W14+0]
;__hal_dspic.c,129 :: 		res |= fp_i2cWrite((slaveAddress << 1) | 1);
0x0C38	0xFB800A  	ZE	W10, W0
0x0C3A	0xDD0041  	SL	W0, #1, W0
0x0C3C	0x700061  	IOR	W0, #1, W0
0x0C3E	0xBE9F8C  	PUSH.D	W12
0x0C40	0x784500  	MOV.B	W0, W10
0x0C42	0x80ACE1  	MOV	__irgrid2_Driver_fp_i2cWrite, W1
0x0C44	0x010001  	CALL	W1
0x0C46	0xBE064F  	POP.D	W12
0x0C48	0x470162  	ADD	W14, #2, W2
0x0C4A	0x4700E2  	ADD	W14, #2, W1
0x0C4C	0x700892  	IOR	W0, [W2], [W1]
;__hal_dspic.c,130 :: 		while(--nBytes)
L___irgrid2_Driver_hal_i2cRead4:
0x0C4E	0x560061  	SUB	W12, #1, W0
0x0C50	0x780600  	MOV	W0, W12
0x0C52	0xE20018  	CP0	W12
0x0C54	0x32000D  	BRA Z	L___irgrid2_Driver_hal_i2cRead5
L___irgrid2_Driver_hal_i2cRead253:
;__hal_dspic.c,131 :: 		*ptr++ = fp_i2cRead(ACK_BIT);
0x0C56	0xBE9F8C  	PUSH.D	W12
0x0C58	0xBE9F8A  	PUSH.D	W10
0x0C5A	0xEF2014  	CLR	W10
0x0C5C	0x811041  	MOV	__irgrid2_Driver_fp_i2cRead, W1
0x0C5E	0x010001  	CALL	W1
0x0C60	0xBE054F  	POP.D	W10
0x0C62	0xBE064F  	POP.D	W12
0x0C64	0x90008E  	MOV	[W14+0], W1
0x0C66	0x784880  	MOV.B	W0, [W1]
0x0C68	0x90008E  	MOV	[W14+0], W1
0x0C6A	0x470060  	ADD	W14, #0, W0
0x0C6C	0x408861  	ADD	W1, #1, [W0]
0x0C6E	0x37FFEF  	BRA	L___irgrid2_Driver_hal_i2cRead4
L___irgrid2_Driver_hal_i2cRead5:
;__hal_dspic.c,132 :: 		*ptr = fp_i2cRead(NACK_BIT);
0x0C70	0xBE9F8C  	PUSH.D	W12
0x0C72	0xBE9F8A  	PUSH.D	W10
0x0C74	0x20001A  	MOV	#1, W10
0x0C76	0x811041  	MOV	__irgrid2_Driver_fp_i2cRead, W1
0x0C78	0x010001  	CALL	W1
0x0C7A	0xBE054F  	POP.D	W10
0x0C7C	0xBE064F  	POP.D	W12
0x0C7E	0x90008E  	MOV	[W14+0], W1
0x0C80	0x784880  	MOV.B	W0, [W1]
;__hal_dspic.c,133 :: 		if(endMode == END_MODE_STOP)
0x0C82	0xE16C60  	CP.B	W13, #0
0x0C84	0x3A0006  	BRA NZ	L___irgrid2_Driver_hal_i2cRead6
L___irgrid2_Driver_hal_i2cRead254:
;__hal_dspic.c,134 :: 		fp_i2cStop();
0x0C86	0x811060  	MOV	__irgrid2_Driver_fp_i2cStop, W0
0x0C88	0xBE9F8C  	PUSH.D	W12
0x0C8A	0xBE9F8A  	PUSH.D	W10
0x0C8C	0x010000  	CALL	W0
0x0C8E	0xBE054F  	POP.D	W10
0x0C90	0xBE064F  	POP.D	W12
L___irgrid2_Driver_hal_i2cRead6:
;__hal_dspic.c,135 :: 		if(endMode == END_MODE_RESTART)
0x0C92	0xE16C61  	CP.B	W13, #1
0x0C94	0x3A0006  	BRA NZ	L___irgrid2_Driver_hal_i2cRead7
L___irgrid2_Driver_hal_i2cRead255:
;__hal_dspic.c,136 :: 		fp_i2cRestart();
0x0C96	0x811070  	MOV	__irgrid2_Driver_fp_i2cRestart, W0
0x0C98	0xBE9F8C  	PUSH.D	W12
0x0C9A	0xBE9F8A  	PUSH.D	W10
0x0C9C	0x010000  	CALL	W0
0x0C9E	0xBE054F  	POP.D	W10
0x0CA0	0xBE064F  	POP.D	W12
L___irgrid2_Driver_hal_i2cRead7:
;__hal_dspic.c,137 :: 		return res;
0x0CA2	0x90001E  	MOV	[W14+2], W0
;__hal_dspic.c,138 :: 		}
;__hal_dspic.c,137 :: 		return res;
;__hal_dspic.c,138 :: 		}
L_end_hal_i2cRead:
0x0CA4	0x78054F  	POP	W10
0x0CA6	0xFA8000  	ULNK
0x0CA8	0x060000  	RETURN
; end of __irgrid2_Driver_hal_i2cRead
_I2C1_Read:
0x09A2	0xFA0000  	LNK	#0
;__Lib_I2C_12_p24_p33.c,117 :: 		
;__Lib_I2C_12_p24_p33.c,118 :: 		
L_I2C1_Read15:
0x09A4	0xBF8206  	MOV	I2C1CON, WREG
0x09A6	0x60007F  	AND	W0, #31, W0
0x09A8	0xE20000  	CP0	W0
0x09AA	0x320001  	BRA Z	L_I2C1_Read16
L__I2C1_Read57:
;__Lib_I2C_12_p24_p33.c,119 :: 		
0x09AC	0x37FFFB  	BRA	L_I2C1_Read15
L_I2C1_Read16:
;__Lib_I2C_12_p24_p33.c,121 :: 		
0x09AE	0xA86206  	BSET.B	I2C1CON, #3
;__Lib_I2C_12_p24_p33.c,122 :: 		
0x09B0	0x07FEA1  	RCALL	__Lib_I2C_12_p24_p33_I2C1_Is_Finished
;__Lib_I2C_12_p24_p33.c,125 :: 		
L_I2C1_Read17:
0x09B2	0xBF8206  	MOV	I2C1CON, WREG
0x09B4	0x60007F  	AND	W0, #31, W0
0x09B6	0xE20000  	CP0	W0
0x09B8	0x320001  	BRA Z	L_I2C1_Read18
L__I2C1_Read58:
;__Lib_I2C_12_p24_p33.c,126 :: 		
0x09BA	0x37FFFB  	BRA	L_I2C1_Read17
L_I2C1_Read18:
;__Lib_I2C_12_p24_p33.c,130 :: 		
0x09BC	0xE20014  	CP0	W10
0x09BE	0x320002  	BRA Z	L_I2C1_Read19
L__I2C1_Read59:
;__Lib_I2C_12_p24_p33.c,131 :: 		
0x09C0	0xA8A206  	BSET.B	I2C1CON, #5
;__Lib_I2C_12_p24_p33.c,132 :: 		
0x09C2	0x370001  	BRA	L_I2C1_Read20
L_I2C1_Read19:
;__Lib_I2C_12_p24_p33.c,134 :: 		
0x09C4	0xA9A206  	BCLR.B	I2C1CON, #5
;__Lib_I2C_12_p24_p33.c,135 :: 		
L_I2C1_Read20:
;__Lib_I2C_12_p24_p33.c,136 :: 		
0x09C6	0xA88206  	BSET.B	I2C1CON, #4
;__Lib_I2C_12_p24_p33.c,137 :: 		
0x09C8	0x07FE95  	RCALL	__Lib_I2C_12_p24_p33_I2C1_Is_Finished
;__Lib_I2C_12_p24_p33.c,140 :: 		
0x09CA	0xBFC200  	MOV.B	I2C1RCV, WREG
;__Lib_I2C_12_p24_p33.c,141 :: 		
L_end_I2C1_Read:
0x09CC	0xFA8000  	ULNK
0x09CE	0x060000  	RETURN
; end of _I2C1_Read
_I2C2_Read:
0x09E4	0xFA0000  	LNK	#0
;__Lib_I2C_12_p24_p33.c,250 :: 		
;__Lib_I2C_12_p24_p33.c,251 :: 		
L_I2C2_Read36:
0x09E6	0xBF8216  	MOV	I2C2CON, WREG
0x09E8	0x60007F  	AND	W0, #31, W0
0x09EA	0xE20000  	CP0	W0
0x09EC	0x320001  	BRA Z	L_I2C2_Read37
L__I2C2_Read77:
;__Lib_I2C_12_p24_p33.c,252 :: 		
0x09EE	0x37FFFB  	BRA	L_I2C2_Read36
L_I2C2_Read37:
;__Lib_I2C_12_p24_p33.c,254 :: 		
0x09F0	0xA86216  	BSET.B	I2C2CON, #3
;__Lib_I2C_12_p24_p33.c,255 :: 		
0x09F2	0x07FE79  	RCALL	__Lib_I2C_12_p24_p33_I2C2_Is_Finished
;__Lib_I2C_12_p24_p33.c,258 :: 		
L_I2C2_Read38:
0x09F4	0xBF8216  	MOV	I2C2CON, WREG
0x09F6	0x60007F  	AND	W0, #31, W0
0x09F8	0xE20000  	CP0	W0
0x09FA	0x320001  	BRA Z	L_I2C2_Read39
L__I2C2_Read78:
;__Lib_I2C_12_p24_p33.c,259 :: 		
0x09FC	0x37FFFB  	BRA	L_I2C2_Read38
L_I2C2_Read39:
;__Lib_I2C_12_p24_p33.c,263 :: 		
0x09FE	0xE20014  	CP0	W10
0x0A00	0x320002  	BRA Z	L_I2C2_Read40
L__I2C2_Read79:
;__Lib_I2C_12_p24_p33.c,264 :: 		
0x0A02	0xA8A216  	BSET.B	I2C2CON, #5
;__Lib_I2C_12_p24_p33.c,265 :: 		
0x0A04	0x370001  	BRA	L_I2C2_Read41
L_I2C2_Read40:
;__Lib_I2C_12_p24_p33.c,267 :: 		
0x0A06	0xA9A216  	BCLR.B	I2C2CON, #5
;__Lib_I2C_12_p24_p33.c,268 :: 		
L_I2C2_Read41:
;__Lib_I2C_12_p24_p33.c,269 :: 		
0x0A08	0xA88216  	BSET.B	I2C2CON, #4
;__Lib_I2C_12_p24_p33.c,270 :: 		
0x0A0A	0x07FE6D  	RCALL	__Lib_I2C_12_p24_p33_I2C2_Is_Finished
;__Lib_I2C_12_p24_p33.c,273 :: 		
0x0A0C	0xBFC210  	MOV.B	I2C2RCV, WREG
;__Lib_I2C_12_p24_p33.c,274 :: 		
L_end_I2C2_Read:
0x0A0E	0xFA8000  	ULNK
0x0A10	0x060000  	RETURN
; end of _I2C2_Read
_irgrid2_ExtractParameters:
;__irgrid2_Driver.c,977 :: 		int irgrid2_ExtractParameters(uint16_t *eeData, paramsMLX90640 *mlx90640)
;__irgrid2_Driver.c,979 :: 		int error = CheckEEPROMValid(eeData);
0x251C	0x07FD88  	RCALL	__irgrid2_Driver_CheckEEPROMValid
; error start address is: 2 (W1)
0x251E	0x780080  	MOV	W0, W1
;__irgrid2_Driver.c,981 :: 		if(error == 0)
0x2520	0xE10060  	CP	W0, #0
0x2522	0x3A0022  	BRA NZ	L__irgrid2_ExtractParameters241
L__irgrid2_ExtractParameters407:
; error end address is: 2 (W1)
;__irgrid2_Driver.c,983 :: 		ExtractVDDParameters(eeData, mlx90640);
0x2524	0x07FCE5  	RCALL	__irgrid2_Driver_ExtractVDDParameters
;__irgrid2_Driver.c,984 :: 		ExtractPTATParameters(eeData, mlx90640);
0x2526	0xBE9F8A  	PUSH.D	W10
0x2528	0x07FCFF  	RCALL	__irgrid2_Driver_ExtractPTATParameters
0x252A	0xBE054F  	POP.D	W10
;__irgrid2_Driver.c,985 :: 		ExtractGainParameters(eeData, mlx90640);
0x252C	0x07F7BD  	RCALL	__irgrid2_Driver_ExtractGainParameters
;__irgrid2_Driver.c,986 :: 		ExtractTgcParameters(eeData, mlx90640);
0x252E	0xBE9F8A  	PUSH.D	W10
0x2530	0x07F818  	RCALL	__irgrid2_Driver_ExtractTgcParameters
0x2532	0xBE054F  	POP.D	W10
;__irgrid2_Driver.c,987 :: 		ExtractResolutionParameters(eeData, mlx90640);
0x2534	0x07F80C  	RCALL	__irgrid2_Driver_ExtractResolutionParameters
;__irgrid2_Driver.c,988 :: 		ExtractKsTaParameters(eeData, mlx90640);
0x2536	0xBE9F8A  	PUSH.D	W10
0x2538	0x07F5C4  	RCALL	__irgrid2_Driver_ExtractKsTaParameters
0x253A	0xBE054F  	POP.D	W10
;__irgrid2_Driver.c,989 :: 		ExtractKsToParameters(eeData, mlx90640);
0x253C	0xBE9F8A  	PUSH.D	W10
0x253E	0x07F508  	RCALL	__irgrid2_Driver_ExtractKsToParameters
0x2540	0xBE054F  	POP.D	W10
;__irgrid2_Driver.c,990 :: 		ExtractAlphaParameters(eeData, mlx90640);
0x2542	0xBE9F8A  	PUSH.D	W10
0x2544	0x07F631  	RCALL	__irgrid2_Driver_ExtractAlphaParameters
0x2546	0xBE054F  	POP.D	W10
;__irgrid2_Driver.c,991 :: 		ExtractOffsetParameters(eeData, mlx90640);
0x2548	0x07FE79  	RCALL	__irgrid2_Driver_ExtractOffsetParameters
;__irgrid2_Driver.c,992 :: 		ExtractKtaPixelParameters(eeData, mlx90640);
0x254A	0xBE9F8A  	PUSH.D	W10
0x254C	0x07FD79  	RCALL	__irgrid2_Driver_ExtractKtaPixelParameters
0x254E	0xBE054F  	POP.D	W10
;__irgrid2_Driver.c,993 :: 		ExtractKvPixelParameters(eeData, mlx90640);
0x2550	0xBE9F8A  	PUSH.D	W10
0x2552	0x07FC2E  	RCALL	__irgrid2_Driver_ExtractKvPixelParameters
0x2554	0xBE054F  	POP.D	W10
;__irgrid2_Driver.c,994 :: 		ExtractCPParameters(eeData, mlx90640);
0x2556	0xBE9F8A  	PUSH.D	W10
0x2558	0x07F950  	RCALL	__irgrid2_Driver_ExtractCPParameters
0x255A	0xBE054F  	POP.D	W10
;__irgrid2_Driver.c,995 :: 		ExtractCILCParameters(eeData, mlx90640);
0x255C	0xBE9F8A  	PUSH.D	W10
0x255E	0x07F894  	RCALL	__irgrid2_Driver_ExtractCILCParameters
0x2560	0xBE054F  	POP.D	W10
;__irgrid2_Driver.c,996 :: 		error = ExtractDeviatingPixels(eeData, mlx90640);
0x2562	0x07FAFE  	RCALL	__irgrid2_Driver_ExtractDeviatingPixels
; error start address is: 2 (W1)
0x2564	0x780080  	MOV	W0, W1
; error end address is: 2 (W1)
;__irgrid2_Driver.c,997 :: 		}
0x2566	0x370000  	BRA	L_irgrid2_ExtractParameters166
L__irgrid2_ExtractParameters241:
;__irgrid2_Driver.c,981 :: 		if(error == 0)
;__irgrid2_Driver.c,997 :: 		}
L_irgrid2_ExtractParameters166:
;__irgrid2_Driver.c,998 :: 		return error;
; error start address is: 2 (W1)
0x2568	0x780001  	MOV	W1, W0
; error end address is: 2 (W1)
;__irgrid2_Driver.c,999 :: 		}
L_end_irgrid2_ExtractParameters:
0x256A	0x060000  	RETURN
; end of _irgrid2_ExtractParameters
__irgrid2_Driver_CheckEEPROMValid:
;__irgrid2_Driver.c,266 :: 		static int CheckEEPROMValid(uint16_t *eeData)
;__irgrid2_Driver.c,269 :: 		deviceSelect = eeData[10] & 0x0040;
0x202E	0x4500F4  	ADD	W10, #20, W1
0x2030	0x200400  	MOV	#64, W0
0x2032	0x600011  	AND	W0, [W1], W0
;__irgrid2_Driver.c,270 :: 		if(deviceSelect == 0)
0x2034	0xE10060  	CP	W0, #0
0x2036	0x3A0002  	BRA NZ	L___irgrid2_Driver_CheckEEPROMValid33
L___irgrid2_Driver_CheckEEPROMValid297:
;__irgrid2_Driver.c,272 :: 		return 0;
0x2038	0xEF2000  	CLR	W0
0x203A	0x370001  	BRA	L_end_CheckEEPROMValid
;__irgrid2_Driver.c,273 :: 		}
L___irgrid2_Driver_CheckEEPROMValid33:
;__irgrid2_Driver.c,274 :: 		return -7;
0x203C	0x2FFF90  	MOV	#65529, W0
;__irgrid2_Driver.c,275 :: 		}
L_end_CheckEEPROMValid:
0x203E	0x060000  	RETURN
; end of __irgrid2_Driver_CheckEEPROMValid
__irgrid2_Driver_ExtractVDDParameters:
;__irgrid2_Driver.c,276 :: 		static void ExtractVDDParameters(uint16_t *eeData, paramsMLX90640 *mlx90640)
;__irgrid2_Driver.c,283 :: 		kVdd = (eeData[51] & 0xFF00) >> 8;
0x1EF0	0x200660  	MOV	#102, W0
0x1EF2	0x450000  	ADD	W10, W0, W0
0x1EF4	0x780090  	MOV	[W0], W1
0x1EF6	0x2FF000  	MOV	#65280, W0
0x1EF8	0x608000  	AND	W1, W0, W0
0x1EFA	0xDE00C8  	LSR	W0, #8, W1
; kVdd start address is: 4 (W2)
0x1EFC	0x780101  	MOV	W1, W2
;__irgrid2_Driver.c,284 :: 		if(kVdd > 127)
0x1EFE	0x2007F0  	MOV	#127, W0
0x1F00	0xE10800  	CP	W1, W0
0x1F02	0x340003  	BRA LE	L___irgrid2_Driver_ExtractVDDParameters215
L___irgrid2_Driver_ExtractVDDParameters299:
;__irgrid2_Driver.c,286 :: 		kVdd = kVdd - 256;
0x1F04	0x201000  	MOV	#256, W0
; kVdd start address is: 0 (W0)
0x1F06	0x510000  	SUB	W2, W0, W0
; kVdd end address is: 4 (W2)
; kVdd end address is: 0 (W0)
;__irgrid2_Driver.c,287 :: 		}
0x1F08	0x370001  	BRA	L___irgrid2_Driver_ExtractVDDParameters34
L___irgrid2_Driver_ExtractVDDParameters215:
;__irgrid2_Driver.c,284 :: 		if(kVdd > 127)
0x1F0A	0x780002  	MOV	W2, W0
;__irgrid2_Driver.c,287 :: 		}
L___irgrid2_Driver_ExtractVDDParameters34:
;__irgrid2_Driver.c,288 :: 		kVdd = 32 * kVdd;
; kVdd start address is: 0 (W0)
0x1F0C	0xDD0145  	SL	W0, #5, W2
; kVdd end address is: 0 (W0)
;__irgrid2_Driver.c,289 :: 		vdd25 = eeData[51] & 0x00FF;
0x1F0E	0x200660  	MOV	#102, W0
0x1F10	0x450080  	ADD	W10, W0, W1
0x1F12	0x200FF0  	MOV	#255, W0
0x1F14	0x600091  	AND	W0, [W1], W1
;__irgrid2_Driver.c,290 :: 		vdd25 = ((vdd25 - 256) << 5) - 8192;
0x1F16	0x201000  	MOV	#256, W0
0x1F18	0x508000  	SUB	W1, W0, W0
0x1F1A	0xDD00C5  	SL	W0, #5, W1
0x1F1C	0x220000  	MOV	#8192, W0
; vdd25 start address is: 2 (W1)
0x1F1E	0x508080  	SUB	W1, W0, W1
;__irgrid2_Driver.c,292 :: 		mlx90640->kVdd = kVdd;
0x1F20	0x780D82  	MOV	W2, [W11]
;__irgrid2_Driver.c,293 :: 		mlx90640->vdd25 = vdd25;
0x1F22	0x458062  	ADD	W11, #2, W0
0x1F24	0x780801  	MOV	W1, [W0]
; vdd25 end address is: 2 (W1)
;__irgrid2_Driver.c,294 :: 		}
L_end_ExtractVDDParameters:
0x1F26	0x060000  	RETURN
; end of __irgrid2_Driver_ExtractVDDParameters
__irgrid2_Driver_ExtractPTATParameters:
0x1F28	0xFA0012  	LNK	#18
;__irgrid2_Driver.c,296 :: 		static void ExtractPTATParameters(uint16_t *eeData, paramsMLX90640 *mlx90640)
;__irgrid2_Driver.c,303 :: 		KvPTAT = (eeData[50] & 0xFC00) >> 10;
0x1F2A	0x781F8A  	PUSH	W10
0x1F2C	0x781F8C  	PUSH	W12
0x1F2E	0x781F8D  	PUSH	W13
0x1F30	0x200640  	MOV	#100, W0
0x1F32	0x450000  	ADD	W10, W0, W0
0x1F34	0x780090  	MOV	[W0], W1
0x1F36	0x2FC000  	MOV	#64512, W0
0x1F38	0x608000  	AND	W1, W0, W0
0x1F3A	0xDE004A  	LSR	W0, #10, W0
0x1F3C	0xBE9F8A  	PUSH.D	W10
0x1F3E	0xEB0080  	CLR	W1
0x1F40	0x07F425  	RCALL	__Long2Float
0x1F42	0x980700  	MOV	W0, [W14+0]
0x1F44	0x980711  	MOV	W1, [W14+2]
;__irgrid2_Driver.c,304 :: 		if(KvPTAT > 31)
0x1F46	0x200002  	MOV	#0, W2
0x1F48	0x241F83  	MOV	#16888, W3
0x1F4A	0x07F312  	RCALL	__Compare_Ge_Fp
0x1F4C	0xE00000  	CP0	W0
0x1F4E	0xEF6000  	CLR.B	W0
0x1F50	0x340001  	BRA LE	L___irgrid2_Driver_ExtractPTATParameters301
0x1F52	0xEC6000  	INC.B	W0
L___irgrid2_Driver_ExtractPTATParameters301:
0x1F54	0xBE054F  	POP.D	W10
0x1F56	0xE24000  	CP0.B	W0
0x1F58	0x320009  	BRA Z	L___irgrid2_Driver_ExtractPTATParameters35
L___irgrid2_Driver_ExtractPTATParameters302:
;__irgrid2_Driver.c,306 :: 		KvPTAT = KvPTAT - 64;
0x1F5A	0x90000E  	MOV	[W14+0], W0
0x1F5C	0x90009E  	MOV	[W14+2], W1
0x1F5E	0x200002  	MOV	#0, W2
0x1F60	0x242803  	MOV	#17024, W3
0x1F62	0xBE9F8A  	PUSH.D	W10
0x1F64	0x07F4A8  	RCALL	__Sub_FP
0x1F66	0xBE054F  	POP.D	W10
0x1F68	0x980700  	MOV	W0, [W14+0]
0x1F6A	0x980711  	MOV	W1, [W14+2]
;__irgrid2_Driver.c,307 :: 		}
L___irgrid2_Driver_ExtractPTATParameters35:
;__irgrid2_Driver.c,308 :: 		KvPTAT = KvPTAT/4096;
0x1F6C	0xBE9F8A  	PUSH.D	W10
0x1F6E	0x200002  	MOV	#0, W2
0x1F70	0x245803  	MOV	#17792, W3
0x1F72	0x90000E  	MOV	[W14+0], W0
0x1F74	0x90009E  	MOV	[W14+2], W1
0x1F76	0x07F31C  	RCALL	__Div_FP
0x1F78	0xBE054F  	POP.D	W10
0x1F7A	0x980700  	MOV	W0, [W14+0]
0x1F7C	0x980711  	MOV	W1, [W14+2]
;__irgrid2_Driver.c,310 :: 		KtPTAT = eeData[50] & 0x03FF;
0x1F7E	0x200640  	MOV	#100, W0
0x1F80	0x450000  	ADD	W10, W0, W0
0x1F82	0x780090  	MOV	[W0], W1
0x1F84	0x203FF0  	MOV	#1023, W0
0x1F86	0x608000  	AND	W1, W0, W0
0x1F88	0xBE9F8A  	PUSH.D	W10
0x1F8A	0xEB0080  	CLR	W1
0x1F8C	0x07F3FF  	RCALL	__Long2Float
0x1F8E	0x980720  	MOV	W0, [W14+4]
0x1F90	0x980731  	MOV	W1, [W14+6]
;__irgrid2_Driver.c,311 :: 		if(KtPTAT > 511)
0x1F92	0x280002  	MOV	#32768, W2
0x1F94	0x243FF3  	MOV	#17407, W3
0x1F96	0x07F2EC  	RCALL	__Compare_Ge_Fp
0x1F98	0xE00000  	CP0	W0
0x1F9A	0xEF6000  	CLR.B	W0
0x1F9C	0x340001  	BRA LE	L___irgrid2_Driver_ExtractPTATParameters303
0x1F9E	0xEC6000  	INC.B	W0
L___irgrid2_Driver_ExtractPTATParameters303:
0x1FA0	0xBE054F  	POP.D	W10
0x1FA2	0xE24000  	CP0.B	W0
0x1FA4	0x320009  	BRA Z	L___irgrid2_Driver_ExtractPTATParameters36
L___irgrid2_Driver_ExtractPTATParameters304:
;__irgrid2_Driver.c,313 :: 		KtPTAT = KtPTAT - 1024;
0x1FA6	0x90002E  	MOV	[W14+4], W0
0x1FA8	0x9000BE  	MOV	[W14+6], W1
0x1FAA	0x200002  	MOV	#0, W2
0x1FAC	0x244803  	MOV	#17536, W3
0x1FAE	0xBE9F8A  	PUSH.D	W10
0x1FB0	0x07F482  	RCALL	__Sub_FP
0x1FB2	0xBE054F  	POP.D	W10
0x1FB4	0x980720  	MOV	W0, [W14+4]
0x1FB6	0x980731  	MOV	W1, [W14+6]
;__irgrid2_Driver.c,314 :: 		}
L___irgrid2_Driver_ExtractPTATParameters36:
;__irgrid2_Driver.c,315 :: 		KtPTAT = KtPTAT/8;
0x1FB8	0xBE9F8A  	PUSH.D	W10
0x1FBA	0x200002  	MOV	#0, W2
0x1FBC	0x241003  	MOV	#16640, W3
0x1FBE	0x90002E  	MOV	[W14+4], W0
0x1FC0	0x9000BE  	MOV	[W14+6], W1
0x1FC2	0x07F2F6  	RCALL	__Div_FP
0x1FC4	0xBE054F  	POP.D	W10
0x1FC6	0x980720  	MOV	W0, [W14+4]
0x1FC8	0x980731  	MOV	W1, [W14+6]
;__irgrid2_Driver.c,317 :: 		vPTAT25 = eeData[49];
0x1FCA	0x200620  	MOV	#98, W0
0x1FCC	0x450000  	ADD	W10, W0, W0
0x1FCE	0x780010  	MOV	[W0], W0
0x1FD0	0x980740  	MOV	W0, [W14+8]
;__irgrid2_Driver.c,319 :: 		alphaPTAT = (eeData[16] & 0xF000) / _pow(2, (double)14) + 8.0f;
0x1FD2	0x200200  	MOV	#32, W0
0x1FD4	0x450000  	ADD	W10, W0, W0
0x1FD6	0x780090  	MOV	[W0], W1
0x1FD8	0x2F0000  	MOV	#61440, W0
0x1FDA	0x608000  	AND	W1, W0, W0
0x1FDC	0x980770  	MOV	W0, [W14+14]
0x1FDE	0x781F8B  	PUSH	W11
0x1FE0	0x20000C  	MOV	#0, W12
0x1FE2	0x24160D  	MOV	#16736, W13
0x1FE4	0x20000A  	MOV	#0, W10
0x1FE6	0x24000B  	MOV	#16384, W11
0x1FE8	0x07F660  	RCALL	__irgrid2_Driver__pow
0x1FEA	0x90017E  	MOV	[W14+14], W2
0x1FEC	0x980770  	MOV	W0, [W14+14]
0x1FEE	0x980F01  	MOV	W1, [W14+16]
0x1FF0	0x780002  	MOV	W2, W0
0x1FF2	0xEB0080  	CLR	W1
0x1FF4	0x07F3CB  	RCALL	__Long2Float
0x1FF6	0x90017E  	MOV	[W14+14], W2
0x1FF8	0x90098E  	MOV	[W14+16], W3
0x1FFA	0x07F2DA  	RCALL	__Div_FP
0x1FFC	0x200002  	MOV	#0, W2
0x1FFE	0x241003  	MOV	#16640, W3
0x2000	0x07F138  	RCALL	__AddSub_FP
0x2002	0x7805CF  	POP	W11
; alphaPTAT start address is: 6 (W3)
0x2004	0x780180  	MOV	W0, W3
0x2006	0x780201  	MOV	W1, W4
;__irgrid2_Driver.c,321 :: 		mlx90640->KvPTAT = KvPTAT;
0x2008	0x458164  	ADD	W11, #4, W2
0x200A	0x90000E  	MOV	[W14+0], W0
0x200C	0x90009E  	MOV	[W14+2], W1
0x200E	0xBE8900  	MOV.D	W0, [W2]
;__irgrid2_Driver.c,322 :: 		mlx90640->KtPTAT = KtPTAT;
0x2010	0x458168  	ADD	W11, #8, W2
0x2012	0x90002E  	MOV	[W14+4], W0
0x2014	0x9000BE  	MOV	[W14+6], W1
0x2016	0xBE8900  	MOV.D	W0, [W2]
;__irgrid2_Driver.c,323 :: 		mlx90640->vPTAT25 = vPTAT25;
0x2018	0x4580EC  	ADD	W11, #12, W1
0x201A	0x90004E  	MOV	[W14+8], W0
0x201C	0x780880  	MOV	W0, [W1]
;__irgrid2_Driver.c,324 :: 		mlx90640->alphaPTAT = alphaPTAT;
0x201E	0x45806E  	ADD	W11, #14, W0
0x2020	0x781803  	MOV	W3, [W0++]
0x2022	0x781004  	MOV	W4, [W0--]
; alphaPTAT end address is: 6 (W3)
;__irgrid2_Driver.c,325 :: 		}
L_end_ExtractPTATParameters:
0x2024	0x7806CF  	POP	W13
0x2026	0x78064F  	POP	W12
0x2028	0x78054F  	POP	W10
0x202A	0xFA8000  	ULNK
0x202C	0x060000  	RETURN
; end of __irgrid2_Driver_ExtractPTATParameters
__irgrid2_Driver__pow:
0x0CAA	0xFA0006  	LNK	#6
;__irgrid2_Driver.c,239 :: 		static double _pow(double x, double y) {
;__irgrid2_Driver.c,240 :: 		unsigned char sign = 0;
0x0CAC	0x200000  	MOV	#0, W0
0x0CAE	0x984740  	MOV.B	W0, [W14+4]
;__irgrid2_Driver.c,244 :: 		if(y == 0.0)
0x0CB0	0xBE9F8C  	PUSH.D	W12
0x0CB2	0xBE9F8A  	PUSH.D	W10
0x0CB4	0xBE000C  	MOV.D	W12, W0
0x0CB6	0xEF2004  	CLR	W2
0x0CB8	0xEF2006  	CLR	W3
0x0CBA	0x07FDF8  	RCALL	__Compare_Le_Fp
0x0CBC	0xE00000  	CP0	W0
0x0CBE	0xEF6000  	CLR.B	W0
0x0CC0	0x3A0001  	BRA NZ	L___irgrid2_Driver__pow287
0x0CC2	0xEC6000  	INC.B	W0
L___irgrid2_Driver__pow287:
0x0CC4	0xBE054F  	POP.D	W10
0x0CC6	0xBE064F  	POP.D	W12
0x0CC8	0xE24000  	CP0.B	W0
0x0CCA	0x320003  	BRA Z	L___irgrid2_Driver__pow28
L___irgrid2_Driver__pow288:
;__irgrid2_Driver.c,245 :: 		return 1.0;
0x0CCC	0x200000  	MOV	#0, W0
0x0CCE	0x23F801  	MOV	#16256, W1
0x0CD0	0x370059  	BRA	L_end__pow
L___irgrid2_Driver__pow28:
;__irgrid2_Driver.c,246 :: 		if(x == 0.0)
0x0CD2	0xBE9F8C  	PUSH.D	W12
0x0CD4	0xBE9F8A  	PUSH.D	W10
0x0CD6	0xBE000A  	MOV.D	W10, W0
0x0CD8	0xEF2004  	CLR	W2
0x0CDA	0xEF2006  	CLR	W3
0x0CDC	0x07FDE7  	RCALL	__Compare_Le_Fp
0x0CDE	0xE00000  	CP0	W0
0x0CE0	0xEF6000  	CLR.B	W0
0x0CE2	0x3A0001  	BRA NZ	L___irgrid2_Driver__pow289
0x0CE4	0xEC6000  	INC.B	W0
L___irgrid2_Driver__pow289:
0x0CE6	0xBE054F  	POP.D	W10
0x0CE8	0xBE064F  	POP.D	W12
0x0CEA	0xE24000  	CP0.B	W0
0x0CEC	0x320003  	BRA Z	L___irgrid2_Driver__pow29
L___irgrid2_Driver__pow290:
;__irgrid2_Driver.c,247 :: 		return 0.0;
0x0CEE	0xEF2000  	CLR	W0
0x0CF0	0xEF2002  	CLR	W1
0x0CF2	0x370048  	BRA	L_end__pow
L___irgrid2_Driver__pow29:
;__irgrid2_Driver.c,248 :: 		if(x < 0.0) {
0x0CF4	0xBE9F8C  	PUSH.D	W12
0x0CF6	0xBE9F8A  	PUSH.D	W10
0x0CF8	0xEF2004  	CLR	W2
0x0CFA	0xEF2006  	CLR	W3
0x0CFC	0xBE000A  	MOV.D	W10, W0
0x0CFE	0x07FDD6  	RCALL	__Compare_Le_Fp
0x0D00	0xE00000  	CP0	W0
0x0D02	0xEF6000  	CLR.B	W0
0x0D04	0x3D0001  	BRA GE	L___irgrid2_Driver__pow291
0x0D06	0xEC6000  	INC.B	W0
L___irgrid2_Driver__pow291:
0x0D08	0xBE054F  	POP.D	W10
0x0D0A	0xBE064F  	POP.D	W12
0x0D0C	0xE24000  	CP0.B	W0
0x0D0E	0x320021  	BRA Z	L___irgrid2_Driver__pow30
L___irgrid2_Driver__pow292:
;__irgrid2_Driver.c,249 :: 		yi = (long)y;
0x0D10	0xBE9F8C  	PUSH.D	W12
0x0D12	0xBE9F8A  	PUSH.D	W10
0x0D14	0xBE000C  	MOV.D	W12, W0
0x0D16	0x07FBF0  	RCALL	__Float2Longint
0x0D18	0x980700  	MOV	W0, [W14+0]
0x0D1A	0x980711  	MOV	W1, [W14+2]
;__irgrid2_Driver.c,250 :: 		if((double)yi != y)
0x0D1C	0xEB8100  	SETM	W2
0x0D1E	0x07FD36  	RCALL	__Long2Float
0x0D20	0xBE054F  	POP.D	W10
0x0D22	0xBE064F  	POP.D	W12
0x0D24	0xBE9F8C  	PUSH.D	W12
0x0D26	0xBE9F8A  	PUSH.D	W10
0x0D28	0xBE010C  	MOV.D	W12, W2
0x0D2A	0x07FDC0  	RCALL	__Compare_Le_Fp
0x0D2C	0xE00000  	CP0	W0
0x0D2E	0xEF6000  	CLR.B	W0
0x0D30	0x320001  	BRA Z	L___irgrid2_Driver__pow293
0x0D32	0xEC6000  	INC.B	W0
L___irgrid2_Driver__pow293:
0x0D34	0xBE054F  	POP.D	W10
0x0D36	0xBE064F  	POP.D	W12
0x0D38	0xE24000  	CP0.B	W0
0x0D3A	0x320003  	BRA Z	L___irgrid2_Driver__pow31
L___irgrid2_Driver__pow294:
;__irgrid2_Driver.c,251 :: 		return 0.0;
0x0D3C	0xEF2000  	CLR	W0
0x0D3E	0xEF2002  	CLR	W1
0x0D40	0x370021  	BRA	L_end__pow
L___irgrid2_Driver__pow31:
;__irgrid2_Driver.c,252 :: 		sign = yi & 1;
0x0D42	0x90408E  	MOV.B	[W14+0], W1
0x0D44	0x470064  	ADD	W14, #4, W0
0x0D46	0x60C861  	AND.B	W1, #1, [W0]
;__irgrid2_Driver.c,253 :: 		x = -x;
0x0D48	0x200000  	MOV	#0, W0
0x0D4A	0x280001  	MOV	#32768, W1
0x0D4C	0x6D0000  	XOR	W10, W0, W0
0x0D4E	0x6D8081  	XOR	W11, W1, W1
0x0D50	0xBE0500  	MOV.D	W0, W10
;__irgrid2_Driver.c,254 :: 		}
L___irgrid2_Driver__pow30:
;__irgrid2_Driver.c,255 :: 		x = _log(x);
0x0D52	0xBE9F8C  	PUSH.D	W12
0x0D54	0xBE9F8A  	PUSH.D	W10
0x0D56	0x07FEDB  	RCALL	__irgrid2_Driver__log
0x0D58	0xBE054F  	POP.D	W10
0x0D5A	0xBE064F  	POP.D	W12
0x0D5C	0xBE0500  	MOV.D	W0, W10
;__irgrid2_Driver.c,256 :: 		x = x*y;
0x0D5E	0xBE9F8A  	PUSH.D	W10
0x0D60	0xBE010C  	MOV.D	W12, W2
0x0D62	0x07FB3D  	RCALL	__Mul_FP
0x0D64	0xBE054F  	POP.D	W10
0x0D66	0xBE0500  	MOV.D	W0, W10
;__irgrid2_Driver.c,257 :: 		x = _exp(x);
0x0D68	0xBE9F8A  	PUSH.D	W10
0x0D6A	0xBE0500  	MOV.D	W0, W10
0x0D6C	0x07FE52  	RCALL	__irgrid2_Driver__exp
0x0D6E	0xBE054F  	POP.D	W10
0x0D70	0xBE0500  	MOV.D	W0, W10
;__irgrid2_Driver.c,259 :: 		if(sign)
0x0D72	0x470064  	ADD	W14, #4, W0
0x0D74	0xE00410  	CP0.B	[W0]
0x0D76	0x320005  	BRA Z	L___irgrid2_Driver__pow32
L___irgrid2_Driver__pow295:
;__irgrid2_Driver.c,260 :: 		return -x;
0x0D78	0x200000  	MOV	#0, W0
0x0D7A	0x280001  	MOV	#32768, W1
0x0D7C	0x6D0000  	XOR	W10, W0, W0
0x0D7E	0x6D8081  	XOR	W11, W1, W1
0x0D80	0x370001  	BRA	L_end__pow
L___irgrid2_Driver__pow32:
;__irgrid2_Driver.c,261 :: 		return x;
0x0D82	0xBE000A  	MOV.D	W10, W0
;__irgrid2_Driver.c,262 :: 		}
L_end__pow:
0x0D84	0xFA8000  	ULNK
0x0D86	0x060000  	RETURN
; end of __irgrid2_Driver__pow
__irgrid2_Driver__log:
0x0B0E	0xFA0002  	LNK	#2
;__irgrid2_Driver.c,213 :: 		static double _log(double x) {
;__irgrid2_Driver.c,229 :: 		if(x <= 0.0)
0x0B10	0x781F8C  	PUSH	W12
0x0B12	0x781F8D  	PUSH	W13
0x0B14	0xBE9F8A  	PUSH.D	W10
0x0B16	0xEF2004  	CLR	W2
0x0B18	0xEF2006  	CLR	W3
0x0B1A	0xBE000A  	MOV.D	W10, W0
0x0B1C	0x07FEC7  	RCALL	__Compare_Le_Fp
0x0B1E	0xE00000  	CP0	W0
0x0B20	0xEF6000  	CLR.B	W0
0x0B22	0x3C0001  	BRA GT	L___irgrid2_Driver__log284
0x0B24	0xEC6000  	INC.B	W0
L___irgrid2_Driver__log284:
0x0B26	0xBE054F  	POP.D	W10
0x0B28	0xE24000  	CP0.B	W0
0x0B2A	0x320003  	BRA Z	L___irgrid2_Driver__log27
L___irgrid2_Driver__log285:
;__irgrid2_Driver.c,230 :: 		return 0.0;
0x0B2C	0xEF2000  	CLR	W0
0x0B2E	0xEF2002  	CLR	W1
0x0B30	0x370021  	BRA	L_end__log
L___irgrid2_Driver__log27:
;__irgrid2_Driver.c,231 :: 		x = _frexp(x, &exp) * 2.0 - 1.0;
0x0B32	0x470060  	ADD	W14, #0, W0
0x0B34	0x780600  	MOV	W0, W12
0x0B36	0x07FDE5  	RCALL	__irgrid2_Driver__frexp
0x0B38	0xBE9F8A  	PUSH.D	W10
0x0B3A	0x200002  	MOV	#0, W2
0x0B3C	0x240003  	MOV	#16384, W3
0x0B3E	0x07FC4F  	RCALL	__Mul_FP
0x0B40	0x200002  	MOV	#0, W2
0x0B42	0x23F803  	MOV	#16256, W3
0x0B44	0x07FEB8  	RCALL	__Sub_FP
0x0B46	0xBE054F  	POP.D	W10
0x0B48	0xBE0500  	MOV.D	W0, W10
;__irgrid2_Driver.c,232 :: 		exp--;
0x0B4A	0x200013  	MOV	#1, W3
0x0B4C	0x470160  	ADD	W14, #0, W2
0x0B4E	0x118912  	SUBR	W3, [W2], [W2]
;__irgrid2_Driver.c,233 :: 		x = _eval_poly(x, coeff, sizeof coeff/sizeof coeff[0] - 1);
0x0B50	0xBE9F8A  	PUSH.D	W10
0x0B52	0x20008D  	MOV	#8, W13
0x0B54	0x2875EC  	MOV	#lo_addr(__irgrid2_Driver__log_coeff_L0), W12
0x0B56	0xBE0500  	MOV.D	W0, W10
0x0B58	0x07FD10  	RCALL	__irgrid2_Driver__eval_poly
0x0B5A	0xBE054F  	POP.D	W10
0x0B5C	0xBE0500  	MOV.D	W0, W10
;__irgrid2_Driver.c,234 :: 		return x + 0.69314718055995 * exp;
0x0B5E	0xBE9F8A  	PUSH.D	W10
0x0B60	0x90000E  	MOV	[W14+0], W0
0x0B62	0xDE80CF  	ASR	W0, #15, W1
0x0B64	0xEB8100  	SETM	W2
0x0B66	0x07FE12  	RCALL	__Long2Float
0x0B68	0x272182  	MOV	#29208, W2
0x0B6A	0x23F313  	MOV	#16177, W3
0x0B6C	0x07FC38  	RCALL	__Mul_FP
0x0B6E	0xBE054F  	POP.D	W10
0x0B70	0xBE010A  	MOV.D	W10, W2
0x0B72	0x07FB7F  	RCALL	__AddSub_FP
;__irgrid2_Driver.c,236 :: 		}
;__irgrid2_Driver.c,234 :: 		return x + 0.69314718055995 * exp;
;__irgrid2_Driver.c,236 :: 		}
L_end__log:
0x0B74	0x7806CF  	POP	W13
0x0B76	0x78064F  	POP	W12
0x0B78	0xFA8000  	ULNK
0x0B7A	0x060000  	RETURN
; end of __irgrid2_Driver__log
__irgrid2_Driver__frexp:
0x0702	0xFA0004  	LNK	#4
;__irgrid2_Driver.c,81 :: 		static double _frexp(double value, int * eptr)
;__irgrid2_Driver.c,86 :: 		uv.fl = value;
0x0704	0x98070A  	MOV	W10, [W14+0]
0x0706	0x98071B  	MOV	W11, [W14+2]
;__irgrid2_Driver.c,87 :: 		bb = uv.flt.exp - EXCESS;
0x0708	0x90009E  	MOV	[W14+2], W1
0x070A	0x27F800  	MOV	#32640, W0
0x070C	0x608080  	AND	W1, W0, W1
0x070E	0xDE08C7  	LSR	W1, #7, W1
0x0710	0x2007E0  	MOV	#126, W0
; bb start address is: 0 (W0)
0x0712	0x508000  	SUB	W1, W0, W0
;__irgrid2_Driver.c,88 :: 		*eptr = bb;
0x0714	0x780E00  	MOV	W0, [W12]
; bb end address is: 0 (W0)
;__irgrid2_Driver.c,89 :: 		uv.flt.exp = EXCESS;
0x0716	0x23F001  	MOV	#16128, W1
0x0718	0x470062  	ADD	W14, #2, W0
0x071A	0x688090  	XOR	W1, [W0], W1
0x071C	0x27F800  	MOV	#32640, W0
0x071E	0x608080  	AND	W1, W0, W1
0x0720	0x470062  	ADD	W14, #2, W0
0x0722	0x688090  	XOR	W1, [W0], W1
0x0724	0x980711  	MOV	W1, [W14+2]
;__irgrid2_Driver.c,90 :: 		return uv.fl;
0x0726	0x90000E  	MOV	[W14+0], W0
0x0728	0x90009E  	MOV	[W14+2], W1
;__irgrid2_Driver.c,91 :: 		}
L_end__frexp:
0x072A	0xFA8000  	ULNK
0x072C	0x060000  	RETURN
; end of __irgrid2_Driver__frexp
__irgrid2_Driver__eval_poly:
;__irgrid2_Driver.c,157 :: 		static static double _eval_poly(double x, const double code * d, int n)
;__irgrid2_Driver.c,161 :: 		res = d[n];
0x057A	0xDD6842  	SL	W13, #2, W0
0x057C	0x460100  	ADD	W12, W0, W2
0x057E	0xBE0012  	MOV.D	[W2], W0
; res start address is: 4 (W2)
0x0580	0xBE0100  	MOV.D	W0, W2
; res end address is: 4 (W2)
;__irgrid2_Driver.c,162 :: 		while(n)
L___irgrid2_Driver__eval_poly19:
; res start address is: 4 (W2)
0x0582	0xE2001A  	CP0	W13
0x0584	0x320013  	BRA Z	L___irgrid2_Driver__eval_poly20
L___irgrid2_Driver__eval_poly270:
;__irgrid2_Driver.c,164 :: 		res = x * res + d[--n];
0x0586	0xBE9F8C  	PUSH.D	W12
; res end address is: 4 (W2)
0x0588	0xBE9F8A  	PUSH.D	W10
0x058A	0xBE0002  	MOV.D	W2, W0
0x058C	0xBE010A  	MOV.D	W10, W2
0x058E	0x07FF27  	RCALL	__Mul_FP
0x0590	0xBE054F  	POP.D	W10
0x0592	0xBE064F  	POP.D	W12
0x0594	0x568161  	SUB	W13, #1, W2
0x0596	0x780682  	MOV	W2, W13
0x0598	0xDD6942  	SL	W13, #2, W2
0x059A	0x460202  	ADD	W12, W2, W4
0x059C	0xBE0114  	MOV.D	[W4], W2
0x059E	0xBE9F8C  	PUSH.D	W12
0x05A0	0xBE9F8A  	PUSH.D	W10
0x05A2	0x07FE67  	RCALL	__AddSub_FP
0x05A4	0xBE054F  	POP.D	W10
0x05A6	0xBE064F  	POP.D	W12
; res start address is: 4 (W2)
0x05A8	0xBE0100  	MOV.D	W0, W2
;__irgrid2_Driver.c,165 :: 		}
0x05AA	0x37FFEB  	BRA	L___irgrid2_Driver__eval_poly19
L___irgrid2_Driver__eval_poly20:
;__irgrid2_Driver.c,166 :: 		return res;
0x05AC	0xBE0002  	MOV.D	W2, W0
; res end address is: 4 (W2)
;__irgrid2_Driver.c,167 :: 		}
L_end__eval_poly:
0x05AE	0x060000  	RETURN
; end of __irgrid2_Driver__eval_poly
__Mul_FP:
0x03DE	0xFA0000  	LNK	#0
;__Lib_MathDouble.c,855 :: 		
;__Lib_MathDouble.c,857 :: 		
0x03E0	0x070002  	RCALL	MulFP___mulsf3
;__Lib_MathDouble.c,858 :: 		
0x03E2	0x0000000404F4  	GOTO	the_end__Mul_FP
;__Lib_MathDouble.c,861 :: 		
MulFP___mulsf3:
;__Lib_MathDouble.c,862 :: 		
0x03E6	0xBE9F88  	MOV.D	W8, [W15++]
;__Lib_MathDouble.c,863 :: 		
0x03E8	0xBE9F8A  	MOV.D	W10, [W15++]
;__Lib_MathDouble.c,864 :: 		
0x03EA	0x781F8C  	MOV	W12, [W15++]
;__Lib_MathDouble.c,865 :: 		
0x03EC	0x070030  	RCALL	MulFP__funpack2
;__Lib_MathDouble.c,866 :: 		
0x03EE	0x330037  	BRA N	MulFP__fPropagateNaN
;__Lib_MathDouble.c,867 :: 		
0x03F0	0x6C8603  	XOR	W9, W3, W12
;__Lib_MathDouble.c,868 :: 		
0x03F2	0xE15064  	CP	W10, #4
;__Lib_MathDouble.c,869 :: 		
0x03F4	0x320024  	BRA Z	MulFP_aisinfinite
;__Lib_MathDouble.c,870 :: 		
0x03F6	0xE12064  	CP	W4, #4
;__Lib_MathDouble.c,871 :: 		
0x03F8	0x320027  	BRA Z	MulFP_bisinfinite
;__Lib_MathDouble.c,872 :: 		
0x03FA	0xE15061  	CP	W10, #1
;__Lib_MathDouble.c,873 :: 		
0x03FC	0x320022  	BRA Z	MulFP_return8_1
;__Lib_MathDouble.c,874 :: 		
0x03FE	0xE12061  	CP	W4, #1
;__Lib_MathDouble.c,875 :: 		
0x0400	0x320021  	BRA Z	MulFP_return2_1
;__Lib_MathDouble.c,876 :: 		
0x0402	0x42858B  	ADD	W5, W11, W11
;__Lib_MathDouble.c,877 :: 		
0x0404	0xB107EB  	SUB	#126, W11
;__Lib_MathDouble.c,878 :: 		
0x0406	0xB83401  	MUL.UU	W6, W1, W8
;__Lib_MathDouble.c,879 :: 		
0x0408	0xB83A00  	MUL.UU	W7, W0, W4
;__Lib_MathDouble.c,880 :: 		
0x040A	0x420408  	ADD	W4, W8, W8
;__Lib_MathDouble.c,881 :: 		
0x040C	0x4A8489  	ADDC	W5, W9, W9
;__Lib_MathDouble.c,882 :: 		
0x040E	0xB83A01  	MUL.UU	W7, W1, W4
;__Lib_MathDouble.c,883 :: 		
0x0410	0xB83000  	MUL.UU	W6, W0, W0
;__Lib_MathDouble.c,884 :: 		
0x0412	0x408088  	ADD	W1, W8, W1
;__Lib_MathDouble.c,885 :: 		
0x0414	0x4A0109  	ADDC	W4, W9, W2
;__Lib_MathDouble.c,886 :: 		
0x0416	0x330004  	BRA N	MulFP_formsticky
;__Lib_MathDouble.c,887 :: 		
0x0418	0x400000  	ADD	W0, W0, W0
;__Lib_MathDouble.c,888 :: 		
0x041A	0x488081  	ADDC	W1, W1, W1
;__Lib_MathDouble.c,889 :: 		
0x041C	0x490102  	ADDC	W2, W2, W2
;__Lib_MathDouble.c,890 :: 		
0x041E	0xE9058B  	DEC	W11, W11
;__Lib_MathDouble.c,891 :: 		
MulFP_formsticky:
;__Lib_MathDouble.c,892 :: 		
0x0420	0xDD09C9  	SL	W1, #9, W3
;__Lib_MathDouble.c,893 :: 		
0x0422	0x700183  	IOR	W0, W3, W3
;__Lib_MathDouble.c,894 :: 		
0x0424	0x320001  	BRA Z	MulFP_formRandSig
;__Lib_MathDouble.c,895 :: 		
0x0426	0x200013  	MOV	#1, W3
;__Lib_MathDouble.c,896 :: 		
MulFP_formRandSig:
;__Lib_MathDouble.c,897 :: 		
0x0428	0xDE14C8  	LSR	W2, #8, W9
;__Lib_MathDouble.c,898 :: 		
0x042A	0xDD1448  	SL	W2, #8, W8
;__Lib_MathDouble.c,899 :: 		
0x042C	0xDE0947  	LSR	W1, #7, W2
;__Lib_MathDouble.c,900 :: 		
0x042E	0xB20012  	AND	#1, W2
;__Lib_MathDouble.c,901 :: 		
0x0430	0xDE08C8  	LSR	W1, #8, W1
;__Lib_MathDouble.c,902 :: 		
0x0432	0x708408  	IOR	W1, W8, W8
;__Lib_MathDouble.c,903 :: 		
0x0434	0x070024  	RCALL	MulFP__fpack
;__Lib_MathDouble.c,904 :: 		
MulFP_return0_1:
;__Lib_MathDouble.c,905 :: 		
0x0436	0xA1F001  	BCLR	W1, #15
;__Lib_MathDouble.c,906 :: 		
0x0438	0xA7F00C  	BTSC	W12, #15
;__Lib_MathDouble.c,907 :: 		
0x043A	0xA8E003  	BSET	W1, #15
;__Lib_MathDouble.c,908 :: 		
0x043C	0x370019  	BRA	MulFP__fbopExit
;__Lib_MathDouble.c,909 :: 		
MulFP_aisinfinite:
;__Lib_MathDouble.c,910 :: 		
0x043E	0xE12061  	CP	W4, #1
;__Lib_MathDouble.c,911 :: 		
0x0440	0x32001B  	BRA Z	MulFP__fbopReturnNaN
;__Lib_MathDouble.c,912 :: 		
MulFP_return8_1:
;__Lib_MathDouble.c,913 :: 		
0x0442	0xBE8108  	MOV.D	W8, W2
;__Lib_MathDouble.c,914 :: 		
MulFP_return2_1:
;__Lib_MathDouble.c,915 :: 		
0x0444	0xBE8002  	MOV.D	W2, W0
;__Lib_MathDouble.c,916 :: 		
0x0446	0x37FFF7  	BRA	MulFP_return0_1
;__Lib_MathDouble.c,917 :: 		
MulFP_bisinfinite:
;__Lib_MathDouble.c,918 :: 		
0x0448	0xE15061  	CP	W10, #1
;__Lib_MathDouble.c,919 :: 		
0x044A	0x3AFFFC  	BRA NZ	MulFP_return2_1
;__Lib_MathDouble.c,920 :: 		
0x044C	0x370015  	BRA	MulFP__fbopReturnNaN
;__Lib_MathDouble.c,921 :: 		
MulFP__funpack2:
;__Lib_MathDouble.c,922 :: 		
0x044E	0xBE8400  	MOV.D	W0, W8
;__Lib_MathDouble.c,923 :: 		
0x0450	0x07003C  	RCALL	MulFP__funpack
;__Lib_MathDouble.c,924 :: 		
0x0452	0xBE8300  	MOV.D	W0, W6
;__Lib_MathDouble.c,925 :: 		
0x0454	0xBE8504  	MOV.D	W4, W10
;__Lib_MathDouble.c,926 :: 		
0x0456	0xBE8002  	MOV.D	W2, W0
;__Lib_MathDouble.c,927 :: 		
0x0458	0x070038  	RCALL	MulFP__funpack
;__Lib_MathDouble.c,928 :: 		
0x045A	0x754F84  	IOR.B	W10, W4, [W15]
;__Lib_MathDouble.c,929 :: 		
0x045C	0x060000  	RETURN
;__Lib_MathDouble.c,930 :: 		
MulFP__fPropagateNaN:
;__Lib_MathDouble.c,931 :: 		
0x045E	0xBE8002  	MOV.D	W2, W0
;__Lib_MathDouble.c,932 :: 		
0x0460	0xE15064  	CP	W10, #4
;__Lib_MathDouble.c,933 :: 		
0x0462	0x360005  	BRA LEU	MulFP_return0_2
;__Lib_MathDouble.c,934 :: 		
0x0464	0xE12064  	CP	W4, #4
;__Lib_MathDouble.c,935 :: 		
0x0466	0x360002  	BRA LEU	MulFP_return8_2
;__Lib_MathDouble.c,936 :: 		
0x0468	0xA36809  	BTST.Z	W9, #6
;__Lib_MathDouble.c,937 :: 		
0x046A	0x3A0001  	BRA NZ	MulFP_return0_2
;__Lib_MathDouble.c,938 :: 		
MulFP_return8_2:
;__Lib_MathDouble.c,939 :: 		
0x046C	0xBE8008  	MOV.D	W8, W0
;__Lib_MathDouble.c,940 :: 		
MulFP_return0_2:
;__Lib_MathDouble.c,941 :: 		
0x046E	0xA8C002  	BSET	W1, #6
;__Lib_MathDouble.c,942 :: 		
MulFP__fbopExit:
;__Lib_MathDouble.c,943 :: 		
0x0470	0x78064F  	MOV	[--W15], W12
;__Lib_MathDouble.c,944 :: 		
0x0472	0xBE054F  	MOV.D	[--W15], W10
;__Lib_MathDouble.c,945 :: 		
0x0474	0xBE044F  	MOV.D	[--W15], W8
;__Lib_MathDouble.c,946 :: 		
0x0476	0x060000  	RETURN
;__Lib_MathDouble.c,947 :: 		
MulFP__fbopReturnNaN:
;__Lib_MathDouble.c,948 :: 		
0x0478	0x2FFFF0  	MOV	#65535, W0
;__Lib_MathDouble.c,949 :: 		
0x047A	0x27FFF1  	MOV	#32767, W1
;__Lib_MathDouble.c,950 :: 		
0x047C	0x37FFF9  	BRA	MulFP__fbopExit
;__Lib_MathDouble.c,951 :: 		
MulFP__fpack:
;__Lib_MathDouble.c,952 :: 		
0x047E	0x200081  	MOV	#8, W1
;__Lib_MathDouble.c,953 :: 		
0x0480	0x558061  	SUB	W11, #1, W0
;__Lib_MathDouble.c,954 :: 		
0x0482	0x3D000B  	BRA GE	MulFP_notsubnormal
;__Lib_MathDouble.c,955 :: 		
0x0484	0x20000B  	MOV	#0, W11
;__Lib_MathDouble.c,956 :: 		
0x0486	0x2FFE61  	MOV	#65510, W1
;__Lib_MathDouble.c,957 :: 		
0x0488	0xE10001  	CP	W0, W1
;__Lib_MathDouble.c,958 :: 		
0x048A	0x34001D  	BRA LE	MulFP_zerosig
;__Lib_MathDouble.c,959 :: 		
MulFP_subnormal1:
;__Lib_MathDouble.c,960 :: 		
0x048C	0x718182  	IOR	W3, W2, W3
;__Lib_MathDouble.c,961 :: 		
0x048E	0x640161  	AND	W8, #1, W2
;__Lib_MathDouble.c,962 :: 		
0x0490	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.c,963 :: 		
0x0492	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.c,964 :: 		
0x0494	0xE80000  	INC	W0, W0
;__Lib_MathDouble.c,965 :: 		
0x0496	0x3AFFFA  	BRA NZ	MulFP_subnormal1
;__Lib_MathDouble.c,966 :: 		
0x0498	0x200071  	MOV	#7, W1
;__Lib_MathDouble.c,967 :: 		
MulFP_notsubnormal:
;__Lib_MathDouble.c,968 :: 		
0x049A	0x640061  	AND	W8, #1, W0
;__Lib_MathDouble.c,969 :: 		
0x049C	0x700003  	IOR	W0, W3, W0
;__Lib_MathDouble.c,970 :: 		
0x049E	0x600002  	AND	W0, W2, W0
;__Lib_MathDouble.c,971 :: 		
0x04A0	0x320009  	BRA Z	MulFP_packupandgo
;__Lib_MathDouble.c,972 :: 		
0x04A2	0x440461  	ADD	W8, #1, W8
;__Lib_MathDouble.c,973 :: 		
0x04A4	0x4C84E0  	ADDC	W9, #0, W9
;__Lib_MathDouble.c,974 :: 		
0x04A6	0xA58809  	BTST.Z	W9, W1
;__Lib_MathDouble.c,975 :: 		
0x04A8	0x320005  	BRA Z	MulFP_packupandgo
;__Lib_MathDouble.c,976 :: 		
0x04AA	0xE8058B  	INC	W11, W11
;__Lib_MathDouble.c,977 :: 		
0x04AC	0xE10868  	CP	W1, #8
;__Lib_MathDouble.c,978 :: 		
0x04AE	0x3A0002  	BRA NZ	MulFP_packupandgo
;__Lib_MathDouble.c,979 :: 		
0x04B0	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.c,980 :: 		
0x04B2	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.c,981 :: 		
MulFP_packupandgo:
;__Lib_MathDouble.c,982 :: 		
0x04B4	0x200FF2  	MOV	#255, W2
;__Lib_MathDouble.c,983 :: 		
0x04B6	0xE15802  	CP	W11, W2
;__Lib_MathDouble.c,984 :: 		
0x04B8	0x3D0005  	BRA GE	MulFP_overflow
;__Lib_MathDouble.c,985 :: 		
0x04BA	0xDD5DC7  	SL	W11, #7, W11
;__Lib_MathDouble.c,986 :: 		
0x04BC	0xB207F9  	AND	#127, W9
;__Lib_MathDouble.c,987 :: 		
0x04BE	0x758089  	IOR	W11, W9, W1
;__Lib_MathDouble.c,988 :: 		
0x04C0	0x880008  	MOV	W8, W0
;__Lib_MathDouble.c,989 :: 		
0x04C2	0x060000  	RETURN
;__Lib_MathDouble.c,990 :: 		
MulFP_overflow:
;__Lib_MathDouble.c,991 :: 		
0x04C4	0x27F80B  	MOV	#32640, W11
;__Lib_MathDouble.c,992 :: 		
MulFP_zerosig:
;__Lib_MathDouble.c,993 :: 		
0x04C6	0x88001B  	MOV	W11, W1
;__Lib_MathDouble.c,994 :: 		
0x04C8	0x050000  	RETLW	#0, W0
;__Lib_MathDouble.c,995 :: 		
MulFP__funpack:
;__Lib_MathDouble.c,996 :: 		
0x04CA	0xDE0AC7  	LSR	W1, #7, W5
;__Lib_MathDouble.c,997 :: 		
0x04CC	0xB207F1  	AND	#127, W1
;__Lib_MathDouble.c,998 :: 		
0x04CE	0xB20FF5  	AND	#255, W5
;__Lib_MathDouble.c,999 :: 		
0x04D0	0x320008  	BRA Z	MulFP_zeroorsub
;__Lib_MathDouble.c,1000 :: 		
0x04D2	0x42CFE1  	ADD.B	W5, #1, [W15]
;__Lib_MathDouble.c,1001 :: 		
0x04D4	0x320002  	BRA Z	MulFP_nanorinf
;__Lib_MathDouble.c,1002 :: 		
MulFP_finitereturn:
;__Lib_MathDouble.c,1003 :: 		
0x04D6	0xA8E002  	BSET	W1, #7
;__Lib_MathDouble.c,1004 :: 		
0x04D8	0x050024  	RETLW	#2, W4
;__Lib_MathDouble.c,1005 :: 		
MulFP_nanorinf:
;__Lib_MathDouble.c,1006 :: 		
0x04DA	0x700F81  	IOR	W0, W1, [W15]
;__Lib_MathDouble.c,1007 :: 		
0x04DC	0x320001  	BRA Z	MulFP_infinite
;__Lib_MathDouble.c,1008 :: 		
0x04DE	0x050804  	RETLW	#128, W4
;__Lib_MathDouble.c,1009 :: 		
MulFP_infinite:
;__Lib_MathDouble.c,1010 :: 		
0x04E0	0x050044  	RETLW	#4, W4
;__Lib_MathDouble.c,1011 :: 		
MulFP_zeroorsub:
;__Lib_MathDouble.c,1012 :: 		
0x04E2	0x700F81  	IOR	W0, W1, [W15]
;__Lib_MathDouble.c,1013 :: 		
0x04E4	0x3A0002  	BRA NZ	MulFP_subnormal2
;__Lib_MathDouble.c,1014 :: 		
0x04E6	0x050014  	RETLW	#1, W4
;__Lib_MathDouble.c,1015 :: 		
MulFP_normalize:
;__Lib_MathDouble.c,1016 :: 		
0x04E8	0xE90285  	DEC	W5, W5
;__Lib_MathDouble.c,1017 :: 		
MulFP_subnormal2:
;__Lib_MathDouble.c,1018 :: 		
0x04EA	0x400000  	ADD	W0, W0, W0
;__Lib_MathDouble.c,1019 :: 		
0x04EC	0x48C081  	ADDC.B	W1, W1, W1
;__Lib_MathDouble.c,1020 :: 		
0x04EE	0x3BFFFC  	BRA NN	MulFP_normalize
;__Lib_MathDouble.c,1021 :: 		
0x04F0	0xA8E002  	BSET	W1, #7
;__Lib_MathDouble.c,1022 :: 		
0x04F2	0x050024  	RETLW	#2, W4
;__Lib_MathDouble.c,1025 :: 		
the_end__Mul_FP:
;__Lib_MathDouble.c,1028 :: 		
L_end__Mul_FP:
0x04F4	0xFA8000  	ULNK
0x04F6	0x060000  	RETURN
; end of __Mul_FP
__AddSub_FP:
0x0272	0xFA0000  	LNK	#0
;__Lib_MathDouble.c,582 :: 		
;__Lib_MathDouble.c,584 :: 		
0x0274	0x070002  	RCALL	AddSubFP__addsf3
;__Lib_MathDouble.c,585 :: 		
0x0276	0x0000000403DA  	GOTO	the_end__AddSub_FP
;__Lib_MathDouble.c,588 :: 		
AddSubFP__addsf3:
;__Lib_MathDouble.c,589 :: 		
0x027A	0xBE9F88  	MOV.D	W8, [W15++]
;__Lib_MathDouble.c,590 :: 		
0x027C	0xBE9F8A  	MOV.D	W10, [W15++]
;__Lib_MathDouble.c,591 :: 		
0x027E	0x781F8C  	MOV	W12, [W15++]
;__Lib_MathDouble.c,592 :: 		
0x0280	0x070059  	RCALL	AddSubFP__funpack2
;__Lib_MathDouble.c,593 :: 		
0x0282	0x330060  	BRA N	AddSubFP__fPropagateNaN
;__Lib_MathDouble.c,594 :: 		
0x0284	0xE15064  	CP	W10, #4
;__Lib_MathDouble.c,595 :: 		
0x0286	0x32004F  	BRA Z	AddSubFP_aisinfinite
;__Lib_MathDouble.c,596 :: 		
AddSubFP_checkspecialb:
;__Lib_MathDouble.c,597 :: 		
0x0288	0xE12064  	CP	W4, #4
;__Lib_MathDouble.c,598 :: 		
0x028A	0x320052  	BRA Z	AddSubFP_return2_3
;__Lib_MathDouble.c,599 :: 		
0x028C	0x6C8203  	XOR	W9, W3, W4
;__Lib_MathDouble.c,600 :: 		
0x028E	0x3B0007  	BRA NN	AddSubFP_getsign
;__Lib_MathDouble.c,601 :: 		
0x0290	0xD00509  	SL	W9, W10
;__Lib_MathDouble.c,602 :: 		
0x0292	0xD00603  	SL	W3, W12
;__Lib_MathDouble.c,603 :: 		
0x0294	0x540F82  	SUB	W8, W2, [W15]
;__Lib_MathDouble.c,604 :: 		
0x0296	0x5D060C  	SUBB	W10, W12, W12
;__Lib_MathDouble.c,605 :: 		
0x0298	0x390002  	BRA NC	AddSubFP_getsign
;__Lib_MathDouble.c,606 :: 		
0x029A	0x320002  	BRA Z	AddSubFP_gotsign
;__Lib_MathDouble.c,607 :: 		
0x029C	0x880039  	MOV	W9, W3
;__Lib_MathDouble.c,608 :: 		
AddSubFP_getsign:
;__Lib_MathDouble.c,609 :: 		
0x029E	0x8800C3  	MOV	W3, W12
;__Lib_MathDouble.c,610 :: 		
AddSubFP_gotsign:
;__Lib_MathDouble.c,611 :: 		
0x02A0	0x558285  	SUB	W11, W5, W5
;__Lib_MathDouble.c,612 :: 		
0x02A2	0x3D0004  	BRA GE	AddSubFP_expcanonical
;__Lib_MathDouble.c,613 :: 		
0x02A4	0xFD0300  	EXCH	W0, W6
;__Lib_MathDouble.c,614 :: 		
0x02A6	0xFD0381  	EXCH	W1, W7
;__Lib_MathDouble.c,615 :: 		
0x02A8	0xEA0285  	NEG	W5, W5
;__Lib_MathDouble.c,616 :: 		
0x02AA	0x42858B  	ADD	W5, W11, W11
;__Lib_MathDouble.c,617 :: 		
AddSubFP_expcanonical:
;__Lib_MathDouble.c,618 :: 		
0x02AC	0x720F84  	IOR	W4, W4, [W15]
;__Lib_MathDouble.c,619 :: 		
0x02AE	0x3B0002  	BRA NN	AddSubFP_nonegate
;__Lib_MathDouble.c,620 :: 		
0x02B0	0x100060  	SUBR	W0, #0, W0
;__Lib_MathDouble.c,621 :: 		
0x02B2	0x1880E0  	SUBBR	W1, #0, W1
;__Lib_MathDouble.c,622 :: 		
AddSubFP_nonegate:
;__Lib_MathDouble.c,623 :: 		
0x02B4	0xB81160  	MUL.UU	W2, #0, W2
;__Lib_MathDouble.c,624 :: 		
0x02B6	0xEB0500  	CLR	W10
;__Lib_MathDouble.c,625 :: 		
0x02B8	0xE1287A  	CP	W5, #26
;__Lib_MathDouble.c,626 :: 		
0x02BA	0x39000A  	BRA NC	AddSubFP_aligniter
;__Lib_MathDouble.c,627 :: 		
0x02BC	0x880006  	MOV	W6, W0
;__Lib_MathDouble.c,628 :: 		
0x02BE	0xDD5DC7  	SL	W11, #7, W11
;__Lib_MathDouble.c,629 :: 		
0x02C0	0xB207F7  	AND	#127, W7
;__Lib_MathDouble.c,630 :: 		
0x02C2	0x758087  	IOR	W11, W7, W1
;__Lib_MathDouble.c,631 :: 		
0x02C4	0x37002D  	BRA	AddSubFP_signoff
;__Lib_MathDouble.c,632 :: 		
AddSubFP_align:
;__Lib_MathDouble.c,633 :: 		
0x02C6	0x718182  	IOR	W3, W2, W3
;__Lib_MathDouble.c,634 :: 		
0x02C8	0x88002A  	MOV	W10, W2
;__Lib_MathDouble.c,635 :: 		
0x02CA	0x600561  	AND	W0, #1, W10
;__Lib_MathDouble.c,636 :: 		
0x02CC	0xD18081  	ASR	W1, W1
;__Lib_MathDouble.c,637 :: 		
0x02CE	0xD38000  	RRC	W0, W0
;__Lib_MathDouble.c,638 :: 		
AddSubFP_aligniter:
;__Lib_MathDouble.c,639 :: 		
0x02D0	0xE90285  	DEC	W5, W5
;__Lib_MathDouble.c,640 :: 		
0x02D2	0x3BFFF9  	BRA NN	AddSubFP_align
;__Lib_MathDouble.c,641 :: 		
AddSubFP_aligned:
;__Lib_MathDouble.c,642 :: 		
0x02D4	0x400406  	ADD	W0, W6, W8
;__Lib_MathDouble.c,643 :: 		
0x02D6	0x488487  	ADDC	W1, W7, W9
;__Lib_MathDouble.c,644 :: 		
0x02D8	0x3B0002  	BRA NN	AddSubFP_normalizesum
;__Lib_MathDouble.c,645 :: 		
0x02DA	0x140460  	SUBR	W8, #0, W8
;__Lib_MathDouble.c,646 :: 		
0x02DC	0x1C84E0  	SUBBR	W9, #0, W9
;__Lib_MathDouble.c,647 :: 		
AddSubFP_normalizesum:
;__Lib_MathDouble.c,648 :: 		
0x02DE	0xA38809  	BTST.Z	W9, #8
;__Lib_MathDouble.c,649 :: 		
0x02E0	0x320007  	BRA Z	AddSubFP_checknormal
;__Lib_MathDouble.c,650 :: 		
0x02E2	0x71818A  	IOR	W3, W10, W3
;__Lib_MathDouble.c,651 :: 		
0x02E4	0x718182  	IOR	W3, W2, W3
;__Lib_MathDouble.c,652 :: 		
0x02E6	0x640161  	AND	W8, #1, W2
;__Lib_MathDouble.c,653 :: 		
0x02E8	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.c,654 :: 		
0x02EA	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.c,655 :: 		
0x02EC	0xE8058B  	INC	W11, W11
;__Lib_MathDouble.c,656 :: 		
0x02EE	0x370017  	BRA	AddSubFP_round
;__Lib_MathDouble.c,657 :: 		
AddSubFP_checknormal:
;__Lib_MathDouble.c,658 :: 		
0x02F0	0xA37809  	BTST.Z	W9, #7
;__Lib_MathDouble.c,659 :: 		
0x02F2	0x3A0013  	BRA NZ	AddSubFP_discardguard
;__Lib_MathDouble.c,660 :: 		
AddSubFP_underflow:
;__Lib_MathDouble.c,661 :: 		
0x02F4	0xE20016  	CP0	W11
;__Lib_MathDouble.c,662 :: 		
0x02F6	0x340013  	BRA LE	AddSubFP_round
;__Lib_MathDouble.c,663 :: 		
0x02F8	0xE9058B  	DEC	W11, W11
;__Lib_MathDouble.c,664 :: 		
0x02FA	0x440408  	ADD	W8, W8, W8
;__Lib_MathDouble.c,665 :: 		
0x02FC	0x4C8489  	ADDC	W9, W9, W9
;__Lib_MathDouble.c,666 :: 		
0x02FE	0x74440A  	IOR.B	W8, W10, W8
;__Lib_MathDouble.c,667 :: 		
0x0300	0xA37809  	BTST.Z	W9, #7
;__Lib_MathDouble.c,668 :: 		
0x0302	0x3A000D  	BRA NZ	AddSubFP_round
;__Lib_MathDouble.c,669 :: 		
AddSubFP_normalizeloop:
;__Lib_MathDouble.c,670 :: 		
0x0304	0xE20016  	CP0	W11
;__Lib_MathDouble.c,671 :: 		
0x0306	0x340007  	BRA LE	AddSubFP_normalizeexit
;__Lib_MathDouble.c,672 :: 		
0x0308	0xE9058B  	DEC	W11, W11
;__Lib_MathDouble.c,673 :: 		
0x030A	0x440408  	ADD	W8, W8, W8
;__Lib_MathDouble.c,674 :: 		
0x030C	0x4C8489  	ADDC	W9, W9, W9
;__Lib_MathDouble.c,675 :: 		
0x030E	0x3A0001  	BRA NZ	AddSubFP_normalizetest
;__Lib_MathDouble.c,676 :: 		
0x0310	0x20000B  	MOV	#0, W11
;__Lib_MathDouble.c,677 :: 		
AddSubFP_normalizetest:
;__Lib_MathDouble.c,678 :: 		
0x0312	0xA37809  	BTST.Z	W9, #7
;__Lib_MathDouble.c,679 :: 		
0x0314	0x32FFF7  	BRA Z	AddSubFP_normalizeloop
;__Lib_MathDouble.c,680 :: 		
AddSubFP_normalizeexit:
;__Lib_MathDouble.c,681 :: 		
0x0316	0xEB0100  	CLR	W2
;__Lib_MathDouble.c,682 :: 		
0x0318	0x370002  	BRA	AddSubFP_round
;__Lib_MathDouble.c,683 :: 		
AddSubFP_discardguard:
;__Lib_MathDouble.c,684 :: 		
0x031A	0x718182  	IOR	W3, W2, W3
;__Lib_MathDouble.c,685 :: 		
0x031C	0x88002A  	MOV	W10, W2
;__Lib_MathDouble.c,686 :: 		
AddSubFP_round:
;__Lib_MathDouble.c,687 :: 		
0x031E	0x070022  	RCALL	AddSubFP__fpack
;__Lib_MathDouble.c,688 :: 		
AddSubFP_signoff:
;__Lib_MathDouble.c,689 :: 		
0x0320	0xA7F00C  	BTSC	W12, #15
;__Lib_MathDouble.c,690 :: 		
0x0322	0xA8E003  	BSET	W1, #15
;__Lib_MathDouble.c,691 :: 		
0x0324	0x370018  	BRA	AddSubFP__fbopExit
;__Lib_MathDouble.c,692 :: 		
AddSubFP_aisinfinite:
;__Lib_MathDouble.c,693 :: 		
0x0326	0xE12064  	CP	W4, #4
;__Lib_MathDouble.c,694 :: 		
0x0328	0x3A0002  	BRA NZ	AddSubFP_return8_3
;__Lib_MathDouble.c,695 :: 		
0x032A	0x6C8F83  	XOR	W9, W3, [W15]
;__Lib_MathDouble.c,696 :: 		
0x032C	0x330018  	BRA N	AddSubFP__fbopReturnNaN
;__Lib_MathDouble.c,697 :: 		
AddSubFP_return8_3:
;__Lib_MathDouble.c,698 :: 		
0x032E	0xBE8108  	MOV.D	W8, W2
;__Lib_MathDouble.c,699 :: 		
AddSubFP_return2_3:
;__Lib_MathDouble.c,700 :: 		
0x0330	0xBE8002  	MOV.D	W2, W0
;__Lib_MathDouble.c,701 :: 		
0x0332	0x370011  	BRA	AddSubFP__fbopExit
;__Lib_MathDouble.c,702 :: 		
AddSubFP__funpack2:
;__Lib_MathDouble.c,703 :: 		
0x0334	0xBE8400  	MOV.D	W0, W8
;__Lib_MathDouble.c,704 :: 		
0x0336	0x07003C  	RCALL	AddSubFP__funpack
;__Lib_MathDouble.c,705 :: 		
0x0338	0xBE8300  	MOV.D	W0, W6
;__Lib_MathDouble.c,706 :: 		
0x033A	0xBE8504  	MOV.D	W4, W10
;__Lib_MathDouble.c,707 :: 		
0x033C	0xBE8002  	MOV.D	W2, W0
;__Lib_MathDouble.c,708 :: 		
0x033E	0x070038  	RCALL	AddSubFP__funpack
;__Lib_MathDouble.c,709 :: 		
0x0340	0x754F84  	IOR.B	W10, W4, [W15]
;__Lib_MathDouble.c,710 :: 		
0x0342	0x060000  	RETURN
;__Lib_MathDouble.c,711 :: 		
AddSubFP__fPropagateNaN:
;__Lib_MathDouble.c,712 :: 		
0x0344	0xBE8002  	MOV.D	W2, W0
;__Lib_MathDouble.c,713 :: 		
0x0346	0xE15064  	CP	W10, #4
;__Lib_MathDouble.c,714 :: 		
0x0348	0x360005  	BRA LEU	AddSubFP_return0_1
;__Lib_MathDouble.c,715 :: 		
0x034A	0xE12064  	CP	W4, #4
;__Lib_MathDouble.c,716 :: 		
0x034C	0x360002  	BRA LEU	AddSubFP_return8_1
;__Lib_MathDouble.c,717 :: 		
0x034E	0xA36809  	BTST.Z	W9, #6
;__Lib_MathDouble.c,718 :: 		
0x0350	0x3A0001  	BRA NZ	AddSubFP_return0_1
;__Lib_MathDouble.c,719 :: 		
AddSubFP_return8_1:
;__Lib_MathDouble.c,720 :: 		
0x0352	0xBE8008  	MOV.D	W8, W0
;__Lib_MathDouble.c,721 :: 		
AddSubFP_return0_1:
;__Lib_MathDouble.c,722 :: 		
0x0354	0xA8C002  	BSET	W1, #6
;__Lib_MathDouble.c,723 :: 		
AddSubFP__fbopExit:
;__Lib_MathDouble.c,724 :: 		
0x0356	0x78064F  	MOV	[--W15], W12
;__Lib_MathDouble.c,725 :: 		
0x0358	0xBE054F  	MOV.D	[--W15], W10
;__Lib_MathDouble.c,726 :: 		
0x035A	0xBE044F  	MOV.D	[--W15], W8
;__Lib_MathDouble.c,727 :: 		
0x035C	0x060000  	RETURN
;__Lib_MathDouble.c,728 :: 		
AddSubFP__fbopReturnNaN:
;__Lib_MathDouble.c,729 :: 		
0x035E	0x2FFFF0  	MOV	#65535, W0
;__Lib_MathDouble.c,730 :: 		
0x0360	0x27FFF1  	MOV	#32767, W1
;__Lib_MathDouble.c,731 :: 		
0x0362	0x37FFF9  	BRA	AddSubFP__fbopExit
;__Lib_MathDouble.c,732 :: 		
AddSubFP__fpack:
;__Lib_MathDouble.c,733 :: 		
0x0364	0x200081  	MOV	#8, W1
;__Lib_MathDouble.c,734 :: 		
0x0366	0x558061  	SUB	W11, #1, W0
;__Lib_MathDouble.c,735 :: 		
0x0368	0x3D000B  	BRA GE	AddSubFP_notsubnormal_1
;__Lib_MathDouble.c,736 :: 		
0x036A	0x20000B  	MOV	#0, W11
;__Lib_MathDouble.c,737 :: 		
0x036C	0x2FFE61  	MOV	#65510, W1
;__Lib_MathDouble.c,738 :: 		
0x036E	0xE10001  	CP	W0, W1
;__Lib_MathDouble.c,739 :: 		
0x0370	0x34001D  	BRA LE	AddSubFP_zerosig
;__Lib_MathDouble.c,740 :: 		
AddSubFP_subnormal_1:
;__Lib_MathDouble.c,741 :: 		
0x0372	0x718182  	IOR	W3, W2, W3
;__Lib_MathDouble.c,742 :: 		
0x0374	0x640161  	AND	W8, #1, W2
;__Lib_MathDouble.c,743 :: 		
0x0376	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.c,744 :: 		
0x0378	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.c,745 :: 		
0x037A	0xE80000  	INC	W0, W0
;__Lib_MathDouble.c,746 :: 		
0x037C	0x3AFFFA  	BRA NZ	AddSubFP_subnormal_1
;__Lib_MathDouble.c,747 :: 		
0x037E	0x200071  	MOV	#7, W1
;__Lib_MathDouble.c,748 :: 		
AddSubFP_notsubnormal_1:
;__Lib_MathDouble.c,749 :: 		
0x0380	0x640061  	AND	W8, #1, W0
;__Lib_MathDouble.c,750 :: 		
0x0382	0x700003  	IOR	W0, W3, W0
;__Lib_MathDouble.c,751 :: 		
0x0384	0x600002  	AND	W0, W2, W0
;__Lib_MathDouble.c,752 :: 		
0x0386	0x320009  	BRA Z	AddSubFP_packupandgo
;__Lib_MathDouble.c,753 :: 		
0x0388	0x440461  	ADD	W8, #1, W8
;__Lib_MathDouble.c,754 :: 		
0x038A	0x4C84E0  	ADDC	W9, #0, W9
;__Lib_MathDouble.c,755 :: 		
0x038C	0xA58809  	BTST.Z	W9, W1
;__Lib_MathDouble.c,756 :: 		
0x038E	0x320005  	BRA Z	AddSubFP_packupandgo
;__Lib_MathDouble.c,757 :: 		
0x0390	0xE8058B  	INC	W11, W11
;__Lib_MathDouble.c,758 :: 		
0x0392	0xE10868  	CP	W1, #8
;__Lib_MathDouble.c,759 :: 		
0x0394	0x3A0002  	BRA NZ	AddSubFP_packupandgo
;__Lib_MathDouble.c,760 :: 		
0x0396	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.c,761 :: 		
0x0398	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.c,762 :: 		
AddSubFP_packupandgo:
;__Lib_MathDouble.c,763 :: 		
0x039A	0x200FF2  	MOV	#255, W2
;__Lib_MathDouble.c,764 :: 		
0x039C	0xE15802  	CP	W11, W2
;__Lib_MathDouble.c,765 :: 		
0x039E	0x3D0005  	BRA GE	AddSubFP_overflow
;__Lib_MathDouble.c,766 :: 		
0x03A0	0xDD5DC7  	SL	W11, #7, W11
;__Lib_MathDouble.c,767 :: 		
0x03A2	0xB207F9  	AND	#127, W9
;__Lib_MathDouble.c,768 :: 		
0x03A4	0x758089  	IOR	W11, W9, W1
;__Lib_MathDouble.c,769 :: 		
0x03A6	0x880008  	MOV	W8, W0
;__Lib_MathDouble.c,770 :: 		
0x03A8	0x060000  	RETURN
;__Lib_MathDouble.c,771 :: 		
AddSubFP_overflow:
;__Lib_MathDouble.c,772 :: 		
0x03AA	0x27F80B  	MOV	#32640, W11
;__Lib_MathDouble.c,773 :: 		
AddSubFP_zerosig:
;__Lib_MathDouble.c,774 :: 		
0x03AC	0x88001B  	MOV	W11, W1
;__Lib_MathDouble.c,775 :: 		
0x03AE	0x050000  	RETLW	#0, W0
;__Lib_MathDouble.c,776 :: 		
AddSubFP__funpack:
;__Lib_MathDouble.c,777 :: 		
0x03B0	0xDE0AC7  	LSR	W1, #7, W5
;__Lib_MathDouble.c,778 :: 		
0x03B2	0xB207F1  	AND	#127, W1
;__Lib_MathDouble.c,779 :: 		
0x03B4	0xB20FF5  	AND	#255, W5
;__Lib_MathDouble.c,780 :: 		
0x03B6	0x320008  	BRA Z	AddSubFP_zeroorsub
;__Lib_MathDouble.c,781 :: 		
0x03B8	0x42CFE1  	ADD.B	W5, #1, [W15]
;__Lib_MathDouble.c,782 :: 		
0x03BA	0x320002  	BRA Z	AddSubFP_nanorinf
;__Lib_MathDouble.c,783 :: 		
AddSubFP_finitereturn:
;__Lib_MathDouble.c,784 :: 		
0x03BC	0xA8E002  	BSET	W1, #7
;__Lib_MathDouble.c,785 :: 		
0x03BE	0x050024  	RETLW	#2, W4
;__Lib_MathDouble.c,786 :: 		
AddSubFP_nanorinf:
;__Lib_MathDouble.c,787 :: 		
0x03C0	0x700F81  	IOR	W0, W1, [W15]
;__Lib_MathDouble.c,788 :: 		
0x03C2	0x320001  	BRA Z	AddSubFP_infinite
;__Lib_MathDouble.c,789 :: 		
0x03C4	0x050804  	RETLW	#128, W4
;__Lib_MathDouble.c,790 :: 		
AddSubFP_infinite:
;__Lib_MathDouble.c,791 :: 		
0x03C6	0x050044  	RETLW	#4, W4
;__Lib_MathDouble.c,792 :: 		
AddSubFP_zeroorsub:
;__Lib_MathDouble.c,793 :: 		
0x03C8	0x700F81  	IOR	W0, W1, [W15]
;__Lib_MathDouble.c,794 :: 		
0x03CA	0x3A0002  	BRA NZ	AddSubFP_subnormal_2
;__Lib_MathDouble.c,795 :: 		
0x03CC	0x050014  	RETLW	#1, W4
;__Lib_MathDouble.c,796 :: 		
AddSubFP_normalize:
;__Lib_MathDouble.c,797 :: 		
0x03CE	0xE90285  	DEC	W5, W5
;__Lib_MathDouble.c,798 :: 		
AddSubFP_subnormal_2:
;__Lib_MathDouble.c,799 :: 		
0x03D0	0x400000  	ADD	W0, W0, W0
;__Lib_MathDouble.c,800 :: 		
0x03D2	0x48C081  	ADDC.B	W1, W1, W1
;__Lib_MathDouble.c,801 :: 		
0x03D4	0x3BFFFC  	BRA NN	AddSubFP_normalize
;__Lib_MathDouble.c,802 :: 		
0x03D6	0xA8E002  	BSET	W1, #7
;__Lib_MathDouble.c,803 :: 		
0x03D8	0x050024  	RETLW	#2, W4
;__Lib_MathDouble.c,806 :: 		
the_end__AddSub_FP:
;__Lib_MathDouble.c,809 :: 		
L_end__AddSub_FP:
0x03DA	0xFA8000  	ULNK
0x03DC	0x060000  	RETURN
; end of __AddSub_FP
__Compare_Le_Fp:
0x08AC	0xFA0000  	LNK	#0
;__Lib_MathDouble.c,1348 :: 		
;__Lib_MathDouble.c,1349 :: 		
0x08AE	0x200014  	MOV	#1, W4
;__Lib_MathDouble.c,1350 :: 		
0x08B0	0x07FCA7  	RCALL	__Compare_Fp
;__Lib_MathDouble.c,1351 :: 		
L_end__Compare_Le_Fp:
0x08B2	0xFA8000  	ULNK
0x08B4	0x060000  	RETURN
; end of __Compare_Le_Fp
__Compare_Fp:
0x0200	0xFA0000  	LNK	#0
;__Lib_MathDouble.c,1272 :: 		
;__Lib_MathDouble.c,1274 :: 		
0x0202	0x070002  	RCALL	CompareFp__fcompare
;__Lib_MathDouble.c,1275 :: 		
0x0204	0x00000004026E  	GOTO	the_end__Compare_Fp
;__Lib_MathDouble.c,1277 :: 		
CompareFp__fcompare:
;__Lib_MathDouble.c,1278 :: 		
0x0208	0x781F84  	MOV	W4, [W15++]
;__Lib_MathDouble.c,1279 :: 		
0x020A	0x070014  	RCALL	CompareFp__funpack2
;__Lib_MathDouble.c,1280 :: 		
0x020C	0x78004F  	MOV	[--W15], W0
;__Lib_MathDouble.c,1281 :: 		
0x020E	0x330011  	BRA N	CompareFp_exit
;__Lib_MathDouble.c,1282 :: 		
0x0210	0x2FFFF0  	MOV	#65535, W0
;__Lib_MathDouble.c,1283 :: 		
0x0212	0x6C8F83  	XOR	W9, W3, [W15]
;__Lib_MathDouble.c,1284 :: 		
0x0214	0x3B0006  	BRA NN	CompareFp_comparemag
;__Lib_MathDouble.c,1285 :: 		
0x0216	0x650504  	AND	W10, W4, W10
;__Lib_MathDouble.c,1286 :: 		
0x0218	0xA7000A  	BTSC	W10, #0
;__Lib_MathDouble.c,1287 :: 		
0x021A	0x370008  	BRA	CompareFp_returnEqual
;__Lib_MathDouble.c,1288 :: 		
0x021C	0xA6F009  	BTSS	W9, #15
;__Lib_MathDouble.c,1289 :: 		
0x021E	0x200010  	MOV	#1, W0
;__Lib_MathDouble.c,1290 :: 		
0x0220	0x370008  	BRA	CompareFp_exit
;__Lib_MathDouble.c,1291 :: 		
CompareFp_comparemag:
;__Lib_MathDouble.c,1292 :: 		
0x0222	0x540F82  	SUB	W8, W2, [W15]
;__Lib_MathDouble.c,1293 :: 		
0x0224	0x5C8F83  	SUBB	W9, W3, [W15]
;__Lib_MathDouble.c,1294 :: 		
0x0226	0x390003  	BRA LTU	CompareFp_adjust
;__Lib_MathDouble.c,1295 :: 		
0x0228	0x200010  	MOV	#1, W0
;__Lib_MathDouble.c,1296 :: 		
0x022A	0x3E0001  	BRA GTU	CompareFp_adjust
;__Lib_MathDouble.c,1297 :: 		
CompareFp_returnEqual:
;__Lib_MathDouble.c,1298 :: 		
0x022C	0x200000  	MOV	#0, W0
;__Lib_MathDouble.c,1299 :: 		
CompareFp_adjust:
;__Lib_MathDouble.c,1300 :: 		
0x022E	0xA7F009  	BTSC	W9, #15
;__Lib_MathDouble.c,1301 :: 		
0x0230	0xEA0000  	NEG	W0, W0
;__Lib_MathDouble.c,1302 :: 		
CompareFp_exit:
;__Lib_MathDouble.c,1303 :: 		
0x0232	0x060000  	RETURN
;__Lib_MathDouble.c,1304 :: 		
CompareFp__funpack2:
;__Lib_MathDouble.c,1305 :: 		
0x0234	0xBE8400  	MOV.D	W0, W8
;__Lib_MathDouble.c,1306 :: 		
0x0236	0x070006  	RCALL	CompareFp__funpack
;__Lib_MathDouble.c,1307 :: 		
0x0238	0xBE8300  	MOV.D	W0, W6
;__Lib_MathDouble.c,1308 :: 		
0x023A	0xBE8504  	MOV.D	W4, W10
;__Lib_MathDouble.c,1309 :: 		
0x023C	0xBE8002  	MOV.D	W2, W0
;__Lib_MathDouble.c,1310 :: 		
0x023E	0x070002  	RCALL	CompareFp__funpack
;__Lib_MathDouble.c,1311 :: 		
0x0240	0x754F84  	IOR.B	W10, W4, [W15]
;__Lib_MathDouble.c,1312 :: 		
0x0242	0x060000  	RETURN
;__Lib_MathDouble.c,1313 :: 		
CompareFp__funpack:
;__Lib_MathDouble.c,1314 :: 		
0x0244	0xDE0AC7  	LSR	W1, #7, W5
;__Lib_MathDouble.c,1315 :: 		
0x0246	0xB207F1  	AND	#127, W1
;__Lib_MathDouble.c,1316 :: 		
0x0248	0xB20FF5  	AND	#255, W5
;__Lib_MathDouble.c,1317 :: 		
0x024A	0x320008  	BRA Z	CompareFp_zeroorsub
;__Lib_MathDouble.c,1318 :: 		
0x024C	0x42CFE1  	ADD.B	W5, #1, [W15]
;__Lib_MathDouble.c,1319 :: 		
0x024E	0x320002  	BRA Z	CompareFp_nanorinf
;__Lib_MathDouble.c,1320 :: 		
CompareFp_finitereturn:
;__Lib_MathDouble.c,1321 :: 		
0x0250	0xA8E002  	BSET	W1, #7
;__Lib_MathDouble.c,1322 :: 		
0x0252	0x050024  	RETLW	#2, W4
;__Lib_MathDouble.c,1323 :: 		
CompareFp_nanorinf:
;__Lib_MathDouble.c,1324 :: 		
0x0254	0x700F81  	IOR	W0, W1, [W15]
;__Lib_MathDouble.c,1325 :: 		
0x0256	0x320001  	BRA Z	CompareFp_infinite
;__Lib_MathDouble.c,1326 :: 		
0x0258	0x050804  	RETLW	#128, W4
;__Lib_MathDouble.c,1327 :: 		
CompareFp_infinite:
;__Lib_MathDouble.c,1328 :: 		
0x025A	0x050044  	RETLW	#4, W4
;__Lib_MathDouble.c,1329 :: 		
CompareFp_zeroorsub:
;__Lib_MathDouble.c,1330 :: 		
0x025C	0x700F81  	IOR	W0, W1, [W15]
;__Lib_MathDouble.c,1331 :: 		
0x025E	0x3A0002  	BRA NZ	CompareFp_subnormal
;__Lib_MathDouble.c,1332 :: 		
0x0260	0x050014  	RETLW	#1, W4
;__Lib_MathDouble.c,1333 :: 		
CompareFp_normalize:
;__Lib_MathDouble.c,1334 :: 		
0x0262	0xE90285  	DEC	W5, W5
;__Lib_MathDouble.c,1335 :: 		
CompareFp_subnormal:
;__Lib_MathDouble.c,1336 :: 		
0x0264	0x400000  	ADD	W0, W0, W0
;__Lib_MathDouble.c,1337 :: 		
0x0266	0x48C081  	ADDC.B	W1, W1, W1
;__Lib_MathDouble.c,1338 :: 		
0x0268	0x3BFFFC  	BRA NN	CompareFp_normalize
;__Lib_MathDouble.c,1339 :: 		
0x026A	0xA8E002  	BSET	W1, #7
;__Lib_MathDouble.c,1340 :: 		
0x026C	0x050024  	RETLW	#2, W4
;__Lib_MathDouble.c,1343 :: 		
the_end__Compare_Fp:
;__Lib_MathDouble.c,1345 :: 		
L_end__Compare_Fp:
0x026E	0xFA8000  	ULNK
0x0270	0x060000  	RETURN
; end of __Compare_Fp
__Sub_FP:
0x08B6	0xFA0000  	LNK	#0
;__Lib_MathDouble.c,830 :: 		
;__Lib_MathDouble.c,831 :: 		
0x08B8	0xAAE007  	BTG	W3, #15
;__Lib_MathDouble.c,832 :: 		
0x08BA	0x07FCDB  	RCALL	__AddSub_FP
;__Lib_MathDouble.c,833 :: 		
L_end__Sub_FP:
0x08BC	0xFA8000  	ULNK
0x08BE	0x060000  	RETURN
; end of __Sub_FP
__Long2Float:
0x078C	0xFA0000  	LNK	#0
;__Lib_MathDouble.c,104 :: 		
;__Lib_MathDouble.c,106 :: 		
0x078E	0x070002  	RCALL	LL_intro_Long2Float
;__Lib_MathDouble.c,107 :: 		
0x0790	0x00000004083E  	GOTO	the_end__Long2Float
;__Lib_MathDouble.c,109 :: 		
LL_intro_Long2Float:
;__Lib_MathDouble.c,110 :: 		
0x0794	0xE20004  	CP0	W2
;__Lib_MathDouble.c,111 :: 		
0x0796	0x3A0006  	BRA NZ	Longint2Float__floatsisf
;__Lib_MathDouble.c,113 :: 		
Longword2Float__floatuisf:
;__Lib_MathDouble.c,114 :: 		
0x0798	0xEB0500  	CLR	W10
;__Lib_MathDouble.c,115 :: 		
0x079A	0xE20002  	CP0	W1
;__Lib_MathDouble.c,116 :: 		
0x079C	0x3E000F  	BRA GTU	Long2Float_notspecial
;__Lib_MathDouble.c,117 :: 		
0x079E	0xE20000  	CP0	W0
;__Lib_MathDouble.c,118 :: 		
0x07A0	0x320027  	BRA Z	Long2Float_return0
;__Lib_MathDouble.c,119 :: 		
0x07A2	0x37000C  	BRA	Long2Float_notspecial
;__Lib_MathDouble.c,121 :: 		
Longint2Float__floatsisf:
;__Lib_MathDouble.c,122 :: 		
0x07A4	0x8800A1  	MOV	W1, W10
;__Lib_MathDouble.c,123 :: 		
0x07A6	0xE20002  	CP0	W1
;__Lib_MathDouble.c,124 :: 		
0x07A8	0x350004  	BRA LT	Longint2Float_negative
;__Lib_MathDouble.c,125 :: 		
0x07AA	0x3C0008  	BRA GT	Long2Float_notspecial
;__Lib_MathDouble.c,126 :: 		
0x07AC	0xE20000  	CP0	W0
;__Lib_MathDouble.c,127 :: 		
0x07AE	0x320020  	BRA Z	Long2Float_return0
;__Lib_MathDouble.c,128 :: 		
0x07B0	0x370005  	BRA	Long2Float_notspecial
;__Lib_MathDouble.c,129 :: 		
Longint2Float_negative:
;__Lib_MathDouble.c,130 :: 		
0x07B2	0x100060  	SUBR	W0, #0, W0
;__Lib_MathDouble.c,131 :: 		
0x07B4	0x1880E0  	SUBBR	W1, #0, W1
;__Lib_MathDouble.c,132 :: 		
0x07B6	0x3B0002  	BRA NN	Long2Float_notspecial
;__Lib_MathDouble.c,133 :: 		
0x07B8	0x2CF001  	MOV	#52992, W1
;__Lib_MathDouble.c,134 :: 		
0x07BA	0x37001A  	BRA	Long2Float_return0
;__Lib_MathDouble.c,136 :: 		
Long2Float_notspecial:
;__Lib_MathDouble.c,137 :: 		
0x07BC	0xBE8400  	MOV.D	W0, W8
;__Lib_MathDouble.c,138 :: 		
0x07BE	0xB81160  	MUL.UU	W2, #0, W2
;__Lib_MathDouble.c,139 :: 		
0x07C0	0x20096B  	MOV	#150, W11
;__Lib_MathDouble.c,140 :: 		
0x07C2	0xCF8209  	FF1L	W9, W4
;__Lib_MathDouble.c,141 :: 		
0x07C4	0x390002  	BRA NC	Long2Float_fixshift
;__Lib_MathDouble.c,142 :: 		
0x07C6	0xCF8208  	FF1L	W8, W4
;__Lib_MathDouble.c,143 :: 		
0x07C8	0xB04104  	ADD.B	#16, W4
;__Lib_MathDouble.c,144 :: 		
Long2Float_fixshift:
;__Lib_MathDouble.c,145 :: 		
0x07CA	0x524269  	SUB.B	W4, #9, W4
;__Lib_MathDouble.c,146 :: 		
0x07CC	0x32000E  	BRA Z	Long2Float_round
;__Lib_MathDouble.c,147 :: 		
0x07CE	0x3B0008  	BRA NN	Long2Float_shiftleft
;__Lib_MathDouble.c,148 :: 		
Long2Float_shiftright:
;__Lib_MathDouble.c,149 :: 		
0x07D0	0x718182  	IOR	W3, W2, W3
;__Lib_MathDouble.c,150 :: 		
0x07D2	0x640161  	AND	W8, #1, W2
;__Lib_MathDouble.c,151 :: 		
0x07D4	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.c,152 :: 		
0x07D6	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.c,153 :: 		
0x07D8	0xE8058B  	INC	W11, W11
;__Lib_MathDouble.c,154 :: 		
0x07DA	0xE84204  	INC.B	W4, W4
;__Lib_MathDouble.c,155 :: 		
0x07DC	0x3AFFF9  	BRA NZ	Long2Float_shiftright
;__Lib_MathDouble.c,156 :: 		
0x07DE	0x370005  	BRA	Long2Float_round
;__Lib_MathDouble.c,157 :: 		
Long2Float_shiftleft:
;__Lib_MathDouble.c,158 :: 		
0x07E0	0x440408  	ADD	W8, W8, W8
;__Lib_MathDouble.c,159 :: 		
0x07E2	0x4C8489  	ADDC	W9, W9, W9
;__Lib_MathDouble.c,160 :: 		
0x07E4	0xE9058B  	DEC	W11, W11
;__Lib_MathDouble.c,161 :: 		
0x07E6	0xE94204  	DEC.B	W4, W4
;__Lib_MathDouble.c,162 :: 		
0x07E8	0x3AFFFB  	BRA NZ	Long2Float_shiftleft
;__Lib_MathDouble.c,163 :: 		
Long2Float_round:
;__Lib_MathDouble.c,164 :: 		
0x07EA	0x070003  	RCALL	Long2Float__fpack
;__Lib_MathDouble.c,165 :: 		
0x07EC	0xA7F00A  	BTSC	W10, #15
;__Lib_MathDouble.c,166 :: 		
0x07EE	0xA8E003  	BSET	W1, #15
;__Lib_MathDouble.c,167 :: 		
Long2Float_return0:
;__Lib_MathDouble.c,168 :: 		
0x07F0	0x060000  	RETURN
;__Lib_MathDouble.c,169 :: 		
Long2Float__fpack:
;__Lib_MathDouble.c,170 :: 		
0x07F2	0x200081  	MOV	#8, W1
;__Lib_MathDouble.c,171 :: 		
0x07F4	0x558061  	SUB	W11, #1, W0
;__Lib_MathDouble.c,172 :: 		
0x07F6	0x3D000B  	BRA GE	Long2Float_notsubnormal
;__Lib_MathDouble.c,173 :: 		
0x07F8	0x20000B  	MOV	#0, W11
;__Lib_MathDouble.c,174 :: 		
0x07FA	0x2FFE61  	MOV	#65510, W1
;__Lib_MathDouble.c,175 :: 		
0x07FC	0xE10001  	CP	W0, W1
;__Lib_MathDouble.c,176 :: 		
0x07FE	0x34001D  	BRA LE	Long2Float_zerosig
;__Lib_MathDouble.c,177 :: 		
Long2Float_subnormal:
;__Lib_MathDouble.c,178 :: 		
0x0800	0x718182  	IOR	W3, W2, W3
;__Lib_MathDouble.c,179 :: 		
0x0802	0x640161  	AND	W8, #1, W2
;__Lib_MathDouble.c,180 :: 		
0x0804	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.c,181 :: 		
0x0806	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.c,182 :: 		
0x0808	0xE80000  	INC	W0, W0
;__Lib_MathDouble.c,183 :: 		
0x080A	0x3AFFFA  	BRA NZ	Long2Float_subnormal
;__Lib_MathDouble.c,184 :: 		
0x080C	0x200071  	MOV	#7, W1
;__Lib_MathDouble.c,185 :: 		
Long2Float_notsubnormal:
;__Lib_MathDouble.c,186 :: 		
0x080E	0x640061  	AND	W8, #1, W0
;__Lib_MathDouble.c,187 :: 		
0x0810	0x700003  	IOR	W0, W3, W0
;__Lib_MathDouble.c,188 :: 		
0x0812	0x600002  	AND	W0, W2, W0
;__Lib_MathDouble.c,189 :: 		
0x0814	0x320009  	BRA Z	Long2Float_packupandgo
;__Lib_MathDouble.c,190 :: 		
0x0816	0x440461  	ADD	W8, #1, W8
;__Lib_MathDouble.c,191 :: 		
0x0818	0x4C84E0  	ADDC	W9, #0, W9
;__Lib_MathDouble.c,192 :: 		
0x081A	0xA58809  	BTST.Z	W9, W1
;__Lib_MathDouble.c,193 :: 		
0x081C	0x320005  	BRA Z	Long2Float_packupandgo
;__Lib_MathDouble.c,194 :: 		
0x081E	0xE8058B  	INC	W11, W11
;__Lib_MathDouble.c,195 :: 		
0x0820	0xE10868  	CP	W1, #8
;__Lib_MathDouble.c,196 :: 		
0x0822	0x3A0002  	BRA NZ	Long2Float_packupandgo
;__Lib_MathDouble.c,197 :: 		
0x0824	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.c,198 :: 		
0x0826	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.c,199 :: 		
Long2Float_packupandgo:
;__Lib_MathDouble.c,200 :: 		
0x0828	0x200FF2  	MOV	#255, W2
;__Lib_MathDouble.c,201 :: 		
0x082A	0xE15802  	CP	W11, W2
;__Lib_MathDouble.c,202 :: 		
0x082C	0x3D0005  	BRA GE	Long2Float_overflow
;__Lib_MathDouble.c,203 :: 		
0x082E	0xDD5DC7  	SL	W11, #7, W11
;__Lib_MathDouble.c,204 :: 		
0x0830	0xB207F9  	AND	#127, W9
;__Lib_MathDouble.c,205 :: 		
0x0832	0x758089  	IOR	W11, W9, W1
;__Lib_MathDouble.c,206 :: 		
0x0834	0x880008  	MOV	W8, W0
;__Lib_MathDouble.c,207 :: 		
0x0836	0x060000  	RETURN
;__Lib_MathDouble.c,208 :: 		
Long2Float_overflow:
;__Lib_MathDouble.c,209 :: 		
0x0838	0x27F80B  	MOV	#32640, W11
;__Lib_MathDouble.c,210 :: 		
Long2Float_zerosig:
;__Lib_MathDouble.c,211 :: 		
0x083A	0x88001B  	MOV	W11, W1
;__Lib_MathDouble.c,212 :: 		
0x083C	0x050000  	RETLW	#0, W0
;__Lib_MathDouble.c,215 :: 		
the_end__Long2Float:
;__Lib_MathDouble.c,218 :: 		
L_end__Long2Float:
0x083E	0xFA8000  	ULNK
0x0840	0x060000  	RETURN
; end of __Long2Float
__irgrid2_Driver__exp:
0x0A12	0xFA0004  	LNK	#4
;__irgrid2_Driver.c,170 :: 		static double _exp(double x)
;__irgrid2_Driver.c,190 :: 		if(x == 0.0)
0x0A14	0x781F8C  	PUSH	W12
0x0A16	0x781F8D  	PUSH	W13
0x0A18	0xBE9F8A  	PUSH.D	W10
0x0A1A	0xBE000A  	MOV.D	W10, W0
0x0A1C	0xEF2004  	CLR	W2
0x0A1E	0xEF2006  	CLR	W3
0x0A20	0x07FF45  	RCALL	__Compare_Le_Fp
0x0A22	0xE00000  	CP0	W0
0x0A24	0xEF6000  	CLR.B	W0
0x0A26	0x3A0001  	BRA NZ	L___irgrid2_Driver__exp272
0x0A28	0xEC6000  	INC.B	W0
L___irgrid2_Driver__exp272:
0x0A2A	0xBE054F  	POP.D	W10
0x0A2C	0xE24000  	CP0.B	W0
0x0A2E	0x320003  	BRA Z	L___irgrid2_Driver__exp21
L___irgrid2_Driver__exp273:
;__irgrid2_Driver.c,191 :: 		return 1.0;
0x0A30	0x200000  	MOV	#0, W0
0x0A32	0x23F801  	MOV	#16256, W1
0x0A34	0x370068  	BRA	L_end__exp
L___irgrid2_Driver__exp21:
;__irgrid2_Driver.c,192 :: 		if (x > EXP_MAX)    //too big?
0x0A36	0xBE9F8A  	PUSH.D	W10
0x0A38	0x2D4FE2  	MOV	#54526, W2
0x0A3A	0x242B23  	MOV	#17074, W3
0x0A3C	0xBE000A  	MOV.D	W10, W0
0x0A3E	0x07FD98  	RCALL	__Compare_Ge_Fp
0x0A40	0xE00000  	CP0	W0
0x0A42	0xEF6000  	CLR.B	W0
0x0A44	0x340001  	BRA LE	L___irgrid2_Driver__exp274
0x0A46	0xEC6000  	INC.B	W0
L___irgrid2_Driver__exp274:
0x0A48	0xBE054F  	POP.D	W10
0x0A4A	0xE24000  	CP0.B	W0
0x0A4C	0x320003  	BRA Z	L___irgrid2_Driver__exp22
L___irgrid2_Driver__exp275:
;__irgrid2_Driver.c,193 :: 		return DBL_MAX;
0x0A4E	0x2FFFF0  	MOV	#65535, W0
0x0A50	0x27F7F1  	MOV	#32639, W1
0x0A52	0x370059  	BRA	L_end__exp
L___irgrid2_Driver__exp22:
;__irgrid2_Driver.c,194 :: 		if (x < EXP_MIN)    //too small?
0x0A54	0xBE9F8A  	PUSH.D	W10
0x0A56	0x2AC502  	MOV	#44112, W2
0x0A58	0x2C2AE3  	MOV	#49838, W3
0x0A5A	0xBE000A  	MOV.D	W10, W0
0x0A5C	0x07FF27  	RCALL	__Compare_Le_Fp
0x0A5E	0xE00000  	CP0	W0
0x0A60	0xEF6000  	CLR.B	W0
0x0A62	0x3D0001  	BRA GE	L___irgrid2_Driver__exp276
0x0A64	0xEC6000  	INC.B	W0
L___irgrid2_Driver__exp276:
0x0A66	0xBE054F  	POP.D	W10
0x0A68	0xE24000  	CP0.B	W0
0x0A6A	0x320003  	BRA Z	L___irgrid2_Driver__exp23
L___irgrid2_Driver__exp277:
;__irgrid2_Driver.c,195 :: 		return 0.0;
0x0A6C	0xEF2000  	CLR	W0
0x0A6E	0xEF2002  	CLR	W1
0x0A70	0x37004A  	BRA	L_end__exp
L___irgrid2_Driver__exp23:
;__irgrid2_Driver.c,196 :: 		sign = x < 0.0;
0x0A72	0xBE9F8A  	PUSH.D	W10
0x0A74	0xEF2004  	CLR	W2
0x0A76	0xEF2006  	CLR	W3
0x0A78	0xBE000A  	MOV.D	W10, W0
0x0A7A	0x07FF18  	RCALL	__Compare_Le_Fp
0x0A7C	0xE00000  	CP0	W0
0x0A7E	0xEF6000  	CLR.B	W0
0x0A80	0x3D0001  	BRA GE	L___irgrid2_Driver__exp278
0x0A82	0xEC6000  	INC.B	W0
L___irgrid2_Driver__exp278:
0x0A84	0xBE054F  	POP.D	W10
0x0A86	0x984720  	MOV.B	W0, [W14+2]
;__irgrid2_Driver.c,197 :: 		if(sign)
0x0A88	0xE24000  	CP0.B	W0
0x0A8A	0x320005  	BRA Z	L___irgrid2_Driver__exp24
L___irgrid2_Driver__exp279:
;__irgrid2_Driver.c,198 :: 		x = -x;
0x0A8C	0x200000  	MOV	#0, W0
0x0A8E	0x280001  	MOV	#32768, W1
0x0A90	0x6D0000  	XOR	W10, W0, W0
0x0A92	0x6D8081  	XOR	W11, W1, W1
0x0A94	0xBE0500  	MOV.D	W0, W10
L___irgrid2_Driver__exp24:
;__irgrid2_Driver.c,199 :: 		x *= 1.4426950409;            // convert to log2 //
0x0A96	0xBE9F8A  	PUSH.D	W10
0x0A98	0xBE000A  	MOV.D	W10, W0
0x0A9A	0x2AA3B2  	MOV	#43579, W2
0x0A9C	0x23FB83  	MOV	#16312, W3
0x0A9E	0x07FC9F  	RCALL	__Mul_FP
0x0AA0	0xBE054F  	POP.D	W10
0x0AA2	0xBE0500  	MOV.D	W0, W10
;__irgrid2_Driver.c,200 :: 		exp = (int)_floor(x);
0x0AA4	0xBE9F8A  	PUSH.D	W10
0x0AA6	0xBE0500  	MOV.D	W0, W10
0x0AA8	0x07FECC  	RCALL	__irgrid2_Driver__floor
0x0AAA	0x07FD26  	RCALL	__Float2Longint
0x0AAC	0x980700  	MOV	W0, [W14+0]
;__irgrid2_Driver.c,201 :: 		x -= (double)exp;
0x0AAE	0xDE80CF  	ASR	W0, #15, W1
0x0AB0	0xEB8100  	SETM	W2
0x0AB2	0x07FE6C  	RCALL	__Long2Float
0x0AB4	0xBE054F  	POP.D	W10
0x0AB6	0xBE9F8A  	PUSH.D	W10
0x0AB8	0xBE0100  	MOV.D	W0, W2
0x0ABA	0xBE000A  	MOV.D	W10, W0
0x0ABC	0x07FEFC  	RCALL	__Sub_FP
0x0ABE	0xBE054F  	POP.D	W10
0x0AC0	0xBE0500  	MOV.D	W0, W10
;__irgrid2_Driver.c,202 :: 		x = _ldexp(_eval_poly(x, coeff, sizeof coeff/sizeof coeff[0] - 1), exp);
0x0AC2	0xBE9F8A  	PUSH.D	W10
0x0AC4	0x20009D  	MOV	#9, W13
0x0AC6	0x28736C  	MOV	#lo_addr(__irgrid2_Driver__exp_coeff_L0), W12
0x0AC8	0xBE0500  	MOV.D	W0, W10
0x0ACA	0x07FD57  	RCALL	__irgrid2_Driver__eval_poly
0x0ACC	0x90060E  	MOV	[W14+0], W12
0x0ACE	0xBE0500  	MOV.D	W0, W10
0x0AD0	0x07FE2E  	RCALL	__irgrid2_Driver__ldexp
0x0AD2	0xBE054F  	POP.D	W10
0x0AD4	0xBE0500  	MOV.D	W0, W10
;__irgrid2_Driver.c,203 :: 		if(sign) {
0x0AD6	0x470062  	ADD	W14, #2, W0
0x0AD8	0xE00410  	CP0.B	[W0]
0x0ADA	0x320014  	BRA Z	L___irgrid2_Driver__exp25
L___irgrid2_Driver__exp280:
;__irgrid2_Driver.c,204 :: 		if (x == DBL_MAX)
0x0ADC	0xBE9F8A  	PUSH.D	W10
0x0ADE	0xBE000A  	MOV.D	W10, W0
0x0AE0	0x2FFFF2  	MOV	#65535, W2
0x0AE2	0x27F7F3  	MOV	#32639, W3
0x0AE4	0x07FEE3  	RCALL	__Compare_Le_Fp
0x0AE6	0xE00000  	CP0	W0
0x0AE8	0xEF6000  	CLR.B	W0
0x0AEA	0x3A0001  	BRA NZ	L___irgrid2_Driver__exp281
0x0AEC	0xEC6000  	INC.B	W0
L___irgrid2_Driver__exp281:
0x0AEE	0xBE054F  	POP.D	W10
0x0AF0	0xE24000  	CP0.B	W0
0x0AF2	0x320003  	BRA Z	L___irgrid2_Driver__exp26
L___irgrid2_Driver__exp282:
;__irgrid2_Driver.c,205 :: 		return 0.0;
0x0AF4	0xEF2000  	CLR	W0
0x0AF6	0xEF2002  	CLR	W1
0x0AF8	0x370006  	BRA	L_end__exp
L___irgrid2_Driver__exp26:
;__irgrid2_Driver.c,206 :: 		return 1.0/x;
0x0AFA	0xBE010A  	MOV.D	W10, W2
0x0AFC	0x200000  	MOV	#0, W0
0x0AFE	0x23F801  	MOV	#16256, W1
0x0B00	0x07FD57  	RCALL	__Div_FP
0x0B02	0x370001  	BRA	L_end__exp
;__irgrid2_Driver.c,207 :: 		}
L___irgrid2_Driver__exp25:
;__irgrid2_Driver.c,208 :: 		return x;
0x0B04	0xBE000A  	MOV.D	W10, W0
;__irgrid2_Driver.c,209 :: 		}
;__irgrid2_Driver.c,208 :: 		return x;
;__irgrid2_Driver.c,209 :: 		}
L_end__exp:
0x0B06	0x7806CF  	POP	W13
0x0B08	0x78064F  	POP	W12
0x0B0A	0xFA8000  	ULNK
0x0B0C	0x060000  	RETURN
; end of __irgrid2_Driver__exp
__irgrid2_Driver__floor:
;__irgrid2_Driver.c,126 :: 		static double _floor(double x)
;__irgrid2_Driver.c,131 :: 		expon = ((*(unsigned long *)&x >> 23) & 255);
0x0842	0xDE58C7  	LSR	W11, #7, W1
0x0844	0xEB0100  	CLR	W2
0x0846	0x200FF0  	MOV	#255, W0
0x0848	0x608080  	AND	W1, W0, W1
;__irgrid2_Driver.c,132 :: 		expon = expon- 127;
0x084A	0x2007F0  	MOV	#127, W0
0x084C	0x508000  	SUB	W1, W0, W0
; expon start address is: 2 (W1)
0x084E	0x780080  	MOV	W0, W1
;__irgrid2_Driver.c,133 :: 		if(expon < 0)
0x0850	0xE10060  	CP	W0, #0
0x0852	0x3D0010  	BRA GE	L___irgrid2_Driver__floor14
L___irgrid2_Driver__floor263:
; expon end address is: 2 (W1)
;__irgrid2_Driver.c,135 :: 		if (x < 0.0)
0x0854	0xEF2004  	CLR	W2
0x0856	0xEF2006  	CLR	W3
0x0858	0xBE000A  	MOV.D	W10, W0
0x085A	0x070028  	RCALL	__Compare_Le_Fp
0x085C	0xE00000  	CP0	W0
0x085E	0xEF6000  	CLR.B	W0
0x0860	0x3D0001  	BRA GE	L___irgrid2_Driver__floor264
0x0862	0xEC6000  	INC.B	W0
L___irgrid2_Driver__floor264:
0x0864	0xE24000  	CP0.B	W0
0x0866	0x320003  	BRA Z	L___irgrid2_Driver__floor15
L___irgrid2_Driver__floor265:
;__irgrid2_Driver.c,137 :: 		return -1.0;
0x0868	0x200000  	MOV	#0, W0
0x086A	0x2BF801  	MOV	#49024, W1
0x086C	0x37001E  	BRA	L_end__floor
;__irgrid2_Driver.c,138 :: 		}
L___irgrid2_Driver__floor15:
;__irgrid2_Driver.c,141 :: 		return  0.0;
0x086E	0xEF2000  	CLR	W0
0x0870	0xEF2002  	CLR	W1
0x0872	0x37001B  	BRA	L_end__floor
;__irgrid2_Driver.c,143 :: 		}
L___irgrid2_Driver__floor14:
;__irgrid2_Driver.c,144 :: 		if((unsigned)expon > sizeof(double) * CHAR_BIT - 8)
; expon start address is: 2 (W1)
0x0874	0xE10878  	CP	W1, #24
0x0876	0x360002  	BRA LEU	L___irgrid2_Driver__floor17
L___irgrid2_Driver__floor266:
; expon end address is: 2 (W1)
;__irgrid2_Driver.c,146 :: 		return x;           /* already an integer */
0x0878	0xBE000A  	MOV.D	W10, W0
0x087A	0x370017  	BRA	L_end__floor
;__irgrid2_Driver.c,147 :: 		}
L___irgrid2_Driver__floor17:
;__irgrid2_Driver.c,148 :: 		i = _FRNDINT(x);
0x087C	0xBE9F8A  	PUSH.D	W10
0x087E	0xBE000A  	MOV.D	W10, W0
0x0880	0x07FE3B  	RCALL	__Float2Longint
0x0882	0xEB8100  	SETM	W2
0x0884	0x07FF83  	RCALL	__Long2Float
0x0886	0xBE054F  	POP.D	W10
; i start address is: 8 (W4)
0x0888	0xBE0200  	MOV.D	W0, W4
;__irgrid2_Driver.c,149 :: 		if(i > x)
0x088A	0xBE9F84  	PUSH.D	W4
0x088C	0xBE010A  	MOV.D	W10, W2
0x088E	0x07FE70  	RCALL	__Compare_Ge_Fp
0x0890	0xE00000  	CP0	W0
0x0892	0xEF6000  	CLR.B	W0
0x0894	0x340001  	BRA LE	L___irgrid2_Driver__floor267
0x0896	0xEC6000  	INC.B	W0
L___irgrid2_Driver__floor267:
0x0898	0xBE024F  	POP.D	W4
0x089A	0xE24000  	CP0.B	W0
0x089C	0x320005  	BRA Z	L___irgrid2_Driver__floor18
L___irgrid2_Driver__floor268:
;__irgrid2_Driver.c,151 :: 		return i - 1.0;
0x089E	0x200002  	MOV	#0, W2
0x08A0	0x23F803  	MOV	#16256, W3
0x08A2	0xBE0004  	MOV.D	W4, W0
0x08A4	0x070008  	RCALL	__Sub_FP
; i end address is: 8 (W4)
0x08A6	0x370001  	BRA	L_end__floor
;__irgrid2_Driver.c,152 :: 		}
L___irgrid2_Driver__floor18:
;__irgrid2_Driver.c,153 :: 		return i;
; i start address is: 8 (W4)
0x08A8	0xBE0004  	MOV.D	W4, W0
; i end address is: 8 (W4)
;__irgrid2_Driver.c,154 :: 		}
L_end__floor:
0x08AA	0x060000  	RETURN
; end of __irgrid2_Driver__floor
__Float2Longint:
0x04F8	0xFA0000  	LNK	#0
;__Lib_MathDouble.c,479 :: 		
;__Lib_MathDouble.c,481 :: 		
0x04FA	0x070002  	RCALL	Float2Longint__fixsfsi
;__Lib_MathDouble.c,482 :: 		
0x04FC	0x00000004056C  	GOTO	the_end__Float2Longint
;__Lib_MathDouble.c,486 :: 		
Float2Longint__fixsfsi:
;__Lib_MathDouble.c,487 :: 		
0x0500	0xBE8100  	MOV.D	W0, W2
;__Lib_MathDouble.c,488 :: 		
0x0502	0x07001F  	RCALL	Float2Longint__funpack
;__Lib_MathDouble.c,489 :: 		
0x0504	0xA77004  	BTSC	W4, #7
;__Lib_MathDouble.c,490 :: 		
0x0506	0xA1F003  	BCLR	W3, #15
;__Lib_MathDouble.c,491 :: 		
0x0508	0xB10965  	SUB	#150, W5
;__Lib_MathDouble.c,492 :: 		
0x050A	0x320016  	BRA Z	Float2Longint_setsign
;__Lib_MathDouble.c,493 :: 		
0x050C	0x35000D  	BRA LT	Float2Longint_shiftright
;__Lib_MathDouble.c,494 :: 		
0x050E	0xE12868  	CP	W5, #8
;__Lib_MathDouble.c,495 :: 		
0x0510	0x350006  	BRA LT	Float2Longint_shiftleft
;__Lib_MathDouble.c,496 :: 		
0x0512	0x2FFFF0  	MOV	#65535, W0
;__Lib_MathDouble.c,497 :: 		
0x0514	0x27FFF1  	MOV	#32767, W1
;__Lib_MathDouble.c,498 :: 		
0x0516	0xE20006  	CP0	W3
;__Lib_MathDouble.c,499 :: 		
0x0518	0x3B0013  	BRA NN	Float2Longint_exit
;__Lib_MathDouble.c,500 :: 		
0x051A	0x280001  	MOV	#32768, W1
;__Lib_MathDouble.c,501 :: 		
0x051C	0x050000  	RETLW	#0, W0
;__Lib_MathDouble.c,502 :: 		
Float2Longint_shiftleft:
;__Lib_MathDouble.c,503 :: 		
0x051E	0x400000  	ADD	W0, W0, W0
;__Lib_MathDouble.c,504 :: 		
0x0520	0x488081  	ADDC	W1, W1, W1
;__Lib_MathDouble.c,505 :: 		
0x0522	0xE90285  	DEC	W5, W5
;__Lib_MathDouble.c,506 :: 		
0x0524	0x3AFFFC  	BRA NZ	Float2Longint_shiftleft
;__Lib_MathDouble.c,507 :: 		
0x0526	0x370008  	BRA	Float2Longint_setsign
;__Lib_MathDouble.c,508 :: 		
Float2Longint_shiftright:
;__Lib_MathDouble.c,509 :: 		
0x0528	0x428FF8  	ADD	W5, #24, [W15]
;__Lib_MathDouble.c,510 :: 		
0x052A	0x3C0002  	BRA GT	Float2Longint_shiftrightloop
;__Lib_MathDouble.c,511 :: 		
0x052C	0xEB0080  	CLR	W1
;__Lib_MathDouble.c,512 :: 		
0x052E	0x050000  	RETLW	#0, W0
;__Lib_MathDouble.c,513 :: 		
Float2Longint_shiftrightloop:
;__Lib_MathDouble.c,514 :: 		
0x0530	0xD10081  	LSR	W1, W1
;__Lib_MathDouble.c,515 :: 		
0x0532	0xD38000  	RRC	W0, W0
;__Lib_MathDouble.c,516 :: 		
0x0534	0xE80285  	INC	W5, W5
;__Lib_MathDouble.c,517 :: 		
0x0536	0x3AFFFC  	BRA NZ	Float2Longint_shiftrightloop
;__Lib_MathDouble.c,518 :: 		
Float2Longint_setsign:
;__Lib_MathDouble.c,519 :: 		
0x0538	0xE20006  	CP0	W3
;__Lib_MathDouble.c,520 :: 		
0x053A	0x3B0002  	BRA NN	Float2Longint_exit
;__Lib_MathDouble.c,521 :: 		
0x053C	0x100060  	SUBR	W0, #0, W0
;__Lib_MathDouble.c,522 :: 		
0x053E	0x1880E0  	SUBBR	W1, #0, W1
;__Lib_MathDouble.c,523 :: 		
Float2Longint_exit:
;__Lib_MathDouble.c,524 :: 		
0x0540	0x060000  	RETURN
;__Lib_MathDouble.c,525 :: 		
Float2Longint__funpack:
;__Lib_MathDouble.c,526 :: 		
0x0542	0xDE0AC7  	LSR	W1, #7, W5
;__Lib_MathDouble.c,527 :: 		
0x0544	0xB207F1  	AND	#127, W1
;__Lib_MathDouble.c,528 :: 		
0x0546	0xB20FF5  	AND	#255, W5
;__Lib_MathDouble.c,529 :: 		
0x0548	0x320008  	BRA Z	Float2Longint_zeroorsub
;__Lib_MathDouble.c,530 :: 		
0x054A	0x42CFE1  	ADD.B	W5, #1, [W15]
;__Lib_MathDouble.c,531 :: 		
0x054C	0x320002  	BRA Z	Float2Longint_nanorinf
;__Lib_MathDouble.c,532 :: 		
Float2Longint_finitereturn:
;__Lib_MathDouble.c,533 :: 		
0x054E	0xA8E002  	BSET	W1, #7
;__Lib_MathDouble.c,534 :: 		
0x0550	0x050024  	RETLW	#2, W4
;__Lib_MathDouble.c,535 :: 		
Float2Longint_nanorinf:
;__Lib_MathDouble.c,536 :: 		
0x0552	0x700F81  	IOR	W0, W1, [W15]
;__Lib_MathDouble.c,537 :: 		
0x0554	0x320001  	BRA Z	Float2Longint_infinite
;__Lib_MathDouble.c,538 :: 		
0x0556	0x050804  	RETLW	#128, W4
;__Lib_MathDouble.c,539 :: 		
Float2Longint_infinite:
;__Lib_MathDouble.c,540 :: 		
0x0558	0x050044  	RETLW	#4, W4
;__Lib_MathDouble.c,541 :: 		
Float2Longint_zeroorsub:
;__Lib_MathDouble.c,542 :: 		
0x055A	0x700F81  	IOR	W0, W1, [W15]
;__Lib_MathDouble.c,543 :: 		
0x055C	0x3A0002  	BRA NZ	Float2Longint_subnormal
;__Lib_MathDouble.c,544 :: 		
0x055E	0x050014  	RETLW	#1, W4
;__Lib_MathDouble.c,545 :: 		
Float2Longint_normalize:
;__Lib_MathDouble.c,546 :: 		
0x0560	0xE90285  	DEC	W5, W5
;__Lib_MathDouble.c,547 :: 		
Float2Longint_subnormal:
;__Lib_MathDouble.c,548 :: 		
0x0562	0x400000  	ADD	W0, W0, W0
;__Lib_MathDouble.c,549 :: 		
0x0564	0x48C081  	ADDC.B	W1, W1, W1
;__Lib_MathDouble.c,550 :: 		
0x0566	0x3BFFFC  	BRA NN	Float2Longint_normalize
;__Lib_MathDouble.c,551 :: 		
0x0568	0xA8E002  	BSET	W1, #7
;__Lib_MathDouble.c,552 :: 		
0x056A	0x050024  	RETLW	#2, W4
;__Lib_MathDouble.c,555 :: 		
the_end__Float2Longint:
;__Lib_MathDouble.c,557 :: 		
L_end__Float2Longint:
0x056C	0xFA8000  	ULNK
0x056E	0x060000  	RETURN
; end of __Float2Longint
__Compare_Ge_Fp:
0x0570	0xFA0000  	LNK	#0
;__Lib_MathDouble.c,1354 :: 		
;__Lib_MathDouble.c,1355 :: 		
0x0572	0x2FFFF4  	MOV	#65535, W4
;__Lib_MathDouble.c,1356 :: 		
0x0574	0x07FE45  	RCALL	__Compare_Fp
;__Lib_MathDouble.c,1357 :: 		
L_end__Compare_Ge_Fp:
0x0576	0xFA8000  	ULNK
0x0578	0x060000  	RETURN
; end of __Compare_Ge_Fp
__irgrid2_Driver__ldexp:
0x072E	0xFA0004  	LNK	#4
;__irgrid2_Driver.c,94 :: 		static double _ldexp(double value, int newexp)
;__irgrid2_Driver.c,98 :: 		uv.fl = value;
0x0730	0x98070A  	MOV	W10, [W14+0]
0x0732	0x98071B  	MOV	W11, [W14+2]
;__irgrid2_Driver.c,99 :: 		newexp += uv.flt.exp;
0x0734	0x90009E  	MOV	[W14+2], W1
0x0736	0x27F800  	MOV	#32640, W0
0x0738	0x608000  	AND	W1, W0, W0
0x073A	0xDE0047  	LSR	W0, #7, W0
0x073C	0x460000  	ADD	W12, W0, W0
0x073E	0x780600  	MOV	W0, W12
;__irgrid2_Driver.c,100 :: 		if (newexp < 0)
0x0740	0xE10060  	CP	W0, #0
0x0742	0x3D0003  	BRA GE	L___irgrid2_Driver__ldexp8
L___irgrid2_Driver__ldexp258:
;__irgrid2_Driver.c,102 :: 		return 0.0;
0x0744	0xEF2000  	CLR	W0
0x0746	0xEF2002  	CLR	W1
0x0748	0x37001F  	BRA	L_end__ldexp
;__irgrid2_Driver.c,103 :: 		}
L___irgrid2_Driver__ldexp8:
;__irgrid2_Driver.c,106 :: 		if (newexp > MAX_EXPONENT)
0x074A	0x200FF0  	MOV	#255, W0
0x074C	0xE16000  	CP	W12, W0
0x074E	0x340010  	BRA LE	L___irgrid2_Driver__ldexp10
L___irgrid2_Driver__ldexp259:
;__irgrid2_Driver.c,108 :: 		if (value < 0.0)
0x0750	0xEF2004  	CLR	W2
0x0752	0xEF2006  	CLR	W3
0x0754	0xBE000A  	MOV.D	W10, W0
0x0756	0x0700AA  	RCALL	__Compare_Le_Fp
0x0758	0xE00000  	CP0	W0
0x075A	0xEF6000  	CLR.B	W0
0x075C	0x3D0001  	BRA GE	L___irgrid2_Driver__ldexp260
0x075E	0xEC6000  	INC.B	W0
L___irgrid2_Driver__ldexp260:
0x0760	0xE24000  	CP0.B	W0
0x0762	0x320003  	BRA Z	L___irgrid2_Driver__ldexp11
L___irgrid2_Driver__ldexp261:
;__irgrid2_Driver.c,110 :: 		return -DBL_MAX;
0x0764	0x2FFFF0  	MOV	#65535, W0
0x0766	0x2FF7F1  	MOV	#65407, W1
0x0768	0x37000F  	BRA	L_end__ldexp
;__irgrid2_Driver.c,111 :: 		}
L___irgrid2_Driver__ldexp11:
;__irgrid2_Driver.c,114 :: 		return DBL_MAX;
0x076A	0x2FFFF0  	MOV	#65535, W0
0x076C	0x27F7F1  	MOV	#32639, W1
0x076E	0x37000C  	BRA	L_end__ldexp
;__irgrid2_Driver.c,116 :: 		}
L___irgrid2_Driver__ldexp10:
;__irgrid2_Driver.c,119 :: 		uv.flt.exp = newexp;
0x0770	0xB3C070  	MOV.B	#7, W0
0x0772	0xFB0000  	SE	W0, W0
0x0774	0xDD6080  	SL	W12, W0, W1
0x0776	0x470062  	ADD	W14, #2, W0
0x0778	0x688090  	XOR	W1, [W0], W1
0x077A	0x27F800  	MOV	#32640, W0
0x077C	0x608080  	AND	W1, W0, W1
0x077E	0x470062  	ADD	W14, #2, W0
0x0780	0x688090  	XOR	W1, [W0], W1
0x0782	0x980711  	MOV	W1, [W14+2]
;__irgrid2_Driver.c,122 :: 		return uv.fl;
0x0784	0x90000E  	MOV	[W14+0], W0
0x0786	0x90009E  	MOV	[W14+2], W1
;__irgrid2_Driver.c,123 :: 		}
L_end__ldexp:
0x0788	0xFA8000  	ULNK
0x078A	0x060000  	RETURN
; end of __irgrid2_Driver__ldexp
__Div_FP:
0x05B0	0xFA0000  	LNK	#0
;__Lib_MathDouble.c,1050 :: 		
;__Lib_MathDouble.c,1052 :: 		
0x05B2	0x070002  	RCALL	DivFP___divsf3
;__Lib_MathDouble.c,1053 :: 		
0x05B4	0x0000000406E2  	GOTO	the_end__Div_FP
;__Lib_MathDouble.c,1056 :: 		
DivFP___divsf3:
;__Lib_MathDouble.c,1057 :: 		
0x05B8	0xBE9F88  	MOV.D	W8, [W15++]
;__Lib_MathDouble.c,1058 :: 		
0x05BA	0xBE9F8A  	MOV.D	W10, [W15++]
;__Lib_MathDouble.c,1059 :: 		
0x05BC	0x781F8C  	MOV	W12, [W15++]
;__Lib_MathDouble.c,1060 :: 		
0x05BE	0x07003E  	RCALL	DivFP__funpack2
;__Lib_MathDouble.c,1061 :: 		
0x05C0	0x330045  	BRA N	DivFP__fPropagateNaN
;__Lib_MathDouble.c,1062 :: 		
0x05C2	0x6C8603  	XOR	W9, W3, W12
;__Lib_MathDouble.c,1063 :: 		
0x05C4	0xE15064  	CP	W10, #4
;__Lib_MathDouble.c,1064 :: 		
0x05C6	0x32002E  	BRA Z	DivFP_aisinfinite
;__Lib_MathDouble.c,1065 :: 		
0x05C8	0xE12064  	CP	W4, #4
;__Lib_MathDouble.c,1066 :: 		
0x05CA	0x320033  	BRA Z	DivFP_returnZero
;__Lib_MathDouble.c,1067 :: 		
0x05CC	0xE15061  	CP	W10, #1
;__Lib_MathDouble.c,1068 :: 		
0x05CE	0x32002F  	BRA Z	DivFP_aiszero
;__Lib_MathDouble.c,1069 :: 		
0x05D0	0xE12061  	CP	W4, #1
;__Lib_MathDouble.c,1070 :: 		
0x05D2	0x320031  	BRA Z	DivFP_returnInf
;__Lib_MathDouble.c,1071 :: 		
DivFP_finitenonzero:
;__Lib_MathDouble.c,1072 :: 		
0x05D4	0x558585  	SUB	W11, W5, W11
;__Lib_MathDouble.c,1073 :: 		
0x05D6	0xB007EB  	ADD	#126, W11
;__Lib_MathDouble.c,1074 :: 		
0x05D8	0x200009  	MOV	#0, W9
;__Lib_MathDouble.c,1075 :: 		
0x05DA	0x200408  	MOV	#64, W8
;__Lib_MathDouble.c,1076 :: 		
0x05DC	0x370005  	BRA	DivFP_diventry
;__Lib_MathDouble.c,1077 :: 		
DivFP_divnext:
;__Lib_MathDouble.c,1078 :: 		
0x05DE	0x440408  	ADD	W8, W8, W8
;__Lib_MathDouble.c,1079 :: 		
0x05E0	0x4C8489  	ADDC	W9, W9, W9
;__Lib_MathDouble.c,1080 :: 		
0x05E2	0x31000A  	BRA C	DivFP_divdone
;__Lib_MathDouble.c,1081 :: 		
DivFP_divloop:
;__Lib_MathDouble.c,1082 :: 		
0x05E4	0x430306  	ADD	W6, W6, W6
;__Lib_MathDouble.c,1083 :: 		
0x05E6	0x4B8387  	ADDC	W7, W7, W7
;__Lib_MathDouble.c,1084 :: 		
DivFP_diventry:
;__Lib_MathDouble.c,1085 :: 		
0x05E8	0x530100  	SUB	W6, W0, W2
;__Lib_MathDouble.c,1086 :: 		
0x05EA	0x5B8181  	SUBB	W7, W1, W3
;__Lib_MathDouble.c,1087 :: 		
0x05EC	0x33FFF8  	BRA N	DivFP_divnext
;__Lib_MathDouble.c,1088 :: 		
0x05EE	0xBE8302  	MOV.D	W2, W6
;__Lib_MathDouble.c,1089 :: 		
0x05F0	0xA80010  	BSET	W8, #0
;__Lib_MathDouble.c,1090 :: 		
0x05F2	0x440408  	ADD	W8, W8, W8
;__Lib_MathDouble.c,1091 :: 		
0x05F4	0x4C8489  	ADDC	W9, W9, W9
;__Lib_MathDouble.c,1092 :: 		
0x05F6	0x39FFF6  	BRA NC	DivFP_divloop
;__Lib_MathDouble.c,1093 :: 		
DivFP_divdone:
;__Lib_MathDouble.c,1094 :: 		
0x05F8	0xDD39C6  	SL	W7, #6, W3
;__Lib_MathDouble.c,1095 :: 		
0x05FA	0x730183  	IOR	W6, W3, W3
;__Lib_MathDouble.c,1096 :: 		
0x05FC	0x320001  	BRA Z	DivFP_stickyok
;__Lib_MathDouble.c,1097 :: 		
0x05FE	0x200013  	MOV	#1, W3
;__Lib_MathDouble.c,1098 :: 		
DivFP_stickyok:
;__Lib_MathDouble.c,1099 :: 		
0x0600	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.c,1100 :: 		
0x0602	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.c,1101 :: 		
0x0604	0xA39809  	BTST.Z	W9, #9
;__Lib_MathDouble.c,1102 :: 		
0x0606	0x320005  	BRA Z	DivFP_guardused
;__Lib_MathDouble.c,1103 :: 		
0x0608	0xA70008  	BTSC	W8, #0
;__Lib_MathDouble.c,1104 :: 		
0x060A	0xA80006  	BSET	W3, #0
;__Lib_MathDouble.c,1105 :: 		
0x060C	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.c,1106 :: 		
0x060E	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.c,1107 :: 		
0x0610	0xE8058B  	INC	W11, W11
;__Lib_MathDouble.c,1108 :: 		
DivFP_guardused:
;__Lib_MathDouble.c,1109 :: 		
0x0612	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.c,1110 :: 		
0x0614	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.c,1111 :: 		
0x0616	0xEB0100  	CLR	W2
;__Lib_MathDouble.c,1112 :: 		
0x0618	0xD28102  	RLC	W2, W2
;__Lib_MathDouble.c,1113 :: 		
0x061A	0x070028  	RCALL	DivFP__fpack
;__Lib_MathDouble.c,1114 :: 		
DivFP_return0_1:
;__Lib_MathDouble.c,1115 :: 		
0x061C	0xA1F001  	BCLR	W1, #15
;__Lib_MathDouble.c,1116 :: 		
0x061E	0xA7F00C  	BTSC	W12, #15
;__Lib_MathDouble.c,1117 :: 		
0x0620	0xA8E003  	BSET	W1, #15
;__Lib_MathDouble.c,1118 :: 		
0x0622	0x37001D  	BRA	DivFP__fbopExit
;__Lib_MathDouble.c,1119 :: 		
DivFP_aisinfinite:
;__Lib_MathDouble.c,1120 :: 		
0x0624	0xE12064  	CP	W4, #4
;__Lib_MathDouble.c,1121 :: 		
0x0626	0x32001F  	BRA Z	DivFP__fbopReturnNaN
;__Lib_MathDouble.c,1122 :: 		
DivFP_return8_1:
;__Lib_MathDouble.c,1123 :: 		
0x0628	0xBE8108  	MOV.D	W8, W2
;__Lib_MathDouble.c,1124 :: 		
DivFP_return2_1:
;__Lib_MathDouble.c,1125 :: 		
0x062A	0xBE8002  	MOV.D	W2, W0
;__Lib_MathDouble.c,1126 :: 		
0x062C	0x37FFF7  	BRA	DivFP_return0_1
;__Lib_MathDouble.c,1127 :: 		
DivFP_aiszero:
;__Lib_MathDouble.c,1128 :: 		
0x062E	0xE12061  	CP	W4, #1
;__Lib_MathDouble.c,1129 :: 		
0x0630	0x32001A  	BRA Z	DivFP__fbopReturnNaN
;__Lib_MathDouble.c,1130 :: 		
DivFP_returnZero:
;__Lib_MathDouble.c,1131 :: 		
0x0632	0xB80060  	MUL.UU	W0, #0, W0
;__Lib_MathDouble.c,1132 :: 		
0x0634	0x37FFF3  	BRA	DivFP_return0_1
;__Lib_MathDouble.c,1133 :: 		
DivFP_returnInf:
;__Lib_MathDouble.c,1134 :: 		
0x0636	0x200000  	MOV	#0, W0
;__Lib_MathDouble.c,1135 :: 		
0x0638	0x27F801  	MOV	#32640, W1
;__Lib_MathDouble.c,1136 :: 		
0x063A	0x37FFF0  	BRA	DivFP_return0_1
;__Lib_MathDouble.c,1137 :: 		
DivFP__funpack2:
;__Lib_MathDouble.c,1138 :: 		
0x063C	0xBE8400  	MOV.D	W0, W8
;__Lib_MathDouble.c,1139 :: 		
0x063E	0x07003C  	RCALL	DivFP__funpack
;__Lib_MathDouble.c,1140 :: 		
0x0640	0xBE8300  	MOV.D	W0, W6
;__Lib_MathDouble.c,1141 :: 		
0x0642	0xBE8504  	MOV.D	W4, W10
;__Lib_MathDouble.c,1142 :: 		
0x0644	0xBE8002  	MOV.D	W2, W0
;__Lib_MathDouble.c,1143 :: 		
0x0646	0x070038  	RCALL	DivFP__funpack
;__Lib_MathDouble.c,1144 :: 		
0x0648	0x754F84  	IOR.B	W10, W4, [W15]
;__Lib_MathDouble.c,1145 :: 		
0x064A	0x060000  	RETURN
;__Lib_MathDouble.c,1146 :: 		
DivFP__fPropagateNaN:
;__Lib_MathDouble.c,1147 :: 		
0x064C	0xBE8002  	MOV.D	W2, W0
;__Lib_MathDouble.c,1148 :: 		
0x064E	0xE15064  	CP	W10, #4
;__Lib_MathDouble.c,1149 :: 		
0x0650	0x360005  	BRA LEU	DivFP_return0
;__Lib_MathDouble.c,1150 :: 		
0x0652	0xE12064  	CP	W4, #4
;__Lib_MathDouble.c,1151 :: 		
0x0654	0x360002  	BRA LEU	DivFP_return8
;__Lib_MathDouble.c,1152 :: 		
0x0656	0xA36809  	BTST.Z	W9, #6
;__Lib_MathDouble.c,1153 :: 		
0x0658	0x3A0001  	BRA NZ	DivFP_return0
;__Lib_MathDouble.c,1154 :: 		
DivFP_return8:
;__Lib_MathDouble.c,1155 :: 		
0x065A	0xBE8008  	MOV.D	W8, W0
;__Lib_MathDouble.c,1156 :: 		
DivFP_return0:
;__Lib_MathDouble.c,1157 :: 		
0x065C	0xA8C002  	BSET	W1, #6
;__Lib_MathDouble.c,1158 :: 		
DivFP__fbopExit:
;__Lib_MathDouble.c,1159 :: 		
0x065E	0x78064F  	MOV	[--W15], W12
;__Lib_MathDouble.c,1160 :: 		
0x0660	0xBE054F  	MOV.D	[--W15], W10
;__Lib_MathDouble.c,1161 :: 		
0x0662	0xBE044F  	MOV.D	[--W15], W8
;__Lib_MathDouble.c,1162 :: 		
0x0664	0x060000  	RETURN
;__Lib_MathDouble.c,1163 :: 		
DivFP__fbopReturnNaN:
;__Lib_MathDouble.c,1164 :: 		
0x0666	0x2FFFF0  	MOV	#65535, W0
;__Lib_MathDouble.c,1165 :: 		
0x0668	0x27FFF1  	MOV	#32767, W1
;__Lib_MathDouble.c,1166 :: 		
0x066A	0x37FFF9  	BRA	DivFP__fbopExit
;__Lib_MathDouble.c,1167 :: 		
DivFP__fpack:
;__Lib_MathDouble.c,1168 :: 		
0x066C	0x200081  	MOV	#8, W1
;__Lib_MathDouble.c,1169 :: 		
0x066E	0x558061  	SUB	W11, #1, W0
;__Lib_MathDouble.c,1170 :: 		
0x0670	0x3D000B  	BRA GE	DivFP_notsubnormal
;__Lib_MathDouble.c,1171 :: 		
0x0672	0x20000B  	MOV	#0, W11
;__Lib_MathDouble.c,1172 :: 		
0x0674	0x2FFE61  	MOV	#65510, W1
;__Lib_MathDouble.c,1173 :: 		
0x0676	0xE10001  	CP	W0, W1
;__Lib_MathDouble.c,1174 :: 		
0x0678	0x34001D  	BRA LE	DivFP_zerosig
;__Lib_MathDouble.c,1175 :: 		
DivFP_subnormal:
;__Lib_MathDouble.c,1176 :: 		
0x067A	0x718182  	IOR	W3, W2, W3
;__Lib_MathDouble.c,1177 :: 		
0x067C	0x640161  	AND	W8, #1, W2
;__Lib_MathDouble.c,1178 :: 		
0x067E	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.c,1179 :: 		
0x0680	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.c,1180 :: 		
0x0682	0xE80000  	INC	W0, W0
;__Lib_MathDouble.c,1181 :: 		
0x0684	0x3AFFFA  	BRA NZ	DivFP_subnormal
;__Lib_MathDouble.c,1182 :: 		
0x0686	0x200071  	MOV	#7, W1
;__Lib_MathDouble.c,1183 :: 		
DivFP_notsubnormal:
;__Lib_MathDouble.c,1184 :: 		
0x0688	0x640061  	AND	W8, #1, W0
;__Lib_MathDouble.c,1185 :: 		
0x068A	0x700003  	IOR	W0, W3, W0
;__Lib_MathDouble.c,1186 :: 		
0x068C	0x600002  	AND	W0, W2, W0
;__Lib_MathDouble.c,1187 :: 		
0x068E	0x320009  	BRA Z	DivFP_packupandgo
;__Lib_MathDouble.c,1188 :: 		
0x0690	0x440461  	ADD	W8, #1, W8
;__Lib_MathDouble.c,1189 :: 		
0x0692	0x4C84E0  	ADDC	W9, #0, W9
;__Lib_MathDouble.c,1190 :: 		
0x0694	0xA58809  	BTST.Z	W9, W1
;__Lib_MathDouble.c,1191 :: 		
0x0696	0x320005  	BRA Z	DivFP_packupandgo
;__Lib_MathDouble.c,1192 :: 		
0x0698	0xE8058B  	INC	W11, W11
;__Lib_MathDouble.c,1193 :: 		
0x069A	0xE10868  	CP	W1, #8
;__Lib_MathDouble.c,1194 :: 		
0x069C	0x3A0002  	BRA NZ	DivFP_packupandgo
;__Lib_MathDouble.c,1195 :: 		
0x069E	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.c,1196 :: 		
0x06A0	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.c,1197 :: 		
DivFP_packupandgo:
;__Lib_MathDouble.c,1198 :: 		
0x06A2	0x200FF2  	MOV	#255, W2
;__Lib_MathDouble.c,1199 :: 		
0x06A4	0xE15802  	CP	W11, W2
;__Lib_MathDouble.c,1200 :: 		
0x06A6	0x3D0005  	BRA GE	DivFP_overfloW
;__Lib_MathDouble.c,1201 :: 		
0x06A8	0xDD5DC7  	SL	W11, #7, W11
;__Lib_MathDouble.c,1202 :: 		
0x06AA	0xB207F9  	AND	#127, W9
;__Lib_MathDouble.c,1203 :: 		
0x06AC	0x758089  	IOR	W11, W9, W1
;__Lib_MathDouble.c,1204 :: 		
0x06AE	0x880008  	MOV	W8, W0
;__Lib_MathDouble.c,1205 :: 		
0x06B0	0x060000  	RETURN
;__Lib_MathDouble.c,1206 :: 		
DivFP_overfloW:
;__Lib_MathDouble.c,1207 :: 		
0x06B2	0x27F80B  	MOV	#32640, W11
;__Lib_MathDouble.c,1208 :: 		
DivFP_zerosig:
;__Lib_MathDouble.c,1209 :: 		
0x06B4	0x88001B  	MOV	W11, W1
;__Lib_MathDouble.c,1210 :: 		
0x06B6	0x050000  	RETLW	#0, W0
;__Lib_MathDouble.c,1211 :: 		
DivFP__funpack:
;__Lib_MathDouble.c,1212 :: 		
0x06B8	0xDE0AC7  	LSR	W1, #7, W5
;__Lib_MathDouble.c,1213 :: 		
0x06BA	0xB207F1  	AND	#127, W1
;__Lib_MathDouble.c,1214 :: 		
0x06BC	0xB20FF5  	AND	#255, W5
;__Lib_MathDouble.c,1215 :: 		
0x06BE	0x320008  	BRA Z	DivFP_zeroorsub
;__Lib_MathDouble.c,1216 :: 		
0x06C0	0x42CFE1  	ADD.B	W5, #1, [W15]
;__Lib_MathDouble.c,1217 :: 		
0x06C2	0x320002  	BRA Z	DivFP_nanorinf
;__Lib_MathDouble.c,1218 :: 		
DivFP_finitereturn:
;__Lib_MathDouble.c,1219 :: 		
0x06C4	0xA8E002  	BSET	W1, #7
;__Lib_MathDouble.c,1220 :: 		
0x06C6	0x050024  	RETLW	#2, W4
;__Lib_MathDouble.c,1221 :: 		
DivFP_nanorinf:
;__Lib_MathDouble.c,1222 :: 		
0x06C8	0x700F81  	IOR	W0, W1, [W15]
;__Lib_MathDouble.c,1223 :: 		
0x06CA	0x320001  	BRA Z	DivFP_infinite
;__Lib_MathDouble.c,1224 :: 		
0x06CC	0x050804  	RETLW	#128, W4
;__Lib_MathDouble.c,1225 :: 		
DivFP_infinite:
;__Lib_MathDouble.c,1226 :: 		
0x06CE	0x050044  	RETLW	#4, W4
;__Lib_MathDouble.c,1227 :: 		
DivFP_zeroorsub:
;__Lib_MathDouble.c,1228 :: 		
0x06D0	0x700F81  	IOR	W0, W1, [W15]
;__Lib_MathDouble.c,1229 :: 		
0x06D2	0x3A0002  	BRA NZ	DivFP_subnormal2
;__Lib_MathDouble.c,1230 :: 		
0x06D4	0x050014  	RETLW	#1, W4
;__Lib_MathDouble.c,1231 :: 		
DivFP_normalize:
;__Lib_MathDouble.c,1232 :: 		
0x06D6	0xE90285  	DEC	W5, W5
;__Lib_MathDouble.c,1233 :: 		
DivFP_subnormal2:
;__Lib_MathDouble.c,1234 :: 		
0x06D8	0x400000  	ADD	W0, W0, W0
;__Lib_MathDouble.c,1235 :: 		
0x06DA	0x48C081  	ADDC.B	W1, W1, W1
;__Lib_MathDouble.c,1236 :: 		
0x06DC	0x3BFFFC  	BRA NN	DivFP_normalize
;__Lib_MathDouble.c,1237 :: 		
0x06DE	0xA8E002  	BSET	W1, #7
;__Lib_MathDouble.c,1238 :: 		
0x06E0	0x050024  	RETLW	#2, W4
;__Lib_MathDouble.c,1241 :: 		
the_end__Div_FP:
;__Lib_MathDouble.c,1243 :: 		
L_end__Div_FP:
0x06E2	0xFA8000  	ULNK
0x06E4	0x060000  	RETURN
; end of __Div_FP
__irgrid2_Driver_ExtractGainParameters:
;__irgrid2_Driver.c,327 :: 		static void ExtractGainParameters(uint16_t *eeData, paramsMLX90640 *mlx90640)
;__irgrid2_Driver.c,331 :: 		gainEE = eeData[48];
0x14A8	0x200600  	MOV	#96, W0
0x14AA	0x450000  	ADD	W10, W0, W0
0x14AC	0x780090  	MOV	[W0], W1
; gainEE start address is: 4 (W2)
0x14AE	0x780101  	MOV	W1, W2
;__irgrid2_Driver.c,332 :: 		if(gainEE > 32767)
0x14B0	0x27FFF0  	MOV	#32767, W0
0x14B2	0xE10800  	CP	W1, W0
0x14B4	0x340003  	BRA LE	L___irgrid2_Driver_ExtractGainParameters216
L___irgrid2_Driver_ExtractGainParameters306:
;__irgrid2_Driver.c,334 :: 		gainEE = gainEE -65536;
0x14B6	0x200000  	MOV	#0, W0
; gainEE start address is: 2 (W1)
0x14B8	0x510080  	SUB	W2, W0, W1
; gainEE end address is: 4 (W2)
; gainEE end address is: 2 (W1)
;__irgrid2_Driver.c,335 :: 		}
0x14BA	0x370001  	BRA	L___irgrid2_Driver_ExtractGainParameters37
L___irgrid2_Driver_ExtractGainParameters216:
;__irgrid2_Driver.c,332 :: 		if(gainEE > 32767)
0x14BC	0x780082  	MOV	W2, W1
;__irgrid2_Driver.c,335 :: 		}
L___irgrid2_Driver_ExtractGainParameters37:
;__irgrid2_Driver.c,336 :: 		mlx90640->gainEE = gainEE;
; gainEE start address is: 2 (W1)
0x14BE	0x458072  	ADD	W11, #18, W0
0x14C0	0x780801  	MOV	W1, [W0]
; gainEE end address is: 2 (W1)
;__irgrid2_Driver.c,337 :: 		}
L_end_ExtractGainParameters:
0x14C2	0x060000  	RETURN
; end of __irgrid2_Driver_ExtractGainParameters
__irgrid2_Driver_ExtractTgcParameters:
0x1562	0xFA0004  	LNK	#4
;__irgrid2_Driver.c,339 :: 		static void ExtractTgcParameters(uint16_t *eeData, paramsMLX90640 *mlx90640)
;__irgrid2_Driver.c,342 :: 		tgc = eeData[60] & 0x00FF;
0x1564	0x200780  	MOV	#120, W0
0x1566	0x450080  	ADD	W10, W0, W1
0x1568	0x200FF0  	MOV	#255, W0
0x156A	0x600011  	AND	W0, [W1], W0
0x156C	0x781F8B  	PUSH	W11
0x156E	0xEB0080  	CLR	W1
0x1570	0x07F90D  	RCALL	__Long2Float
0x1572	0x980700  	MOV	W0, [W14+0]
0x1574	0x980711  	MOV	W1, [W14+2]
;__irgrid2_Driver.c,343 :: 		if(tgc > 127)
0x1576	0x200002  	MOV	#0, W2
0x1578	0x242FE3  	MOV	#17150, W3
0x157A	0x07F7FA  	RCALL	__Compare_Ge_Fp
0x157C	0xE00000  	CP0	W0
0x157E	0xEF6000  	CLR.B	W0
0x1580	0x340001  	BRA LE	L___irgrid2_Driver_ExtractTgcParameters308
0x1582	0xEC6000  	INC.B	W0
L___irgrid2_Driver_ExtractTgcParameters308:
0x1584	0x7805CF  	POP	W11
0x1586	0xE24000  	CP0.B	W0
0x1588	0x320009  	BRA Z	L___irgrid2_Driver_ExtractTgcParameters38
L___irgrid2_Driver_ExtractTgcParameters309:
;__irgrid2_Driver.c,345 :: 		tgc = tgc - 256;
0x158A	0x90000E  	MOV	[W14+0], W0
0x158C	0x90009E  	MOV	[W14+2], W1
0x158E	0x200002  	MOV	#0, W2
0x1590	0x243803  	MOV	#17280, W3
0x1592	0x781F8B  	PUSH	W11
0x1594	0x07F990  	RCALL	__Sub_FP
0x1596	0x7805CF  	POP	W11
0x1598	0x980700  	MOV	W0, [W14+0]
0x159A	0x980711  	MOV	W1, [W14+2]
;__irgrid2_Driver.c,346 :: 		}
L___irgrid2_Driver_ExtractTgcParameters38:
;__irgrid2_Driver.c,347 :: 		tgc = tgc / 32.0f;
0x159C	0x781F8B  	PUSH	W11
0x159E	0x200002  	MOV	#0, W2
0x15A0	0x242003  	MOV	#16896, W3
0x15A2	0x90000E  	MOV	[W14+0], W0
0x15A4	0x90009E  	MOV	[W14+2], W1
0x15A6	0x07F804  	RCALL	__Div_FP
0x15A8	0x7805CF  	POP	W11
;__irgrid2_Driver.c,349 :: 		mlx90640->tgc = tgc;
0x15AA	0x458174  	ADD	W11, #20, W2
0x15AC	0xBE8900  	MOV.D	W0, [W2]
;__irgrid2_Driver.c,350 :: 		}
L_end_ExtractTgcParameters:
0x15AE	0xFA8000  	ULNK
0x15B0	0x060000  	RETURN
; end of __irgrid2_Driver_ExtractTgcParameters
__irgrid2_Driver_ExtractResolutionParameters:
;__irgrid2_Driver.c,352 :: 		static void ExtractResolutionParameters(uint16_t *eeData, paramsMLX90640 *mlx90640)
;__irgrid2_Driver.c,355 :: 		resolutionEE = (eeData[56] & 0x3000) >> 12;
0x154E	0x200700  	MOV	#112, W0
0x1550	0x450000  	ADD	W10, W0, W0
0x1552	0x780090  	MOV	[W0], W1
0x1554	0x230000  	MOV	#12288, W0
0x1556	0x608000  	AND	W1, W0, W0
0x1558	0xDE00CC  	LSR	W0, #12, W1
;__irgrid2_Driver.c,357 :: 		mlx90640->resolutionEE = resolutionEE;
0x155A	0x200200  	MOV	#32, W0
0x155C	0x458000  	ADD	W11, W0, W0
0x155E	0x784801  	MOV.B	W1, [W0]
;__irgrid2_Driver.c,358 :: 		}
L_end_ExtractResolutionParameters:
0x1560	0x060000  	RETURN
; end of __irgrid2_Driver_ExtractResolutionParameters
__irgrid2_Driver_ExtractKsTaParameters:
;__irgrid2_Driver.c,360 :: 		static void ExtractKsTaParameters(uint16_t *eeData, paramsMLX90640 *mlx90640)
;__irgrid2_Driver.c,363 :: 		KsTa = (eeData[60] & 0xFF00) >> 8;
0x10C2	0x200780  	MOV	#120, W0
0x10C4	0x450000  	ADD	W10, W0, W0
0x10C6	0x780090  	MOV	[W0], W1
0x10C8	0x2FF000  	MOV	#65280, W0
0x10CA	0x608000  	AND	W1, W0, W0
0x10CC	0xDE0048  	LSR	W0, #8, W0
0x10CE	0x781F8B  	PUSH	W11
0x10D0	0xEB0080  	CLR	W1
0x10D2	0x07FB5C  	RCALL	__Long2Float
0x10D4	0x7805CF  	POP	W11
; KsTa start address is: 8 (W4)
0x10D6	0xBE0200  	MOV.D	W0, W4
;__irgrid2_Driver.c,364 :: 		if(KsTa > 127)
0x10D8	0xBE9F84  	PUSH.D	W4
0x10DA	0x781F8B  	PUSH	W11
0x10DC	0x200002  	MOV	#0, W2
0x10DE	0x242FE3  	MOV	#17150, W3
0x10E0	0x07FA47  	RCALL	__Compare_Ge_Fp
0x10E2	0xE00000  	CP0	W0
0x10E4	0xEF6000  	CLR.B	W0
0x10E6	0x340001  	BRA LE	L___irgrid2_Driver_ExtractKsTaParameters312
0x10E8	0xEC6000  	INC.B	W0
L___irgrid2_Driver_ExtractKsTaParameters312:
0x10EA	0x7805CF  	POP	W11
0x10EC	0xBE024F  	POP.D	W4
0x10EE	0xE24000  	CP0.B	W0
0x10F0	0x320008  	BRA Z	L___irgrid2_Driver_ExtractKsTaParameters217
L___irgrid2_Driver_ExtractKsTaParameters313:
;__irgrid2_Driver.c,366 :: 		KsTa = KsTa -256;
0x10F2	0x200002  	MOV	#0, W2
0x10F4	0x243803  	MOV	#17280, W3
0x10F6	0x781F8B  	PUSH	W11
; KsTa end address is: 8 (W4)
0x10F8	0xBE0004  	MOV.D	W4, W0
0x10FA	0x07FBDD  	RCALL	__Sub_FP
0x10FC	0x7805CF  	POP	W11
; KsTa start address is: 4 (W2)
0x10FE	0xBE0100  	MOV.D	W0, W2
; KsTa end address is: 4 (W2)
;__irgrid2_Driver.c,367 :: 		}
0x1100	0x370001  	BRA	L___irgrid2_Driver_ExtractKsTaParameters39
L___irgrid2_Driver_ExtractKsTaParameters217:
;__irgrid2_Driver.c,364 :: 		if(KsTa > 127)
0x1102	0xBE0104  	MOV.D	W4, W2
;__irgrid2_Driver.c,367 :: 		}
L___irgrid2_Driver_ExtractKsTaParameters39:
;__irgrid2_Driver.c,368 :: 		KsTa = KsTa / 8192.0f;
; KsTa start address is: 4 (W2)
0x1104	0x781F8B  	PUSH	W11
; KsTa end address is: 4 (W2)
0x1106	0xBE0002  	MOV.D	W2, W0
0x1108	0x200002  	MOV	#0, W2
0x110A	0x246003  	MOV	#17920, W3
0x110C	0x07FA51  	RCALL	__Div_FP
0x110E	0x7805CF  	POP	W11
;__irgrid2_Driver.c,370 :: 		mlx90640->KsTa = KsTa;
0x1110	0x200222  	MOV	#34, W2
0x1112	0x458102  	ADD	W11, W2, W2
0x1114	0xBE8900  	MOV.D	W0, [W2]
;__irgrid2_Driver.c,371 :: 		}
L_end_ExtractKsTaParameters:
0x1116	0x060000  	RETURN
; end of __irgrid2_Driver_ExtractKsTaParameters
__irgrid2_Driver_ExtractKsToParameters:
0x0F50	0xFA0014  	LNK	#20
;__irgrid2_Driver.c,373 :: 		static void ExtractKsToParameters(uint16_t *eeData, paramsMLX90640 *mlx90640)
;__irgrid2_Driver.c,379 :: 		step = ((eeData[63] & 0x3000) >> 12) * 10;
0x0F52	0x2007E0  	MOV	#126, W0
0x0F54	0x450000  	ADD	W10, W0, W0
0x0F56	0x780090  	MOV	[W0], W1
0x0F58	0x230000  	MOV	#12288, W0
0x0F5A	0x608000  	AND	W1, W0, W0
0x0F5C	0xDE00CC  	LSR	W0, #12, W1
0x0F5E	0x2000A0  	MOV	#10, W0
0x0F60	0xB80800  	MUL.UU	W1, W0, W0
; step start address is: 8 (W4)
0x0F62	0x784200  	MOV.B	W0, W4
;__irgrid2_Driver.c,381 :: 		mlx90640->ct[0] = -40;
0x0F64	0x200360  	MOV	#54, W0
0x0F66	0x458080  	ADD	W11, W0, W1
0x0F68	0x2FFD80  	MOV	#65496, W0
0x0F6A	0x780880  	MOV	W0, [W1]
;__irgrid2_Driver.c,382 :: 		mlx90640->ct[1] = 0;
0x0F6C	0x200360  	MOV	#54, W0
0x0F6E	0x458000  	ADD	W11, W0, W0
0x0F70	0x4000E2  	ADD	W0, #2, W1
0x0F72	0xEF2000  	CLR	W0
0x0F74	0x780880  	MOV	W0, [W1]
;__irgrid2_Driver.c,383 :: 		mlx90640->ct[2] = (eeData[63] & 0x00F0) >> 4;
0x0F76	0x200360  	MOV	#54, W0
0x0F78	0x458000  	ADD	W11, W0, W0
0x0F7A	0x400164  	ADD	W0, #4, W2
0x0F7C	0x2007E0  	MOV	#126, W0
0x0F7E	0x450080  	ADD	W10, W0, W1
0x0F80	0x200F00  	MOV	#240, W0
0x0F82	0x600011  	AND	W0, [W1], W0
0x0F84	0xDE0044  	LSR	W0, #4, W0
0x0F86	0x780900  	MOV	W0, [W2]
;__irgrid2_Driver.c,384 :: 		mlx90640->ct[3] = (eeData[63] & 0x0F00) >> 8;
0x0F88	0x200360  	MOV	#54, W0
0x0F8A	0x458000  	ADD	W11, W0, W0
0x0F8C	0x400166  	ADD	W0, #6, W2
0x0F8E	0x2007E0  	MOV	#126, W0
0x0F90	0x450000  	ADD	W10, W0, W0
0x0F92	0x780090  	MOV	[W0], W1
0x0F94	0x20F000  	MOV	#3840, W0
0x0F96	0x608000  	AND	W1, W0, W0
0x0F98	0xDE0048  	LSR	W0, #8, W0
0x0F9A	0x780900  	MOV	W0, [W2]
;__irgrid2_Driver.c,386 :: 		mlx90640->ct[2] = mlx90640->ct[2]*step;
0x0F9C	0x200360  	MOV	#54, W0
0x0F9E	0x458000  	ADD	W11, W0, W0
0x0FA0	0x400164  	ADD	W0, #4, W2
0x0FA2	0x4000E4  	ADD	W0, #4, W1
0x0FA4	0xFB0004  	SE	W4, W0
0x0FA6	0xB98011  	MUL.SS	W0, [W1], W0
0x0FA8	0x780900  	MOV	W0, [W2]
;__irgrid2_Driver.c,387 :: 		mlx90640->ct[3] = mlx90640->ct[2] + mlx90640->ct[3]*step;
0x0FAA	0x200360  	MOV	#54, W0
0x0FAC	0x458000  	ADD	W11, W0, W0
0x0FAE	0x4001E6  	ADD	W0, #6, W3
0x0FB0	0x400164  	ADD	W0, #4, W2
0x0FB2	0x4000E6  	ADD	W0, #6, W1
0x0FB4	0xFB0004  	SE	W4, W0
; step end address is: 8 (W4)
0x0FB6	0xB98011  	MUL.SS	W0, [W1], W0
0x0FB8	0x400992  	ADD	W0, [W2], [W3]
;__irgrid2_Driver.c,389 :: 		KsToScale = 15;
0x0FBA	0x2000F0  	MOV	#15, W0
0x0FBC	0x980700  	MOV	W0, [W14+0]
;__irgrid2_Driver.c,390 :: 		KsToScale = 1 << KsToScale;
0x0FBE	0x200010  	MOV	#1, W0
0x0FC0	0x90010E  	MOV	[W14+0], W2
0x0FC2	0xDD0002  	SL	W0, W2, W0
0x0FC4	0x980700  	MOV	W0, [W14+0]
;__irgrid2_Driver.c,392 :: 		mlx90640->ksTo[0] = eeData[61] & 0x00FF;
0x0FC6	0x200260  	MOV	#38, W0
0x0FC8	0x458000  	ADD	W11, W0, W0
0x0FCA	0x980770  	MOV	W0, [W14+14]
0x0FCC	0x2007A0  	MOV	#122, W0
0x0FCE	0x450080  	ADD	W10, W0, W1
0x0FD0	0x200FF0  	MOV	#255, W0
0x0FD2	0x600011  	AND	W0, [W1], W0
0x0FD4	0xBE9F8A  	PUSH.D	W10
0x0FD6	0xEB0080  	CLR	W1
0x0FD8	0x07FBD9  	RCALL	__Long2Float
0x0FDA	0xBE054F  	POP.D	W10
0x0FDC	0x90017E  	MOV	[W14+14], W2
0x0FDE	0xBE8900  	MOV.D	W0, [W2]
;__irgrid2_Driver.c,393 :: 		mlx90640->ksTo[1] = (eeData[61] & 0xFF00) >> 8;
0x0FE0	0x200260  	MOV	#38, W0
0x0FE2	0x458000  	ADD	W11, W0, W0
0x0FE4	0x400064  	ADD	W0, #4, W0
0x0FE6	0x980770  	MOV	W0, [W14+14]
0x0FE8	0x2007A0  	MOV	#122, W0
0x0FEA	0x450000  	ADD	W10, W0, W0
0x0FEC	0x780090  	MOV	[W0], W1
0x0FEE	0x2FF000  	MOV	#65280, W0
0x0FF0	0x608000  	AND	W1, W0, W0
0x0FF2	0xDE0048  	LSR	W0, #8, W0
0x0FF4	0xBE9F8A  	PUSH.D	W10
0x0FF6	0xEB0080  	CLR	W1
0x0FF8	0x07FBC9  	RCALL	__Long2Float
0x0FFA	0xBE054F  	POP.D	W10
0x0FFC	0x90017E  	MOV	[W14+14], W2
0x0FFE	0xBE8900  	MOV.D	W0, [W2]
;__irgrid2_Driver.c,394 :: 		mlx90640->ksTo[2] = eeData[62] & 0x00FF;
0x1000	0x200260  	MOV	#38, W0
0x1002	0x458000  	ADD	W11, W0, W0
0x1004	0x400068  	ADD	W0, #8, W0
0x1006	0x980770  	MOV	W0, [W14+14]
0x1008	0x2007C0  	MOV	#124, W0
0x100A	0x450080  	ADD	W10, W0, W1
0x100C	0x200FF0  	MOV	#255, W0
0x100E	0x600011  	AND	W0, [W1], W0
0x1010	0xBE9F8A  	PUSH.D	W10
0x1012	0xEB0080  	CLR	W1
0x1014	0x07FBBB  	RCALL	__Long2Float
0x1016	0xBE054F  	POP.D	W10
0x1018	0x90017E  	MOV	[W14+14], W2
0x101A	0xBE8900  	MOV.D	W0, [W2]
;__irgrid2_Driver.c,395 :: 		mlx90640->ksTo[3] = (eeData[62] & 0xFF00) >> 8;
0x101C	0x200260  	MOV	#38, W0
0x101E	0x458000  	ADD	W11, W0, W0
0x1020	0x40006C  	ADD	W0, #12, W0
0x1022	0x980770  	MOV	W0, [W14+14]
0x1024	0x2007C0  	MOV	#124, W0
0x1026	0x450000  	ADD	W10, W0, W0
0x1028	0x780090  	MOV	[W0], W1
0x102A	0x2FF000  	MOV	#65280, W0
0x102C	0x608000  	AND	W1, W0, W0
0x102E	0xDE0048  	LSR	W0, #8, W0
0x1030	0x781F8B  	PUSH	W11
0x1032	0xEB0080  	CLR	W1
0x1034	0x07FBAB  	RCALL	__Long2Float
0x1036	0x7805CF  	POP	W11
0x1038	0x90017E  	MOV	[W14+14], W2
0x103A	0xBE8900  	MOV.D	W0, [W2]
;__irgrid2_Driver.c,398 :: 		for( i = 0; i < 4; i++)
0x103C	0xEF2000  	CLR	W0
0x103E	0x980710  	MOV	W0, [W14+2]
L___irgrid2_Driver_ExtractKsToParameters40:
0x1040	0x90001E  	MOV	[W14+2], W0
0x1042	0xE10064  	CP	W0, #4
0x1044	0x3D003C  	BRA GE	L___irgrid2_Driver_ExtractKsToParameters41
L___irgrid2_Driver_ExtractKsToParameters315:
;__irgrid2_Driver.c,400 :: 		if(mlx90640->ksTo[i] > 127)
0x1046	0x200260  	MOV	#38, W0
0x1048	0x458080  	ADD	W11, W0, W1
0x104A	0x90001E  	MOV	[W14+2], W0
0x104C	0xDD0042  	SL	W0, #2, W0
0x104E	0x408100  	ADD	W1, W0, W2
0x1050	0xBE0012  	MOV.D	[W2], W0
0x1052	0xBE9F8A  	PUSH.D	W10
0x1054	0x200002  	MOV	#0, W2
0x1056	0x242FE3  	MOV	#17150, W3
0x1058	0x07FA8B  	RCALL	__Compare_Ge_Fp
0x105A	0xE00000  	CP0	W0
0x105C	0xEF6000  	CLR.B	W0
0x105E	0x340001  	BRA LE	L___irgrid2_Driver_ExtractKsToParameters316
0x1060	0xEC6000  	INC.B	W0
L___irgrid2_Driver_ExtractKsToParameters316:
0x1062	0xBE054F  	POP.D	W10
0x1064	0xE24000  	CP0.B	W0
0x1066	0x32000F  	BRA Z	L___irgrid2_Driver_ExtractKsToParameters43
L___irgrid2_Driver_ExtractKsToParameters317:
;__irgrid2_Driver.c,402 :: 		mlx90640->ksTo[i] = mlx90640->ksTo[i] -256;
0x1068	0x200260  	MOV	#38, W0
0x106A	0x458080  	ADD	W11, W0, W1
0x106C	0x90001E  	MOV	[W14+2], W0
0x106E	0xDD0042  	SL	W0, #2, W0
0x1070	0x408000  	ADD	W1, W0, W0
0x1072	0x980770  	MOV	W0, [W14+14]
0x1074	0xBE0210  	MOV.D	[W0], W4
0x1076	0x200002  	MOV	#0, W2
0x1078	0x243803  	MOV	#17280, W3
0x107A	0xBE9F8A  	PUSH.D	W10
0x107C	0xBE0004  	MOV.D	W4, W0
0x107E	0x07FC1B  	RCALL	__Sub_FP
0x1080	0xBE054F  	POP.D	W10
0x1082	0x90017E  	MOV	[W14+14], W2
0x1084	0xBE8900  	MOV.D	W0, [W2]
;__irgrid2_Driver.c,403 :: 		}
L___irgrid2_Driver_ExtractKsToParameters43:
;__irgrid2_Driver.c,404 :: 		mlx90640->ksTo[i] = mlx90640->ksTo[i] / KsToScale;
0x1086	0x200260  	MOV	#38, W0
0x1088	0x458080  	ADD	W11, W0, W1
0x108A	0x90001E  	MOV	[W14+2], W0
0x108C	0xDD0042  	SL	W0, #2, W0
0x108E	0x408100  	ADD	W1, W0, W2
0x1090	0x980F12  	MOV	W2, [W14+18]
0x1092	0xBE0012  	MOV.D	[W2], W0
0x1094	0x980770  	MOV	W0, [W14+14]
0x1096	0x980F01  	MOV	W1, [W14+16]
0x1098	0xBE9F8A  	PUSH.D	W10
0x109A	0x90000E  	MOV	[W14+0], W0
0x109C	0xDE80CF  	ASR	W0, #15, W1
0x109E	0xEB8100  	SETM	W2
0x10A0	0x07FB75  	RCALL	__Long2Float
0x10A2	0x980720  	MOV	W0, [W14+4]
0x10A4	0x980731  	MOV	W1, [W14+6]
0x10A6	0x90007E  	MOV	[W14+14], W0
0x10A8	0x90088E  	MOV	[W14+16], W1
0x10AA	0x90012E  	MOV	[W14+4], W2
0x10AC	0x9001BE  	MOV	[W14+6], W3
0x10AE	0x07FA80  	RCALL	__Div_FP
0x10B0	0xBE054F  	POP.D	W10
0x10B2	0x90091E  	MOV	[W14+18], W2
0x10B4	0xBE8900  	MOV.D	W0, [W2]
;__irgrid2_Driver.c,398 :: 		for( i = 0; i < 4; i++)
0x10B6	0x90009E  	MOV	[W14+2], W1
0x10B8	0x470062  	ADD	W14, #2, W0
0x10BA	0x408861  	ADD	W1, #1, [W0]
;__irgrid2_Driver.c,405 :: 		}
0x10BC	0x37FFC1  	BRA	L___irgrid2_Driver_ExtractKsToParameters40
L___irgrid2_Driver_ExtractKsToParameters41:
;__irgrid2_Driver.c,406 :: 		}
L_end_ExtractKsToParameters:
0x10BE	0xFA8000  	ULNK
0x10C0	0x060000  	RETURN
; end of __irgrid2_Driver_ExtractKsToParameters
__irgrid2_Driver_ExtractAlphaParameters:
0x11A8	0xFA0090  	LNK	#144
;__irgrid2_Driver.c,408 :: 		static void ExtractAlphaParameters(uint16_t *eeData, paramsMLX90640 *mlx90640)
;__irgrid2_Driver.c,412 :: 		int p = 0;
0x11AA	0x781F8C  	PUSH	W12
0x11AC	0x781F8D  	PUSH	W13
;__irgrid2_Driver.c,423 :: 		accRemScale = eeData[32] & 0x000F;
0x11AE	0x200400  	MOV	#64, W0
0x11B0	0x450000  	ADD	W10, W0, W0
0x11B2	0x784090  	MOV.B	[W0], W1
0x11B4	0x200750  	MOV	#117, W0
0x11B6	0x470000  	ADD	W14, W0, W0
0x11B8	0x60C86F  	AND.B	W1, #15, [W0]
;__irgrid2_Driver.c,424 :: 		accColumnScale = (eeData[32] & 0x00F0) >> 4;
0x11BA	0x200400  	MOV	#64, W0
0x11BC	0x450080  	ADD	W10, W0, W1
0x11BE	0x200F00  	MOV	#240, W0
0x11C0	0x600011  	AND	W0, [W1], W0
0x11C2	0xDE0044  	LSR	W0, #4, W0
0x11C4	0x98F740  	MOV.B	W0, [W14+116]
;__irgrid2_Driver.c,425 :: 		accRowScale = (eeData[32] & 0x0F00) >> 8;
0x11C6	0x200400  	MOV	#64, W0
0x11C8	0x450000  	ADD	W10, W0, W0
0x11CA	0x780090  	MOV	[W0], W1
0x11CC	0x20F000  	MOV	#3840, W0
0x11CE	0x608000  	AND	W1, W0, W0
0x11D0	0xDE0048  	LSR	W0, #8, W0
0x11D2	0x98F730  	MOV.B	W0, [W14+115]
;__irgrid2_Driver.c,426 :: 		alphaScale = ((eeData[32] & 0xF000) >> 12) + 30;
0x11D4	0x200400  	MOV	#64, W0
0x11D6	0x450000  	ADD	W10, W0, W0
0x11D8	0x780090  	MOV	[W0], W1
0x11DA	0x2F0000  	MOV	#61440, W0
0x11DC	0x608000  	AND	W1, W0, W0
0x11DE	0xDE00CC  	LSR	W0, #12, W1
0x11E0	0x200720  	MOV	#114, W0
0x11E2	0x470000  	ADD	W14, W0, W0
0x11E4	0x40C87E  	ADD.B	W1, #30, [W0]
;__irgrid2_Driver.c,427 :: 		alphaRef = eeData[33];
0x11E6	0x200420  	MOV	#66, W0
0x11E8	0x450000  	ADD	W10, W0, W0
0x11EA	0x780010  	MOV	[W0], W0
0x11EC	0x983F00  	MOV	W0, [W14+112]
;__irgrid2_Driver.c,429 :: 		for(i = 0; i < 6; i++)
; i start address is: 18 (W9)
0x11EE	0xEF2012  	CLR	W9
; i end address is: 18 (W9)
0x11F0	0x780209  	MOV	W9, W4
L___irgrid2_Driver_ExtractAlphaParameters44:
; i start address is: 8 (W4)
0x11F2	0xE12066  	CP	W4, #6
0x11F4	0x3D0035  	BRA GE	L___irgrid2_Driver_ExtractAlphaParameters45
L___irgrid2_Driver_ExtractAlphaParameters319:
;__irgrid2_Driver.c,431 :: 		p = i * 4;
0x11F6	0xDD2042  	SL	W4, #2, W0
0x11F8	0x983F40  	MOV	W0, [W14+120]
;__irgrid2_Driver.c,432 :: 		accRow[p + 0] = (eeData[34 + i] & 0x000F);
0x11FA	0x4701E0  	ADD	W14, #0, W3
0x11FC	0xDD0041  	SL	W0, #1, W0
0x11FE	0x418080  	ADD	W3, W0, W1
0x1200	0x200220  	MOV	#34, W0
0x1202	0x400004  	ADD	W0, W4, W0
0x1204	0xDD0041  	SL	W0, #1, W0
0x1206	0x450000  	ADD	W10, W0, W0
0x1208	0x780010  	MOV	[W0], W0
0x120A	0x60006F  	AND	W0, #15, W0
0x120C	0x780880  	MOV	W0, [W1]
;__irgrid2_Driver.c,433 :: 		accRow[p + 1] = (eeData[34 + i] & 0x00F0) >> 4;
0x120E	0x90384E  	MOV	[W14+120], W0
0x1210	0xEC2000  	INC	W0
0x1212	0xDD0041  	SL	W0, #1, W0
0x1214	0x418100  	ADD	W3, W0, W2
0x1216	0x200220  	MOV	#34, W0
0x1218	0x400004  	ADD	W0, W4, W0
0x121A	0xDD0041  	SL	W0, #1, W0
0x121C	0x450080  	ADD	W10, W0, W1
0x121E	0x200F00  	MOV	#240, W0
0x1220	0x600011  	AND	W0, [W1], W0
0x1222	0xDE0044  	LSR	W0, #4, W0
0x1224	0x780900  	MOV	W0, [W2]
;__irgrid2_Driver.c,434 :: 		accRow[p + 2] = (eeData[34 + i] & 0x0F00) >> 8;
0x1226	0x90384E  	MOV	[W14+120], W0
0x1228	0xECA000  	INC2	W0
0x122A	0xDD0041  	SL	W0, #1, W0
0x122C	0x418100  	ADD	W3, W0, W2
0x122E	0x200220  	MOV	#34, W0
0x1230	0x400004  	ADD	W0, W4, W0
0x1232	0xDD0041  	SL	W0, #1, W0
0x1234	0x450000  	ADD	W10, W0, W0
0x1236	0x780090  	MOV	[W0], W1
0x1238	0x20F000  	MOV	#3840, W0
0x123A	0x608000  	AND	W1, W0, W0
0x123C	0xDE0048  	LSR	W0, #8, W0
0x123E	0x780900  	MOV	W0, [W2]
;__irgrid2_Driver.c,435 :: 		accRow[p + 3] = (eeData[34 + i] & 0xF000) >> 12;
0x1240	0x90384E  	MOV	[W14+120], W0
0x1242	0x400063  	ADD	W0, #3, W0
0x1244	0xDD0041  	SL	W0, #1, W0
0x1246	0x418100  	ADD	W3, W0, W2
0x1248	0x200220  	MOV	#34, W0
0x124A	0x400004  	ADD	W0, W4, W0
0x124C	0xDD0041  	SL	W0, #1, W0
0x124E	0x450000  	ADD	W10, W0, W0
0x1250	0x780090  	MOV	[W0], W1
0x1252	0x2F0000  	MOV	#61440, W0
0x1254	0x608000  	AND	W1, W0, W0
0x1256	0xDE004C  	LSR	W0, #12, W0
0x1258	0x780900  	MOV	W0, [W2]
;__irgrid2_Driver.c,429 :: 		for(i = 0; i < 6; i++)
; i start address is: 0 (W0)
0x125A	0x420061  	ADD	W4, #1, W0
; i end address is: 8 (W4)
;__irgrid2_Driver.c,436 :: 		}
0x125C	0x780200  	MOV	W0, W4
; i end address is: 0 (W0)
0x125E	0x37FFC9  	BRA	L___irgrid2_Driver_ExtractAlphaParameters44
L___irgrid2_Driver_ExtractAlphaParameters45:
;__irgrid2_Driver.c,438 :: 		for( i = 0; i < 24; i++)
; i start address is: 4 (W2)
0x1260	0xEF2004  	CLR	W2
; i end address is: 4 (W2)
L___irgrid2_Driver_ExtractAlphaParameters47:
; i start address is: 4 (W2)
0x1262	0xE11078  	CP	W2, #24
0x1264	0x3D000F  	BRA GE	L___irgrid2_Driver_ExtractAlphaParameters48
L___irgrid2_Driver_ExtractAlphaParameters320:
;__irgrid2_Driver.c,440 :: 		if (accRow[i] > 7)
0x1266	0x4700E0  	ADD	W14, #0, W1
0x1268	0xDD1041  	SL	W2, #1, W0
0x126A	0x408000  	ADD	W1, W0, W0
0x126C	0x780010  	MOV	[W0], W0
0x126E	0xE10067  	CP	W0, #7
0x1270	0x340006  	BRA LE	L___irgrid2_Driver_ExtractAlphaParameters50
L___irgrid2_Driver_ExtractAlphaParameters321:
;__irgrid2_Driver.c,442 :: 		accRow[i] = accRow[i] - 16;
0x1272	0x4700E0  	ADD	W14, #0, W1
0x1274	0xDD1041  	SL	W2, #1, W0
0x1276	0x408080  	ADD	W1, W0, W1
0x1278	0x780011  	MOV	[W1], W0
0x127A	0x500070  	SUB	W0, #16, W0
0x127C	0x780880  	MOV	W0, [W1]
;__irgrid2_Driver.c,443 :: 		}
L___irgrid2_Driver_ExtractAlphaParameters50:
;__irgrid2_Driver.c,438 :: 		for( i = 0; i < 24; i++)
; i start address is: 0 (W0)
0x127E	0x410061  	ADD	W2, #1, W0
; i end address is: 4 (W2)
;__irgrid2_Driver.c,444 :: 		}
0x1280	0x780100  	MOV	W0, W2
; i end address is: 0 (W0)
0x1282	0x37FFEF  	BRA	L___irgrid2_Driver_ExtractAlphaParameters47
L___irgrid2_Driver_ExtractAlphaParameters48:
;__irgrid2_Driver.c,446 :: 		for( i = 0; i < 8; i++)
; i start address is: 18 (W9)
0x1284	0xEF2012  	CLR	W9
; i end address is: 18 (W9)
0x1286	0x780209  	MOV	W9, W4
L___irgrid2_Driver_ExtractAlphaParameters51:
; i start address is: 8 (W4)
0x1288	0xE12068  	CP	W4, #8
0x128A	0x3D0036  	BRA GE	L___irgrid2_Driver_ExtractAlphaParameters52
L___irgrid2_Driver_ExtractAlphaParameters322:
;__irgrid2_Driver.c,448 :: 		p = i * 4;
0x128C	0xDD2042  	SL	W4, #2, W0
0x128E	0x983F40  	MOV	W0, [W14+120]
;__irgrid2_Driver.c,449 :: 		accColumn[p + 0] = (eeData[40 + i] & 0x000F);
0x1290	0x200303  	MOV	#48, W3
0x1292	0x470183  	ADD	W14, W3, W3
0x1294	0xDD0041  	SL	W0, #1, W0
0x1296	0x418080  	ADD	W3, W0, W1
0x1298	0x200280  	MOV	#40, W0
0x129A	0x400004  	ADD	W0, W4, W0
0x129C	0xDD0041  	SL	W0, #1, W0
0x129E	0x450000  	ADD	W10, W0, W0
0x12A0	0x780010  	MOV	[W0], W0
0x12A2	0x60006F  	AND	W0, #15, W0
0x12A4	0x780880  	MOV	W0, [W1]
;__irgrid2_Driver.c,450 :: 		accColumn[p + 1] = (eeData[40 + i] & 0x00F0) >> 4;
0x12A6	0x90384E  	MOV	[W14+120], W0
0x12A8	0xEC2000  	INC	W0
0x12AA	0xDD0041  	SL	W0, #1, W0
0x12AC	0x418100  	ADD	W3, W0, W2
0x12AE	0x200280  	MOV	#40, W0
0x12B0	0x400004  	ADD	W0, W4, W0
0x12B2	0xDD0041  	SL	W0, #1, W0
0x12B4	0x450080  	ADD	W10, W0, W1
0x12B6	0x200F00  	MOV	#240, W0
0x12B8	0x600011  	AND	W0, [W1], W0
0x12BA	0xDE0044  	LSR	W0, #4, W0
0x12BC	0x780900  	MOV	W0, [W2]
;__irgrid2_Driver.c,451 :: 		accColumn[p + 2] = (eeData[40 + i] & 0x0F00) >> 8;
0x12BE	0x90384E  	MOV	[W14+120], W0
0x12C0	0xECA000  	INC2	W0
0x12C2	0xDD0041  	SL	W0, #1, W0
0x12C4	0x418100  	ADD	W3, W0, W2
0x12C6	0x200280  	MOV	#40, W0
0x12C8	0x400004  	ADD	W0, W4, W0
0x12CA	0xDD0041  	SL	W0, #1, W0
0x12CC	0x450000  	ADD	W10, W0, W0
0x12CE	0x780090  	MOV	[W0], W1
0x12D0	0x20F000  	MOV	#3840, W0
0x12D2	0x608000  	AND	W1, W0, W0
0x12D4	0xDE0048  	LSR	W0, #8, W0
0x12D6	0x780900  	MOV	W0, [W2]
;__irgrid2_Driver.c,452 :: 		accColumn[p + 3] = (eeData[40 + i] & 0xF000) >> 12;
0x12D8	0x90384E  	MOV	[W14+120], W0
0x12DA	0x400063  	ADD	W0, #3, W0
0x12DC	0xDD0041  	SL	W0, #1, W0
0x12DE	0x418100  	ADD	W3, W0, W2
0x12E0	0x200280  	MOV	#40, W0
0x12E2	0x400004  	ADD	W0, W4, W0
0x12E4	0xDD0041  	SL	W0, #1, W0
0x12E6	0x450000  	ADD	W10, W0, W0
0x12E8	0x780090  	MOV	[W0], W1
0x12EA	0x2F0000  	MOV	#61440, W0
0x12EC	0x608000  	AND	W1, W0, W0
0x12EE	0xDE004C  	LSR	W0, #12, W0
0x12F0	0x780900  	MOV	W0, [W2]
;__irgrid2_Driver.c,446 :: 		for( i = 0; i < 8; i++)
; i start address is: 0 (W0)
0x12F2	0x420061  	ADD	W4, #1, W0
; i end address is: 8 (W4)
;__irgrid2_Driver.c,453 :: 		}
0x12F4	0x780200  	MOV	W0, W4
; i end address is: 0 (W0)
0x12F6	0x37FFC8  	BRA	L___irgrid2_Driver_ExtractAlphaParameters51
L___irgrid2_Driver_ExtractAlphaParameters52:
;__irgrid2_Driver.c,455 :: 		for( i = 0; i < 32; i ++)
; i start address is: 24 (W12)
0x12F8	0xEF2018  	CLR	W12
; i end address is: 24 (W12)
0x12FA	0x78010C  	MOV	W12, W2
L___irgrid2_Driver_ExtractAlphaParameters54:
; i start address is: 4 (W2)
0x12FC	0x200200  	MOV	#32, W0
0x12FE	0xE11000  	CP	W2, W0
0x1300	0x3D0011  	BRA GE	L___irgrid2_Driver_ExtractAlphaParameters55
L___irgrid2_Driver_ExtractAlphaParameters323:
;__irgrid2_Driver.c,457 :: 		if (accColumn[i] > 7)
0x1302	0x200301  	MOV	#48, W1
0x1304	0x470081  	ADD	W14, W1, W1
0x1306	0xDD1041  	SL	W2, #1, W0
0x1308	0x408000  	ADD	W1, W0, W0
0x130A	0x780010  	MOV	[W0], W0
0x130C	0xE10067  	CP	W0, #7
0x130E	0x340007  	BRA LE	L___irgrid2_Driver_ExtractAlphaParameters57
L___irgrid2_Driver_ExtractAlphaParameters324:
;__irgrid2_Driver.c,459 :: 		accColumn[i] = accColumn[i] - 16;
0x1310	0x200301  	MOV	#48, W1
0x1312	0x470081  	ADD	W14, W1, W1
0x1314	0xDD1041  	SL	W2, #1, W0
0x1316	0x408080  	ADD	W1, W0, W1
0x1318	0x780011  	MOV	[W1], W0
0x131A	0x500070  	SUB	W0, #16, W0
0x131C	0x780880  	MOV	W0, [W1]
;__irgrid2_Driver.c,460 :: 		}
L___irgrid2_Driver_ExtractAlphaParameters57:
;__irgrid2_Driver.c,455 :: 		for( i = 0; i < 32; i ++)
; i start address is: 0 (W0)
0x131E	0x410061  	ADD	W2, #1, W0
; i end address is: 4 (W2)
;__irgrid2_Driver.c,461 :: 		}
0x1320	0x780100  	MOV	W0, W2
; i end address is: 0 (W0)
0x1322	0x37FFEC  	BRA	L___irgrid2_Driver_ExtractAlphaParameters54
L___irgrid2_Driver_ExtractAlphaParameters55:
;__irgrid2_Driver.c,463 :: 		for( i = 0; i < 24; i++)
; i start address is: 26 (W13)
0x1324	0xEF201A  	CLR	W13
; i end address is: 26 (W13)
L___irgrid2_Driver_ExtractAlphaParameters58:
; i start address is: 26 (W13)
0x1326	0xE16878  	CP	W13, #24
0x1328	0x3D00AD  	BRA GE	L___irgrid2_Driver_ExtractAlphaParameters59
L___irgrid2_Driver_ExtractAlphaParameters325:
;__irgrid2_Driver.c,465 :: 		for( j = 0; j < 32; j ++)
0x132A	0xEF2000  	CLR	W0
0x132C	0x983F30  	MOV	W0, [W14+118]
; i end address is: 26 (W13)
0x132E	0x78030D  	MOV	W13, W6
L___irgrid2_Driver_ExtractAlphaParameters61:
; i start address is: 12 (W6)
0x1330	0x200201  	MOV	#32, W1
0x1332	0x200760  	MOV	#118, W0
0x1334	0x470000  	ADD	W14, W0, W0
0x1336	0xE10810  	CP	W1, [W0]
0x1338	0x3400A3  	BRA LE	L___irgrid2_Driver_ExtractAlphaParameters62
L___irgrid2_Driver_ExtractAlphaParameters326:
;__irgrid2_Driver.c,467 :: 		p = 32 * i +j;
0x133A	0xDD30C5  	SL	W6, #5, W1
0x133C	0x200760  	MOV	#118, W0
0x133E	0x470000  	ADD	W14, W0, W0
0x1340	0x408110  	ADD	W1, [W0], W2
0x1342	0x983F42  	MOV	W2, [W14+120]
;__irgrid2_Driver.c,468 :: 		mlx90640->alpha[p] = (eeData[64 + p] & 0x03F0) >> 4;
0x1344	0x2003E0  	MOV	#62, W0
0x1346	0x458080  	ADD	W11, W0, W1
0x1348	0xDD1042  	SL	W2, #2, W0
0x134A	0x408000  	ADD	W1, W0, W0
0x134C	0x988750  	MOV	W0, [W14+138]
0x134E	0x200400  	MOV	#64, W0
0x1350	0x400002  	ADD	W0, W2, W0
0x1352	0xDD0041  	SL	W0, #1, W0
0x1354	0x450000  	ADD	W10, W0, W0
0x1356	0x780090  	MOV	[W0], W1
0x1358	0x203F00  	MOV	#1008, W0
0x135A	0x608000  	AND	W1, W0, W0
0x135C	0xDE0044  	LSR	W0, #4, W0
0x135E	0x781F86  	PUSH	W6
0x1360	0xBE9F8A  	PUSH.D	W10
0x1362	0xEB0080  	CLR	W1
0x1364	0x07FA13  	RCALL	__Long2Float
0x1366	0xBE054F  	POP.D	W10
0x1368	0x90815E  	MOV	[W14+138], W2
0x136A	0xBE8900  	MOV.D	W0, [W2]
;__irgrid2_Driver.c,469 :: 		if (mlx90640->alpha[p] > 31)
0x136C	0x2003E0  	MOV	#62, W0
0x136E	0x458080  	ADD	W11, W0, W1
0x1370	0x90384E  	MOV	[W14+120], W0
0x1372	0xDD0042  	SL	W0, #2, W0
0x1374	0x408100  	ADD	W1, W0, W2
0x1376	0xBE0012  	MOV.D	[W2], W0
0x1378	0xBE9F8A  	PUSH.D	W10
0x137A	0x200002  	MOV	#0, W2
0x137C	0x241F83  	MOV	#16888, W3
0x137E	0x07F8F8  	RCALL	__Compare_Ge_Fp
0x1380	0xE00000  	CP0	W0
0x1382	0xEF6000  	CLR.B	W0
0x1384	0x340001  	BRA LE	L___irgrid2_Driver_ExtractAlphaParameters327
0x1386	0xEC6000  	INC.B	W0
L___irgrid2_Driver_ExtractAlphaParameters327:
0x1388	0xBE054F  	POP.D	W10
0x138A	0x78034F  	POP	W6
0x138C	0xE24000  	CP0.B	W0
0x138E	0x320011  	BRA Z	L___irgrid2_Driver_ExtractAlphaParameters64
L___irgrid2_Driver_ExtractAlphaParameters328:
;__irgrid2_Driver.c,471 :: 		mlx90640->alpha[p] = mlx90640->alpha[p] - 64;
0x1390	0x2003E0  	MOV	#62, W0
0x1392	0x458080  	ADD	W11, W0, W1
0x1394	0x90384E  	MOV	[W14+120], W0
0x1396	0xDD0042  	SL	W0, #2, W0
0x1398	0x408000  	ADD	W1, W0, W0
0x139A	0x988750  	MOV	W0, [W14+138]
0x139C	0xBE0210  	MOV.D	[W0], W4
0x139E	0x200002  	MOV	#0, W2
0x13A0	0x242803  	MOV	#17024, W3
0x13A2	0x781F86  	PUSH	W6
0x13A4	0xBE9F8A  	PUSH.D	W10
0x13A6	0xBE0004  	MOV.D	W4, W0
0x13A8	0x07FA86  	RCALL	__Sub_FP
0x13AA	0xBE054F  	POP.D	W10
0x13AC	0x78034F  	POP	W6
0x13AE	0x90815E  	MOV	[W14+138], W2
0x13B0	0xBE8900  	MOV.D	W0, [W2]
;__irgrid2_Driver.c,472 :: 		}
L___irgrid2_Driver_ExtractAlphaParameters64:
;__irgrid2_Driver.c,473 :: 		mlx90640->alpha[p] = mlx90640->alpha[p]*(1 << accRemScale);
0x13B2	0x2003E0  	MOV	#62, W0
0x13B4	0x458080  	ADD	W11, W0, W1
0x13B6	0x90384E  	MOV	[W14+120], W0
0x13B8	0xDD0042  	SL	W0, #2, W0
0x13BA	0x408100  	ADD	W1, W0, W2
0x13BC	0x988772  	MOV	W2, [W14+142]
0x13BE	0xBE0012  	MOV.D	[W2], W0
0x13C0	0x988750  	MOV	W0, [W14+138]
0x13C2	0x988761  	MOV	W1, [W14+140]
0x13C4	0x200750  	MOV	#117, W0
0x13C6	0x470000  	ADD	W14, W0, W0
0x13C8	0xFB8090  	ZE	[W0], W1
0x13CA	0x200010  	MOV	#1, W0
0x13CC	0xDD0001  	SL	W0, W1, W0
0x13CE	0x781F86  	PUSH	W6
0x13D0	0xBE9F8A  	PUSH.D	W10
0x13D2	0xDE80CF  	ASR	W0, #15, W1
0x13D4	0xEB8100  	SETM	W2
0x13D6	0x07F9DA  	RCALL	__Long2Float
0x13D8	0x90815E  	MOV	[W14+138], W2
0x13DA	0x9081EE  	MOV	[W14+140], W3
0x13DC	0x07F800  	RCALL	__Mul_FP
0x13DE	0xBE054F  	POP.D	W10
0x13E0	0x78034F  	POP	W6
0x13E2	0x90817E  	MOV	[W14+142], W2
0x13E4	0xBE8900  	MOV.D	W0, [W2]
;__irgrid2_Driver.c,474 :: 		mlx90640->alpha[p] = (alphaRef + (accRow[i] << accRowScale) + (accColumn[j] << accColumnScale) + mlx90640->alpha[p]);
0x13E6	0x2003E0  	MOV	#62, W0
0x13E8	0x458080  	ADD	W11, W0, W1
0x13EA	0x90384E  	MOV	[W14+120], W0
0x13EC	0xDD0042  	SL	W0, #2, W0
0x13EE	0x408180  	ADD	W1, W0, W3
0x13F0	0x988773  	MOV	W3, [W14+142]
0x13F2	0x4700E0  	ADD	W14, #0, W1
0x13F4	0xDD3041  	SL	W6, #1, W0
0x13F6	0x408000  	ADD	W1, W0, W0
0x13F8	0x780090  	MOV	[W0], W1
0x13FA	0x200730  	MOV	#115, W0
0x13FC	0x470000  	ADD	W14, W0, W0
0x13FE	0xFB8010  	ZE	[W0], W0
0x1400	0xDD0880  	SL	W1, W0, W1
0x1402	0x200700  	MOV	#112, W0
0x1404	0x470000  	ADD	W14, W0, W0
0x1406	0x408110  	ADD	W1, [W0], W2
0x1408	0x200301  	MOV	#48, W1
0x140A	0x470081  	ADD	W14, W1, W1
0x140C	0x90383E  	MOV	[W14+118], W0
0x140E	0xDD0041  	SL	W0, #1, W0
0x1410	0x408000  	ADD	W1, W0, W0
0x1412	0x780090  	MOV	[W0], W1
0x1414	0x200740  	MOV	#116, W0
0x1416	0x470000  	ADD	W14, W0, W0
0x1418	0xFB8010  	ZE	[W0], W0
0x141A	0xDD0800  	SL	W1, W0, W0
0x141C	0x410080  	ADD	W2, W0, W1
0x141E	0x780003  	MOV	W3, W0
0x1420	0x988750  	MOV	W0, [W14+138]
0x1422	0x781F86  	PUSH	W6
0x1424	0xBE9F8A  	PUSH.D	W10
0x1426	0x780001  	MOV	W1, W0
0x1428	0xDE80CF  	ASR	W0, #15, W1
0x142A	0xEB8100  	SETM	W2
0x142C	0x07F9AF  	RCALL	__Long2Float
0x142E	0x90825E  	MOV	[W14+138], W4
0x1430	0xBE0114  	MOV.D	[W4], W2
0x1432	0x07F71F  	RCALL	__AddSub_FP
0x1434	0xBE054F  	POP.D	W10
0x1436	0x90817E  	MOV	[W14+142], W2
0x1438	0xBE8900  	MOV.D	W0, [W2]
;__irgrid2_Driver.c,475 :: 		mlx90640->alpha[p] = mlx90640->alpha[p] / _pow(2,(double)alphaScale);
0x143A	0x2003E0  	MOV	#62, W0
0x143C	0x458080  	ADD	W11, W0, W1
0x143E	0x90384E  	MOV	[W14+120], W0
0x1440	0xDD0042  	SL	W0, #2, W0
0x1442	0x408100  	ADD	W1, W0, W2
0x1444	0x988772  	MOV	W2, [W14+142]
0x1446	0xBE0012  	MOV.D	[W2], W0
0x1448	0x988750  	MOV	W0, [W14+138]
0x144A	0x988761  	MOV	W1, [W14+140]
0x144C	0x200722  	MOV	#114, W2
0x144E	0x470102  	ADD	W14, W2, W2
0x1450	0xBE9F8A  	PUSH.D	W10
0x1452	0xFB8012  	ZE	[W2], W0
0x1454	0xEB0080  	CLR	W1
0x1456	0x07F99A  	RCALL	__Long2Float
0x1458	0xBE0600  	MOV.D	W0, W12
0x145A	0x20000A  	MOV	#0, W10
0x145C	0x24000B  	MOV	#16384, W11
0x145E	0x07FC25  	RCALL	__irgrid2_Driver__pow
0x1460	0x983F50  	MOV	W0, [W14+122]
0x1462	0x983F61  	MOV	W1, [W14+124]
0x1464	0x90805E  	MOV	[W14+138], W0
0x1466	0x9080EE  	MOV	[W14+140], W1
0x1468	0x90395E  	MOV	[W14+122], W2
0x146A	0x9039EE  	MOV	[W14+124], W3
0x146C	0x07F8A1  	RCALL	__Div_FP
0x146E	0xBE054F  	POP.D	W10
0x1470	0x78034F  	POP	W6
0x1472	0x90817E  	MOV	[W14+142], W2
0x1474	0xBE8900  	MOV.D	W0, [W2]
;__irgrid2_Driver.c,465 :: 		for( j = 0; j < 32; j ++)
0x1476	0x9038BE  	MOV	[W14+118], W1
0x1478	0x200760  	MOV	#118, W0
0x147A	0x470000  	ADD	W14, W0, W0
0x147C	0x408861  	ADD	W1, #1, [W0]
;__irgrid2_Driver.c,476 :: 		}
0x147E	0x37FF58  	BRA	L___irgrid2_Driver_ExtractAlphaParameters61
L___irgrid2_Driver_ExtractAlphaParameters62:
;__irgrid2_Driver.c,463 :: 		for( i = 0; i < 24; i++)
; i start address is: 26 (W13)
0x1480	0x4306E1  	ADD	W6, #1, W13
; i end address is: 12 (W6)
;__irgrid2_Driver.c,477 :: 		}
; i end address is: 26 (W13)
0x1482	0x37FF51  	BRA	L___irgrid2_Driver_ExtractAlphaParameters58
L___irgrid2_Driver_ExtractAlphaParameters59:
;__irgrid2_Driver.c,478 :: 		}
L_end_ExtractAlphaParameters:
0x1484	0x7806CF  	POP	W13
0x1486	0x78064F  	POP	W12
0x1488	0xFA8000  	ULNK
0x148A	0x060000  	RETURN
; end of __irgrid2_Driver_ExtractAlphaParameters
__irgrid2_Driver_ExtractOffsetParameters:
0x223C	0xFA0070  	LNK	#112
;__irgrid2_Driver.c,480 :: 		static void ExtractOffsetParameters(uint16_t *eeData, paramsMLX90640 *mlx90640)
;__irgrid2_Driver.c,484 :: 		int p = 0;
;__irgrid2_Driver.c,493 :: 		occRemScale = (eeData[16] & 0x000F);
0x223E	0x200200  	MOV	#32, W0
0x2240	0x450000  	ADD	W10, W0, W0
0x2242	0x784010  	MOV.B	[W0], W0
; occRemScale start address is: 14 (W7)
0x2244	0x6043EF  	AND.B	W0, #15, W7
;__irgrid2_Driver.c,494 :: 		occColumnScale = (eeData[16] & 0x00F0) >> 4;
0x2246	0x200200  	MOV	#32, W0
0x2248	0x450080  	ADD	W10, W0, W1
0x224A	0x200F00  	MOV	#240, W0
0x224C	0x600011  	AND	W0, [W1], W0
0x224E	0xDE0044  	LSR	W0, #4, W0
; occColumnScale start address is: 12 (W6)
0x2250	0x784300  	MOV.B	W0, W6
;__irgrid2_Driver.c,495 :: 		occRowScale = (eeData[16] & 0x0F00) >> 8;
0x2252	0x200200  	MOV	#32, W0
0x2254	0x450000  	ADD	W10, W0, W0
0x2256	0x780090  	MOV	[W0], W1
0x2258	0x20F000  	MOV	#3840, W0
0x225A	0x608000  	AND	W1, W0, W0
0x225C	0xDE0048  	LSR	W0, #8, W0
; occRowScale start address is: 10 (W5)
0x225E	0x784280  	MOV.B	W0, W5
;__irgrid2_Driver.c,496 :: 		offsetRef = eeData[17];
0x2260	0x200220  	MOV	#34, W0
0x2262	0x450000  	ADD	W10, W0, W0
0x2264	0x780090  	MOV	[W0], W1
; offsetRef start address is: 4 (W2)
0x2266	0x780101  	MOV	W1, W2
;__irgrid2_Driver.c,497 :: 		if (offsetRef > 32767)
0x2268	0x27FFF0  	MOV	#32767, W0
0x226A	0xE10800  	CP	W1, W0
0x226C	0x340003  	BRA LE	L___irgrid2_Driver_ExtractOffsetParameters218
L___irgrid2_Driver_ExtractOffsetParameters330:
;__irgrid2_Driver.c,499 :: 		offsetRef = offsetRef - 65536;
0x226E	0x200000  	MOV	#0, W0
; offsetRef start address is: 8 (W4)
0x2270	0x510200  	SUB	W2, W0, W4
; offsetRef end address is: 4 (W2)
; offsetRef end address is: 8 (W4)
;__irgrid2_Driver.c,500 :: 		}
0x2272	0x370001  	BRA	L___irgrid2_Driver_ExtractOffsetParameters65
L___irgrid2_Driver_ExtractOffsetParameters218:
;__irgrid2_Driver.c,497 :: 		if (offsetRef > 32767)
0x2274	0x780202  	MOV	W2, W4
;__irgrid2_Driver.c,500 :: 		}
L___irgrid2_Driver_ExtractOffsetParameters65:
;__irgrid2_Driver.c,502 :: 		for( i = 0; i < 6; i++)
; offsetRef start address is: 8 (W4)
; i start address is: 16 (W8)
0x2276	0xEF2010  	CLR	W8
; offsetRef end address is: 8 (W4)
; occRowScale end address is: 10 (W5)
; occColumnScale end address is: 12 (W6)
; occRemScale end address is: 14 (W7)
; i end address is: 16 (W8)
L___irgrid2_Driver_ExtractOffsetParameters66:
; i start address is: 16 (W8)
; offsetRef start address is: 8 (W4)
; occRowScale start address is: 10 (W5)
; occColumnScale start address is: 12 (W6)
; occRemScale start address is: 14 (W7)
0x2278	0xE14066  	CP	W8, #6
0x227A	0x3D002D  	BRA GE	L___irgrid2_Driver_ExtractOffsetParameters67
L___irgrid2_Driver_ExtractOffsetParameters331:
;__irgrid2_Driver.c,504 :: 		p = i * 4;
0x227C	0xDD4042  	SL	W8, #2, W0
; p start address is: 18 (W9)
0x227E	0x780480  	MOV	W0, W9
;__irgrid2_Driver.c,505 :: 		occRow[p + 0] = (eeData[18 + i] & 0x000F);
0x2280	0x4701E0  	ADD	W14, #0, W3
0x2282	0xDD0041  	SL	W0, #1, W0
0x2284	0x418080  	ADD	W3, W0, W1
0x2286	0x440072  	ADD	W8, #18, W0
0x2288	0xDD0041  	SL	W0, #1, W0
0x228A	0x450000  	ADD	W10, W0, W0
0x228C	0x780010  	MOV	[W0], W0
0x228E	0x60006F  	AND	W0, #15, W0
0x2290	0x780880  	MOV	W0, [W1]
;__irgrid2_Driver.c,506 :: 		occRow[p + 1] = (eeData[18 + i] & 0x00F0) >> 4;
0x2292	0x448061  	ADD	W9, #1, W0
0x2294	0xDD0041  	SL	W0, #1, W0
0x2296	0x418100  	ADD	W3, W0, W2
0x2298	0x440072  	ADD	W8, #18, W0
0x229A	0xDD0041  	SL	W0, #1, W0
0x229C	0x450080  	ADD	W10, W0, W1
0x229E	0x200F00  	MOV	#240, W0
0x22A0	0x600011  	AND	W0, [W1], W0
0x22A2	0xDE0044  	LSR	W0, #4, W0
0x22A4	0x780900  	MOV	W0, [W2]
;__irgrid2_Driver.c,507 :: 		occRow[p + 2] = (eeData[18 + i] & 0x0F00) >> 8;
0x22A6	0x448062  	ADD	W9, #2, W0
0x22A8	0xDD0041  	SL	W0, #1, W0
0x22AA	0x418100  	ADD	W3, W0, W2
0x22AC	0x440072  	ADD	W8, #18, W0
0x22AE	0xDD0041  	SL	W0, #1, W0
0x22B0	0x450000  	ADD	W10, W0, W0
0x22B2	0x780090  	MOV	[W0], W1
0x22B4	0x20F000  	MOV	#3840, W0
0x22B6	0x608000  	AND	W1, W0, W0
0x22B8	0xDE0048  	LSR	W0, #8, W0
0x22BA	0x780900  	MOV	W0, [W2]
;__irgrid2_Driver.c,508 :: 		occRow[p + 3] = (eeData[18 + i] & 0xF000) >> 12;
0x22BC	0x448063  	ADD	W9, #3, W0
; p end address is: 18 (W9)
0x22BE	0xDD0041  	SL	W0, #1, W0
0x22C0	0x418100  	ADD	W3, W0, W2
0x22C2	0x440072  	ADD	W8, #18, W0
0x22C4	0xDD0041  	SL	W0, #1, W0
0x22C6	0x450000  	ADD	W10, W0, W0
0x22C8	0x780090  	MOV	[W0], W1
0x22CA	0x2F0000  	MOV	#61440, W0
0x22CC	0x608000  	AND	W1, W0, W0
0x22CE	0xDE004C  	LSR	W0, #12, W0
0x22D0	0x780900  	MOV	W0, [W2]
;__irgrid2_Driver.c,502 :: 		for( i = 0; i < 6; i++)
0x22D2	0xEC2010  	INC	W8
;__irgrid2_Driver.c,509 :: 		}
; i end address is: 16 (W8)
0x22D4	0x37FFD1  	BRA	L___irgrid2_Driver_ExtractOffsetParameters66
L___irgrid2_Driver_ExtractOffsetParameters67:
;__irgrid2_Driver.c,511 :: 		for( i = 0; i < 24; i++)
; i start address is: 4 (W2)
0x22D6	0xEF2004  	CLR	W2
; i end address is: 4 (W2)
; offsetRef end address is: 8 (W4)
; occRowScale end address is: 10 (W5)
; occColumnScale end address is: 12 (W6)
; occRemScale end address is: 14 (W7)
L___irgrid2_Driver_ExtractOffsetParameters69:
; i start address is: 4 (W2)
; occRemScale start address is: 14 (W7)
; occColumnScale start address is: 12 (W6)
; occRowScale start address is: 10 (W5)
; offsetRef start address is: 8 (W4)
0x22D8	0xE11078  	CP	W2, #24
0x22DA	0x3D000E  	BRA GE	L___irgrid2_Driver_ExtractOffsetParameters70
L___irgrid2_Driver_ExtractOffsetParameters332:
;__irgrid2_Driver.c,513 :: 		if (occRow[i] > 7)
0x22DC	0x4700E0  	ADD	W14, #0, W1
0x22DE	0xDD1041  	SL	W2, #1, W0
0x22E0	0x408000  	ADD	W1, W0, W0
0x22E2	0x780010  	MOV	[W0], W0
0x22E4	0xE10067  	CP	W0, #7
0x22E6	0x340006  	BRA LE	L___irgrid2_Driver_ExtractOffsetParameters72
L___irgrid2_Driver_ExtractOffsetParameters333:
;__irgrid2_Driver.c,515 :: 		occRow[i] = occRow[i] - 16;
0x22E8	0x4700E0  	ADD	W14, #0, W1
0x22EA	0xDD1041  	SL	W2, #1, W0
0x22EC	0x408080  	ADD	W1, W0, W1
0x22EE	0x780011  	MOV	[W1], W0
0x22F0	0x500070  	SUB	W0, #16, W0
0x22F2	0x780880  	MOV	W0, [W1]
;__irgrid2_Driver.c,516 :: 		}
L___irgrid2_Driver_ExtractOffsetParameters72:
;__irgrid2_Driver.c,511 :: 		for( i = 0; i < 24; i++)
0x22F4	0xEC2004  	INC	W2
;__irgrid2_Driver.c,517 :: 		}
; i end address is: 4 (W2)
0x22F6	0x37FFF0  	BRA	L___irgrid2_Driver_ExtractOffsetParameters69
L___irgrid2_Driver_ExtractOffsetParameters70:
;__irgrid2_Driver.c,519 :: 		for( i = 0; i < 8; i++)
; i start address is: 16 (W8)
0x22F8	0xEF2010  	CLR	W8
; offsetRef end address is: 8 (W4)
; occRowScale end address is: 10 (W5)
; occColumnScale end address is: 12 (W6)
; occRemScale end address is: 14 (W7)
; i end address is: 16 (W8)
L___irgrid2_Driver_ExtractOffsetParameters73:
; i start address is: 16 (W8)
; offsetRef start address is: 8 (W4)
; occRowScale start address is: 10 (W5)
; occColumnScale start address is: 12 (W6)
; occRemScale start address is: 14 (W7)
0x22FA	0xE14068  	CP	W8, #8
0x22FC	0x3D002E  	BRA GE	L___irgrid2_Driver_ExtractOffsetParameters74
L___irgrid2_Driver_ExtractOffsetParameters334:
;__irgrid2_Driver.c,521 :: 		p = i * 4;
0x22FE	0xDD4042  	SL	W8, #2, W0
; p start address is: 18 (W9)
0x2300	0x780480  	MOV	W0, W9
;__irgrid2_Driver.c,522 :: 		occColumn[p + 0] = (eeData[24 + i] & 0x000F);
0x2302	0x200303  	MOV	#48, W3
0x2304	0x470183  	ADD	W14, W3, W3
0x2306	0xDD0041  	SL	W0, #1, W0
0x2308	0x418080  	ADD	W3, W0, W1
0x230A	0x440078  	ADD	W8, #24, W0
0x230C	0xDD0041  	SL	W0, #1, W0
0x230E	0x450000  	ADD	W10, W0, W0
0x2310	0x780010  	MOV	[W0], W0
0x2312	0x60006F  	AND	W0, #15, W0
0x2314	0x780880  	MOV	W0, [W1]
;__irgrid2_Driver.c,523 :: 		occColumn[p + 1] = (eeData[24 + i] & 0x00F0) >> 4;
0x2316	0x448061  	ADD	W9, #1, W0
0x2318	0xDD0041  	SL	W0, #1, W0
0x231A	0x418100  	ADD	W3, W0, W2
0x231C	0x440078  	ADD	W8, #24, W0
0x231E	0xDD0041  	SL	W0, #1, W0
0x2320	0x450080  	ADD	W10, W0, W1
0x2322	0x200F00  	MOV	#240, W0
0x2324	0x600011  	AND	W0, [W1], W0
0x2326	0xDE0044  	LSR	W0, #4, W0
0x2328	0x780900  	MOV	W0, [W2]
;__irgrid2_Driver.c,524 :: 		occColumn[p + 2] = (eeData[24 + i] & 0x0F00) >> 8;
0x232A	0x448062  	ADD	W9, #2, W0
0x232C	0xDD0041  	SL	W0, #1, W0
0x232E	0x418100  	ADD	W3, W0, W2
0x2330	0x440078  	ADD	W8, #24, W0
0x2332	0xDD0041  	SL	W0, #1, W0
0x2334	0x450000  	ADD	W10, W0, W0
0x2336	0x780090  	MOV	[W0], W1
0x2338	0x20F000  	MOV	#3840, W0
0x233A	0x608000  	AND	W1, W0, W0
0x233C	0xDE0048  	LSR	W0, #8, W0
0x233E	0x780900  	MOV	W0, [W2]
;__irgrid2_Driver.c,525 :: 		occColumn[p + 3] = (eeData[24 + i] & 0xF000) >> 12;
0x2340	0x448063  	ADD	W9, #3, W0
; p end address is: 18 (W9)
0x2342	0xDD0041  	SL	W0, #1, W0
0x2344	0x418100  	ADD	W3, W0, W2
0x2346	0x440078  	ADD	W8, #24, W0
0x2348	0xDD0041  	SL	W0, #1, W0
0x234A	0x450000  	ADD	W10, W0, W0
0x234C	0x780090  	MOV	[W0], W1
0x234E	0x2F0000  	MOV	#61440, W0
0x2350	0x608000  	AND	W1, W0, W0
0x2352	0xDE004C  	LSR	W0, #12, W0
0x2354	0x780900  	MOV	W0, [W2]
;__irgrid2_Driver.c,519 :: 		for( i = 0; i < 8; i++)
0x2356	0xEC2010  	INC	W8
;__irgrid2_Driver.c,526 :: 		}
; i end address is: 16 (W8)
0x2358	0x37FFD0  	BRA	L___irgrid2_Driver_ExtractOffsetParameters73
L___irgrid2_Driver_ExtractOffsetParameters74:
;__irgrid2_Driver.c,528 :: 		for( i = 0; i < 32; i ++)
; i start address is: 0 (W0)
0x235A	0xEF2000  	CLR	W0
; offsetRef end address is: 8 (W4)
; occRowScale end address is: 10 (W5)
; occColumnScale end address is: 12 (W6)
; occRemScale end address is: 14 (W7)
; i end address is: 0 (W0)
0x235C	0x781F85  	PUSH	W5
0x235E	0x780284  	MOV	W4, W5
0x2360	0x784186  	MOV.B	W6, W3
0x2362	0x780300  	MOV	W0, W6
0x2364	0x784107  	MOV.B	W7, W2
0x2366	0x78024F  	POP	W4
L___irgrid2_Driver_ExtractOffsetParameters76:
; i start address is: 12 (W6)
; occRemScale start address is: 4 (W2)
; occColumnScale start address is: 6 (W3)
; occRowScale start address is: 8 (W4)
; offsetRef start address is: 10 (W5)
0x2368	0x200200  	MOV	#32, W0
0x236A	0xE13000  	CP	W6, W0
0x236C	0x3D0010  	BRA GE	L___irgrid2_Driver_ExtractOffsetParameters77
L___irgrid2_Driver_ExtractOffsetParameters335:
;__irgrid2_Driver.c,530 :: 		if (occColumn[i] > 7)
0x236E	0x200301  	MOV	#48, W1
0x2370	0x470081  	ADD	W14, W1, W1
0x2372	0xDD3041  	SL	W6, #1, W0
0x2374	0x408000  	ADD	W1, W0, W0
0x2376	0x780010  	MOV	[W0], W0
0x2378	0xE10067  	CP	W0, #7
0x237A	0x340007  	BRA LE	L___irgrid2_Driver_ExtractOffsetParameters79
L___irgrid2_Driver_ExtractOffsetParameters336:
;__irgrid2_Driver.c,532 :: 		occColumn[i] = occColumn[i] - 16;
0x237C	0x200301  	MOV	#48, W1
0x237E	0x470081  	ADD	W14, W1, W1
0x2380	0xDD3041  	SL	W6, #1, W0
0x2382	0x408080  	ADD	W1, W0, W1
0x2384	0x780011  	MOV	[W1], W0
0x2386	0x500070  	SUB	W0, #16, W0
0x2388	0x780880  	MOV	W0, [W1]
;__irgrid2_Driver.c,533 :: 		}
L___irgrid2_Driver_ExtractOffsetParameters79:
;__irgrid2_Driver.c,528 :: 		for( i = 0; i < 32; i ++)
0x238A	0xEC200C  	INC	W6
;__irgrid2_Driver.c,534 :: 		}
; i end address is: 12 (W6)
0x238C	0x37FFED  	BRA	L___irgrid2_Driver_ExtractOffsetParameters76
L___irgrid2_Driver_ExtractOffsetParameters77:
;__irgrid2_Driver.c,536 :: 		for( i = 0; i < 24; i++)
; i start address is: 16 (W8)
0x238E	0xEF2010  	CLR	W8
; occRemScale end address is: 4 (W2)
; occColumnScale end address is: 6 (W3)
; occRowScale end address is: 8 (W4)
; offsetRef end address is: 10 (W5)
; i end address is: 16 (W8)
0x2390	0x784304  	MOV.B	W4, W6
0x2392	0x784202  	MOV.B	W2, W4
0x2394	0x780385  	MOV	W5, W7
0x2396	0x784283  	MOV.B	W3, W5
L___irgrid2_Driver_ExtractOffsetParameters80:
; i start address is: 16 (W8)
; offsetRef start address is: 14 (W7)
; occRowScale start address is: 12 (W6)
; occColumnScale start address is: 10 (W5)
; occRemScale start address is: 8 (W4)
0x2398	0xE14078  	CP	W8, #24
0x239A	0x3D0043  	BRA GE	L___irgrid2_Driver_ExtractOffsetParameters81
L___irgrid2_Driver_ExtractOffsetParameters337:
;__irgrid2_Driver.c,538 :: 		for( j = 0; j < 32; j ++)
; j start address is: 18 (W9)
0x239C	0xEF2012  	CLR	W9
; occRemScale end address is: 8 (W4)
; occColumnScale end address is: 10 (W5)
; occRowScale end address is: 12 (W6)
; offsetRef end address is: 14 (W7)
; j end address is: 18 (W9)
; i end address is: 16 (W8)
L___irgrid2_Driver_ExtractOffsetParameters83:
; j start address is: 18 (W9)
; occRemScale start address is: 8 (W4)
; occColumnScale start address is: 10 (W5)
; occRowScale start address is: 12 (W6)
; offsetRef start address is: 14 (W7)
; i start address is: 16 (W8)
0x239E	0x200200  	MOV	#32, W0
0x23A0	0xE14800  	CP	W9, W0
0x23A2	0x3D003D  	BRA GE	L___irgrid2_Driver_ExtractOffsetParameters84
L___irgrid2_Driver_ExtractOffsetParameters338:
;__irgrid2_Driver.c,540 :: 		p = 32 * i +j;
0x23A4	0xDD4045  	SL	W8, #5, W0
0x23A6	0x400189  	ADD	W0, W9, W3
; p start address is: 24 (W12)
0x23A8	0x780603  	MOV	W3, W12
;__irgrid2_Driver.c,541 :: 		mlx90640->offset[p] = (eeData[64 + p] & 0xFC00) >> 10;
0x23AA	0x20C3E0  	MOV	#3134, W0
0x23AC	0x458080  	ADD	W11, W0, W1
0x23AE	0xDD1841  	SL	W3, #1, W0
0x23B0	0x408100  	ADD	W1, W0, W2
0x23B2	0x200400  	MOV	#64, W0
0x23B4	0x400003  	ADD	W0, W3, W0
0x23B6	0xDD0041  	SL	W0, #1, W0
0x23B8	0x450000  	ADD	W10, W0, W0
0x23BA	0x780090  	MOV	[W0], W1
0x23BC	0x2FC000  	MOV	#64512, W0
0x23BE	0x608000  	AND	W1, W0, W0
0x23C0	0xDE004A  	LSR	W0, #10, W0
0x23C2	0x780900  	MOV	W0, [W2]
;__irgrid2_Driver.c,542 :: 		if (mlx90640->offset[p] > 31)
0x23C4	0x20C3E0  	MOV	#3134, W0
0x23C6	0x458080  	ADD	W11, W0, W1
0x23C8	0xDD6041  	SL	W12, #1, W0
0x23CA	0x408000  	ADD	W1, W0, W0
0x23CC	0x780010  	MOV	[W0], W0
0x23CE	0xE1007F  	CP	W0, #31
0x23D0	0x340007  	BRA LE	L___irgrid2_Driver_ExtractOffsetParameters86
L___irgrid2_Driver_ExtractOffsetParameters339:
;__irgrid2_Driver.c,544 :: 		mlx90640->offset[p] = mlx90640->offset[p] - 64;
0x23D2	0x20C3E0  	MOV	#3134, W0
0x23D4	0x458080  	ADD	W11, W0, W1
0x23D6	0xDD6041  	SL	W12, #1, W0
0x23D8	0x408080  	ADD	W1, W0, W1
0x23DA	0x200400  	MOV	#64, W0
0x23DC	0x100011  	SUBR	W0, [W1], W0
0x23DE	0x780880  	MOV	W0, [W1]
;__irgrid2_Driver.c,545 :: 		}
L___irgrid2_Driver_ExtractOffsetParameters86:
;__irgrid2_Driver.c,546 :: 		mlx90640->offset[p] = mlx90640->offset[p]*(1 << occRemScale);
0x23E0	0x20C3E0  	MOV	#3134, W0
0x23E2	0x458080  	ADD	W11, W0, W1
0x23E4	0xDD6041  	SL	W12, #1, W0
0x23E6	0x408100  	ADD	W1, W0, W2
0x23E8	0xFB8084  	ZE	W4, W1
0x23EA	0x200010  	MOV	#1, W0
0x23EC	0xDD0001  	SL	W0, W1, W0
0x23EE	0xB98012  	MUL.SS	W0, [W2], W0
0x23F0	0x780900  	MOV	W0, [W2]
;__irgrid2_Driver.c,547 :: 		mlx90640->offset[p] = (offsetRef + (occRow[i] << occRowScale) + (occColumn[j] << occColumnScale) + mlx90640->offset[p]);
0x23F2	0x20C3E0  	MOV	#3134, W0
0x23F4	0x458080  	ADD	W11, W0, W1
0x23F6	0xDD6041  	SL	W12, #1, W0
; p end address is: 24 (W12)
0x23F8	0x408180  	ADD	W1, W0, W3
0x23FA	0x4700E0  	ADD	W14, #0, W1
0x23FC	0xDD4041  	SL	W8, #1, W0
0x23FE	0x408000  	ADD	W1, W0, W0
0x2400	0x780090  	MOV	[W0], W1
0x2402	0xFB8006  	ZE	W6, W0
0x2404	0xDD0800  	SL	W1, W0, W0
0x2406	0x438100  	ADD	W7, W0, W2
0x2408	0x200301  	MOV	#48, W1
0x240A	0x470081  	ADD	W14, W1, W1
0x240C	0xDD4841  	SL	W9, #1, W0
0x240E	0x408000  	ADD	W1, W0, W0
0x2410	0x780090  	MOV	[W0], W1
0x2412	0xFB8005  	ZE	W5, W0
0x2414	0xDD0800  	SL	W1, W0, W0
0x2416	0x410000  	ADD	W2, W0, W0
0x2418	0x400993  	ADD	W0, [W3], [W3]
;__irgrid2_Driver.c,538 :: 		for( j = 0; j < 32; j ++)
0x241A	0xEC2012  	INC	W9
;__irgrid2_Driver.c,548 :: 		}
; j end address is: 18 (W9)
0x241C	0x37FFC0  	BRA	L___irgrid2_Driver_ExtractOffsetParameters83
L___irgrid2_Driver_ExtractOffsetParameters84:
;__irgrid2_Driver.c,536 :: 		for( i = 0; i < 24; i++)
0x241E	0xEC2010  	INC	W8
;__irgrid2_Driver.c,549 :: 		}
; occRemScale end address is: 8 (W4)
; occColumnScale end address is: 10 (W5)
; occRowScale end address is: 12 (W6)
; offsetRef end address is: 14 (W7)
; i end address is: 16 (W8)
0x2420	0x37FFBB  	BRA	L___irgrid2_Driver_ExtractOffsetParameters80
L___irgrid2_Driver_ExtractOffsetParameters81:
;__irgrid2_Driver.c,550 :: 		}
L_end_ExtractOffsetParameters:
0x2422	0xFA8000  	ULNK
0x2424	0x060000  	RETURN
; end of __irgrid2_Driver_ExtractOffsetParameters
__irgrid2_Driver_ExtractKtaPixelParameters:
0x2040	0xFA001E  	LNK	#30
;__irgrid2_Driver.c,552 :: 		static void ExtractKtaPixelParameters(uint16_t *eeData, paramsMLX90640 *mlx90640)
;__irgrid2_Driver.c,554 :: 		int p = 0;
0x2042	0x781F8C  	PUSH	W12
0x2044	0x781F8D  	PUSH	W13
;__irgrid2_Driver.c,567 :: 		KtaRoCo = (eeData[54] & 0xFF00) >> 8;
0x2046	0x2006C0  	MOV	#108, W0
0x2048	0x450000  	ADD	W10, W0, W0
0x204A	0x780090  	MOV	[W0], W1
0x204C	0x2FF000  	MOV	#65280, W0
0x204E	0x608000  	AND	W1, W0, W0
0x2050	0xDE00C8  	LSR	W0, #8, W1
; KtaRoCo start address is: 4 (W2)
0x2052	0x784101  	MOV.B	W1, W2
;__irgrid2_Driver.c,568 :: 		if (KtaRoCo > 127)
0x2054	0xB3C7F0  	MOV.B	#127, W0
0x2056	0xE10C00  	CP.B	W1, W0
0x2058	0x340003  	BRA LE	L___irgrid2_Driver_ExtractKtaPixelParameters219
L___irgrid2_Driver_ExtractKtaPixelParameters341:
;__irgrid2_Driver.c,570 :: 		KtaRoCo = KtaRoCo - 256;
0x205A	0xB3C000  	MOV.B	#0, W0
; KtaRoCo start address is: 2 (W1)
0x205C	0x514080  	SUB.B	W2, W0, W1
; KtaRoCo end address is: 4 (W2)
; KtaRoCo end address is: 2 (W1)
;__irgrid2_Driver.c,571 :: 		}
0x205E	0x370001  	BRA	L___irgrid2_Driver_ExtractKtaPixelParameters87
L___irgrid2_Driver_ExtractKtaPixelParameters219:
;__irgrid2_Driver.c,568 :: 		if (KtaRoCo > 127)
0x2060	0x784082  	MOV.B	W2, W1
;__irgrid2_Driver.c,571 :: 		}
L___irgrid2_Driver_ExtractKtaPixelParameters87:
;__irgrid2_Driver.c,572 :: 		KtaRC[0] = KtaRoCo;
; KtaRoCo start address is: 2 (W1)
0x2062	0x470060  	ADD	W14, #0, W0
0x2064	0x784801  	MOV.B	W1, [W0]
; KtaRoCo end address is: 2 (W1)
;__irgrid2_Driver.c,574 :: 		KtaReCo = (eeData[54] & 0x00FF);
0x2066	0x2006C0  	MOV	#108, W0
0x2068	0x450080  	ADD	W10, W0, W1
0x206A	0x200FF0  	MOV	#255, W0
0x206C	0x600091  	AND	W0, [W1], W1
; KtaReCo start address is: 4 (W2)
0x206E	0x784101  	MOV.B	W1, W2
;__irgrid2_Driver.c,575 :: 		if (KtaReCo > 127)
0x2070	0xB3C7F0  	MOV.B	#127, W0
0x2072	0xE10C00  	CP.B	W1, W0
0x2074	0x340003  	BRA LE	L___irgrid2_Driver_ExtractKtaPixelParameters220
L___irgrid2_Driver_ExtractKtaPixelParameters342:
;__irgrid2_Driver.c,577 :: 		KtaReCo = KtaReCo - 256;
0x2076	0xB3C000  	MOV.B	#0, W0
; KtaReCo start address is: 2 (W1)
0x2078	0x514080  	SUB.B	W2, W0, W1
; KtaReCo end address is: 4 (W2)
; KtaReCo end address is: 2 (W1)
;__irgrid2_Driver.c,578 :: 		}
0x207A	0x370001  	BRA	L___irgrid2_Driver_ExtractKtaPixelParameters88
L___irgrid2_Driver_ExtractKtaPixelParameters220:
;__irgrid2_Driver.c,575 :: 		if (KtaReCo > 127)
0x207C	0x784082  	MOV.B	W2, W1
;__irgrid2_Driver.c,578 :: 		}
L___irgrid2_Driver_ExtractKtaPixelParameters88:
;__irgrid2_Driver.c,579 :: 		KtaRC[2] = KtaReCo;
; KtaReCo start address is: 2 (W1)
0x207E	0x470060  	ADD	W14, #0, W0
0x2080	0xECA000  	INC2	W0
0x2082	0x784801  	MOV.B	W1, [W0]
; KtaReCo end address is: 2 (W1)
;__irgrid2_Driver.c,581 :: 		KtaRoCe = (eeData[55] & 0xFF00) >> 8;
0x2084	0x2006E0  	MOV	#110, W0
0x2086	0x450000  	ADD	W10, W0, W0
0x2088	0x780090  	MOV	[W0], W1
0x208A	0x2FF000  	MOV	#65280, W0
0x208C	0x608000  	AND	W1, W0, W0
0x208E	0xDE00C8  	LSR	W0, #8, W1
; KtaRoCe start address is: 4 (W2)
0x2090	0x784101  	MOV.B	W1, W2
;__irgrid2_Driver.c,582 :: 		if (KtaRoCe > 127)
0x2092	0xB3C7F0  	MOV.B	#127, W0
0x2094	0xE10C00  	CP.B	W1, W0
0x2096	0x340003  	BRA LE	L___irgrid2_Driver_ExtractKtaPixelParameters221
L___irgrid2_Driver_ExtractKtaPixelParameters343:
;__irgrid2_Driver.c,584 :: 		KtaRoCe = KtaRoCe - 256;
0x2098	0xB3C000  	MOV.B	#0, W0
; KtaRoCe start address is: 2 (W1)
0x209A	0x514080  	SUB.B	W2, W0, W1
; KtaRoCe end address is: 4 (W2)
; KtaRoCe end address is: 2 (W1)
;__irgrid2_Driver.c,585 :: 		}
0x209C	0x370001  	BRA	L___irgrid2_Driver_ExtractKtaPixelParameters89
L___irgrid2_Driver_ExtractKtaPixelParameters221:
;__irgrid2_Driver.c,582 :: 		if (KtaRoCe > 127)
0x209E	0x784082  	MOV.B	W2, W1
;__irgrid2_Driver.c,585 :: 		}
L___irgrid2_Driver_ExtractKtaPixelParameters89:
;__irgrid2_Driver.c,586 :: 		KtaRC[1] = KtaRoCe;
; KtaRoCe start address is: 2 (W1)
0x20A0	0x470060  	ADD	W14, #0, W0
0x20A2	0xEC2000  	INC	W0
0x20A4	0x784801  	MOV.B	W1, [W0]
; KtaRoCe end address is: 2 (W1)
;__irgrid2_Driver.c,588 :: 		KtaReCe = (eeData[55] & 0x00FF);
0x20A6	0x2006E0  	MOV	#110, W0
0x20A8	0x450080  	ADD	W10, W0, W1
0x20AA	0x200FF0  	MOV	#255, W0
0x20AC	0x600091  	AND	W0, [W1], W1
; KtaReCe start address is: 4 (W2)
0x20AE	0x784101  	MOV.B	W1, W2
;__irgrid2_Driver.c,589 :: 		if (KtaReCe > 127)
0x20B0	0xB3C7F0  	MOV.B	#127, W0
0x20B2	0xE10C00  	CP.B	W1, W0
0x20B4	0x340003  	BRA LE	L___irgrid2_Driver_ExtractKtaPixelParameters222
L___irgrid2_Driver_ExtractKtaPixelParameters344:
;__irgrid2_Driver.c,591 :: 		KtaReCe = KtaReCe - 256;
0x20B6	0xB3C000  	MOV.B	#0, W0
; KtaReCe start address is: 2 (W1)
0x20B8	0x514080  	SUB.B	W2, W0, W1
; KtaReCe end address is: 4 (W2)
; KtaReCe end address is: 2 (W1)
;__irgrid2_Driver.c,592 :: 		}
0x20BA	0x370001  	BRA	L___irgrid2_Driver_ExtractKtaPixelParameters90
L___irgrid2_Driver_ExtractKtaPixelParameters222:
;__irgrid2_Driver.c,589 :: 		if (KtaReCe > 127)
0x20BC	0x784082  	MOV.B	W2, W1
;__irgrid2_Driver.c,592 :: 		}
L___irgrid2_Driver_ExtractKtaPixelParameters90:
;__irgrid2_Driver.c,593 :: 		KtaRC[3] = KtaReCe;
; KtaReCe start address is: 2 (W1)
0x20BE	0x470060  	ADD	W14, #0, W0
0x20C0	0x400063  	ADD	W0, #3, W0
0x20C2	0x784801  	MOV.B	W1, [W0]
; KtaReCe end address is: 2 (W1)
;__irgrid2_Driver.c,595 :: 		ktaScale1 = ((eeData[56] & 0x00F0) >> 4) + 8;
0x20C4	0x200700  	MOV	#112, W0
0x20C6	0x450080  	ADD	W10, W0, W1
0x20C8	0x200F00  	MOV	#240, W0
0x20CA	0x600011  	AND	W0, [W1], W0
0x20CC	0xDE00C4  	LSR	W0, #4, W1
0x20CE	0x470064  	ADD	W14, #4, W0
0x20D0	0x40C868  	ADD.B	W1, #8, [W0]
;__irgrid2_Driver.c,596 :: 		ktaScale2 = (eeData[56] & 0x000F);
0x20D2	0x200700  	MOV	#112, W0
0x20D4	0x450000  	ADD	W10, W0, W0
0x20D6	0x784090  	MOV.B	[W0], W1
0x20D8	0x470065  	ADD	W14, #5, W0
0x20DA	0x60C86F  	AND.B	W1, #15, [W0]
;__irgrid2_Driver.c,598 :: 		for(i = 0; i < 24; i++)
0x20DC	0xEF2000  	CLR	W0
0x20DE	0x980740  	MOV	W0, [W14+8]
L___irgrid2_Driver_ExtractKtaPixelParameters91:
0x20E0	0x90004E  	MOV	[W14+8], W0
0x20E2	0xE10078  	CP	W0, #24
0x20E4	0x3D00A7  	BRA GE	L___irgrid2_Driver_ExtractKtaPixelParameters92
L___irgrid2_Driver_ExtractKtaPixelParameters345:
;__irgrid2_Driver.c,600 :: 		for( j = 0; j < 32; j ++)
0x20E6	0xEF2000  	CLR	W0
0x20E8	0x980750  	MOV	W0, [W14+10]
L___irgrid2_Driver_ExtractKtaPixelParameters94:
0x20EA	0x200201  	MOV	#32, W1
0x20EC	0x47006A  	ADD	W14, #10, W0
0x20EE	0xE10810  	CP	W1, [W0]
0x20F0	0x34009D  	BRA LE	L___irgrid2_Driver_ExtractKtaPixelParameters95
L___irgrid2_Driver_ExtractKtaPixelParameters346:
;__irgrid2_Driver.c,602 :: 		p = 32 * i +j;
0x20F2	0x90004E  	MOV	[W14+8], W0
0x20F4	0xDD00C5  	SL	W0, #5, W1
0x20F6	0x47006A  	ADD	W14, #10, W0
0x20F8	0x408010  	ADD	W1, [W0], W0
0x20FA	0x980F60  	MOV	W0, [W14+28]
0x20FC	0x980760  	MOV	W0, [W14+12]
;__irgrid2_Driver.c,603 :: 		split = 2*(p/32 - (p/64)*2) + p%2;
0x20FE	0x200202  	MOV	#32, W2
0x2100	0x090011  	REPEAT	#17
0x2102	0xD80002  	DIV.S	W0, W2
0x2104	0x980F40  	MOV	W0, [W14+24]
0x2106	0x200402  	MOV	#64, W2
0x2108	0x90086E  	MOV	[W14+28], W0
0x210A	0x090011  	REPEAT	#17
0x210C	0xD80002  	DIV.S	W0, W2
0x210E	0xDD0141  	SL	W0, #1, W2
0x2110	0x90084E  	MOV	[W14+24], W0
0x2112	0x500002  	SUB	W0, W2, W0
0x2114	0xDD0041  	SL	W0, #1, W0
0x2116	0x980F40  	MOV	W0, [W14+24]
0x2118	0x200022  	MOV	#2, W2
0x211A	0x90086E  	MOV	[W14+28], W0
0x211C	0x090011  	REPEAT	#17
0x211E	0xD80002  	DIV.S	W0, W2
0x2120	0x780101  	MOV	W1, W2
0x2122	0x4700E6  	ADD	W14, #6, W1
0x2124	0x90084E  	MOV	[W14+24], W0
0x2126	0x404882  	ADD.B	W0, W2, [W1]
;__irgrid2_Driver.c,604 :: 		mlx90640->kta[p] = (eeData[64 + p] & 0x000E) >> 1;
0x2128	0x2123E0  	MOV	#4670, W0
0x212A	0x458100  	ADD	W11, W0, W2
0x212C	0x9008EE  	MOV	[W14+28], W1
0x212E	0xDD0842  	SL	W1, #2, W0
0x2130	0x410000  	ADD	W2, W0, W0
0x2132	0x980F40  	MOV	W0, [W14+24]
0x2134	0x200400  	MOV	#64, W0
0x2136	0x400001  	ADD	W0, W1, W0
0x2138	0xDD0041  	SL	W0, #1, W0
0x213A	0x450000  	ADD	W10, W0, W0
0x213C	0x780010  	MOV	[W0], W0
0x213E	0x60006E  	AND	W0, #14, W0
0x2140	0xDE0041  	LSR	W0, #1, W0
0x2142	0xBE9F8A  	PUSH.D	W10
0x2144	0xEB0080  	CLR	W1
0x2146	0x07F322  	RCALL	__Long2Float
0x2148	0xBE054F  	POP.D	W10
0x214A	0x90094E  	MOV	[W14+24], W2
0x214C	0xBE8900  	MOV.D	W0, [W2]
;__irgrid2_Driver.c,605 :: 		if (mlx90640->kta[p] > 3)
0x214E	0x2123E0  	MOV	#4670, W0
0x2150	0x458080  	ADD	W11, W0, W1
0x2152	0x90006E  	MOV	[W14+12], W0
0x2154	0xDD0042  	SL	W0, #2, W0
0x2156	0x408100  	ADD	W1, W0, W2
0x2158	0xBE0012  	MOV.D	[W2], W0
0x215A	0xBE9F8A  	PUSH.D	W10
0x215C	0x200002  	MOV	#0, W2
0x215E	0x240403  	MOV	#16448, W3
0x2160	0x07F207  	RCALL	__Compare_Ge_Fp
0x2162	0xE00000  	CP0	W0
0x2164	0xEF6000  	CLR.B	W0
0x2166	0x340001  	BRA LE	L___irgrid2_Driver_ExtractKtaPixelParameters347
0x2168	0xEC6000  	INC.B	W0
L___irgrid2_Driver_ExtractKtaPixelParameters347:
0x216A	0xBE054F  	POP.D	W10
0x216C	0xE24000  	CP0.B	W0
0x216E	0x32000F  	BRA Z	L___irgrid2_Driver_ExtractKtaPixelParameters97
L___irgrid2_Driver_ExtractKtaPixelParameters348:
;__irgrid2_Driver.c,607 :: 		mlx90640->kta[p] = mlx90640->kta[p] - 8;
0x2170	0x2123E0  	MOV	#4670, W0
0x2172	0x458080  	ADD	W11, W0, W1
0x2174	0x90006E  	MOV	[W14+12], W0
0x2176	0xDD0042  	SL	W0, #2, W0
0x2178	0x408000  	ADD	W1, W0, W0
0x217A	0x980F40  	MOV	W0, [W14+24]
0x217C	0xBE0210  	MOV.D	[W0], W4
0x217E	0x200002  	MOV	#0, W2
0x2180	0x241003  	MOV	#16640, W3
0x2182	0xBE9F8A  	PUSH.D	W10
0x2184	0xBE0004  	MOV.D	W4, W0
0x2186	0x07F397  	RCALL	__Sub_FP
0x2188	0xBE054F  	POP.D	W10
0x218A	0x90094E  	MOV	[W14+24], W2
0x218C	0xBE8900  	MOV.D	W0, [W2]
;__irgrid2_Driver.c,608 :: 		}
L___irgrid2_Driver_ExtractKtaPixelParameters97:
;__irgrid2_Driver.c,609 :: 		mlx90640->kta[p] = mlx90640->kta[p] * (1 << ktaScale2);
0x218E	0x2123E0  	MOV	#4670, W0
0x2190	0x458080  	ADD	W11, W0, W1
0x2192	0x90006E  	MOV	[W14+12], W0
0x2194	0xDD0042  	SL	W0, #2, W0
0x2196	0x408100  	ADD	W1, W0, W2
0x2198	0x980F62  	MOV	W2, [W14+28]
0x219A	0xBE0012  	MOV.D	[W2], W0
0x219C	0x980F40  	MOV	W0, [W14+24]
0x219E	0x980F51  	MOV	W1, [W14+26]
0x21A0	0x470065  	ADD	W14, #5, W0
0x21A2	0xFB8090  	ZE	[W0], W1
0x21A4	0x200010  	MOV	#1, W0
0x21A6	0xDD0001  	SL	W0, W1, W0
0x21A8	0xBE9F8A  	PUSH.D	W10
0x21AA	0xDE80CF  	ASR	W0, #15, W1
0x21AC	0xEB8100  	SETM	W2
0x21AE	0x07F2EE  	RCALL	__Long2Float
0x21B0	0x90094E  	MOV	[W14+24], W2
0x21B2	0x9009DE  	MOV	[W14+26], W3
0x21B4	0x07F114  	RCALL	__Mul_FP
0x21B6	0xBE054F  	POP.D	W10
0x21B8	0x90096E  	MOV	[W14+28], W2
0x21BA	0xBE8900  	MOV.D	W0, [W2]
;__irgrid2_Driver.c,610 :: 		mlx90640->kta[p] = KtaRC[split] + mlx90640->kta[p];
0x21BC	0x2123E0  	MOV	#4670, W0
0x21BE	0x458080  	ADD	W11, W0, W1
0x21C0	0x90006E  	MOV	[W14+12], W0
0x21C2	0xDD0042  	SL	W0, #2, W0
0x21C4	0x408100  	ADD	W1, W0, W2
0x21C6	0x980F62  	MOV	W2, [W14+28]
0x21C8	0x4700E0  	ADD	W14, #0, W1
0x21CA	0x470066  	ADD	W14, #6, W0
0x21CC	0xFB8010  	ZE	[W0], W0
0x21CE	0x408000  	ADD	W1, W0, W0
0x21D0	0x784090  	MOV.B	[W0], W1
0x21D2	0x780002  	MOV	W2, W0
0x21D4	0x980F40  	MOV	W0, [W14+24]
0x21D6	0xBE9F8A  	PUSH.D	W10
0x21D8	0xFB0001  	SE	W1, W0
0x21DA	0xDE80CF  	ASR	W0, #15, W1
0x21DC	0xEB8100  	SETM	W2
0x21DE	0x07F2D6  	RCALL	__Long2Float
0x21E0	0x900A4E  	MOV	[W14+24], W4
0x21E2	0xBE0114  	MOV.D	[W4], W2
0x21E4	0x07F046  	RCALL	__AddSub_FP
0x21E6	0xBE054F  	POP.D	W10
0x21E8	0x90096E  	MOV	[W14+28], W2
0x21EA	0xBE8900  	MOV.D	W0, [W2]
;__irgrid2_Driver.c,611 :: 		mlx90640->kta[p] = mlx90640->kta[p] / _pow(2,(double)ktaScale1);
0x21EC	0x2123E0  	MOV	#4670, W0
0x21EE	0x458080  	ADD	W11, W0, W1
0x21F0	0x90006E  	MOV	[W14+12], W0
0x21F2	0xDD0042  	SL	W0, #2, W0
0x21F4	0x408100  	ADD	W1, W0, W2
0x21F6	0x980F62  	MOV	W2, [W14+28]
0x21F8	0xBE0012  	MOV.D	[W2], W0
0x21FA	0x980F40  	MOV	W0, [W14+24]
0x21FC	0x980F51  	MOV	W1, [W14+26]
0x21FE	0x470164  	ADD	W14, #4, W2
0x2200	0xBE9F8A  	PUSH.D	W10
0x2202	0xFB8012  	ZE	[W2], W0
0x2204	0xEB0080  	CLR	W1
0x2206	0x07F2C2  	RCALL	__Long2Float
0x2208	0xBE0600  	MOV.D	W0, W12
0x220A	0x20000A  	MOV	#0, W10
0x220C	0x24000B  	MOV	#16384, W11
0x220E	0x07F54D  	RCALL	__irgrid2_Driver__pow
0x2210	0x980770  	MOV	W0, [W14+14]
0x2212	0x980F01  	MOV	W1, [W14+16]
0x2214	0x90084E  	MOV	[W14+24], W0
0x2216	0x9008DE  	MOV	[W14+26], W1
0x2218	0x90017E  	MOV	[W14+14], W2
0x221A	0x90098E  	MOV	[W14+16], W3
0x221C	0x07F1C9  	RCALL	__Div_FP
0x221E	0xBE054F  	POP.D	W10
0x2220	0x90096E  	MOV	[W14+28], W2
0x2222	0xBE8900  	MOV.D	W0, [W2]
;__irgrid2_Driver.c,600 :: 		for( j = 0; j < 32; j ++)
0x2224	0x9000DE  	MOV	[W14+10], W1
0x2226	0x47006A  	ADD	W14, #10, W0
0x2228	0x408861  	ADD	W1, #1, [W0]
;__irgrid2_Driver.c,612 :: 		}
0x222A	0x37FF5F  	BRA	L___irgrid2_Driver_ExtractKtaPixelParameters94
L___irgrid2_Driver_ExtractKtaPixelParameters95:
;__irgrid2_Driver.c,598 :: 		for(i = 0; i < 24; i++)
0x222C	0x9000CE  	MOV	[W14+8], W1
0x222E	0x470068  	ADD	W14, #8, W0
0x2230	0x408861  	ADD	W1, #1, [W0]
;__irgrid2_Driver.c,613 :: 		}
0x2232	0x37FF56  	BRA	L___irgrid2_Driver_ExtractKtaPixelParameters91
L___irgrid2_Driver_ExtractKtaPixelParameters92:
;__irgrid2_Driver.c,614 :: 		}
L_end_ExtractKtaPixelParameters:
0x2234	0x7806CF  	POP	W13
0x2236	0x78064F  	POP	W12
0x2238	0xFA8000  	ULNK
0x223A	0x060000  	RETURN
; end of __irgrid2_Driver_ExtractKtaPixelParameters
__irgrid2_Driver_ExtractKvPixelParameters:
0x1DB0	0xFA001C  	LNK	#28
;__irgrid2_Driver.c,616 :: 		static void ExtractKvPixelParameters(uint16_t *eeData, paramsMLX90640 *mlx90640)
;__irgrid2_Driver.c,618 :: 		int p = 0;
0x1DB2	0x781F8C  	PUSH	W12
0x1DB4	0x781F8D  	PUSH	W13
;__irgrid2_Driver.c,630 :: 		KvRoCo = (eeData[52] & 0xF000) >> 12;
0x1DB6	0x200680  	MOV	#104, W0
0x1DB8	0x450000  	ADD	W10, W0, W0
0x1DBA	0x780090  	MOV	[W0], W1
0x1DBC	0x2F0000  	MOV	#61440, W0
0x1DBE	0x608000  	AND	W1, W0, W0
0x1DC0	0xDE004C  	LSR	W0, #12, W0
; KvRoCo start address is: 2 (W1)
0x1DC2	0x784080  	MOV.B	W0, W1
;__irgrid2_Driver.c,631 :: 		if (KvRoCo > 7)
0x1DC4	0xE10467  	CP.B	W0, #7
0x1DC6	0x340003  	BRA LE	L___irgrid2_Driver_ExtractKvPixelParameters223
L___irgrid2_Driver_ExtractKvPixelParameters350:
;__irgrid2_Driver.c,633 :: 		KvRoCo = KvRoCo - 16;
; KvRoCo start address is: 0 (W0)
0x1DC8	0x50C070  	SUB.B	W1, #16, W0
; KvRoCo end address is: 2 (W1)
; KvRoCo end address is: 0 (W0)
0x1DCA	0x784080  	MOV.B	W0, W1
;__irgrid2_Driver.c,634 :: 		}
0x1DCC	0x370000  	BRA	L___irgrid2_Driver_ExtractKvPixelParameters98
L___irgrid2_Driver_ExtractKvPixelParameters223:
;__irgrid2_Driver.c,631 :: 		if (KvRoCo > 7)
;__irgrid2_Driver.c,634 :: 		}
L___irgrid2_Driver_ExtractKvPixelParameters98:
;__irgrid2_Driver.c,635 :: 		KvT[0] = KvRoCo;
; KvRoCo start address is: 2 (W1)
0x1DCE	0x470060  	ADD	W14, #0, W0
0x1DD0	0x784801  	MOV.B	W1, [W0]
; KvRoCo end address is: 2 (W1)
;__irgrid2_Driver.c,637 :: 		KvReCo = (eeData[52] & 0x0F00) >> 8;
0x1DD2	0x200680  	MOV	#104, W0
0x1DD4	0x450000  	ADD	W10, W0, W0
0x1DD6	0x780090  	MOV	[W0], W1
0x1DD8	0x20F000  	MOV	#3840, W0
0x1DDA	0x608000  	AND	W1, W0, W0
0x1DDC	0xDE0048  	LSR	W0, #8, W0
; KvReCo start address is: 2 (W1)
0x1DDE	0x784080  	MOV.B	W0, W1
;__irgrid2_Driver.c,638 :: 		if (KvReCo > 7)
0x1DE0	0xE10467  	CP.B	W0, #7
0x1DE2	0x340003  	BRA LE	L___irgrid2_Driver_ExtractKvPixelParameters224
L___irgrid2_Driver_ExtractKvPixelParameters351:
;__irgrid2_Driver.c,640 :: 		KvReCo = KvReCo - 16;
; KvReCo start address is: 0 (W0)
0x1DE4	0x50C070  	SUB.B	W1, #16, W0
; KvReCo end address is: 2 (W1)
; KvReCo end address is: 0 (W0)
0x1DE6	0x784080  	MOV.B	W0, W1
;__irgrid2_Driver.c,641 :: 		}
0x1DE8	0x370000  	BRA	L___irgrid2_Driver_ExtractKvPixelParameters99
L___irgrid2_Driver_ExtractKvPixelParameters224:
;__irgrid2_Driver.c,638 :: 		if (KvReCo > 7)
;__irgrid2_Driver.c,641 :: 		}
L___irgrid2_Driver_ExtractKvPixelParameters99:
;__irgrid2_Driver.c,642 :: 		KvT[2] = KvReCo;
; KvReCo start address is: 2 (W1)
0x1DEA	0x470060  	ADD	W14, #0, W0
0x1DEC	0xECA000  	INC2	W0
0x1DEE	0x784801  	MOV.B	W1, [W0]
; KvReCo end address is: 2 (W1)
;__irgrid2_Driver.c,644 :: 		KvRoCe = (eeData[52] & 0x00F0) >> 4;
0x1DF0	0x200680  	MOV	#104, W0
0x1DF2	0x450080  	ADD	W10, W0, W1
0x1DF4	0x200F00  	MOV	#240, W0
0x1DF6	0x600011  	AND	W0, [W1], W0
0x1DF8	0xDE0044  	LSR	W0, #4, W0
; KvRoCe start address is: 2 (W1)
0x1DFA	0x784080  	MOV.B	W0, W1
;__irgrid2_Driver.c,645 :: 		if (KvRoCe > 7)
0x1DFC	0xE10467  	CP.B	W0, #7
0x1DFE	0x340003  	BRA LE	L___irgrid2_Driver_ExtractKvPixelParameters225
L___irgrid2_Driver_ExtractKvPixelParameters352:
;__irgrid2_Driver.c,647 :: 		KvRoCe = KvRoCe - 16;
; KvRoCe start address is: 0 (W0)
0x1E00	0x50C070  	SUB.B	W1, #16, W0
; KvRoCe end address is: 2 (W1)
; KvRoCe end address is: 0 (W0)
0x1E02	0x784080  	MOV.B	W0, W1
;__irgrid2_Driver.c,648 :: 		}
0x1E04	0x370000  	BRA	L___irgrid2_Driver_ExtractKvPixelParameters100
L___irgrid2_Driver_ExtractKvPixelParameters225:
;__irgrid2_Driver.c,645 :: 		if (KvRoCe > 7)
;__irgrid2_Driver.c,648 :: 		}
L___irgrid2_Driver_ExtractKvPixelParameters100:
;__irgrid2_Driver.c,649 :: 		KvT[1] = KvRoCe;
; KvRoCe start address is: 2 (W1)
0x1E06	0x470060  	ADD	W14, #0, W0
0x1E08	0xEC2000  	INC	W0
0x1E0A	0x784801  	MOV.B	W1, [W0]
; KvRoCe end address is: 2 (W1)
;__irgrid2_Driver.c,651 :: 		KvReCe = (eeData[52] & 0x000F);
0x1E0C	0x200680  	MOV	#104, W0
0x1E0E	0x450000  	ADD	W10, W0, W0
0x1E10	0x780010  	MOV	[W0], W0
0x1E12	0x60006F  	AND	W0, #15, W0
; KvReCe start address is: 2 (W1)
0x1E14	0x784080  	MOV.B	W0, W1
;__irgrid2_Driver.c,652 :: 		if (KvReCe > 7)
0x1E16	0xE10467  	CP.B	W0, #7
0x1E18	0x340003  	BRA LE	L___irgrid2_Driver_ExtractKvPixelParameters226
L___irgrid2_Driver_ExtractKvPixelParameters353:
;__irgrid2_Driver.c,654 :: 		KvReCe = KvReCe - 16;
; KvReCe start address is: 0 (W0)
0x1E1A	0x50C070  	SUB.B	W1, #16, W0
; KvReCe end address is: 2 (W1)
; KvReCe end address is: 0 (W0)
0x1E1C	0x784080  	MOV.B	W0, W1
;__irgrid2_Driver.c,655 :: 		}
0x1E1E	0x370000  	BRA	L___irgrid2_Driver_ExtractKvPixelParameters101
L___irgrid2_Driver_ExtractKvPixelParameters226:
;__irgrid2_Driver.c,652 :: 		if (KvReCe > 7)
;__irgrid2_Driver.c,655 :: 		}
L___irgrid2_Driver_ExtractKvPixelParameters101:
;__irgrid2_Driver.c,656 :: 		KvT[3] = KvReCe;
; KvReCe start address is: 2 (W1)
0x1E20	0x470060  	ADD	W14, #0, W0
0x1E22	0x400063  	ADD	W0, #3, W0
0x1E24	0x784801  	MOV.B	W1, [W0]
; KvReCe end address is: 2 (W1)
;__irgrid2_Driver.c,658 :: 		kvScale = (eeData[56] & 0x0F00) >> 8;
0x1E26	0x200700  	MOV	#112, W0
0x1E28	0x450000  	ADD	W10, W0, W0
0x1E2A	0x780090  	MOV	[W0], W1
0x1E2C	0x20F000  	MOV	#3840, W0
0x1E2E	0x608000  	AND	W1, W0, W0
0x1E30	0xDE0048  	LSR	W0, #8, W0
0x1E32	0x984740  	MOV.B	W0, [W14+4]
;__irgrid2_Driver.c,661 :: 		for(i = 0; i < 24; i++)
0x1E34	0xEF2000  	CLR	W0
0x1E36	0x980730  	MOV	W0, [W14+6]
L___irgrid2_Driver_ExtractKvPixelParameters102:
0x1E38	0x90003E  	MOV	[W14+6], W0
0x1E3A	0xE10078  	CP	W0, #24
0x1E3C	0x3D0055  	BRA GE	L___irgrid2_Driver_ExtractKvPixelParameters103
L___irgrid2_Driver_ExtractKvPixelParameters354:
;__irgrid2_Driver.c,663 :: 		for(j = 0; j < 32; j ++)
0x1E3E	0xEF2000  	CLR	W0
0x1E40	0x980740  	MOV	W0, [W14+8]
L___irgrid2_Driver_ExtractKvPixelParameters105:
0x1E42	0x200201  	MOV	#32, W1
0x1E44	0x470068  	ADD	W14, #8, W0
0x1E46	0xE10810  	CP	W1, [W0]
0x1E48	0x34004B  	BRA LE	L___irgrid2_Driver_ExtractKvPixelParameters106
L___irgrid2_Driver_ExtractKvPixelParameters355:
;__irgrid2_Driver.c,665 :: 		p = 32 * i +j;
0x1E4A	0x90003E  	MOV	[W14+6], W0
0x1E4C	0xDD00C5  	SL	W0, #5, W1
0x1E4E	0x470068  	ADD	W14, #8, W0
0x1E50	0x408010  	ADD	W1, [W0], W0
0x1E52	0x980F50  	MOV	W0, [W14+26]
0x1E54	0x980750  	MOV	W0, [W14+10]
;__irgrid2_Driver.c,666 :: 		split = 2*(p/32 - (p/64)*2) + p%2;
0x1E56	0x200202  	MOV	#32, W2
0x1E58	0x090011  	REPEAT	#17
0x1E5A	0xD80002  	DIV.S	W0, W2
0x1E5C	0x980F30  	MOV	W0, [W14+22]
0x1E5E	0x200402  	MOV	#64, W2
0x1E60	0x90085E  	MOV	[W14+26], W0
0x1E62	0x090011  	REPEAT	#17
0x1E64	0xD80002  	DIV.S	W0, W2
0x1E66	0xDD0141  	SL	W0, #1, W2
0x1E68	0x90083E  	MOV	[W14+22], W0
0x1E6A	0x500002  	SUB	W0, W2, W0
0x1E6C	0xDD0041  	SL	W0, #1, W0
0x1E6E	0x980F30  	MOV	W0, [W14+22]
0x1E70	0x200022  	MOV	#2, W2
0x1E72	0x90085E  	MOV	[W14+26], W0
0x1E74	0x090011  	REPEAT	#17
0x1E76	0xD80002  	DIV.S	W0, W2
0x1E78	0x90083E  	MOV	[W14+22], W0
0x1E7A	0x400101  	ADD	W0, W1, W2
;__irgrid2_Driver.c,667 :: 		mlx90640->kv[p] = KvT[split];
0x1E7C	0x21E3E0  	MOV	#7742, W0
0x1E7E	0x458080  	ADD	W11, W0, W1
0x1E80	0x90085E  	MOV	[W14+26], W0
0x1E82	0xDD0042  	SL	W0, #2, W0
0x1E84	0x408000  	ADD	W1, W0, W0
0x1E86	0x980F30  	MOV	W0, [W14+22]
0x1E88	0x4700E0  	ADD	W14, #0, W1
0x1E8A	0xFB8002  	ZE	W2, W0
0x1E8C	0x408000  	ADD	W1, W0, W0
0x1E8E	0x784010  	MOV.B	[W0], W0
0x1E90	0xBE9F8A  	PUSH.D	W10
0x1E92	0xFB0000  	SE	W0, W0
0x1E94	0xDE80CF  	ASR	W0, #15, W1
0x1E96	0xEB8100  	SETM	W2
0x1E98	0x07F479  	RCALL	__Long2Float
0x1E9A	0xBE054F  	POP.D	W10
0x1E9C	0x90093E  	MOV	[W14+22], W2
0x1E9E	0xBE8900  	MOV.D	W0, [W2]
;__irgrid2_Driver.c,668 :: 		mlx90640->kv[p] = mlx90640->kv[p] / _pow(2,(double)kvScale);
0x1EA0	0x21E3E0  	MOV	#7742, W0
0x1EA2	0x458080  	ADD	W11, W0, W1
0x1EA4	0x90005E  	MOV	[W14+10], W0
0x1EA6	0xDD0042  	SL	W0, #2, W0
0x1EA8	0x408100  	ADD	W1, W0, W2
0x1EAA	0x980F52  	MOV	W2, [W14+26]
0x1EAC	0xBE0012  	MOV.D	[W2], W0
0x1EAE	0x980F30  	MOV	W0, [W14+22]
0x1EB0	0x980F41  	MOV	W1, [W14+24]
0x1EB2	0x470164  	ADD	W14, #4, W2
0x1EB4	0xBE9F8A  	PUSH.D	W10
0x1EB6	0xFB8012  	ZE	[W2], W0
0x1EB8	0xEB0080  	CLR	W1
0x1EBA	0x07F468  	RCALL	__Long2Float
0x1EBC	0xBE0600  	MOV.D	W0, W12
0x1EBE	0x20000A  	MOV	#0, W10
0x1EC0	0x24000B  	MOV	#16384, W11
0x1EC2	0x07F6F3  	RCALL	__irgrid2_Driver__pow
0x1EC4	0x980760  	MOV	W0, [W14+12]
0x1EC6	0x980771  	MOV	W1, [W14+14]
0x1EC8	0x90083E  	MOV	[W14+22], W0
0x1ECA	0x9008CE  	MOV	[W14+24], W1
0x1ECC	0x90016E  	MOV	[W14+12], W2
0x1ECE	0x9001FE  	MOV	[W14+14], W3
0x1ED0	0x07F36F  	RCALL	__Div_FP
0x1ED2	0xBE054F  	POP.D	W10
0x1ED4	0x90095E  	MOV	[W14+26], W2
0x1ED6	0xBE8900  	MOV.D	W0, [W2]
;__irgrid2_Driver.c,663 :: 		for(j = 0; j < 32; j ++)
0x1ED8	0x9000CE  	MOV	[W14+8], W1
0x1EDA	0x470068  	ADD	W14, #8, W0
0x1EDC	0x408861  	ADD	W1, #1, [W0]
;__irgrid2_Driver.c,669 :: 		}
0x1EDE	0x37FFB1  	BRA	L___irgrid2_Driver_ExtractKvPixelParameters105
L___irgrid2_Driver_ExtractKvPixelParameters106:
;__irgrid2_Driver.c,661 :: 		for(i = 0; i < 24; i++)
0x1EE0	0x9000BE  	MOV	[W14+6], W1
0x1EE2	0x470066  	ADD	W14, #6, W0
0x1EE4	0x408861  	ADD	W1, #1, [W0]
;__irgrid2_Driver.c,670 :: 		}
0x1EE6	0x37FFA8  	BRA	L___irgrid2_Driver_ExtractKvPixelParameters102
L___irgrid2_Driver_ExtractKvPixelParameters103:
;__irgrid2_Driver.c,671 :: 		}
L_end_ExtractKvPixelParameters:
0x1EE8	0x7806CF  	POP	W13
0x1EEA	0x78064F  	POP	W12
0x1EEC	0xFA8000  	ULNK
0x1EEE	0x060000  	RETURN
; end of __irgrid2_Driver_ExtractKvPixelParameters
__irgrid2_Driver_ExtractCPParameters:
0x17FA	0xFA0026  	LNK	#38
;__irgrid2_Driver.c,673 :: 		static void ExtractCPParameters(uint16_t *eeData, paramsMLX90640 *mlx90640)
;__irgrid2_Driver.c,683 :: 		alphaScale = ((eeData[32] & 0xF000) >> 12) + 27;
0x17FC	0x781F8A  	PUSH	W10
0x17FE	0x781F8C  	PUSH	W12
0x1800	0x781F8D  	PUSH	W13
0x1802	0x200400  	MOV	#64, W0
0x1804	0x450000  	ADD	W10, W0, W0
0x1806	0x780090  	MOV	[W0], W1
0x1808	0x2F0000  	MOV	#61440, W0
0x180A	0x608000  	AND	W1, W0, W0
0x180C	0xDE00CC  	LSR	W0, #12, W1
0x180E	0x470074  	ADD	W14, #20, W0
0x1810	0x40C87B  	ADD.B	W1, #27, [W0]
;__irgrid2_Driver.c,685 :: 		offsetSP[0] = (eeData[58] & 0x03FF);
0x1812	0x470168  	ADD	W14, #8, W2
0x1814	0x200740  	MOV	#116, W0
0x1816	0x450000  	ADD	W10, W0, W0
0x1818	0x780090  	MOV	[W0], W1
0x181A	0x203FF0  	MOV	#1023, W0
0x181C	0x608900  	AND	W1, W0, [W2]
;__irgrid2_Driver.c,686 :: 		if (offsetSP[0] > 511)
0x181E	0x780092  	MOV	[W2], W1
0x1820	0x201FF0  	MOV	#511, W0
0x1822	0xE10800  	CP	W1, W0
0x1824	0x340004  	BRA LE	L___irgrid2_Driver_ExtractCPParameters108
L___irgrid2_Driver_ExtractCPParameters357:
;__irgrid2_Driver.c,688 :: 		offsetSP[0] = offsetSP[0] - 1024;
0x1826	0x470168  	ADD	W14, #8, W2
0x1828	0x780092  	MOV	[W2], W1
0x182A	0x204000  	MOV	#1024, W0
0x182C	0x508900  	SUB	W1, W0, [W2]
;__irgrid2_Driver.c,689 :: 		}
L___irgrid2_Driver_ExtractCPParameters108:
;__irgrid2_Driver.c,691 :: 		offsetSP[1] = (eeData[58] & 0xFC00) >> 10;
0x182E	0x4701E8  	ADD	W14, #8, W3
0x1830	0x418162  	ADD	W3, #2, W2
0x1832	0x200740  	MOV	#116, W0
0x1834	0x450000  	ADD	W10, W0, W0
0x1836	0x780090  	MOV	[W0], W1
0x1838	0x2FC000  	MOV	#64512, W0
0x183A	0x608000  	AND	W1, W0, W0
0x183C	0xDE004A  	LSR	W0, #10, W0
0x183E	0x780900  	MOV	W0, [W2]
;__irgrid2_Driver.c,692 :: 		if (offsetSP[1] > 31)
0x1840	0x418062  	ADD	W3, #2, W0
0x1842	0x780010  	MOV	[W0], W0
0x1844	0xE1007F  	CP	W0, #31
0x1846	0x340006  	BRA LE	L___irgrid2_Driver_ExtractCPParameters109
L___irgrid2_Driver_ExtractCPParameters358:
;__irgrid2_Driver.c,694 :: 		offsetSP[1] = offsetSP[1] - 64;
0x1848	0x470068  	ADD	W14, #8, W0
0x184A	0x400162  	ADD	W0, #2, W2
0x184C	0x4000E2  	ADD	W0, #2, W1
0x184E	0x200400  	MOV	#64, W0
0x1850	0x100011  	SUBR	W0, [W1], W0
0x1852	0x780900  	MOV	W0, [W2]
;__irgrid2_Driver.c,695 :: 		}
L___irgrid2_Driver_ExtractCPParameters109:
;__irgrid2_Driver.c,696 :: 		offsetSP[1] = offsetSP[1] + offsetSP[0];
0x1854	0x470068  	ADD	W14, #8, W0
0x1856	0x400162  	ADD	W0, #2, W2
0x1858	0x4000E2  	ADD	W0, #2, W1
0x185A	0x780010  	MOV	[W0], W0
0x185C	0x400911  	ADD	W0, [W1], [W2]
;__irgrid2_Driver.c,698 :: 		alphaSP[0] = (eeData[57] & 0x03FF);
0x185E	0x470060  	ADD	W14, #0, W0
0x1860	0x981720  	MOV	W0, [W14+36]
0x1862	0x981700  	MOV	W0, [W14+32]
0x1864	0x200720  	MOV	#114, W0
0x1866	0x450000  	ADD	W10, W0, W0
0x1868	0x780090  	MOV	[W0], W1
0x186A	0x203FF0  	MOV	#1023, W0
0x186C	0x608000  	AND	W1, W0, W0
0x186E	0xBE9F8A  	PUSH.D	W10
0x1870	0xEB0080  	CLR	W1
0x1872	0x07F78C  	RCALL	__Long2Float
0x1874	0x90110E  	MOV	[W14+32], W2
0x1876	0xBE8900  	MOV.D	W0, [W2]
;__irgrid2_Driver.c,699 :: 		if (alphaSP[0] > 511)
0x1878	0x90112E  	MOV	[W14+36], W2
0x187A	0xBE0012  	MOV.D	[W2], W0
0x187C	0x280002  	MOV	#32768, W2
0x187E	0x243FF3  	MOV	#17407, W3
0x1880	0x07F677  	RCALL	__Compare_Ge_Fp
0x1882	0xE00000  	CP0	W0
0x1884	0xEF6000  	CLR.B	W0
0x1886	0x340001  	BRA LE	L___irgrid2_Driver_ExtractCPParameters359
0x1888	0xEC6000  	INC.B	W0
L___irgrid2_Driver_ExtractCPParameters359:
0x188A	0xBE054F  	POP.D	W10
0x188C	0xE24000  	CP0.B	W0
0x188E	0x32000B  	BRA Z	L___irgrid2_Driver_ExtractCPParameters110
L___irgrid2_Driver_ExtractCPParameters360:
;__irgrid2_Driver.c,701 :: 		alphaSP[0] = alphaSP[0] - 1024;
0x1890	0x470160  	ADD	W14, #0, W2
0x1892	0x780002  	MOV	W2, W0
0x1894	0x981700  	MOV	W0, [W14+32]
0x1896	0xBE0012  	MOV.D	[W2], W0
0x1898	0x200002  	MOV	#0, W2
0x189A	0x244803  	MOV	#17536, W3
0x189C	0xBE9F8A  	PUSH.D	W10
0x189E	0x07F80B  	RCALL	__Sub_FP
0x18A0	0xBE054F  	POP.D	W10
0x18A2	0x90110E  	MOV	[W14+32], W2
0x18A4	0xBE8900  	MOV.D	W0, [W2]
;__irgrid2_Driver.c,702 :: 		}
L___irgrid2_Driver_ExtractCPParameters110:
;__irgrid2_Driver.c,703 :: 		alphaSP[0] = alphaSP[0] /  _pow(2,(double)alphaScale);
0x18A6	0x470160  	ADD	W14, #0, W2
0x18A8	0x780002  	MOV	W2, W0
0x18AA	0x981720  	MOV	W0, [W14+36]
0x18AC	0xBE0012  	MOV.D	[W2], W0
0x18AE	0x981700  	MOV	W0, [W14+32]
0x18B0	0x981711  	MOV	W1, [W14+34]
0x18B2	0x470174  	ADD	W14, #20, W2
0x18B4	0xBE9F8A  	PUSH.D	W10
0x18B6	0xFB8012  	ZE	[W2], W0
0x18B8	0xEB0080  	CLR	W1
0x18BA	0x07F768  	RCALL	__Long2Float
0x18BC	0xBE0600  	MOV.D	W0, W12
0x18BE	0x20000A  	MOV	#0, W10
0x18C0	0x24000B  	MOV	#16384, W11
0x18C2	0x07F9F3  	RCALL	__irgrid2_Driver__pow
0x18C4	0x980F30  	MOV	W0, [W14+22]
0x18C6	0x980F41  	MOV	W1, [W14+24]
0x18C8	0x90100E  	MOV	[W14+32], W0
0x18CA	0x90109E  	MOV	[W14+34], W1
0x18CC	0x90093E  	MOV	[W14+22], W2
0x18CE	0x9009CE  	MOV	[W14+24], W3
0x18D0	0x07F66F  	RCALL	__Div_FP
0x18D2	0xBE054F  	POP.D	W10
0x18D4	0x90112E  	MOV	[W14+36], W2
0x18D6	0xBE8900  	MOV.D	W0, [W2]
;__irgrid2_Driver.c,705 :: 		alphaSP[1] = (eeData[57] & 0xFC00) >> 10;
0x18D8	0x470060  	ADD	W14, #0, W0
0x18DA	0x981720  	MOV	W0, [W14+36]
0x18DC	0x400064  	ADD	W0, #4, W0
0x18DE	0x981700  	MOV	W0, [W14+32]
0x18E0	0x200720  	MOV	#114, W0
0x18E2	0x450000  	ADD	W10, W0, W0
0x18E4	0x780090  	MOV	[W0], W1
0x18E6	0x2FC000  	MOV	#64512, W0
0x18E8	0x608000  	AND	W1, W0, W0
0x18EA	0xDE004A  	LSR	W0, #10, W0
0x18EC	0xBE9F8A  	PUSH.D	W10
0x18EE	0xEB0080  	CLR	W1
0x18F0	0x07F74D  	RCALL	__Long2Float
0x18F2	0x90110E  	MOV	[W14+32], W2
0x18F4	0xBE8900  	MOV.D	W0, [W2]
;__irgrid2_Driver.c,706 :: 		if (alphaSP[1] > 31)
0x18F6	0x90102E  	MOV	[W14+36], W0
0x18F8	0x400164  	ADD	W0, #4, W2
0x18FA	0xBE0012  	MOV.D	[W2], W0
0x18FC	0x200002  	MOV	#0, W2
0x18FE	0x241F83  	MOV	#16888, W3
0x1900	0x07F637  	RCALL	__Compare_Ge_Fp
0x1902	0xE00000  	CP0	W0
0x1904	0xEF6000  	CLR.B	W0
0x1906	0x340001  	BRA LE	L___irgrid2_Driver_ExtractCPParameters361
0x1908	0xEC6000  	INC.B	W0
L___irgrid2_Driver_ExtractCPParameters361:
0x190A	0xBE054F  	POP.D	W10
0x190C	0xE24000  	CP0.B	W0
0x190E	0x32000D  	BRA Z	L___irgrid2_Driver_ExtractCPParameters111
L___irgrid2_Driver_ExtractCPParameters362:
;__irgrid2_Driver.c,708 :: 		alphaSP[1] = alphaSP[1] - 64;
0x1910	0x4700E0  	ADD	W14, #0, W1
0x1912	0x408064  	ADD	W1, #4, W0
0x1914	0x981700  	MOV	W0, [W14+32]
0x1916	0x408064  	ADD	W1, #4, W0
0x1918	0xBE0210  	MOV.D	[W0], W4
0x191A	0x200002  	MOV	#0, W2
0x191C	0x242803  	MOV	#17024, W3
0x191E	0xBE9F8A  	PUSH.D	W10
0x1920	0xBE0004  	MOV.D	W4, W0
0x1922	0x07F7C9  	RCALL	__Sub_FP
0x1924	0xBE054F  	POP.D	W10
0x1926	0x90110E  	MOV	[W14+32], W2
0x1928	0xBE8900  	MOV.D	W0, [W2]
;__irgrid2_Driver.c,709 :: 		}
L___irgrid2_Driver_ExtractCPParameters111:
;__irgrid2_Driver.c,710 :: 		alphaSP[1] = (1 + alphaSP[1]/128) * alphaSP[0];
0x192A	0x4700E0  	ADD	W14, #0, W1
0x192C	0x981721  	MOV	W1, [W14+36]
0x192E	0x408064  	ADD	W1, #4, W0
0x1930	0x981700  	MOV	W0, [W14+32]
0x1932	0x408164  	ADD	W1, #4, W2
0x1934	0xBE0012  	MOV.D	[W2], W0
0x1936	0xBE9F8A  	PUSH.D	W10
0x1938	0x200002  	MOV	#0, W2
0x193A	0x243003  	MOV	#17152, W3
0x193C	0x07F639  	RCALL	__Div_FP
0x193E	0x200002  	MOV	#0, W2
0x1940	0x23F803  	MOV	#16256, W3
0x1942	0x07F497  	RCALL	__AddSub_FP
0x1944	0x90122E  	MOV	[W14+36], W4
0x1946	0xBE0114  	MOV.D	[W4], W2
0x1948	0x07F54A  	RCALL	__Mul_FP
0x194A	0xBE054F  	POP.D	W10
0x194C	0x90110E  	MOV	[W14+32], W2
0x194E	0xBE8900  	MOV.D	W0, [W2]
;__irgrid2_Driver.c,712 :: 		cpKta = (eeData[59] & 0x00FF);
0x1950	0x200760  	MOV	#118, W0
0x1952	0x450080  	ADD	W10, W0, W1
0x1954	0x200FF0  	MOV	#255, W0
0x1956	0x600011  	AND	W0, [W1], W0
0x1958	0xBE9F8A  	PUSH.D	W10
0x195A	0xEB0080  	CLR	W1
0x195C	0x07F717  	RCALL	__Long2Float
0x195E	0x980F00  	MOV	W0, [W14+16]
0x1960	0x980F11  	MOV	W1, [W14+18]
;__irgrid2_Driver.c,713 :: 		if (cpKta > 127)
0x1962	0x200002  	MOV	#0, W2
0x1964	0x242FE3  	MOV	#17150, W3
0x1966	0x07F604  	RCALL	__Compare_Ge_Fp
0x1968	0xE00000  	CP0	W0
0x196A	0xEF6000  	CLR.B	W0
0x196C	0x340001  	BRA LE	L___irgrid2_Driver_ExtractCPParameters363
0x196E	0xEC6000  	INC.B	W0
L___irgrid2_Driver_ExtractCPParameters363:
0x1970	0xBE054F  	POP.D	W10
0x1972	0xE24000  	CP0.B	W0
0x1974	0x320009  	BRA Z	L___irgrid2_Driver_ExtractCPParameters112
L___irgrid2_Driver_ExtractCPParameters364:
;__irgrid2_Driver.c,715 :: 		cpKta = cpKta - 256;
0x1976	0x90080E  	MOV	[W14+16], W0
0x1978	0x90089E  	MOV	[W14+18], W1
0x197A	0x200002  	MOV	#0, W2
0x197C	0x243803  	MOV	#17280, W3
0x197E	0xBE9F8A  	PUSH.D	W10
0x1980	0x07F79A  	RCALL	__Sub_FP
0x1982	0xBE054F  	POP.D	W10
0x1984	0x980F00  	MOV	W0, [W14+16]
0x1986	0x980F11  	MOV	W1, [W14+18]
;__irgrid2_Driver.c,716 :: 		}
L___irgrid2_Driver_ExtractCPParameters112:
;__irgrid2_Driver.c,717 :: 		ktaScale1 = ((eeData[56] & 0x00F0) >> 4) + 8;
0x1988	0x200700  	MOV	#112, W0
0x198A	0x450080  	ADD	W10, W0, W1
0x198C	0x200F00  	MOV	#240, W0
0x198E	0x600011  	AND	W0, [W1], W0
0x1990	0xDE0044  	LSR	W0, #4, W0
0x1992	0x4000E8  	ADD	W0, #8, W1
;__irgrid2_Driver.c,718 :: 		mlx90640->cpKta = cpKta / _pow(2,(double)ktaScale1);
0x1994	0x45807C  	ADD	W11, #28, W0
0x1996	0x981700  	MOV	W0, [W14+32]
0x1998	0xBE9F8A  	PUSH.D	W10
0x199A	0xFB8001  	ZE	W1, W0
0x199C	0xEB0080  	CLR	W1
0x199E	0x07F6F6  	RCALL	__Long2Float
0x19A0	0xBE0600  	MOV.D	W0, W12
0x19A2	0x20000A  	MOV	#0, W10
0x19A4	0x24000B  	MOV	#16384, W11
0x19A6	0x07F981  	RCALL	__irgrid2_Driver__pow
0x19A8	0x980F30  	MOV	W0, [W14+22]
0x19AA	0x980F41  	MOV	W1, [W14+24]
0x19AC	0x90093E  	MOV	[W14+22], W2
0x19AE	0x9009CE  	MOV	[W14+24], W3
0x19B0	0x90080E  	MOV	[W14+16], W0
0x19B2	0x90089E  	MOV	[W14+18], W1
0x19B4	0x07F5FD  	RCALL	__Div_FP
0x19B6	0xBE054F  	POP.D	W10
0x19B8	0x90110E  	MOV	[W14+32], W2
0x19BA	0xBE8900  	MOV.D	W0, [W2]
;__irgrid2_Driver.c,720 :: 		cpKv = (eeData[59] & 0xFF00) >> 8;
0x19BC	0x200760  	MOV	#118, W0
0x19BE	0x450000  	ADD	W10, W0, W0
0x19C0	0x780090  	MOV	[W0], W1
0x19C2	0x2FF000  	MOV	#65280, W0
0x19C4	0x608000  	AND	W1, W0, W0
0x19C6	0xDE0048  	LSR	W0, #8, W0
0x19C8	0xBE9F8A  	PUSH.D	W10
0x19CA	0xEB0080  	CLR	W1
0x19CC	0x07F6DF  	RCALL	__Long2Float
0x19CE	0x980760  	MOV	W0, [W14+12]
0x19D0	0x980771  	MOV	W1, [W14+14]
;__irgrid2_Driver.c,721 :: 		if (cpKv > 127)
0x19D2	0x200002  	MOV	#0, W2
0x19D4	0x242FE3  	MOV	#17150, W3
0x19D6	0x07F5CC  	RCALL	__Compare_Ge_Fp
0x19D8	0xE00000  	CP0	W0
0x19DA	0xEF6000  	CLR.B	W0
0x19DC	0x340001  	BRA LE	L___irgrid2_Driver_ExtractCPParameters365
0x19DE	0xEC6000  	INC.B	W0
L___irgrid2_Driver_ExtractCPParameters365:
0x19E0	0xBE054F  	POP.D	W10
0x19E2	0xE24000  	CP0.B	W0
0x19E4	0x320009  	BRA Z	L___irgrid2_Driver_ExtractCPParameters113
L___irgrid2_Driver_ExtractCPParameters366:
;__irgrid2_Driver.c,723 :: 		cpKv = cpKv - 256;
0x19E6	0x90006E  	MOV	[W14+12], W0
0x19E8	0x9000FE  	MOV	[W14+14], W1
0x19EA	0x200002  	MOV	#0, W2
0x19EC	0x243803  	MOV	#17280, W3
0x19EE	0xBE9F8A  	PUSH.D	W10
0x19F0	0x07F762  	RCALL	__Sub_FP
0x19F2	0xBE054F  	POP.D	W10
0x19F4	0x980760  	MOV	W0, [W14+12]
0x19F6	0x980771  	MOV	W1, [W14+14]
;__irgrid2_Driver.c,724 :: 		}
L___irgrid2_Driver_ExtractCPParameters113:
;__irgrid2_Driver.c,725 :: 		kvScale = (eeData[56] & 0x0F00) >> 8;
0x19F8	0x200700  	MOV	#112, W0
0x19FA	0x450000  	ADD	W10, W0, W0
0x19FC	0x780090  	MOV	[W0], W1
0x19FE	0x20F000  	MOV	#3840, W0
0x1A00	0x608000  	AND	W1, W0, W0
0x1A02	0xDE00C8  	LSR	W0, #8, W1
;__irgrid2_Driver.c,726 :: 		mlx90640->cpKv = cpKv / _pow(2,(double)kvScale);
0x1A04	0x458078  	ADD	W11, #24, W0
0x1A06	0x981700  	MOV	W0, [W14+32]
0x1A08	0x781F8B  	PUSH	W11
0x1A0A	0xFB8001  	ZE	W1, W0
0x1A0C	0xEB0080  	CLR	W1
0x1A0E	0x07F6BE  	RCALL	__Long2Float
0x1A10	0xBE0600  	MOV.D	W0, W12
0x1A12	0x20000A  	MOV	#0, W10
0x1A14	0x24000B  	MOV	#16384, W11
0x1A16	0x07F949  	RCALL	__irgrid2_Driver__pow
0x1A18	0x980F30  	MOV	W0, [W14+22]
0x1A1A	0x980F41  	MOV	W1, [W14+24]
0x1A1C	0x90093E  	MOV	[W14+22], W2
0x1A1E	0x9009CE  	MOV	[W14+24], W3
0x1A20	0x90006E  	MOV	[W14+12], W0
0x1A22	0x9000FE  	MOV	[W14+14], W1
0x1A24	0x07F5C5  	RCALL	__Div_FP
0x1A26	0x7805CF  	POP	W11
0x1A28	0x90110E  	MOV	[W14+32], W2
0x1A2A	0xBE8900  	MOV.D	W0, [W2]
;__irgrid2_Driver.c,728 :: 		mlx90640->cpAlpha[0] = alphaSP[0];
0x1A2C	0x22A3E0  	MOV	#10814, W0
0x1A2E	0x458000  	ADD	W11, W0, W0
0x1A30	0x470160  	ADD	W14, #0, W2
0x1A32	0x781832  	MOV	[W2++], [W0++]
0x1A34	0x781022  	MOV	[W2--], [W0--]
;__irgrid2_Driver.c,729 :: 		mlx90640->cpAlpha[1] = alphaSP[1];
0x1A36	0x22A3E0  	MOV	#10814, W0
0x1A38	0x458000  	ADD	W11, W0, W0
0x1A3A	0x4000E4  	ADD	W0, #4, W1
0x1A3C	0x410064  	ADD	W2, #4, W0
0x1A3E	0x7818B0  	MOV	[W0++], [W1++]
0x1A40	0x7810A0  	MOV	[W0--], [W1--]
;__irgrid2_Driver.c,730 :: 		mlx90640->cpOffset[0] = offsetSP[0];
0x1A42	0x22A460  	MOV	#10822, W0
0x1A44	0x458000  	ADD	W11, W0, W0
0x1A46	0x470168  	ADD	W14, #8, W2
0x1A48	0x780812  	MOV	[W2], [W0]
;__irgrid2_Driver.c,731 :: 		mlx90640->cpOffset[1] = offsetSP[1];
0x1A4A	0x22A460  	MOV	#10822, W0
0x1A4C	0x458000  	ADD	W11, W0, W0
0x1A4E	0x4000E2  	ADD	W0, #2, W1
0x1A50	0x410062  	ADD	W2, #2, W0
0x1A52	0x780890  	MOV	[W0], [W1]
;__irgrid2_Driver.c,732 :: 		}
L_end_ExtractCPParameters:
0x1A54	0x7806CF  	POP	W13
0x1A56	0x78064F  	POP	W12
0x1A58	0x78054F  	POP	W10
0x1A5A	0xFA8000  	ULNK
0x1A5C	0x060000  	RETURN
; end of __irgrid2_Driver_ExtractCPParameters
__irgrid2_Driver_ExtractCILCParameters:
0x1688	0xFA0016  	LNK	#22
;__irgrid2_Driver.c,734 :: 		static void ExtractCILCParameters(uint16_t *eeData, paramsMLX90640 *mlx90640)
;__irgrid2_Driver.c,739 :: 		calibrationModeEE = (eeData[10] & 0x0800) >> 4;
0x168A	0x450074  	ADD	W10, #20, W0
0x168C	0x780090  	MOV	[W0], W1
0x168E	0x208000  	MOV	#2048, W0
0x1690	0x608000  	AND	W1, W0, W0
0x1692	0xDE0144  	LSR	W0, #4, W2
;__irgrid2_Driver.c,740 :: 		calibrationModeEE = calibrationModeEE ^ 0x80;
0x1694	0xB3C801  	MOV.B	#128, W1
0x1696	0x47006C  	ADD	W14, #12, W0
0x1698	0x694801  	XOR.B	W2, W1, [W0]
;__irgrid2_Driver.c,742 :: 		ilChessC[0] = (eeData[53] & 0x003F);
0x169A	0x470060  	ADD	W14, #0, W0
0x169C	0x980F20  	MOV	W0, [W14+20]
0x169E	0x980F10  	MOV	W0, [W14+18]
0x16A0	0x2006A0  	MOV	#106, W0
0x16A2	0x450080  	ADD	W10, W0, W1
0x16A4	0x2003F0  	MOV	#63, W0
0x16A6	0x600011  	AND	W0, [W1], W0
0x16A8	0xBE9F8A  	PUSH.D	W10
0x16AA	0xEB0080  	CLR	W1
0x16AC	0x07F86F  	RCALL	__Long2Float
0x16AE	0x90091E  	MOV	[W14+18], W2
0x16B0	0xBE8900  	MOV.D	W0, [W2]
;__irgrid2_Driver.c,743 :: 		if (ilChessC[0] > 31)
0x16B2	0x90092E  	MOV	[W14+20], W2
0x16B4	0xBE0012  	MOV.D	[W2], W0
0x16B6	0x200002  	MOV	#0, W2
0x16B8	0x241F83  	MOV	#16888, W3
0x16BA	0x07F75A  	RCALL	__Compare_Ge_Fp
0x16BC	0xE00000  	CP0	W0
0x16BE	0xEF6000  	CLR.B	W0
0x16C0	0x340001  	BRA LE	L___irgrid2_Driver_ExtractCILCParameters368
0x16C2	0xEC6000  	INC.B	W0
L___irgrid2_Driver_ExtractCILCParameters368:
0x16C4	0xBE054F  	POP.D	W10
0x16C6	0xE24000  	CP0.B	W0
0x16C8	0x32000B  	BRA Z	L___irgrid2_Driver_ExtractCILCParameters114
L___irgrid2_Driver_ExtractCILCParameters369:
;__irgrid2_Driver.c,745 :: 		ilChessC[0] = ilChessC[0] - 64;
0x16CA	0x470160  	ADD	W14, #0, W2
0x16CC	0x780002  	MOV	W2, W0
0x16CE	0x980F10  	MOV	W0, [W14+18]
0x16D0	0xBE0012  	MOV.D	[W2], W0
0x16D2	0x200002  	MOV	#0, W2
0x16D4	0x242803  	MOV	#17024, W3
0x16D6	0xBE9F8A  	PUSH.D	W10
0x16D8	0x07F8EE  	RCALL	__Sub_FP
0x16DA	0xBE054F  	POP.D	W10
0x16DC	0x90091E  	MOV	[W14+18], W2
0x16DE	0xBE8900  	MOV.D	W0, [W2]
;__irgrid2_Driver.c,746 :: 		}
L___irgrid2_Driver_ExtractCILCParameters114:
;__irgrid2_Driver.c,747 :: 		ilChessC[0] = ilChessC[0] / 16.0f;
0x16E0	0x470160  	ADD	W14, #0, W2
0x16E2	0x980F22  	MOV	W2, [W14+20]
0x16E4	0x780002  	MOV	W2, W0
0x16E6	0x980F10  	MOV	W0, [W14+18]
0x16E8	0xBE0012  	MOV.D	[W2], W0
0x16EA	0xBE9F8A  	PUSH.D	W10
0x16EC	0x200002  	MOV	#0, W2
0x16EE	0x241803  	MOV	#16768, W3
0x16F0	0x07F75F  	RCALL	__Div_FP
0x16F2	0xBE054F  	POP.D	W10
0x16F4	0x90091E  	MOV	[W14+18], W2
0x16F6	0xBE8900  	MOV.D	W0, [W2]
;__irgrid2_Driver.c,749 :: 		ilChessC[1] = (eeData[53] & 0x07C0) >> 6;
0x16F8	0x90082E  	MOV	[W14+20], W0
0x16FA	0x400064  	ADD	W0, #4, W0
0x16FC	0x980F10  	MOV	W0, [W14+18]
0x16FE	0x2006A0  	MOV	#106, W0
0x1700	0x450000  	ADD	W10, W0, W0
0x1702	0x780090  	MOV	[W0], W1
0x1704	0x207C00  	MOV	#1984, W0
0x1706	0x608000  	AND	W1, W0, W0
0x1708	0xDE0046  	LSR	W0, #6, W0
0x170A	0xBE9F8A  	PUSH.D	W10
0x170C	0xEB0080  	CLR	W1
0x170E	0x07F83E  	RCALL	__Long2Float
0x1710	0x90091E  	MOV	[W14+18], W2
0x1712	0xBE8900  	MOV.D	W0, [W2]
;__irgrid2_Driver.c,750 :: 		if (ilChessC[1] > 15)
0x1714	0x90082E  	MOV	[W14+20], W0
0x1716	0x400164  	ADD	W0, #4, W2
0x1718	0xBE0012  	MOV.D	[W2], W0
0x171A	0x200002  	MOV	#0, W2
0x171C	0x241703  	MOV	#16752, W3
0x171E	0x07F728  	RCALL	__Compare_Ge_Fp
0x1720	0xE00000  	CP0	W0
0x1722	0xEF6000  	CLR.B	W0
0x1724	0x340001  	BRA LE	L___irgrid2_Driver_ExtractCILCParameters370
0x1726	0xEC6000  	INC.B	W0
L___irgrid2_Driver_ExtractCILCParameters370:
0x1728	0xBE054F  	POP.D	W10
0x172A	0xE24000  	CP0.B	W0
0x172C	0x32000D  	BRA Z	L___irgrid2_Driver_ExtractCILCParameters115
L___irgrid2_Driver_ExtractCILCParameters371:
;__irgrid2_Driver.c,752 :: 		ilChessC[1] = ilChessC[1] - 32;
0x172E	0x4700E0  	ADD	W14, #0, W1
0x1730	0x408064  	ADD	W1, #4, W0
0x1732	0x980F10  	MOV	W0, [W14+18]
0x1734	0x408064  	ADD	W1, #4, W0
0x1736	0xBE0210  	MOV.D	[W0], W4
0x1738	0x200002  	MOV	#0, W2
0x173A	0x242003  	MOV	#16896, W3
0x173C	0xBE9F8A  	PUSH.D	W10
0x173E	0xBE0004  	MOV.D	W4, W0
0x1740	0x07F8BA  	RCALL	__Sub_FP
0x1742	0xBE054F  	POP.D	W10
0x1744	0x90091E  	MOV	[W14+18], W2
0x1746	0xBE8900  	MOV.D	W0, [W2]
;__irgrid2_Driver.c,753 :: 		}
L___irgrid2_Driver_ExtractCILCParameters115:
;__irgrid2_Driver.c,754 :: 		ilChessC[1] = ilChessC[1] / 2.0f;
0x1748	0x4700E0  	ADD	W14, #0, W1
0x174A	0x980F21  	MOV	W1, [W14+20]
0x174C	0x408064  	ADD	W1, #4, W0
0x174E	0x980F10  	MOV	W0, [W14+18]
0x1750	0x408164  	ADD	W1, #4, W2
0x1752	0xBE0012  	MOV.D	[W2], W0
0x1754	0xBE9F8A  	PUSH.D	W10
0x1756	0x200002  	MOV	#0, W2
0x1758	0x240003  	MOV	#16384, W3
0x175A	0x07F72A  	RCALL	__Div_FP
0x175C	0xBE054F  	POP.D	W10
0x175E	0x90091E  	MOV	[W14+18], W2
0x1760	0xBE8900  	MOV.D	W0, [W2]
;__irgrid2_Driver.c,756 :: 		ilChessC[2] = (eeData[53] & 0xF800) >> 11;
0x1762	0x90082E  	MOV	[W14+20], W0
0x1764	0x400068  	ADD	W0, #8, W0
0x1766	0x980F10  	MOV	W0, [W14+18]
0x1768	0x2006A0  	MOV	#106, W0
0x176A	0x450000  	ADD	W10, W0, W0
0x176C	0x780090  	MOV	[W0], W1
0x176E	0x2F8000  	MOV	#63488, W0
0x1770	0x608000  	AND	W1, W0, W0
0x1772	0xDE004B  	LSR	W0, #11, W0
0x1774	0x781F8B  	PUSH	W11
0x1776	0xEB0080  	CLR	W1
0x1778	0x07F809  	RCALL	__Long2Float
0x177A	0x90091E  	MOV	[W14+18], W2
0x177C	0xBE8900  	MOV.D	W0, [W2]
;__irgrid2_Driver.c,757 :: 		if (ilChessC[2] > 15)
0x177E	0x90082E  	MOV	[W14+20], W0
0x1780	0x400168  	ADD	W0, #8, W2
0x1782	0xBE0012  	MOV.D	[W2], W0
0x1784	0x200002  	MOV	#0, W2
0x1786	0x241703  	MOV	#16752, W3
0x1788	0x07F6F3  	RCALL	__Compare_Ge_Fp
0x178A	0xE00000  	CP0	W0
0x178C	0xEF6000  	CLR.B	W0
0x178E	0x340001  	BRA LE	L___irgrid2_Driver_ExtractCILCParameters372
0x1790	0xEC6000  	INC.B	W0
L___irgrid2_Driver_ExtractCILCParameters372:
0x1792	0x7805CF  	POP	W11
0x1794	0xE24000  	CP0.B	W0
0x1796	0x32000D  	BRA Z	L___irgrid2_Driver_ExtractCILCParameters116
L___irgrid2_Driver_ExtractCILCParameters373:
;__irgrid2_Driver.c,759 :: 		ilChessC[2] = ilChessC[2] - 32;
0x1798	0x4700E0  	ADD	W14, #0, W1
0x179A	0x408068  	ADD	W1, #8, W0
0x179C	0x980F10  	MOV	W0, [W14+18]
0x179E	0x408068  	ADD	W1, #8, W0
0x17A0	0xBE0210  	MOV.D	[W0], W4
0x17A2	0x200002  	MOV	#0, W2
0x17A4	0x242003  	MOV	#16896, W3
0x17A6	0x781F8B  	PUSH	W11
0x17A8	0xBE0004  	MOV.D	W4, W0
0x17AA	0x07F885  	RCALL	__Sub_FP
0x17AC	0x7805CF  	POP	W11
0x17AE	0x90091E  	MOV	[W14+18], W2
0x17B0	0xBE8900  	MOV.D	W0, [W2]
;__irgrid2_Driver.c,760 :: 		}
L___irgrid2_Driver_ExtractCILCParameters116:
;__irgrid2_Driver.c,761 :: 		ilChessC[2] = ilChessC[2] / 8.0f;
0x17B2	0x4700E0  	ADD	W14, #0, W1
0x17B4	0x980F21  	MOV	W1, [W14+20]
0x17B6	0x408068  	ADD	W1, #8, W0
0x17B8	0x980F10  	MOV	W0, [W14+18]
0x17BA	0x408168  	ADD	W1, #8, W2
0x17BC	0xBE0012  	MOV.D	[W2], W0
0x17BE	0x781F8B  	PUSH	W11
0x17C0	0x200002  	MOV	#0, W2
0x17C2	0x241003  	MOV	#16640, W3
0x17C4	0x07F6F5  	RCALL	__Div_FP
0x17C6	0x7805CF  	POP	W11
0x17C8	0x90091E  	MOV	[W14+18], W2
0x17CA	0xBE8900  	MOV.D	W0, [W2]
;__irgrid2_Driver.c,763 :: 		mlx90640->calibrationModeEE = calibrationModeEE;
0x17CC	0x200210  	MOV	#33, W0
0x17CE	0x458080  	ADD	W11, W0, W1
0x17D0	0x90484E  	MOV.B	[W14+12], W0
0x17D2	0x784880  	MOV.B	W0, [W1]
;__irgrid2_Driver.c,764 :: 		mlx90640->ilChessC[0] = ilChessC[0];
0x17D4	0x22A4A0  	MOV	#10826, W0
0x17D6	0x458000  	ADD	W11, W0, W0
0x17D8	0x90092E  	MOV	[W14+20], W2
0x17DA	0x781832  	MOV	[W2++], [W0++]
0x17DC	0x781022  	MOV	[W2--], [W0--]
;__irgrid2_Driver.c,765 :: 		mlx90640->ilChessC[1] = ilChessC[1];
0x17DE	0x22A4A0  	MOV	#10826, W0
0x17E0	0x458000  	ADD	W11, W0, W0
0x17E2	0x4000E4  	ADD	W0, #4, W1
0x17E4	0x410064  	ADD	W2, #4, W0
0x17E6	0x7818B0  	MOV	[W0++], [W1++]
0x17E8	0x7810A0  	MOV	[W0--], [W1--]
;__irgrid2_Driver.c,766 :: 		mlx90640->ilChessC[2] = ilChessC[2];
0x17EA	0x22A4A0  	MOV	#10826, W0
0x17EC	0x458000  	ADD	W11, W0, W0
0x17EE	0x4000E8  	ADD	W0, #8, W1
0x17F0	0x410068  	ADD	W2, #8, W0
0x17F2	0x7818B0  	MOV	[W0++], [W1++]
0x17F4	0x7810A0  	MOV	[W0--], [W1--]
;__irgrid2_Driver.c,767 :: 		}
L_end_ExtractCILCParameters:
0x17F6	0xFA8000  	ULNK
0x17F8	0x060000  	RETURN
; end of __irgrid2_Driver_ExtractCILCParameters
__irgrid2_Driver_ExtractDeviatingPixels:
;__irgrid2_Driver.c,790 :: 		static int ExtractDeviatingPixels(uint16_t *eeData, paramsMLX90640 *mlx90640)
;__irgrid2_Driver.c,792 :: 		uint16_t pixCnt = 0;
;__irgrid2_Driver.c,793 :: 		uint16_t brokenPixCnt = 0;
; brokenPixCnt start address is: 8 (W4)
0x1B60	0xEF2008  	CLR	W4
;__irgrid2_Driver.c,794 :: 		uint16_t outlierPixCnt = 0;
; outlierPixCnt start address is: 6 (W3)
0x1B62	0xEF2006  	CLR	W3
;__irgrid2_Driver.c,795 :: 		int warn = 0;
; warn start address is: 4 (W2)
0x1B64	0xEF2004  	CLR	W2
;__irgrid2_Driver.c,798 :: 		for(pixCnt = 0; pixCnt<5; pixCnt++)
; pixCnt start address is: 10 (W5)
0x1B66	0xEF200A  	CLR	W5
; outlierPixCnt end address is: 6 (W3)
; pixCnt end address is: 10 (W5)
; warn end address is: 4 (W2)
; brokenPixCnt end address is: 8 (W4)
L___irgrid2_Driver_ExtractDeviatingPixels126:
; pixCnt start address is: 10 (W5)
; warn start address is: 4 (W2)
; outlierPixCnt start address is: 6 (W3)
; brokenPixCnt start address is: 8 (W4)
0x1B68	0xE12865  	CP	W5, #5
0x1B6A	0x31000E  	BRA GEU	L___irgrid2_Driver_ExtractDeviatingPixels127
L___irgrid2_Driver_ExtractDeviatingPixels382:
;__irgrid2_Driver.c,800 :: 		mlx90640->brokenPixels[pixCnt] = 0xFFFF;
0x1B6C	0x22A560  	MOV	#10838, W0
0x1B6E	0x458080  	ADD	W11, W0, W1
0x1B70	0xDD2841  	SL	W5, #1, W0
0x1B72	0x408080  	ADD	W1, W0, W1
0x1B74	0x2FFFF0  	MOV	#65535, W0
0x1B76	0x780880  	MOV	W0, [W1]
;__irgrid2_Driver.c,801 :: 		mlx90640->outlierPixels[pixCnt] = 0xFFFF;
0x1B78	0x22A600  	MOV	#10848, W0
0x1B7A	0x458080  	ADD	W11, W0, W1
0x1B7C	0xDD2841  	SL	W5, #1, W0
0x1B7E	0x408080  	ADD	W1, W0, W1
0x1B80	0x2FFFF0  	MOV	#65535, W0
0x1B82	0x780880  	MOV	W0, [W1]
;__irgrid2_Driver.c,798 :: 		for(pixCnt = 0; pixCnt<5; pixCnt++)
0x1B84	0xEC200A  	INC	W5
;__irgrid2_Driver.c,802 :: 		}
; pixCnt end address is: 10 (W5)
0x1B86	0x37FFF0  	BRA	L___irgrid2_Driver_ExtractDeviatingPixels126
L___irgrid2_Driver_ExtractDeviatingPixels127:
;__irgrid2_Driver.c,804 :: 		pixCnt = 0;
; pixCnt start address is: 0 (W0)
0x1B88	0xEF2000  	CLR	W0
; outlierPixCnt end address is: 6 (W3)
; pixCnt end address is: 0 (W0)
; warn end address is: 4 (W2)
; brokenPixCnt end address is: 8 (W4)
0x1B8A	0x780283  	MOV	W3, W5
0x1B8C	0x780180  	MOV	W0, W3
;__irgrid2_Driver.c,805 :: 		while (pixCnt < 768 && brokenPixCnt < 5 && outlierPixCnt < 5)
L___irgrid2_Driver_ExtractDeviatingPixels129:
; pixCnt start address is: 6 (W3)
; brokenPixCnt start address is: 8 (W4)
; outlierPixCnt start address is: 10 (W5)
; warn start address is: 4 (W2)
0x1B8E	0x203000  	MOV	#768, W0
0x1B90	0xE11800  	CP	W3, W0
0x1B92	0x310024  	BRA GEU	L___irgrid2_Driver_ExtractDeviatingPixels239
L___irgrid2_Driver_ExtractDeviatingPixels383:
0x1B94	0xE12065  	CP	W4, #5
0x1B96	0x310022  	BRA GEU	L___irgrid2_Driver_ExtractDeviatingPixels238
L___irgrid2_Driver_ExtractDeviatingPixels384:
0x1B98	0xE12865  	CP	W5, #5
0x1B9A	0x310020  	BRA GEU	L___irgrid2_Driver_ExtractDeviatingPixels237
L___irgrid2_Driver_ExtractDeviatingPixels385:
L___irgrid2_Driver_ExtractDeviatingPixels236:
;__irgrid2_Driver.c,807 :: 		if(eeData[pixCnt+64] == 0)
0x1B9C	0x200400  	MOV	#64, W0
0x1B9E	0x418000  	ADD	W3, W0, W0
0x1BA0	0xDD0041  	SL	W0, #1, W0
0x1BA2	0x450000  	ADD	W10, W0, W0
0x1BA4	0x780010  	MOV	[W0], W0
0x1BA6	0xE10060  	CP	W0, #0
0x1BA8	0x3A0007  	BRA NZ	L___irgrid2_Driver_ExtractDeviatingPixels133
L___irgrid2_Driver_ExtractDeviatingPixels386:
;__irgrid2_Driver.c,809 :: 		mlx90640->brokenPixels[brokenPixCnt] = pixCnt;
0x1BAA	0x22A560  	MOV	#10838, W0
0x1BAC	0x458080  	ADD	W11, W0, W1
0x1BAE	0xDD2041  	SL	W4, #1, W0
0x1BB0	0x408000  	ADD	W1, W0, W0
0x1BB2	0x780803  	MOV	W3, [W0]
;__irgrid2_Driver.c,810 :: 		brokenPixCnt = brokenPixCnt + 1;
0x1BB4	0xEC2008  	INC	W4
;__irgrid2_Driver.c,811 :: 		}
0x1BB6	0x370010  	BRA	L___irgrid2_Driver_ExtractDeviatingPixels134
L___irgrid2_Driver_ExtractDeviatingPixels133:
;__irgrid2_Driver.c,812 :: 		else if((eeData[pixCnt+64] & 0x0001) != 0)
0x1BB8	0x200400  	MOV	#64, W0
0x1BBA	0x418000  	ADD	W3, W0, W0
0x1BBC	0xDD0041  	SL	W0, #1, W0
0x1BBE	0x450000  	ADD	W10, W0, W0
0x1BC0	0x780010  	MOV	[W0], W0
0x1BC2	0x600061  	AND	W0, #1, W0
0x1BC4	0xE10060  	CP	W0, #0
0x1BC6	0x320008  	BRA Z	L___irgrid2_Driver_ExtractDeviatingPixels240
L___irgrid2_Driver_ExtractDeviatingPixels387:
;__irgrid2_Driver.c,814 :: 		mlx90640->outlierPixels[outlierPixCnt] = pixCnt;
0x1BC8	0x22A600  	MOV	#10848, W0
0x1BCA	0x458080  	ADD	W11, W0, W1
0x1BCC	0xDD2841  	SL	W5, #1, W0
0x1BCE	0x408000  	ADD	W1, W0, W0
0x1BD0	0x780803  	MOV	W3, [W0]
;__irgrid2_Driver.c,815 :: 		outlierPixCnt = outlierPixCnt + 1;
; outlierPixCnt start address is: 0 (W0)
0x1BD2	0x428061  	ADD	W5, #1, W0
; outlierPixCnt end address is: 10 (W5)
0x1BD4	0x780280  	MOV	W0, W5
; outlierPixCnt end address is: 0 (W0)
;__irgrid2_Driver.c,816 :: 		}
0x1BD6	0x370000  	BRA	L___irgrid2_Driver_ExtractDeviatingPixels135
L___irgrid2_Driver_ExtractDeviatingPixels240:
;__irgrid2_Driver.c,812 :: 		else if((eeData[pixCnt+64] & 0x0001) != 0)
;__irgrid2_Driver.c,816 :: 		}
L___irgrid2_Driver_ExtractDeviatingPixels135:
; outlierPixCnt start address is: 10 (W5)
; brokenPixCnt end address is: 8 (W4)
; outlierPixCnt end address is: 10 (W5)
L___irgrid2_Driver_ExtractDeviatingPixels134:
;__irgrid2_Driver.c,818 :: 		pixCnt = pixCnt + 1;
; outlierPixCnt start address is: 10 (W5)
; brokenPixCnt start address is: 8 (W4)
0x1BD8	0xEC2006  	INC	W3
;__irgrid2_Driver.c,820 :: 		}
; pixCnt end address is: 6 (W3)
0x1BDA	0x37FFD9  	BRA	L___irgrid2_Driver_ExtractDeviatingPixels129
;__irgrid2_Driver.c,805 :: 		while (pixCnt < 768 && brokenPixCnt < 5 && outlierPixCnt < 5)
L___irgrid2_Driver_ExtractDeviatingPixels239:
L___irgrid2_Driver_ExtractDeviatingPixels238:
L___irgrid2_Driver_ExtractDeviatingPixels237:
;__irgrid2_Driver.c,822 :: 		if(brokenPixCnt > 4)
0x1BDC	0xE12064  	CP	W4, #4
0x1BDE	0x360002  	BRA LEU	L___irgrid2_Driver_ExtractDeviatingPixels136
L___irgrid2_Driver_ExtractDeviatingPixels388:
; warn end address is: 4 (W2)
; brokenPixCnt end address is: 8 (W4)
; outlierPixCnt end address is: 10 (W5)
;__irgrid2_Driver.c,824 :: 		warn = -3;
; warn start address is: 2 (W1)
0x1BE0	0x2FFFD1  	MOV	#65533, W1
;__irgrid2_Driver.c,825 :: 		}
; warn end address is: 2 (W1)
0x1BE2	0x370063  	BRA	L___irgrid2_Driver_ExtractDeviatingPixels137
L___irgrid2_Driver_ExtractDeviatingPixels136:
;__irgrid2_Driver.c,826 :: 		else if(outlierPixCnt > 4)
; outlierPixCnt start address is: 10 (W5)
; brokenPixCnt start address is: 8 (W4)
; warn start address is: 4 (W2)
0x1BE4	0xE12864  	CP	W5, #4
0x1BE6	0x360003  	BRA LEU	L___irgrid2_Driver_ExtractDeviatingPixels138
L___irgrid2_Driver_ExtractDeviatingPixels389:
; warn end address is: 4 (W2)
; brokenPixCnt end address is: 8 (W4)
; outlierPixCnt end address is: 10 (W5)
;__irgrid2_Driver.c,828 :: 		warn = -4;
; warn start address is: 0 (W0)
0x1BE8	0x2FFFC0  	MOV	#65532, W0
;__irgrid2_Driver.c,829 :: 		}
0x1BEA	0x780080  	MOV	W0, W1
; warn end address is: 0 (W0)
0x1BEC	0x37005E  	BRA	L___irgrid2_Driver_ExtractDeviatingPixels139
L___irgrid2_Driver_ExtractDeviatingPixels138:
;__irgrid2_Driver.c,830 :: 		else if((brokenPixCnt + outlierPixCnt) > 4)
; outlierPixCnt start address is: 10 (W5)
; brokenPixCnt start address is: 8 (W4)
; warn start address is: 4 (W2)
0x1BEE	0x420005  	ADD	W4, W5, W0
0x1BF0	0xE10064  	CP	W0, #4
0x1BF2	0x360002  	BRA LEU	L___irgrid2_Driver_ExtractDeviatingPixels140
L___irgrid2_Driver_ExtractDeviatingPixels390:
; warn end address is: 4 (W2)
; brokenPixCnt end address is: 8 (W4)
; outlierPixCnt end address is: 10 (W5)
;__irgrid2_Driver.c,832 :: 		warn = -5;
; warn start address is: 0 (W0)
0x1BF4	0x2FFFB0  	MOV	#65531, W0
;__irgrid2_Driver.c,833 :: 		}
; warn end address is: 0 (W0)
0x1BF6	0x370058  	BRA	L___irgrid2_Driver_ExtractDeviatingPixels141
L___irgrid2_Driver_ExtractDeviatingPixels140:
;__irgrid2_Driver.c,836 :: 		for(pixCnt=0; pixCnt<brokenPixCnt; pixCnt++)
; pixCnt start address is: 12 (W6)
; outlierPixCnt start address is: 10 (W5)
; brokenPixCnt start address is: 8 (W4)
; warn start address is: 4 (W2)
0x1BF8	0xEF200C  	CLR	W6
; warn end address is: 4 (W2)
; brokenPixCnt end address is: 8 (W4)
; outlierPixCnt end address is: 10 (W5)
; pixCnt end address is: 12 (W6)
0x1BFA	0x780184  	MOV	W4, W3
0x1BFC	0x780002  	MOV	W2, W0
L___irgrid2_Driver_ExtractDeviatingPixels142:
; pixCnt start address is: 12 (W6)
; warn start address is: 0 (W0)
; outlierPixCnt start address is: 10 (W5)
; brokenPixCnt start address is: 6 (W3)
0x1BFE	0xE13003  	CP	W6, W3
0x1C00	0x310018  	BRA GEU	L___irgrid2_Driver_ExtractDeviatingPixels143
L___irgrid2_Driver_ExtractDeviatingPixels391:
;__irgrid2_Driver.c,838 :: 		for(i=pixCnt+1; i<brokenPixCnt; i++)
; i start address is: 8 (W4)
0x1C02	0x430261  	ADD	W6, #1, W4
; outlierPixCnt end address is: 10 (W5)
; i end address is: 8 (W4)
; brokenPixCnt end address is: 6 (W3)
; pixCnt end address is: 12 (W6)
; warn end address is: 0 (W0)
L___irgrid2_Driver_ExtractDeviatingPixels145:
; i start address is: 8 (W4)
; brokenPixCnt start address is: 6 (W3)
; outlierPixCnt start address is: 10 (W5)
; warn start address is: 0 (W0)
; pixCnt start address is: 12 (W6)
0x1C04	0xE12003  	CP	W4, W3
0x1C06	0x310013  	BRA GEU	L___irgrid2_Driver_ExtractDeviatingPixels146
L___irgrid2_Driver_ExtractDeviatingPixels392:
; warn end address is: 0 (W0)
;__irgrid2_Driver.c,840 :: 		warn = CheckAdjacentPixels(mlx90640->brokenPixels[pixCnt],mlx90640->brokenPixels[i]);
0x1C08	0x22A560  	MOV	#10838, W0
0x1C0A	0x458100  	ADD	W11, W0, W2
0x1C0C	0xDD2041  	SL	W4, #1, W0
0x1C0E	0x410080  	ADD	W2, W0, W1
0x1C10	0xDD3041  	SL	W6, #1, W0
0x1C12	0x410000  	ADD	W2, W0, W0
0x1C14	0xBE9F8A  	PUSH.D	W10
0x1C16	0x780591  	MOV	[W1], W11
0x1C18	0x780510  	MOV	[W0], W10
0x1C1A	0x07F92D  	RCALL	__irgrid2_Driver_CheckAdjacentPixels
0x1C1C	0xBE054F  	POP.D	W10
; warn start address is: 2 (W1)
0x1C1E	0x780080  	MOV	W0, W1
;__irgrid2_Driver.c,841 :: 		if(warn != 0)
0x1C20	0xE10060  	CP	W0, #0
0x1C22	0x320002  	BRA Z	L___irgrid2_Driver_ExtractDeviatingPixels148
L___irgrid2_Driver_ExtractDeviatingPixels393:
; outlierPixCnt end address is: 10 (W5)
; i end address is: 8 (W4)
; brokenPixCnt end address is: 6 (W3)
; pixCnt end address is: 12 (W6)
;__irgrid2_Driver.c,843 :: 		return warn;
0x1C24	0x780001  	MOV	W1, W0
; warn end address is: 2 (W1)
0x1C26	0x370042  	BRA	L_end_ExtractDeviatingPixels
;__irgrid2_Driver.c,844 :: 		}
L___irgrid2_Driver_ExtractDeviatingPixels148:
;__irgrid2_Driver.c,838 :: 		for(i=pixCnt+1; i<brokenPixCnt; i++)
; warn start address is: 2 (W1)
; pixCnt start address is: 12 (W6)
; brokenPixCnt start address is: 6 (W3)
; i start address is: 8 (W4)
; outlierPixCnt start address is: 10 (W5)
0x1C28	0xEC2008  	INC	W4
;__irgrid2_Driver.c,845 :: 		}
; i end address is: 8 (W4)
; warn end address is: 2 (W1)
0x1C2A	0x780001  	MOV	W1, W0
0x1C2C	0x37FFEB  	BRA	L___irgrid2_Driver_ExtractDeviatingPixels145
L___irgrid2_Driver_ExtractDeviatingPixels146:
;__irgrid2_Driver.c,836 :: 		for(pixCnt=0; pixCnt<brokenPixCnt; pixCnt++)
; warn start address is: 0 (W0)
0x1C2E	0xEC200C  	INC	W6
;__irgrid2_Driver.c,846 :: 		}
; pixCnt end address is: 12 (W6)
0x1C30	0x37FFE6  	BRA	L___irgrid2_Driver_ExtractDeviatingPixels142
L___irgrid2_Driver_ExtractDeviatingPixels143:
;__irgrid2_Driver.c,848 :: 		for(pixCnt=0; pixCnt<outlierPixCnt; pixCnt++)
; pixCnt start address is: 12 (W6)
0x1C32	0xEF200C  	CLR	W6
; outlierPixCnt end address is: 10 (W5)
; brokenPixCnt end address is: 6 (W3)
; pixCnt end address is: 12 (W6)
; warn end address is: 0 (W0)
0x1C34	0x780205  	MOV	W5, W4
0x1C36	0x780283  	MOV	W3, W5
L___irgrid2_Driver_ExtractDeviatingPixels149:
; pixCnt start address is: 12 (W6)
; brokenPixCnt start address is: 10 (W5)
; outlierPixCnt start address is: 8 (W4)
; warn start address is: 0 (W0)
0x1C38	0xE13004  	CP	W6, W4
0x1C3A	0x310018  	BRA GEU	L___irgrid2_Driver_ExtractDeviatingPixels150
L___irgrid2_Driver_ExtractDeviatingPixels394:
;__irgrid2_Driver.c,850 :: 		for(i=pixCnt+1; i<outlierPixCnt; i++)
; i start address is: 6 (W3)
0x1C3C	0x4301E1  	ADD	W6, #1, W3
; brokenPixCnt end address is: 10 (W5)
; i end address is: 6 (W3)
; outlierPixCnt end address is: 8 (W4)
; pixCnt end address is: 12 (W6)
; warn end address is: 0 (W0)
L___irgrid2_Driver_ExtractDeviatingPixels152:
; i start address is: 6 (W3)
; warn start address is: 0 (W0)
; outlierPixCnt start address is: 8 (W4)
; brokenPixCnt start address is: 10 (W5)
; pixCnt start address is: 12 (W6)
0x1C3E	0xE11804  	CP	W3, W4
0x1C40	0x310013  	BRA GEU	L___irgrid2_Driver_ExtractDeviatingPixels153
L___irgrid2_Driver_ExtractDeviatingPixels395:
; warn end address is: 0 (W0)
;__irgrid2_Driver.c,852 :: 		warn = CheckAdjacentPixels(mlx90640->outlierPixels[pixCnt],mlx90640->outlierPixels[i]);
0x1C42	0x22A600  	MOV	#10848, W0
0x1C44	0x458100  	ADD	W11, W0, W2
0x1C46	0xDD1841  	SL	W3, #1, W0
0x1C48	0x410080  	ADD	W2, W0, W1
0x1C4A	0xDD3041  	SL	W6, #1, W0
0x1C4C	0x410000  	ADD	W2, W0, W0
0x1C4E	0xBE9F8A  	PUSH.D	W10
0x1C50	0x780591  	MOV	[W1], W11
0x1C52	0x780510  	MOV	[W0], W10
0x1C54	0x07F910  	RCALL	__irgrid2_Driver_CheckAdjacentPixels
0x1C56	0xBE054F  	POP.D	W10
; warn start address is: 2 (W1)
0x1C58	0x780080  	MOV	W0, W1
;__irgrid2_Driver.c,853 :: 		if(warn != 0)
0x1C5A	0xE10060  	CP	W0, #0
0x1C5C	0x320002  	BRA Z	L___irgrid2_Driver_ExtractDeviatingPixels155
L___irgrid2_Driver_ExtractDeviatingPixels396:
; brokenPixCnt end address is: 10 (W5)
; i end address is: 6 (W3)
; outlierPixCnt end address is: 8 (W4)
; pixCnt end address is: 12 (W6)
;__irgrid2_Driver.c,855 :: 		return warn;
0x1C5E	0x780001  	MOV	W1, W0
; warn end address is: 2 (W1)
0x1C60	0x370025  	BRA	L_end_ExtractDeviatingPixels
;__irgrid2_Driver.c,856 :: 		}
L___irgrid2_Driver_ExtractDeviatingPixels155:
;__irgrid2_Driver.c,850 :: 		for(i=pixCnt+1; i<outlierPixCnt; i++)
; warn start address is: 2 (W1)
; pixCnt start address is: 12 (W6)
; outlierPixCnt start address is: 8 (W4)
; i start address is: 6 (W3)
; brokenPixCnt start address is: 10 (W5)
0x1C62	0xEC2006  	INC	W3
;__irgrid2_Driver.c,857 :: 		}
; i end address is: 6 (W3)
; warn end address is: 2 (W1)
0x1C64	0x780001  	MOV	W1, W0
0x1C66	0x37FFEB  	BRA	L___irgrid2_Driver_ExtractDeviatingPixels152
L___irgrid2_Driver_ExtractDeviatingPixels153:
;__irgrid2_Driver.c,848 :: 		for(pixCnt=0; pixCnt<outlierPixCnt; pixCnt++)
; warn start address is: 0 (W0)
0x1C68	0xEC200C  	INC	W6
;__irgrid2_Driver.c,858 :: 		}
; pixCnt end address is: 12 (W6)
0x1C6A	0x37FFE6  	BRA	L___irgrid2_Driver_ExtractDeviatingPixels149
L___irgrid2_Driver_ExtractDeviatingPixels150:
;__irgrid2_Driver.c,860 :: 		for(pixCnt=0; pixCnt<brokenPixCnt; pixCnt++)
; pixCnt start address is: 12 (W6)
0x1C6C	0xEF200C  	CLR	W6
; brokenPixCnt end address is: 10 (W5)
; outlierPixCnt end address is: 8 (W4)
; pixCnt end address is: 12 (W6)
; warn end address is: 0 (W0)
0x1C6E	0x780185  	MOV	W5, W3
L___irgrid2_Driver_ExtractDeviatingPixels156:
; pixCnt start address is: 12 (W6)
; warn start address is: 0 (W0)
; outlierPixCnt start address is: 8 (W4)
; brokenPixCnt start address is: 6 (W3)
0x1C70	0xE13003  	CP	W6, W3
0x1C72	0x31001A  	BRA GEU	L___irgrid2_Driver_ExtractDeviatingPixels157
L___irgrid2_Driver_ExtractDeviatingPixels397:
;__irgrid2_Driver.c,862 :: 		for(i=0; i<outlierPixCnt; i++)
; i start address is: 10 (W5)
0x1C74	0xEF200A  	CLR	W5
; brokenPixCnt end address is: 6 (W3)
; outlierPixCnt end address is: 8 (W4)
; i end address is: 10 (W5)
; pixCnt end address is: 12 (W6)
; warn end address is: 0 (W0)
L___irgrid2_Driver_ExtractDeviatingPixels159:
; i start address is: 10 (W5)
; brokenPixCnt start address is: 6 (W3)
; outlierPixCnt start address is: 8 (W4)
; warn start address is: 0 (W0)
; pixCnt start address is: 12 (W6)
0x1C76	0xE12804  	CP	W5, W4
0x1C78	0x310015  	BRA GEU	L___irgrid2_Driver_ExtractDeviatingPixels160
L___irgrid2_Driver_ExtractDeviatingPixels398:
; warn end address is: 0 (W0)
;__irgrid2_Driver.c,864 :: 		warn = CheckAdjacentPixels(mlx90640->brokenPixels[pixCnt],mlx90640->outlierPixels[i]);
0x1C7A	0x22A600  	MOV	#10848, W0
0x1C7C	0x458080  	ADD	W11, W0, W1
0x1C7E	0xDD2841  	SL	W5, #1, W0
0x1C80	0x408100  	ADD	W1, W0, W2
0x1C82	0x22A560  	MOV	#10838, W0
0x1C84	0x458080  	ADD	W11, W0, W1
0x1C86	0xDD3041  	SL	W6, #1, W0
0x1C88	0x408000  	ADD	W1, W0, W0
0x1C8A	0xBE9F8A  	PUSH.D	W10
0x1C8C	0x780592  	MOV	[W2], W11
0x1C8E	0x780510  	MOV	[W0], W10
0x1C90	0x07F8F2  	RCALL	__irgrid2_Driver_CheckAdjacentPixels
0x1C92	0xBE054F  	POP.D	W10
; warn start address is: 2 (W1)
0x1C94	0x780080  	MOV	W0, W1
;__irgrid2_Driver.c,865 :: 		if(warn != 0)
0x1C96	0xE10060  	CP	W0, #0
0x1C98	0x320002  	BRA Z	L___irgrid2_Driver_ExtractDeviatingPixels162
L___irgrid2_Driver_ExtractDeviatingPixels399:
; brokenPixCnt end address is: 6 (W3)
; outlierPixCnt end address is: 8 (W4)
; i end address is: 10 (W5)
; pixCnt end address is: 12 (W6)
;__irgrid2_Driver.c,867 :: 		return warn;
0x1C9A	0x780001  	MOV	W1, W0
; warn end address is: 2 (W1)
0x1C9C	0x370007  	BRA	L_end_ExtractDeviatingPixels
;__irgrid2_Driver.c,868 :: 		}
L___irgrid2_Driver_ExtractDeviatingPixels162:
;__irgrid2_Driver.c,862 :: 		for(i=0; i<outlierPixCnt; i++)
; warn start address is: 2 (W1)
; pixCnt start address is: 12 (W6)
; i start address is: 10 (W5)
; outlierPixCnt start address is: 8 (W4)
; brokenPixCnt start address is: 6 (W3)
0x1C9E	0xEC200A  	INC	W5
;__irgrid2_Driver.c,869 :: 		}
; i end address is: 10 (W5)
; warn end address is: 2 (W1)
0x1CA0	0x780001  	MOV	W1, W0
0x1CA2	0x37FFE9  	BRA	L___irgrid2_Driver_ExtractDeviatingPixels159
L___irgrid2_Driver_ExtractDeviatingPixels160:
;__irgrid2_Driver.c,860 :: 		for(pixCnt=0; pixCnt<brokenPixCnt; pixCnt++)
; warn start address is: 0 (W0)
0x1CA4	0xEC200C  	INC	W6
;__irgrid2_Driver.c,870 :: 		}
; brokenPixCnt end address is: 6 (W3)
; outlierPixCnt end address is: 8 (W4)
; pixCnt end address is: 12 (W6)
0x1CA6	0x37FFE4  	BRA	L___irgrid2_Driver_ExtractDeviatingPixels156
L___irgrid2_Driver_ExtractDeviatingPixels157:
;__irgrid2_Driver.c,872 :: 		}
L___irgrid2_Driver_ExtractDeviatingPixels141:
; warn end address is: 0 (W0)
; warn start address is: 0 (W0)
0x1CA8	0x780080  	MOV	W0, W1
; warn end address is: 0 (W0)
L___irgrid2_Driver_ExtractDeviatingPixels139:
; warn start address is: 2 (W1)
; warn end address is: 2 (W1)
L___irgrid2_Driver_ExtractDeviatingPixels137:
;__irgrid2_Driver.c,873 :: 		return warn;
; warn start address is: 2 (W1)
0x1CAA	0x780001  	MOV	W1, W0
; warn end address is: 2 (W1)
;__irgrid2_Driver.c,874 :: 		}
L_end_ExtractDeviatingPixels:
0x1CAC	0x060000  	RETURN
; end of __irgrid2_Driver_ExtractDeviatingPixels
__irgrid2_Driver_CheckAdjacentPixels:
;__irgrid2_Driver.c,769 :: 		static int CheckAdjacentPixels(uint16_t pix1, uint16_t pix2)
;__irgrid2_Driver.c,773 :: 		pixPosDif = pix1 - pix2;
0x0E76	0x55008B  	SUB	W10, W11, W1
; pixPosDif start address is: 4 (W2)
0x0E78	0x780101  	MOV	W1, W2
;__irgrid2_Driver.c,774 :: 		if(pixPosDif > -34 && pixPosDif < -30)
0x0E7A	0x2FFDE0  	MOV	#65502, W0
0x0E7C	0xE10800  	CP	W1, W0
0x0E7E	0x340005  	BRA LE	L___irgrid2_Driver_CheckAdjacentPixels231
L___irgrid2_Driver_CheckAdjacentPixels375:
0x0E80	0x2FFE20  	MOV	#65506, W0
0x0E82	0xE11000  	CP	W2, W0
0x0E84	0x3D0002  	BRA GE	L___irgrid2_Driver_CheckAdjacentPixels230
L___irgrid2_Driver_CheckAdjacentPixels376:
; pixPosDif end address is: 4 (W2)
L___irgrid2_Driver_CheckAdjacentPixels229:
;__irgrid2_Driver.c,776 :: 		return -6;
0x0E86	0x2FFFA0  	MOV	#65530, W0
0x0E88	0x37000F  	BRA	L_end_CheckAdjacentPixels
;__irgrid2_Driver.c,774 :: 		if(pixPosDif > -34 && pixPosDif < -30)
L___irgrid2_Driver_CheckAdjacentPixels231:
; pixPosDif start address is: 4 (W2)
L___irgrid2_Driver_CheckAdjacentPixels230:
;__irgrid2_Driver.c,778 :: 		if(pixPosDif > -2 && pixPosDif < 2)
0x0E8A	0x2FFFE0  	MOV	#65534, W0
0x0E8C	0xE11000  	CP	W2, W0
0x0E8E	0x340004  	BRA LE	L___irgrid2_Driver_CheckAdjacentPixels233
L___irgrid2_Driver_CheckAdjacentPixels377:
0x0E90	0xE11062  	CP	W2, #2
0x0E92	0x3D0002  	BRA GE	L___irgrid2_Driver_CheckAdjacentPixels232
L___irgrid2_Driver_CheckAdjacentPixels378:
; pixPosDif end address is: 4 (W2)
L___irgrid2_Driver_CheckAdjacentPixels228:
;__irgrid2_Driver.c,780 :: 		return -6;
0x0E94	0x2FFFA0  	MOV	#65530, W0
0x0E96	0x370008  	BRA	L_end_CheckAdjacentPixels
;__irgrid2_Driver.c,778 :: 		if(pixPosDif > -2 && pixPosDif < 2)
L___irgrid2_Driver_CheckAdjacentPixels233:
; pixPosDif start address is: 4 (W2)
L___irgrid2_Driver_CheckAdjacentPixels232:
;__irgrid2_Driver.c,782 :: 		if(pixPosDif > 30 && pixPosDif < 34)
0x0E98	0xE1107E  	CP	W2, #30
0x0E9A	0x340005  	BRA LE	L___irgrid2_Driver_CheckAdjacentPixels235
L___irgrid2_Driver_CheckAdjacentPixels379:
0x0E9C	0x200220  	MOV	#34, W0
0x0E9E	0xE11000  	CP	W2, W0
0x0EA0	0x3D0002  	BRA GE	L___irgrid2_Driver_CheckAdjacentPixels234
L___irgrid2_Driver_CheckAdjacentPixels380:
; pixPosDif end address is: 4 (W2)
L___irgrid2_Driver_CheckAdjacentPixels227:
;__irgrid2_Driver.c,784 :: 		return -6;
0x0EA2	0x2FFFA0  	MOV	#65530, W0
0x0EA4	0x370001  	BRA	L_end_CheckAdjacentPixels
;__irgrid2_Driver.c,782 :: 		if(pixPosDif > 30 && pixPosDif < 34)
L___irgrid2_Driver_CheckAdjacentPixels235:
L___irgrid2_Driver_CheckAdjacentPixels234:
;__irgrid2_Driver.c,787 :: 		return 0;
0x0EA6	0xEF2000  	CLR	W0
;__irgrid2_Driver.c,788 :: 		}
L_end_CheckAdjacentPixels:
0x0EA8	0x060000  	RETURN
; end of __irgrid2_Driver_CheckAdjacentPixels
_irgrid2_setRefreshRate:
0x24B0	0xFA0004  	LNK	#4
;__irgrid2_Driver.c,1081 :: 		void irgrid2_setRefreshRate(uint8_t refreshRate)
;__irgrid2_Driver.c,1086 :: 		value = (refreshRate & 0x07)<<7;
0x24B2	0x781F8A  	PUSH	W10
0x24B4	0x781F8B  	PUSH	W11
0x24B6	0x781F8C  	PUSH	W12
0x24B8	0xFB800A  	ZE	W10, W0
0x24BA	0x600067  	AND	W0, #7, W0
0x24BC	0xDD0047  	SL	W0, #7, W0
0x24BE	0x980710  	MOV	W0, [W14+2]
;__irgrid2_Driver.c,1087 :: 		irgrid2_readData(0x800D, 1, &controlRegister1);
0x24C0	0x470060  	ADD	W14, #0, W0
0x24C2	0x780600  	MOV	W0, W12
0x24C4	0x20001B  	MOV	#1, W11
0x24C6	0x2800DA  	MOV	#32781, W10
0x24C8	0x07F627  	RCALL	_irgrid2_readData
;__irgrid2_Driver.c,1088 :: 		value = (controlRegister1 & 0xFC7F) | value;
0x24CA	0x90008E  	MOV	[W14+0], W1
0x24CC	0x2FC7F0  	MOV	#64639, W0
0x24CE	0x608080  	AND	W1, W0, W1
0x24D0	0x470062  	ADD	W14, #2, W0
0x24D2	0x708010  	IOR	W1, [W0], W0
;__irgrid2_Driver.c,1089 :: 		irgrid2_writeByte(0x800D, value);
0x24D4	0x780580  	MOV	W0, W11
0x24D6	0x2800DA  	MOV	#32781, W10
0x24D8	0x07F819  	RCALL	_irgrid2_writeByte
;__irgrid2_Driver.c,1090 :: 		}
L_end_irgrid2_setRefreshRate:
0x24DA	0x78064F  	POP	W12
0x24DC	0x7805CF  	POP	W11
0x24DE	0x78054F  	POP	W10
0x24E0	0xFA8000  	ULNK
0x24E2	0x060000  	RETURN
; end of _irgrid2_setRefreshRate
_irgrid2_writeByte:
0x150C	0xFA0004  	LNK	#4
;__irgrid2_Driver.c,910 :: 		void irgrid2_writeByte(uint16_t reg, uint16_t _data)
;__irgrid2_Driver.c,914 :: 		writeReg[ 0 ] = (uint8_t)(reg >> 8);
0x150E	0x781F8A  	PUSH	W10
0x1510	0x781F8B  	PUSH	W11
0x1512	0x781F8C  	PUSH	W12
0x1514	0x781F8D  	PUSH	W13
0x1516	0x470160  	ADD	W14, #0, W2
0x1518	0xDE5048  	LSR	W10, #8, W0
0x151A	0x784900  	MOV.B	W0, [W2]
;__irgrid2_Driver.c,915 :: 		writeReg[ 1 ] = (uint8_t)(reg & 0x00FF);
0x151C	0x4100E1  	ADD	W2, #1, W1
0x151E	0x200FF0  	MOV	#255, W0
0x1520	0x650000  	AND	W10, W0, W0
0x1522	0x784880  	MOV.B	W0, [W1]
;__irgrid2_Driver.c,916 :: 		writeReg[ 2 ] = (uint8_t)(_data >> 8);
0x1524	0x4100E2  	ADD	W2, #2, W1
0x1526	0xDE5848  	LSR	W11, #8, W0
0x1528	0x784880  	MOV.B	W0, [W1]
;__irgrid2_Driver.c,917 :: 		writeReg[ 3 ] = (uint8_t)(_data & 0x00FF);
0x152A	0x4100E3  	ADD	W2, #3, W1
0x152C	0x200FF0  	MOV	#255, W0
0x152E	0x658000  	AND	W11, W0, W0
0x1530	0x784880  	MOV.B	W0, [W1]
;__irgrid2_Driver.c,919 :: 		hal_i2cStart();
0x1532	0x07FD05  	RCALL	__irgrid2_Driver_hal_i2cStart
;__irgrid2_Driver.c,920 :: 		hal_i2cWrite(_slaveAddress, writeReg, 4, END_MODE_STOP);
0x1534	0x4700E0  	ADD	W14, #0, W1
0x1536	0x208290  	MOV	#lo_addr(__irgrid2_Driver__slaveAddress), W0
0x1538	0xEF201A  	CLR	W13
0x153A	0x20004C  	MOV	#4, W12
0x153C	0x780581  	MOV	W1, W11
0x153E	0x784510  	MOV.B	[W0], W10
0x1540	0x07FCC7  	RCALL	__irgrid2_Driver_hal_i2cWrite
;__irgrid2_Driver.c,921 :: 		}
L_end_irgrid2_writeByte:
0x1542	0x7806CF  	POP	W13
0x1544	0x78064F  	POP	W12
0x1546	0x7805CF  	POP	W11
0x1548	0x78054F  	POP	W10
0x154A	0xFA8000  	ULNK
0x154C	0x060000  	RETURN
; end of _irgrid2_writeByte
_applicationTask:
;Click_IR_Grid2_DSPIC.c,55 :: 		void applicationTask()
;Click_IR_Grid2_DSPIC.c,57 :: 		irgrid2_getPixelTemperature(&Ta,&pixelTemp[0]);
0x32AC	0x781F8A  	PUSH	W10
0x32AE	0x781F8B  	PUSH	W11
0x32B0	0x781F8C  	PUSH	W12
0x32B2	0x215A0B  	MOV	#lo_addr(_pixelTemp), W11
0x32B4	0x2082AA  	MOV	#lo_addr(_Ta), W10
0x32B6	0x07FF40  	RCALL	_irgrid2_getPixelTemperature
;Click_IR_Grid2_DSPIC.c,59 :: 		mikrobus_logWrite("Ambient temperature:  ",_LOG_TEXT);
0x32B8	0xB3C01B  	MOV.B	#1, W11
0x32BA	0x2083EA  	MOV	#lo_addr(?lstr3_Click_IR_Grid2_DSPIC), W10
0x32BC	0x07FF84  	RCALL	_mikrobus_logWrite
;Click_IR_Grid2_DSPIC.c,60 :: 		FloatToStr(Ta,demoText);
0x32BE	0x221A0C  	MOV	#lo_addr(_demoText), W12
0x32C0	0x80415A  	MOV	_Ta, W10
0x32C2	0x80416B  	MOV	_Ta+2, W11
0x32C4	0x07FE22  	RCALL	_FloatToStr
;Click_IR_Grid2_DSPIC.c,61 :: 		mikrobus_logWrite(demoText,_LOG_LINE);
0x32C6	0xB3C02B  	MOV.B	#2, W11
0x32C8	0x221A0A  	MOV	#lo_addr(_demoText), W10
0x32CA	0x07FF7D  	RCALL	_mikrobus_logWrite
;Click_IR_Grid2_DSPIC.c,62 :: 		mikrobus_logWrite(" ", _LOG_LINE);
0x32CC	0xB3C02B  	MOV.B	#2, W11
0x32CE	0x20800A  	MOV	#lo_addr(?lstr4_Click_IR_Grid2_DSPIC), W10
0x32D0	0x07FF7A  	RCALL	_mikrobus_logWrite
;Click_IR_Grid2_DSPIC.c,63 :: 		mikrobus_logWrite("--- Pixel temperature matrix 32x24 ---", _LOG_LINE);
0x32D2	0xB3C02B  	MOV.B	#2, W11
0x32D4	0x20802A  	MOV	#lo_addr(?lstr5_Click_IR_Grid2_DSPIC), W10
0x32D6	0x07FF77  	RCALL	_mikrobus_logWrite
;Click_IR_Grid2_DSPIC.c,65 :: 		for ( cnt = 0 ; cnt < 768 ; cnt++)
0x32D8	0xEF2000  	CLR	W0
0x32DA	0x891020  	MOV	W0, _cnt
L_applicationTask2:
0x32DC	0x811021  	MOV	_cnt, W1
0x32DE	0x203000  	MOV	#768, W0
0x32E0	0xE10800  	CP	W1, W0
0x32E2	0x31001F  	BRA GEU	L_applicationTask3
L__applicationTask18:
;Click_IR_Grid2_DSPIC.c,67 :: 		FloatToStr(pixelTemp[cnt],demoText);
0x32E4	0x811020  	MOV	_cnt, W0
0x32E6	0xDD00C2  	SL	W0, #2, W1
0x32E8	0x215A00  	MOV	#lo_addr(_pixelTemp), W0
0x32EA	0x400001  	ADD	W0, W1, W0
0x32EC	0x221A0C  	MOV	#lo_addr(_demoText), W12
0x32EE	0xBE0510  	MOV.D	[W0], W10
0x32F0	0x07FE0C  	RCALL	_FloatToStr
;Click_IR_Grid2_DSPIC.c,68 :: 		demoText[ 5 ] = 0 ;
0x32F2	0x221A51  	MOV	#lo_addr(_demoText+5), W1
0x32F4	0xEF2000  	CLR	W0
0x32F6	0x784880  	MOV.B	W0, [W1]
;Click_IR_Grid2_DSPIC.c,69 :: 		mikrobus_logWrite(demoText, _LOG_TEXT);
0x32F8	0xB3C01B  	MOV.B	#1, W11
0x32FA	0x221A0A  	MOV	#lo_addr(_demoText), W10
0x32FC	0x07FF64  	RCALL	_mikrobus_logWrite
;Click_IR_Grid2_DSPIC.c,70 :: 		mikrobus_logWrite("|", _LOG_TEXT);
0x32FE	0xB3C01B  	MOV.B	#1, W11
0x3300	0x20838A  	MOV	#lo_addr(?lstr6_Click_IR_Grid2_DSPIC), W10
0x3302	0x07FF61  	RCALL	_mikrobus_logWrite
;Click_IR_Grid2_DSPIC.c,71 :: 		Delay_1ms();
0x3304	0x07FF46  	RCALL	_Delay_1ms
;Click_IR_Grid2_DSPIC.c,72 :: 		if(((cnt % 32) == 0) && (cnt > 0))
0x3306	0x811020  	MOV	_cnt, W0
0x3308	0x60007F  	AND	W0, #31, W0
0x330A	0xE10060  	CP	W0, #0
0x330C	0x3A0006  	BRA NZ	L__applicationTask14
L__applicationTask19:
0x330E	0x811020  	MOV	_cnt, W0
0x3310	0xE10060  	CP	W0, #0
0x3312	0x360003  	BRA LEU	L__applicationTask13
L__applicationTask20:
L__applicationTask12:
;Click_IR_Grid2_DSPIC.c,74 :: 		mikrobus_logWrite(" ", _LOG_LINE);
0x3314	0xB3C02B  	MOV.B	#2, W11
0x3316	0x2083AA  	MOV	#lo_addr(?lstr7_Click_IR_Grid2_DSPIC), W10
0x3318	0x07FF56  	RCALL	_mikrobus_logWrite
;Click_IR_Grid2_DSPIC.c,72 :: 		if(((cnt % 32) == 0) && (cnt > 0))
L__applicationTask14:
L__applicationTask13:
;Click_IR_Grid2_DSPIC.c,65 :: 		for ( cnt = 0 ; cnt < 768 ; cnt++)
0x331A	0x200011  	MOV	#1, W1
0x331C	0x222040  	MOV	#lo_addr(_cnt), W0
0x331E	0x408810  	ADD	W1, [W0], [W0]
;Click_IR_Grid2_DSPIC.c,76 :: 		}
0x3320	0x37FFDD  	BRA	L_applicationTask2
L_applicationTask3:
;Click_IR_Grid2_DSPIC.c,77 :: 		mikrobus_logWrite(" ", _LOG_LINE);
0x3322	0xB3C02B  	MOV.B	#2, W11
0x3324	0x2083CA  	MOV	#lo_addr(?lstr8_Click_IR_Grid2_DSPIC), W10
0x3326	0x07FF4F  	RCALL	_mikrobus_logWrite
;Click_IR_Grid2_DSPIC.c,78 :: 		Delay_ms( 500 );
0x3328	0x2000B8  	MOV	#11, W8
0x332A	0x22C2D7  	MOV	#11309, W7
L_applicationTask8:
0x332C	0xED200E  	DEC	W7
0x332E	0x3AFFFE  	BRA NZ	L_applicationTask8
0x3330	0xED2010  	DEC	W8
0x3332	0x3AFFFC  	BRA NZ	L_applicationTask8
;Click_IR_Grid2_DSPIC.c,79 :: 		}
L_end_applicationTask:
0x3334	0x78064F  	POP	W12
0x3336	0x7805CF  	POP	W11
0x3338	0x78054F  	POP	W10
0x333A	0x060000  	RETURN
; end of _applicationTask
_irgrid2_getPixelTemperature:
0x3138	0xFA000A  	LNK	#10
;__irgrid2_Driver.c,1001 :: 		void irgrid2_getPixelTemperature(float *Ta, float *pixelTemp)
;__irgrid2_Driver.c,1004 :: 		float _Ta = 0;
0x313A	0x781F8C  	PUSH	W12
0x313C	0x781F8D  	PUSH	W13
;__irgrid2_Driver.c,1005 :: 		float _tr = 0;
0x313E	0x4700E2  	ADD	W14, #2, W1
0x3140	0x2878C0  	MOV	#lo_addr(?ICSirgrid2_getPixelTemperature__tr_L0), W0
0x3142	0x090003  	REPEAT	#3
0x3144	0x7818B0  	MOV	[W0++], [W1++]
;__irgrid2_Driver.c,1006 :: 		float _emissivity = 0.95;
;__irgrid2_Driver.c,1010 :: 		for ( x = 0 ; x < 2 ; x++)
0x3146	0xEF2000  	CLR	W0
0x3148	0x980700  	MOV	W0, [W14+0]
L_irgrid2_getPixelTemperature167:
0x314A	0x90000E  	MOV	[W14+0], W0
0x314C	0xE10062  	CP	W0, #2
0x314E	0x31001A  	BRA GEU	L_irgrid2_getPixelTemperature168
L__irgrid2_getPixelTemperature409:
;__irgrid2_Driver.c,1012 :: 		irgrid2_getFrameData(mlx90640Frame);
0x3150	0xBE9F8A  	PUSH.D	W10
0x3152	0x20894A  	MOV	#lo_addr(irgrid2_getPixelTemperature_mlx90640Frame_L0), W10
0x3154	0x07F968  	RCALL	_irgrid2_getFrameData
;__irgrid2_Driver.c,1013 :: 		_Ta = irgrid2_GetTa(mlx90640Frame, &mlx90640);
0x3156	0x22210B  	MOV	#lo_addr(__irgrid2_Driver_mlx90640), W11
0x3158	0x20894A  	MOV	#lo_addr(irgrid2_getPixelTemperature_mlx90640Frame_L0), W10
0x315A	0x07FA2E  	RCALL	_irgrid2_GetTa
;__irgrid2_Driver.c,1014 :: 		_tr = _Ta - TA_SHIFT;
0x315C	0x200002  	MOV	#0, W2
0x315E	0x241003  	MOV	#16640, W3
0x3160	0x07EBAA  	RCALL	__Sub_FP
0x3162	0xBE054F  	POP.D	W10
0x3164	0x980710  	MOV	W0, [W14+2]
0x3166	0x980721  	MOV	W1, [W14+4]
;__irgrid2_Driver.c,1015 :: 		irgrid2_CalculateTo(mlx90640Frame, &mlx90640, _emissivity, _tr, pixelTemp);
0x3168	0xBE9F8A  	PUSH.D	W10
0x316A	0x781F8B  	PUSH	W11
0x316C	0xBE9F80  	PUSH.D	W0
0x316E	0x90063E  	MOV	[W14+6], W12
0x3170	0x9006CE  	MOV	[W14+8], W13
0x3172	0x20894A  	MOV	#lo_addr(irgrid2_getPixelTemperature_mlx90640Frame_L0), W10
0x3174	0x22210B  	MOV	#lo_addr(__irgrid2_Driver_mlx90640), W11
0x3176	0x07FAB3  	RCALL	_irgrid2_CalculateTo
0x3178	0xB1006F  	SUB	#6, W15
0x317A	0xBE054F  	POP.D	W10
;__irgrid2_Driver.c,1010 :: 		for ( x = 0 ; x < 2 ; x++)
0x317C	0x90008E  	MOV	[W14+0], W1
0x317E	0x470060  	ADD	W14, #0, W0
0x3180	0x408861  	ADD	W1, #1, [W0]
;__irgrid2_Driver.c,1016 :: 		}
0x3182	0x37FFE3  	BRA	L_irgrid2_getPixelTemperature167
L_irgrid2_getPixelTemperature168:
;__irgrid2_Driver.c,1017 :: 		*Ta = _tr;
0x3184	0x90001E  	MOV	[W14+2], W0
0x3186	0x9000AE  	MOV	[W14+4], W1
0x3188	0xBE8D00  	MOV.D	W0, [W10]
;__irgrid2_Driver.c,1018 :: 		}
L_end_irgrid2_getPixelTemperature:
0x318A	0x7806CF  	POP	W13
0x318C	0x78064F  	POP	W12
0x318E	0xFA8000  	ULNK
0x3190	0x060000  	RETURN
; end of _irgrid2_getPixelTemperature
_irgrid2_getFrameData:
0x2426	0xFA0006  	LNK	#6
;__irgrid2_Driver.c,1030 :: 		int irgrid2_getFrameData(uint16_t *frameData)
;__irgrid2_Driver.c,1032 :: 		uint16_t dataReady = 1;
0x2428	0x781F8B  	PUSH	W11
0x242A	0x781F8C  	PUSH	W12
;__irgrid2_Driver.c,1035 :: 		uint8_t cnt = 0;
0x242C	0x200000  	MOV	#0, W0
0x242E	0x984740  	MOV.B	W0, [W14+4]
;__irgrid2_Driver.c,1037 :: 		dataReady = 0;
; dataReady start address is: 0 (W0)
0x2430	0xEF2000  	CLR	W0
; dataReady end address is: 0 (W0)
;__irgrid2_Driver.c,1039 :: 		while(dataReady == 0)
L_irgrid2_getFrameData170:
; dataReady start address is: 0 (W0)
0x2432	0xE10060  	CP	W0, #0
0x2434	0x3A000A  	BRA NZ	L_irgrid2_getFrameData171
L__irgrid2_getFrameData412:
; dataReady end address is: 0 (W0)
;__irgrid2_Driver.c,1041 :: 		irgrid2_readData(0x8000, 1, &statusRegister);
0x2436	0x470062  	ADD	W14, #2, W0
0x2438	0x781F8A  	PUSH	W10
0x243A	0x780600  	MOV	W0, W12
0x243C	0x20001B  	MOV	#1, W11
0x243E	0x28000A  	MOV	#32768, W10
0x2440	0x07F66B  	RCALL	_irgrid2_readData
0x2442	0x78054F  	POP	W10
;__irgrid2_Driver.c,1042 :: 		dataReady = statusRegister & 0x0008;
0x2444	0x90001E  	MOV	[W14+2], W0
; dataReady start address is: 0 (W0)
0x2446	0x600068  	AND	W0, #8, W0
;__irgrid2_Driver.c,1043 :: 		}
0x2448	0x37FFF4  	BRA	L_irgrid2_getFrameData170
L_irgrid2_getFrameData171:
;__irgrid2_Driver.c,1045 :: 		while(dataReady != 0 && cnt < 5)
L_irgrid2_getFrameData172:
; dataReady end address is: 0 (W0)
; dataReady start address is: 0 (W0)
0x244A	0xE10060  	CP	W0, #0
0x244C	0x32001A  	BRA Z	L__irgrid2_getFrameData244
L__irgrid2_getFrameData413:
; dataReady end address is: 0 (W0)
0x244E	0x90404E  	MOV.B	[W14+4], W0
0x2450	0xE10465  	CP.B	W0, #5
0x2452	0x310017  	BRA GEU	L__irgrid2_getFrameData243
L__irgrid2_getFrameData414:
L__irgrid2_getFrameData242:
;__irgrid2_Driver.c,1047 :: 		irgrid2_writeByte(0x8000, 0x0030);
0x2454	0x781F8A  	PUSH	W10
0x2456	0x20030B  	MOV	#48, W11
0x2458	0x28000A  	MOV	#32768, W10
0x245A	0x07F858  	RCALL	_irgrid2_writeByte
0x245C	0x78054F  	POP	W10
;__irgrid2_Driver.c,1048 :: 		irgrid2_readData(0x0400, 832, frameData);
0x245E	0x781F8A  	PUSH	W10
0x2460	0x78060A  	MOV	W10, W12
0x2462	0x20340B  	MOV	#832, W11
0x2464	0x20400A  	MOV	#1024, W10
0x2466	0x07F658  	RCALL	_irgrid2_readData
;__irgrid2_Driver.c,1049 :: 		irgrid2_readData(0x8000, 1, &statusRegister);
0x2468	0x470062  	ADD	W14, #2, W0
0x246A	0x780600  	MOV	W0, W12
0x246C	0x20001B  	MOV	#1, W11
0x246E	0x28000A  	MOV	#32768, W10
0x2470	0x07F653  	RCALL	_irgrid2_readData
0x2472	0x78054F  	POP	W10
;__irgrid2_Driver.c,1050 :: 		dataReady = statusRegister & 0x0008;
0x2474	0x90001E  	MOV	[W14+2], W0
; dataReady start address is: 4 (W2)
0x2476	0x600168  	AND	W0, #8, W2
;__irgrid2_Driver.c,1051 :: 		cnt = cnt + 1;
0x2478	0x9040CE  	MOV.B	[W14+4], W1
0x247A	0x470064  	ADD	W14, #4, W0
0x247C	0x40C861  	ADD.B	W1, #1, [W0]
;__irgrid2_Driver.c,1052 :: 		}
0x247E	0x780002  	MOV	W2, W0
; dataReady end address is: 4 (W2)
0x2480	0x37FFE4  	BRA	L_irgrid2_getFrameData172
;__irgrid2_Driver.c,1045 :: 		while(dataReady != 0 && cnt < 5)
L__irgrid2_getFrameData244:
L__irgrid2_getFrameData243:
;__irgrid2_Driver.c,1054 :: 		irgrid2_readData(0x800D, 1, &controlRegister1);
0x2482	0x470060  	ADD	W14, #0, W0
0x2484	0x781F8A  	PUSH	W10
0x2486	0x780600  	MOV	W0, W12
0x2488	0x20001B  	MOV	#1, W11
0x248A	0x2800DA  	MOV	#32781, W10
0x248C	0x07F645  	RCALL	_irgrid2_readData
0x248E	0x78054F  	POP	W10
;__irgrid2_Driver.c,1055 :: 		frameData[832] = controlRegister1;
0x2490	0x206800  	MOV	#1664, W0
0x2492	0x450080  	ADD	W10, W0, W1
0x2494	0x90000E  	MOV	[W14+0], W0
0x2496	0x780880  	MOV	W0, [W1]
;__irgrid2_Driver.c,1056 :: 		frameData[833] = statusRegister & 0x0001;
0x2498	0x206820  	MOV	#1666, W0
0x249A	0x450080  	ADD	W10, W0, W1
0x249C	0x90001E  	MOV	[W14+2], W0
0x249E	0x600061  	AND	W0, #1, W0
0x24A0	0x780880  	MOV	W0, [W1]
;__irgrid2_Driver.c,1057 :: 		return frameData[833];
0x24A2	0x206820  	MOV	#1666, W0
0x24A4	0x450000  	ADD	W10, W0, W0
0x24A6	0x780010  	MOV	[W0], W0
;__irgrid2_Driver.c,1058 :: 		}
;__irgrid2_Driver.c,1057 :: 		return frameData[833];
;__irgrid2_Driver.c,1058 :: 		}
L_end_irgrid2_getFrameData:
0x24A8	0x78064F  	POP	W12
0x24AA	0x7805CF  	POP	W11
0x24AC	0xFA8000  	ULNK
0x24AE	0x060000  	RETURN
; end of _irgrid2_getFrameData
_irgrid2_GetTa:
0x25B8	0xFA0018  	LNK	#24
;__irgrid2_Driver.c,1134 :: 		float irgrid2_GetTa(uint16_t *frameData,  paramsMLX90640 *params)
;__irgrid2_Driver.c,1141 :: 		vdd = irgrid2_GetVdd(frameData, params);
0x25BA	0x781F8A  	PUSH	W10
0x25BC	0x781F8C  	PUSH	W12
0x25BE	0x781F8D  	PUSH	W13
0x25C0	0xBE9F8A  	PUSH.D	W10
0x25C2	0x07F7F7  	RCALL	_irgrid2_GetVdd
0x25C4	0xBE054F  	POP.D	W10
0x25C6	0x980740  	MOV	W0, [W14+8]
0x25C8	0x980751  	MOV	W1, [W14+10]
;__irgrid2_Driver.c,1143 :: 		ptat = frameData[800];
0x25CA	0x206400  	MOV	#1600, W0
0x25CC	0x450100  	ADD	W10, W0, W2
0x25CE	0xBE9F8A  	PUSH.D	W10
0x25D0	0x780012  	MOV	[W2], W0
0x25D2	0xEB0080  	CLR	W1
0x25D4	0x07F0DB  	RCALL	__Long2Float
0x25D6	0x980700  	MOV	W0, [W14+0]
0x25D8	0x980711  	MOV	W1, [W14+2]
;__irgrid2_Driver.c,1144 :: 		if(ptat > 32767)
0x25DA	0x2FE002  	MOV	#65024, W2
0x25DC	0x246FF3  	MOV	#18175, W3
0x25DE	0x07EFC8  	RCALL	__Compare_Ge_Fp
0x25E0	0xE00000  	CP0	W0
0x25E2	0xEF6000  	CLR.B	W0
0x25E4	0x340001  	BRA LE	L__irgrid2_GetTa423
0x25E6	0xEC6000  	INC.B	W0
L__irgrid2_GetTa423:
0x25E8	0xBE054F  	POP.D	W10
0x25EA	0xE24000  	CP0.B	W0
0x25EC	0x320009  	BRA Z	L_irgrid2_GetTa176
L__irgrid2_GetTa424:
;__irgrid2_Driver.c,1146 :: 		ptat = ptat - 65536;
0x25EE	0x90000E  	MOV	[W14+0], W0
0x25F0	0x90009E  	MOV	[W14+2], W1
0x25F2	0x200002  	MOV	#0, W2
0x25F4	0x247803  	MOV	#18304, W3
0x25F6	0xBE9F8A  	PUSH.D	W10
0x25F8	0x07F15E  	RCALL	__Sub_FP
0x25FA	0xBE054F  	POP.D	W10
0x25FC	0x980700  	MOV	W0, [W14+0]
0x25FE	0x980711  	MOV	W1, [W14+2]
;__irgrid2_Driver.c,1147 :: 		}
L_irgrid2_GetTa176:
;__irgrid2_Driver.c,1149 :: 		ptatArt = frameData[768];
0x2600	0x206000  	MOV	#1536, W0
0x2602	0x450100  	ADD	W10, W0, W2
0x2604	0x781F8B  	PUSH	W11
0x2606	0x780012  	MOV	[W2], W0
0x2608	0xEB0080  	CLR	W1
0x260A	0x07F0C0  	RCALL	__Long2Float
0x260C	0x980720  	MOV	W0, [W14+4]
0x260E	0x980731  	MOV	W1, [W14+6]
;__irgrid2_Driver.c,1150 :: 		if(ptatArt > 32767)
0x2610	0x2FE002  	MOV	#65024, W2
0x2612	0x246FF3  	MOV	#18175, W3
0x2614	0x07EFAD  	RCALL	__Compare_Ge_Fp
0x2616	0xE00000  	CP0	W0
0x2618	0xEF6000  	CLR.B	W0
0x261A	0x340001  	BRA LE	L__irgrid2_GetTa425
0x261C	0xEC6000  	INC.B	W0
L__irgrid2_GetTa425:
0x261E	0x7805CF  	POP	W11
0x2620	0xE24000  	CP0.B	W0
0x2622	0x320009  	BRA Z	L_irgrid2_GetTa177
L__irgrid2_GetTa426:
;__irgrid2_Driver.c,1152 :: 		ptatArt = ptatArt - 65536;
0x2624	0x90002E  	MOV	[W14+4], W0
0x2626	0x9000BE  	MOV	[W14+6], W1
0x2628	0x200002  	MOV	#0, W2
0x262A	0x247803  	MOV	#18304, W3
0x262C	0x781F8B  	PUSH	W11
0x262E	0x07F143  	RCALL	__Sub_FP
0x2630	0x7805CF  	POP	W11
0x2632	0x980720  	MOV	W0, [W14+4]
0x2634	0x980731  	MOV	W1, [W14+6]
;__irgrid2_Driver.c,1153 :: 		}
L_irgrid2_GetTa177:
;__irgrid2_Driver.c,1154 :: 		ptatArt = (ptat / (ptat * params->alphaPTAT + ptatArt)) * _pow(2, (double)18);
0x2636	0x45816E  	ADD	W11, #14, W2
0x2638	0xBE0012  	MOV.D	[W2], W0
0x263A	0x781F8B  	PUSH	W11
0x263C	0x90010E  	MOV	[W14+0], W2
0x263E	0x90019E  	MOV	[W14+2], W3
0x2640	0x07EECE  	RCALL	__Mul_FP
0x2642	0x9001AE  	MOV	[W14+4], W3
0x2644	0x90023E  	MOV	[W14+6], W4
0x2646	0x47016C  	ADD	W14, #12, W2
0x2648	0x780103  	MOV	W3, W2
0x264A	0x780184  	MOV	W4, W3
0x264C	0x07EE12  	RCALL	__AddSub_FP
0x264E	0x980760  	MOV	W0, [W14+12]
0x2650	0x980771  	MOV	W1, [W14+14]
0x2652	0x90016E  	MOV	[W14+12], W2
0x2654	0x9001FE  	MOV	[W14+14], W3
0x2656	0x90000E  	MOV	[W14+0], W0
0x2658	0x90009E  	MOV	[W14+2], W1
0x265A	0x07EFAA  	RCALL	__Div_FP
0x265C	0x980F20  	MOV	W0, [W14+20]
0x265E	0x980F31  	MOV	W1, [W14+22]
0x2660	0x20000C  	MOV	#0, W12
0x2662	0x24190D  	MOV	#16784, W13
0x2664	0x20000A  	MOV	#0, W10
0x2666	0x24000B  	MOV	#16384, W11
0x2668	0x07F320  	RCALL	__irgrid2_Driver__pow
0x266A	0x90092E  	MOV	[W14+20], W2
0x266C	0x9009BE  	MOV	[W14+22], W3
0x266E	0x07EEB7  	RCALL	__Mul_FP
0x2670	0x7805CF  	POP	W11
0x2672	0x980720  	MOV	W0, [W14+4]
0x2674	0x980731  	MOV	W1, [W14+6]
;__irgrid2_Driver.c,1156 :: 		ta = (ptatArt / (1 + params->KvPTAT * (vdd - 3.3)) - params->vPTAT25);
0x2676	0x458064  	ADD	W11, #4, W0
0x2678	0x980F20  	MOV	W0, [W14+20]
0x267A	0x90004E  	MOV	[W14+8], W0
0x267C	0x9000DE  	MOV	[W14+10], W1
0x267E	0x233332  	MOV	#13107, W2
0x2680	0x240533  	MOV	#16467, W3
0x2682	0x781F8B  	PUSH	W11
0x2684	0x07F118  	RCALL	__Sub_FP
0x2686	0x900A2E  	MOV	[W14+20], W4
0x2688	0xBE0114  	MOV.D	[W4], W2
0x268A	0x07EEA9  	RCALL	__Mul_FP
0x268C	0x200003  	MOV	#0, W3
0x268E	0x23F804  	MOV	#16256, W4
0x2690	0x47016C  	ADD	W14, #12, W2
0x2692	0x780103  	MOV	W3, W2
0x2694	0x780184  	MOV	W4, W3
0x2696	0x07EDED  	RCALL	__AddSub_FP
0x2698	0x980760  	MOV	W0, [W14+12]
0x269A	0x980771  	MOV	W1, [W14+14]
0x269C	0x90016E  	MOV	[W14+12], W2
0x269E	0x9001FE  	MOV	[W14+14], W3
0x26A0	0x90002E  	MOV	[W14+4], W0
0x26A2	0x9000BE  	MOV	[W14+6], W1
0x26A4	0x07EF85  	RCALL	__Div_FP
0x26A6	0x7805CF  	POP	W11
0x26A8	0x980F20  	MOV	W0, [W14+20]
0x26AA	0x980F31  	MOV	W1, [W14+22]
0x26AC	0x45806C  	ADD	W11, #12, W0
0x26AE	0x781F8B  	PUSH	W11
0x26B0	0x780010  	MOV	[W0], W0
0x26B2	0xEB0080  	CLR	W1
0x26B4	0x07F06B  	RCALL	__Long2Float
0x26B6	0x980760  	MOV	W0, [W14+12]
0x26B8	0x980771  	MOV	W1, [W14+14]
0x26BA	0x90016E  	MOV	[W14+12], W2
0x26BC	0x9001FE  	MOV	[W14+14], W3
0x26BE	0x90082E  	MOV	[W14+20], W0
0x26C0	0x9008BE  	MOV	[W14+22], W1
0x26C2	0x07F0F9  	RCALL	__Sub_FP
0x26C4	0x7805CF  	POP	W11
;__irgrid2_Driver.c,1157 :: 		ta = ta / params->KtPTAT + 25;
0x26C6	0x458268  	ADD	W11, #8, W4
0x26C8	0xBE0114  	MOV.D	[W4], W2
0x26CA	0x07EF72  	RCALL	__Div_FP
0x26CC	0x200002  	MOV	#0, W2
0x26CE	0x241C83  	MOV	#16840, W3
0x26D0	0x07EDD0  	RCALL	__AddSub_FP
;__irgrid2_Driver.c,1159 :: 		return ta;
;__irgrid2_Driver.c,1160 :: 		}
;__irgrid2_Driver.c,1159 :: 		return ta;
;__irgrid2_Driver.c,1160 :: 		}
L_end_irgrid2_GetTa:
0x26D2	0x7806CF  	POP	W13
0x26D4	0x78064F  	POP	W12
0x26D6	0x78054F  	POP	W10
0x26D8	0xFA8000  	ULNK
0x26DA	0x060000  	RETURN
; end of _irgrid2_GetTa
_irgrid2_GetVdd:
0x15B2	0xFA0012  	LNK	#18
;__irgrid2_Driver.c,1397 :: 		float irgrid2_GetVdd(uint16_t *frameData,  paramsMLX90640 *params)
;__irgrid2_Driver.c,1404 :: 		vdd = frameData[810];
0x15B4	0x781F8A  	PUSH	W10
0x15B6	0x781F8C  	PUSH	W12
0x15B8	0x781F8D  	PUSH	W13
0x15BA	0x206540  	MOV	#1620, W0
0x15BC	0x450100  	ADD	W10, W0, W2
0x15BE	0xBE9F8A  	PUSH.D	W10
0x15C0	0x780012  	MOV	[W2], W0
0x15C2	0xEB0080  	CLR	W1
0x15C4	0x07F8E3  	RCALL	__Long2Float
0x15C6	0x980700  	MOV	W0, [W14+0]
0x15C8	0x980711  	MOV	W1, [W14+2]
;__irgrid2_Driver.c,1405 :: 		if(vdd > 32767)
0x15CA	0x2FE002  	MOV	#65024, W2
0x15CC	0x246FF3  	MOV	#18175, W3
0x15CE	0x07F7D0  	RCALL	__Compare_Ge_Fp
0x15D0	0xE00000  	CP0	W0
0x15D2	0xEF6000  	CLR.B	W0
0x15D4	0x340001  	BRA LE	L__irgrid2_GetVdd461
0x15D6	0xEC6000  	INC.B	W0
L__irgrid2_GetVdd461:
0x15D8	0xBE054F  	POP.D	W10
0x15DA	0xE24000  	CP0.B	W0
0x15DC	0x320009  	BRA Z	L_irgrid2_GetVdd214
L__irgrid2_GetVdd462:
;__irgrid2_Driver.c,1407 :: 		vdd = vdd - 65536;
0x15DE	0x90000E  	MOV	[W14+0], W0
0x15E0	0x90009E  	MOV	[W14+2], W1
0x15E2	0x200002  	MOV	#0, W2
0x15E4	0x247803  	MOV	#18304, W3
0x15E6	0xBE9F8A  	PUSH.D	W10
0x15E8	0x07F966  	RCALL	__Sub_FP
0x15EA	0xBE054F  	POP.D	W10
0x15EC	0x980700  	MOV	W0, [W14+0]
0x15EE	0x980711  	MOV	W1, [W14+2]
;__irgrid2_Driver.c,1408 :: 		}
L_irgrid2_GetVdd214:
;__irgrid2_Driver.c,1409 :: 		resolutionRAM = (frameData[832] & 0x0C00) >> 10;
0x15F0	0x206800  	MOV	#1664, W0
0x15F2	0x450000  	ADD	W10, W0, W0
0x15F4	0x780090  	MOV	[W0], W1
0x15F6	0x20C000  	MOV	#3072, W0
0x15F8	0x608000  	AND	W1, W0, W0
0x15FA	0xDE004A  	LSR	W0, #10, W0
0x15FC	0x980720  	MOV	W0, [W14+4]
;__irgrid2_Driver.c,1410 :: 		resolutionCorrection = _pow(2, (double)params->resolutionEE) / _pow(2, (double)resolutionRAM);
0x15FE	0x200200  	MOV	#32, W0
0x1600	0x458100  	ADD	W11, W0, W2
0x1602	0x781F8B  	PUSH	W11
0x1604	0xFB8012  	ZE	[W2], W0
0x1606	0xEB0080  	CLR	W1
0x1608	0x07F8C1  	RCALL	__Long2Float
0x160A	0xBE0600  	MOV.D	W0, W12
0x160C	0x20000A  	MOV	#0, W10
0x160E	0x24000B  	MOV	#16384, W11
0x1610	0x07FB4C  	RCALL	__irgrid2_Driver__pow
0x1612	0x980770  	MOV	W0, [W14+14]
0x1614	0x980F01  	MOV	W1, [W14+16]
0x1616	0x90002E  	MOV	[W14+4], W0
0x1618	0xDE80CF  	ASR	W0, #15, W1
0x161A	0xEB8100  	SETM	W2
0x161C	0x07F8B7  	RCALL	__Long2Float
0x161E	0xBE0600  	MOV.D	W0, W12
0x1620	0x20000A  	MOV	#0, W10
0x1622	0x24000B  	MOV	#16384, W11
0x1624	0x07FB42  	RCALL	__irgrid2_Driver__pow
0x1626	0x980730  	MOV	W0, [W14+6]
0x1628	0x980741  	MOV	W1, [W14+8]
0x162A	0x90007E  	MOV	[W14+14], W0
0x162C	0x90088E  	MOV	[W14+16], W1
0x162E	0x90013E  	MOV	[W14+6], W2
0x1630	0x9001CE  	MOV	[W14+8], W3
0x1632	0x07F7BE  	RCALL	__Div_FP
;__irgrid2_Driver.c,1411 :: 		vdd = (resolutionCorrection * vdd - params->vdd25) / params->kVdd + 3.3;
0x1634	0x90010E  	MOV	[W14+0], W2
0x1636	0x90019E  	MOV	[W14+2], W3
0x1638	0x07F6D2  	RCALL	__Mul_FP
0x163A	0x7805CF  	POP	W11
0x163C	0x980770  	MOV	W0, [W14+14]
0x163E	0x980F01  	MOV	W1, [W14+16]
0x1640	0x458062  	ADD	W11, #2, W0
0x1642	0x781F8B  	PUSH	W11
0x1644	0x780010  	MOV	[W0], W0
0x1646	0xDE80CF  	ASR	W0, #15, W1
0x1648	0xEB8100  	SETM	W2
0x164A	0x07F8A0  	RCALL	__Long2Float
0x164C	0x980730  	MOV	W0, [W14+6]
0x164E	0x980741  	MOV	W1, [W14+8]
0x1650	0x90013E  	MOV	[W14+6], W2
0x1652	0x9001CE  	MOV	[W14+8], W3
0x1654	0x90007E  	MOV	[W14+14], W0
0x1656	0x90088E  	MOV	[W14+16], W1
0x1658	0x07F92E  	RCALL	__Sub_FP
0x165A	0x7805CF  	POP	W11
0x165C	0x980770  	MOV	W0, [W14+14]
0x165E	0x980F01  	MOV	W1, [W14+16]
0x1660	0x78000B  	MOV	W11, W0
0x1662	0x780010  	MOV	[W0], W0
0x1664	0xDE80CF  	ASR	W0, #15, W1
0x1666	0xEB8100  	SETM	W2
0x1668	0x07F891  	RCALL	__Long2Float
0x166A	0x980730  	MOV	W0, [W14+6]
0x166C	0x980741  	MOV	W1, [W14+8]
0x166E	0x90007E  	MOV	[W14+14], W0
0x1670	0x90088E  	MOV	[W14+16], W1
0x1672	0x90013E  	MOV	[W14+6], W2
0x1674	0x9001CE  	MOV	[W14+8], W3
0x1676	0x07F79C  	RCALL	__Div_FP
0x1678	0x233332  	MOV	#13107, W2
0x167A	0x240533  	MOV	#16467, W3
0x167C	0x07F5FA  	RCALL	__AddSub_FP
;__irgrid2_Driver.c,1413 :: 		return vdd;
;__irgrid2_Driver.c,1414 :: 		}
;__irgrid2_Driver.c,1413 :: 		return vdd;
;__irgrid2_Driver.c,1414 :: 		}
L_end_irgrid2_GetVdd:
0x167E	0x7806CF  	POP	W13
0x1680	0x78064F  	POP	W12
0x1682	0x78054F  	POP	W10
0x1684	0xFA8000  	ULNK
0x1686	0x060000  	RETURN
; end of _irgrid2_GetVdd
_irgrid2_CalculateTo:
0x26DE	0xFA0076  	LNK	#118
;__irgrid2_Driver.c,1162 :: 		void irgrid2_CalculateTo(uint16_t *frameData,  paramsMLX90640 *params, float emissivity, float tr, float *result)
0x26E0	0x97B83E  	MOV	[W14-10], W0
0x26E2	0x97B8CE  	MOV	[W14-8], W1
0x26E4	0x9FBF30  	MOV	W0, [W14-10]
0x26E6	0x9FBF41  	MOV	W1, [W14-8]
0x26E8	0x97B82E  	MOV	[W14-12], W0
0x26EA	0x9FBF20  	MOV	W0, [W14-12]
;__irgrid2_Driver.c,1187 :: 		subPage = frameData[833];
0x26EC	0x206820  	MOV	#1666, W0
0x26EE	0x450000  	ADD	W10, W0, W0
0x26F0	0x780010  	MOV	[W0], W0
0x26F2	0x982730  	MOV	W0, [W14+70]
;__irgrid2_Driver.c,1188 :: 		vdd = irgrid2_GetVdd(frameData, params);
0x26F4	0xBE9F8C  	PUSH.D	W12
0x26F6	0xBE9F8A  	PUSH.D	W10
0x26F8	0x07F75C  	RCALL	_irgrid2_GetVdd
0x26FA	0xBE054F  	POP.D	W10
0x26FC	0x980700  	MOV	W0, [W14+0]
0x26FE	0x980711  	MOV	W1, [W14+2]
;__irgrid2_Driver.c,1189 :: 		ta = irgrid2_GetTa(frameData, params);
0x2700	0xBE9F8A  	PUSH.D	W10
0x2702	0x07FF5A  	RCALL	_irgrid2_GetTa
0x2704	0x980720  	MOV	W0, [W14+4]
0x2706	0x980731  	MOV	W1, [W14+6]
;__irgrid2_Driver.c,1190 :: 		ta4 = _pow((ta + 273.15), (double)4);
0x2708	0x293332  	MOV	#37683, W2
0x270A	0x243883  	MOV	#17288, W3
0x270C	0x07EDB2  	RCALL	__AddSub_FP
0x270E	0x20000C  	MOV	#0, W12
0x2710	0x24080D  	MOV	#16512, W13
0x2712	0xBE0500  	MOV.D	W0, W10
0x2714	0x07F2CA  	RCALL	__irgrid2_Driver__pow
0x2716	0x980740  	MOV	W0, [W14+8]
0x2718	0x980751  	MOV	W1, [W14+10]
;__irgrid2_Driver.c,1191 :: 		tr4 = _pow((tr + 273.15), (double)4);
0x271A	0x97B93E  	MOV	[W14-10], W2
0x271C	0x97B9CE  	MOV	[W14-8], W3
0x271E	0x293330  	MOV	#37683, W0
0x2720	0x243881  	MOV	#17288, W1
0x2722	0x07EDA7  	RCALL	__AddSub_FP
0x2724	0x20000C  	MOV	#0, W12
0x2726	0x24080D  	MOV	#16512, W13
0x2728	0xBE0500  	MOV.D	W0, W10
0x272A	0x07F2BF  	RCALL	__irgrid2_Driver__pow
0x272C	0x980760  	MOV	W0, [W14+12]
0x272E	0x980771  	MOV	W1, [W14+14]
;__irgrid2_Driver.c,1192 :: 		taTr = tr4 - (tr4-ta4)/emissivity;
0x2730	0x90014E  	MOV	[W14+8], W2
0x2732	0x9001DE  	MOV	[W14+10], W3
0x2734	0x07F0C0  	RCALL	__Sub_FP
0x2736	0xBE054F  	POP.D	W10
0x2738	0xBE064F  	POP.D	W12
0x273A	0xBE9F8C  	PUSH.D	W12
0x273C	0xBE9F8A  	PUSH.D	W10
0x273E	0xBE010C  	MOV.D	W12, W2
0x2740	0x07EF37  	RCALL	__Div_FP
0x2742	0x982760  	MOV	W0, [W14+76]
0x2744	0x982771  	MOV	W1, [W14+78]
0x2746	0x90006E  	MOV	[W14+12], W0
0x2748	0x9000FE  	MOV	[W14+14], W1
0x274A	0x90216E  	MOV	[W14+76], W2
0x274C	0x9021FE  	MOV	[W14+78], W3
0x274E	0x07F0B3  	RCALL	__Sub_FP
0x2750	0xBE054F  	POP.D	W10
0x2752	0x980F00  	MOV	W0, [W14+16]
0x2754	0x980F11  	MOV	W1, [W14+18]
;__irgrid2_Driver.c,1194 :: 		alphaCorrR[0] = 1 / (1 + params->ksTo[0] * 40);
0x2756	0x200340  	MOV	#52, W0
0x2758	0x470000  	ADD	W14, W0, W0
0x275A	0x983F00  	MOV	W0, [W14+112]
0x275C	0x983740  	MOV	W0, [W14+104]
0x275E	0x200260  	MOV	#38, W0
0x2760	0x458100  	ADD	W11, W0, W2
0x2762	0xBE0012  	MOV.D	[W2], W0
0x2764	0xBE9F8A  	PUSH.D	W10
0x2766	0x200002  	MOV	#0, W2
0x2768	0x242203  	MOV	#16928, W3
0x276A	0x07EE39  	RCALL	__Mul_FP
0x276C	0x200002  	MOV	#0, W2
0x276E	0x23F803  	MOV	#16256, W3
0x2770	0x07ED80  	RCALL	__AddSub_FP
0x2772	0xBE0100  	MOV.D	W0, W2
0x2774	0x200000  	MOV	#0, W0
0x2776	0x23F801  	MOV	#16256, W1
0x2778	0x07EF1B  	RCALL	__Div_FP
0x277A	0xBE054F  	POP.D	W10
0x277C	0x90314E  	MOV	[W14+104], W2
0x277E	0xBE8900  	MOV.D	W0, [W2]
;__irgrid2_Driver.c,1195 :: 		alphaCorrR[1] = 1 ;
0x2780	0x90398E  	MOV	[W14+112], W3
0x2782	0x418164  	ADD	W3, #4, W2
0x2784	0x200000  	MOV	#0, W0
0x2786	0x23F801  	MOV	#16256, W1
0x2788	0xBE8900  	MOV.D	W0, [W2]
;__irgrid2_Driver.c,1196 :: 		alphaCorrR[2] = (1 + params->ksTo[2] * params->ct[2]);
0x278A	0x418068  	ADD	W3, #8, W0
0x278C	0x983760  	MOV	W0, [W14+108]
0x278E	0x200260  	MOV	#38, W0
0x2790	0x458000  	ADD	W11, W0, W0
0x2792	0x400068  	ADD	W0, #8, W0
0x2794	0x983740  	MOV	W0, [W14+104]
0x2796	0x200360  	MOV	#54, W0
0x2798	0x458000  	ADD	W11, W0, W0
0x279A	0x400164  	ADD	W0, #4, W2
0x279C	0xBE9F8A  	PUSH.D	W10
0x279E	0x780012  	MOV	[W2], W0
0x27A0	0xDE80CF  	ASR	W0, #15, W1
0x27A2	0xEB8100  	SETM	W2
0x27A4	0x07EFF3  	RCALL	__Long2Float
0x27A6	0x90324E  	MOV	[W14+104], W4
0x27A8	0xBE0114  	MOV.D	[W4], W2
0x27AA	0x07EE19  	RCALL	__Mul_FP
0x27AC	0x200002  	MOV	#0, W2
0x27AE	0x23F803  	MOV	#16256, W3
0x27B0	0x07ED60  	RCALL	__AddSub_FP
0x27B2	0xBE054F  	POP.D	W10
0x27B4	0x90316E  	MOV	[W14+108], W2
0x27B6	0xBE8900  	MOV.D	W0, [W2]
;__irgrid2_Driver.c,1197 :: 		alphaCorrR[3] = alphaCorrR[2] * (1 + params->ksTo[3] * (params->ct[3] - params->ct[2]));
0x27B8	0x90388E  	MOV	[W14+112], W1
0x27BA	0x40806C  	ADD	W1, #12, W0
0x27BC	0x983F00  	MOV	W0, [W14+112]
0x27BE	0x408168  	ADD	W1, #8, W2
0x27C0	0xBE0012  	MOV.D	[W2], W0
0x27C2	0x983760  	MOV	W0, [W14+108]
0x27C4	0x983771  	MOV	W1, [W14+110]
0x27C6	0x200260  	MOV	#38, W0
0x27C8	0x458000  	ADD	W11, W0, W0
0x27CA	0x40006C  	ADD	W0, #12, W0
0x27CC	0x983740  	MOV	W0, [W14+104]
0x27CE	0x200360  	MOV	#54, W0
0x27D0	0x458000  	ADD	W11, W0, W0
0x27D2	0x4000E6  	ADD	W0, #6, W1
0x27D4	0x400064  	ADD	W0, #4, W0
0x27D6	0x780010  	MOV	[W0], W0
0x27D8	0x100011  	SUBR	W0, [W1], W0
0x27DA	0xBE9F8A  	PUSH.D	W10
0x27DC	0xDE80CF  	ASR	W0, #15, W1
0x27DE	0xEB8100  	SETM	W2
0x27E0	0x07EFD5  	RCALL	__Long2Float
0x27E2	0x90324E  	MOV	[W14+104], W4
0x27E4	0xBE0114  	MOV.D	[W4], W2
0x27E6	0x07EDFB  	RCALL	__Mul_FP
0x27E8	0x200002  	MOV	#0, W2
0x27EA	0x23F803  	MOV	#16256, W3
0x27EC	0x07ED42  	RCALL	__AddSub_FP
0x27EE	0x90316E  	MOV	[W14+108], W2
0x27F0	0x9031FE  	MOV	[W14+110], W3
0x27F2	0x07EDF5  	RCALL	__Mul_FP
0x27F4	0xBE054F  	POP.D	W10
0x27F6	0x90390E  	MOV	[W14+112], W2
0x27F8	0xBE8900  	MOV.D	W0, [W2]
;__irgrid2_Driver.c,1200 :: 		gain = frameData[778];
0x27FA	0x206140  	MOV	#1556, W0
0x27FC	0x450100  	ADD	W10, W0, W2
0x27FE	0xBE9F8A  	PUSH.D	W10
0x2800	0x780012  	MOV	[W2], W0
0x2802	0xEB0080  	CLR	W1
0x2804	0x07EFC3  	RCALL	__Long2Float
0x2806	0x980F20  	MOV	W0, [W14+20]
0x2808	0x980F31  	MOV	W1, [W14+22]
;__irgrid2_Driver.c,1201 :: 		if(gain > 32767)
0x280A	0x2FE002  	MOV	#65024, W2
0x280C	0x246FF3  	MOV	#18175, W3
0x280E	0x07EEB0  	RCALL	__Compare_Ge_Fp
0x2810	0xE00000  	CP0	W0
0x2812	0xEF6000  	CLR.B	W0
0x2814	0x340001  	BRA LE	L__irgrid2_CalculateTo428
0x2816	0xEC6000  	INC.B	W0
L__irgrid2_CalculateTo428:
0x2818	0xBE054F  	POP.D	W10
0x281A	0xBE064F  	POP.D	W12
0x281C	0xE24000  	CP0.B	W0
0x281E	0x32000B  	BRA Z	L_irgrid2_CalculateTo178
L__irgrid2_CalculateTo429:
;__irgrid2_Driver.c,1203 :: 		gain = gain - 65536;
0x2820	0x90082E  	MOV	[W14+20], W0
0x2822	0x9008BE  	MOV	[W14+22], W1
0x2824	0x200002  	MOV	#0, W2
0x2826	0x247803  	MOV	#18304, W3
0x2828	0xBE9F8C  	PUSH.D	W12
0x282A	0xBE9F8A  	PUSH.D	W10
0x282C	0x07F044  	RCALL	__Sub_FP
0x282E	0xBE054F  	POP.D	W10
0x2830	0xBE064F  	POP.D	W12
0x2832	0x980F20  	MOV	W0, [W14+20]
0x2834	0x980F31  	MOV	W1, [W14+22]
;__irgrid2_Driver.c,1204 :: 		}
L_irgrid2_CalculateTo178:
;__irgrid2_Driver.c,1206 :: 		gain = params->gainEE / gain;
0x2836	0x458072  	ADD	W11, #18, W0
0x2838	0x780010  	MOV	[W0], W0
0x283A	0xBE9F8C  	PUSH.D	W12
0x283C	0xBE9F8A  	PUSH.D	W10
0x283E	0xDE80CF  	ASR	W0, #15, W1
0x2840	0xEB8100  	SETM	W2
0x2842	0x07EFA4  	RCALL	__Long2Float
0x2844	0x90092E  	MOV	[W14+20], W2
0x2846	0x9009BE  	MOV	[W14+22], W3
0x2848	0x07EEB3  	RCALL	__Div_FP
0x284A	0xBE054F  	POP.D	W10
0x284C	0x980F20  	MOV	W0, [W14+20]
0x284E	0x980F31  	MOV	W1, [W14+22]
;__irgrid2_Driver.c,1209 :: 		mode = (frameData[832] & 0x1000) >> 5;
0x2850	0x206800  	MOV	#1664, W0
0x2852	0x450000  	ADD	W10, W0, W0
0x2854	0x780090  	MOV	[W0], W1
0x2856	0x210000  	MOV	#4096, W0
0x2858	0x608000  	AND	W1, W0, W0
0x285A	0xDE0045  	LSR	W0, #5, W0
0x285C	0x986F00  	MOV.B	W0, [W14+40]
;__irgrid2_Driver.c,1211 :: 		irDataCP[0] = frameData[776];
0x285E	0x470078  	ADD	W14, #24, W0
0x2860	0x983760  	MOV	W0, [W14+108]
0x2862	0x983740  	MOV	W0, [W14+104]
0x2864	0x206100  	MOV	#1552, W0
0x2866	0x450100  	ADD	W10, W0, W2
0x2868	0xBE9F8A  	PUSH.D	W10
0x286A	0x780012  	MOV	[W2], W0
0x286C	0xEB0080  	CLR	W1
0x286E	0x07EF8E  	RCALL	__Long2Float
0x2870	0xBE054F  	POP.D	W10
0x2872	0x90314E  	MOV	[W14+104], W2
0x2874	0xBE8900  	MOV.D	W0, [W2]
;__irgrid2_Driver.c,1212 :: 		irDataCP[1] = frameData[808];
0x2876	0x90306E  	MOV	[W14+108], W0
0x2878	0x400064  	ADD	W0, #4, W0
0x287A	0x983740  	MOV	W0, [W14+104]
0x287C	0x206500  	MOV	#1616, W0
0x287E	0x450100  	ADD	W10, W0, W2
0x2880	0xBE9F8A  	PUSH.D	W10
0x2882	0x780012  	MOV	[W2], W0
0x2884	0xEB0080  	CLR	W1
0x2886	0x07EF82  	RCALL	__Long2Float
0x2888	0xBE054F  	POP.D	W10
0x288A	0xBE064F  	POP.D	W12
0x288C	0x90314E  	MOV	[W14+104], W2
0x288E	0xBE8900  	MOV.D	W0, [W2]
;__irgrid2_Driver.c,1213 :: 		for(i = 0; i < 2; i++)
0x2890	0xEF2000  	CLR	W0
0x2892	0x982740  	MOV	W0, [W14+72]
L_irgrid2_CalculateTo179:
0x2894	0x90204E  	MOV	[W14+72], W0
0x2896	0xE10062  	CP	W0, #2
0x2898	0x3D0036  	BRA GE	L_irgrid2_CalculateTo180
L__irgrid2_CalculateTo430:
;__irgrid2_Driver.c,1215 :: 		if(irDataCP[i] > 32767)
0x289A	0x4700F8  	ADD	W14, #24, W1
0x289C	0x90204E  	MOV	[W14+72], W0
0x289E	0xDD0042  	SL	W0, #2, W0
0x28A0	0x408100  	ADD	W1, W0, W2
0x28A2	0xBE0012  	MOV.D	[W2], W0
0x28A4	0xBE9F8C  	PUSH.D	W12
0x28A6	0xBE9F8A  	PUSH.D	W10
0x28A8	0x2FE002  	MOV	#65024, W2
0x28AA	0x246FF3  	MOV	#18175, W3
0x28AC	0x07EE61  	RCALL	__Compare_Ge_Fp
0x28AE	0xE00000  	CP0	W0
0x28B0	0xEF6000  	CLR.B	W0
0x28B2	0x340001  	BRA LE	L__irgrid2_CalculateTo431
0x28B4	0xEC6000  	INC.B	W0
L__irgrid2_CalculateTo431:
0x28B6	0xBE054F  	POP.D	W10
0x28B8	0xBE064F  	POP.D	W12
0x28BA	0xE24000  	CP0.B	W0
0x28BC	0x320010  	BRA Z	L_irgrid2_CalculateTo182
L__irgrid2_CalculateTo432:
;__irgrid2_Driver.c,1217 :: 		irDataCP[i] = irDataCP[i] - 65536;
0x28BE	0x4700F8  	ADD	W14, #24, W1
0x28C0	0x90204E  	MOV	[W14+72], W0
0x28C2	0xDD0042  	SL	W0, #2, W0
0x28C4	0x408000  	ADD	W1, W0, W0
0x28C6	0x983740  	MOV	W0, [W14+104]
0x28C8	0xBE0210  	MOV.D	[W0], W4
0x28CA	0x200002  	MOV	#0, W2
0x28CC	0x247803  	MOV	#18304, W3
0x28CE	0xBE9F8C  	PUSH.D	W12
0x28D0	0xBE9F8A  	PUSH.D	W10
0x28D2	0xBE0004  	MOV.D	W4, W0
0x28D4	0x07EFF0  	RCALL	__Sub_FP
0x28D6	0xBE054F  	POP.D	W10
0x28D8	0xBE064F  	POP.D	W12
0x28DA	0x90314E  	MOV	[W14+104], W2
0x28DC	0xBE8900  	MOV.D	W0, [W2]
;__irgrid2_Driver.c,1218 :: 		}
L_irgrid2_CalculateTo182:
;__irgrid2_Driver.c,1219 :: 		irDataCP[i] = irDataCP[i] * gain;
0x28DE	0x4700F8  	ADD	W14, #24, W1
0x28E0	0x90204E  	MOV	[W14+72], W0
0x28E2	0xDD0042  	SL	W0, #2, W0
0x28E4	0x408100  	ADD	W1, W0, W2
0x28E6	0x983742  	MOV	W2, [W14+104]
0x28E8	0xBE0012  	MOV.D	[W2], W0
0x28EA	0xBE9F8C  	PUSH.D	W12
0x28EC	0xBE9F8A  	PUSH.D	W10
0x28EE	0x90092E  	MOV	[W14+20], W2
0x28F0	0x9009BE  	MOV	[W14+22], W3
0x28F2	0x07ED75  	RCALL	__Mul_FP
0x28F4	0xBE054F  	POP.D	W10
0x28F6	0xBE064F  	POP.D	W12
0x28F8	0x90314E  	MOV	[W14+104], W2
0x28FA	0xBE8900  	MOV.D	W0, [W2]
;__irgrid2_Driver.c,1213 :: 		for(i = 0; i < 2; i++)
0x28FC	0x9020CE  	MOV	[W14+72], W1
0x28FE	0x200480  	MOV	#72, W0
0x2900	0x470000  	ADD	W14, W0, W0
0x2902	0x408861  	ADD	W1, #1, [W0]
;__irgrid2_Driver.c,1220 :: 		}
0x2904	0x37FFC7  	BRA	L_irgrid2_CalculateTo179
L_irgrid2_CalculateTo180:
;__irgrid2_Driver.c,1221 :: 		irDataCP[0] = irDataCP[0] - params->cpOffset[0] * (1 + params->cpKta * (ta - 25)) * (1 + params->cpKv * (vdd - 3.3));
0x2906	0x470178  	ADD	W14, #24, W2
0x2908	0x780002  	MOV	W2, W0
0x290A	0x983F20  	MOV	W0, [W14+116]
0x290C	0xBE0012  	MOV.D	[W2], W0
0x290E	0x983F00  	MOV	W0, [W14+112]
0x2910	0x983F11  	MOV	W1, [W14+114]
0x2912	0x22A460  	MOV	#10822, W0
0x2914	0x458000  	ADD	W11, W0, W0
0x2916	0x983760  	MOV	W0, [W14+108]
0x2918	0x45807C  	ADD	W11, #28, W0
0x291A	0x983740  	MOV	W0, [W14+104]
0x291C	0x90002E  	MOV	[W14+4], W0
0x291E	0x9000BE  	MOV	[W14+6], W1
0x2920	0x200002  	MOV	#0, W2
0x2922	0x241C83  	MOV	#16840, W3
0x2924	0xBE9F8C  	PUSH.D	W12
0x2926	0xBE9F8A  	PUSH.D	W10
0x2928	0x07EFC6  	RCALL	__Sub_FP
0x292A	0x90324E  	MOV	[W14+104], W4
0x292C	0xBE0114  	MOV.D	[W4], W2
0x292E	0x07ED57  	RCALL	__Mul_FP
0x2930	0x200002  	MOV	#0, W2
0x2932	0x23F803  	MOV	#16256, W3
0x2934	0x07EC9E  	RCALL	__AddSub_FP
0x2936	0x90316E  	MOV	[W14+108], W2
0x2938	0x983740  	MOV	W0, [W14+104]
0x293A	0x983751  	MOV	W1, [W14+106]
0x293C	0x780012  	MOV	[W2], W0
0x293E	0xDE80CF  	ASR	W0, #15, W1
0x2940	0xEB8100  	SETM	W2
0x2942	0x07EF24  	RCALL	__Long2Float
0x2944	0x90314E  	MOV	[W14+104], W2
0x2946	0x9031DE  	MOV	[W14+106], W3
0x2948	0x07ED4A  	RCALL	__Mul_FP
0x294A	0xBE054F  	POP.D	W10
0x294C	0x983760  	MOV	W0, [W14+108]
0x294E	0x983771  	MOV	W1, [W14+110]
0x2950	0x458078  	ADD	W11, #24, W0
0x2952	0x983740  	MOV	W0, [W14+104]
0x2954	0x90000E  	MOV	[W14+0], W0
0x2956	0x90009E  	MOV	[W14+2], W1
0x2958	0x233332  	MOV	#13107, W2
0x295A	0x240533  	MOV	#16467, W3
0x295C	0xBE9F8A  	PUSH.D	W10
0x295E	0x07EFAB  	RCALL	__Sub_FP
0x2960	0x90324E  	MOV	[W14+104], W4
0x2962	0xBE0114  	MOV.D	[W4], W2
0x2964	0x07ED3C  	RCALL	__Mul_FP
0x2966	0x200002  	MOV	#0, W2
0x2968	0x23F803  	MOV	#16256, W3
0x296A	0x07EC83  	RCALL	__AddSub_FP
0x296C	0x90316E  	MOV	[W14+108], W2
0x296E	0x9031FE  	MOV	[W14+110], W3
0x2970	0x07ED36  	RCALL	__Mul_FP
0x2972	0x982760  	MOV	W0, [W14+76]
0x2974	0x982771  	MOV	W1, [W14+78]
0x2976	0x90216E  	MOV	[W14+76], W2
0x2978	0x9021FE  	MOV	[W14+78], W3
0x297A	0x90380E  	MOV	[W14+112], W0
0x297C	0x90389E  	MOV	[W14+114], W1
0x297E	0x07EF9B  	RCALL	__Sub_FP
0x2980	0xBE054F  	POP.D	W10
0x2982	0xBE064F  	POP.D	W12
0x2984	0x90392E  	MOV	[W14+116], W2
0x2986	0xBE8900  	MOV.D	W0, [W2]
;__irgrid2_Driver.c,1222 :: 		if( mode ==  params->calibrationModeEE)
0x2988	0x200210  	MOV	#33, W0
0x298A	0x458080  	ADD	W11, W0, W1
0x298C	0x90680E  	MOV.B	[W14+40], W0
0x298E	0xE10411  	CP.B	W0, [W1]
0x2990	0x3A0044  	BRA NZ	L_irgrid2_CalculateTo183
L__irgrid2_CalculateTo433:
;__irgrid2_Driver.c,1224 :: 		irDataCP[1] = irDataCP[1] - params->cpOffset[1] * (1 + params->cpKta * (ta - 25)) * (1 + params->cpKv * (vdd - 3.3));
0x2992	0x4700F8  	ADD	W14, #24, W1
0x2994	0x408064  	ADD	W1, #4, W0
0x2996	0x983F20  	MOV	W0, [W14+116]
0x2998	0x408164  	ADD	W1, #4, W2
0x299A	0xBE0012  	MOV.D	[W2], W0
0x299C	0x983F00  	MOV	W0, [W14+112]
0x299E	0x983F11  	MOV	W1, [W14+114]
0x29A0	0x22A460  	MOV	#10822, W0
0x29A2	0x458000  	ADD	W11, W0, W0
0x29A4	0xECA000  	INC2	W0
0x29A6	0x983760  	MOV	W0, [W14+108]
0x29A8	0x45807C  	ADD	W11, #28, W0
0x29AA	0x983740  	MOV	W0, [W14+104]
0x29AC	0x90002E  	MOV	[W14+4], W0
0x29AE	0x9000BE  	MOV	[W14+6], W1
0x29B0	0x200002  	MOV	#0, W2
0x29B2	0x241C83  	MOV	#16840, W3
0x29B4	0xBE9F8C  	PUSH.D	W12
0x29B6	0xBE9F8A  	PUSH.D	W10
0x29B8	0x07EF7E  	RCALL	__Sub_FP
0x29BA	0x90324E  	MOV	[W14+104], W4
0x29BC	0xBE0114  	MOV.D	[W4], W2
0x29BE	0x07ED0F  	RCALL	__Mul_FP
0x29C0	0x200002  	MOV	#0, W2
0x29C2	0x23F803  	MOV	#16256, W3
0x29C4	0x07EC56  	RCALL	__AddSub_FP
0x29C6	0x90316E  	MOV	[W14+108], W2
0x29C8	0x983740  	MOV	W0, [W14+104]
0x29CA	0x983751  	MOV	W1, [W14+106]
0x29CC	0x780012  	MOV	[W2], W0
0x29CE	0xDE80CF  	ASR	W0, #15, W1
0x29D0	0xEB8100  	SETM	W2
0x29D2	0x07EEDC  	RCALL	__Long2Float
0x29D4	0x90314E  	MOV	[W14+104], W2
0x29D6	0x9031DE  	MOV	[W14+106], W3
0x29D8	0x07ED02  	RCALL	__Mul_FP
0x29DA	0xBE054F  	POP.D	W10
0x29DC	0x983760  	MOV	W0, [W14+108]
0x29DE	0x983771  	MOV	W1, [W14+110]
0x29E0	0x458078  	ADD	W11, #24, W0
0x29E2	0x983740  	MOV	W0, [W14+104]
0x29E4	0x90000E  	MOV	[W14+0], W0
0x29E6	0x90009E  	MOV	[W14+2], W1
0x29E8	0x233332  	MOV	#13107, W2
0x29EA	0x240533  	MOV	#16467, W3
0x29EC	0xBE9F8A  	PUSH.D	W10
0x29EE	0x07EF63  	RCALL	__Sub_FP
0x29F0	0x90324E  	MOV	[W14+104], W4
0x29F2	0xBE0114  	MOV.D	[W4], W2
0x29F4	0x07ECF4  	RCALL	__Mul_FP
0x29F6	0x200002  	MOV	#0, W2
0x29F8	0x23F803  	MOV	#16256, W3
0x29FA	0x07EC3B  	RCALL	__AddSub_FP
0x29FC	0x90316E  	MOV	[W14+108], W2
0x29FE	0x9031FE  	MOV	[W14+110], W3
0x2A00	0x07ECEE  	RCALL	__Mul_FP
0x2A02	0x982760  	MOV	W0, [W14+76]
0x2A04	0x982771  	MOV	W1, [W14+78]
0x2A06	0x90216E  	MOV	[W14+76], W2
0x2A08	0x9021FE  	MOV	[W14+78], W3
0x2A0A	0x90380E  	MOV	[W14+112], W0
0x2A0C	0x90389E  	MOV	[W14+114], W1
0x2A0E	0x07EF53  	RCALL	__Sub_FP
0x2A10	0xBE054F  	POP.D	W10
0x2A12	0xBE064F  	POP.D	W12
0x2A14	0x90392E  	MOV	[W14+116], W2
0x2A16	0xBE8900  	MOV.D	W0, [W2]
;__irgrid2_Driver.c,1225 :: 		}
0x2A18	0x37004A  	BRA	L_irgrid2_CalculateTo184
L_irgrid2_CalculateTo183:
;__irgrid2_Driver.c,1228 :: 		irDataCP[1] = irDataCP[1] - (params->cpOffset[1] + params->ilChessC[0]) * (1 + params->cpKta * (ta - 25)) * (1 + params->cpKv * (vdd - 3.3));
0x2A1A	0x4700F8  	ADD	W14, #24, W1
0x2A1C	0x408064  	ADD	W1, #4, W0
0x2A1E	0x983F20  	MOV	W0, [W14+116]
0x2A20	0x408164  	ADD	W1, #4, W2
0x2A22	0xBE0012  	MOV.D	[W2], W0
0x2A24	0x983F00  	MOV	W0, [W14+112]
0x2A26	0x983F11  	MOV	W1, [W14+114]
0x2A28	0x22A460  	MOV	#10822, W0
0x2A2A	0x458000  	ADD	W11, W0, W0
0x2A2C	0xECA000  	INC2	W0
0x2A2E	0x780090  	MOV	[W0], W1
0x2A30	0x22A4A0  	MOV	#10826, W0
0x2A32	0x458000  	ADD	W11, W0, W0
0x2A34	0x983740  	MOV	W0, [W14+104]
0x2A36	0xBE9F8C  	PUSH.D	W12
0x2A38	0xBE9F8A  	PUSH.D	W10
0x2A3A	0x780001  	MOV	W1, W0
0x2A3C	0xDE80CF  	ASR	W0, #15, W1
0x2A3E	0xEB8100  	SETM	W2
0x2A40	0x07EEA5  	RCALL	__Long2Float
0x2A42	0x90324E  	MOV	[W14+104], W4
0x2A44	0xBE0114  	MOV.D	[W4], W2
0x2A46	0x07EC15  	RCALL	__AddSub_FP
0x2A48	0xBE054F  	POP.D	W10
0x2A4A	0x983760  	MOV	W0, [W14+108]
0x2A4C	0x983771  	MOV	W1, [W14+110]
0x2A4E	0x45807C  	ADD	W11, #28, W0
0x2A50	0x983740  	MOV	W0, [W14+104]
0x2A52	0x90002E  	MOV	[W14+4], W0
0x2A54	0x9000BE  	MOV	[W14+6], W1
0x2A56	0x200002  	MOV	#0, W2
0x2A58	0x241C83  	MOV	#16840, W3
0x2A5A	0xBE9F8A  	PUSH.D	W10
0x2A5C	0x07EF2C  	RCALL	__Sub_FP
0x2A5E	0x90324E  	MOV	[W14+104], W4
0x2A60	0xBE0114  	MOV.D	[W4], W2
0x2A62	0x07ECBD  	RCALL	__Mul_FP
0x2A64	0x200002  	MOV	#0, W2
0x2A66	0x23F803  	MOV	#16256, W3
0x2A68	0x07EC04  	RCALL	__AddSub_FP
0x2A6A	0x90316E  	MOV	[W14+108], W2
0x2A6C	0x9031FE  	MOV	[W14+110], W3
0x2A6E	0x07ECB7  	RCALL	__Mul_FP
0x2A70	0xBE054F  	POP.D	W10
0x2A72	0x983760  	MOV	W0, [W14+108]
0x2A74	0x983771  	MOV	W1, [W14+110]
0x2A76	0x458078  	ADD	W11, #24, W0
0x2A78	0x983740  	MOV	W0, [W14+104]
0x2A7A	0x90000E  	MOV	[W14+0], W0
0x2A7C	0x90009E  	MOV	[W14+2], W1
0x2A7E	0x233332  	MOV	#13107, W2
0x2A80	0x240533  	MOV	#16467, W3
0x2A82	0xBE9F8A  	PUSH.D	W10
0x2A84	0x07EF18  	RCALL	__Sub_FP
0x2A86	0x90324E  	MOV	[W14+104], W4
0x2A88	0xBE0114  	MOV.D	[W4], W2
0x2A8A	0x07ECA9  	RCALL	__Mul_FP
0x2A8C	0x200002  	MOV	#0, W2
0x2A8E	0x23F803  	MOV	#16256, W3
0x2A90	0x07EBF0  	RCALL	__AddSub_FP
0x2A92	0x90316E  	MOV	[W14+108], W2
0x2A94	0x9031FE  	MOV	[W14+110], W3
0x2A96	0x07ECA3  	RCALL	__Mul_FP
0x2A98	0x982760  	MOV	W0, [W14+76]
0x2A9A	0x982771  	MOV	W1, [W14+78]
0x2A9C	0x90216E  	MOV	[W14+76], W2
0x2A9E	0x9021FE  	MOV	[W14+78], W3
0x2AA0	0x90380E  	MOV	[W14+112], W0
0x2AA2	0x90389E  	MOV	[W14+114], W1
0x2AA4	0x07EF08  	RCALL	__Sub_FP
0x2AA6	0xBE054F  	POP.D	W10
0x2AA8	0xBE064F  	POP.D	W12
0x2AAA	0x90392E  	MOV	[W14+116], W2
0x2AAC	0xBE8900  	MOV.D	W0, [W2]
;__irgrid2_Driver.c,1229 :: 		}
L_irgrid2_CalculateTo184:
;__irgrid2_Driver.c,1231 :: 		for(pixelNumber = 0; pixelNumber < 768; pixelNumber++)
0x2AAE	0xEF2000  	CLR	W0
0x2AB0	0x982750  	MOV	W0, [W14+74]
L_irgrid2_CalculateTo185:
0x2AB2	0x9020DE  	MOV	[W14+74], W1
0x2AB4	0x203000  	MOV	#768, W0
0x2AB6	0xE10800  	CP	W1, W0
0x2AB8	0x3D0217  	BRA GE	L_irgrid2_CalculateTo186
L__irgrid2_CalculateTo434:
;__irgrid2_Driver.c,1233 :: 		ilPattern = pixelNumber / 32 - (pixelNumber / 64) * 2;
0x2ABA	0x200202  	MOV	#32, W2
0x2ABC	0x90205E  	MOV	[W14+74], W0
0x2ABE	0x090011  	REPEAT	#17
0x2AC0	0xD80002  	DIV.S	W0, W2
0x2AC2	0x983740  	MOV	W0, [W14+104]
0x2AC4	0x200402  	MOV	#64, W2
0x2AC6	0x90205E  	MOV	[W14+74], W0
0x2AC8	0x090011  	REPEAT	#17
0x2ACA	0xD80002  	DIV.S	W0, W2
0x2ACC	0xDD0141  	SL	W0, #1, W2
0x2ACE	0x90304E  	MOV	[W14+104], W0
0x2AD0	0x500002  	SUB	W0, W2, W0
0x2AD2	0x983760  	MOV	W0, [W14+108]
0x2AD4	0x986F10  	MOV.B	W0, [W14+41]
;__irgrid2_Driver.c,1234 :: 		chessPattern = ilPattern ^ (pixelNumber - (pixelNumber/2)*2);
0x2AD6	0x90205E  	MOV	[W14+74], W0
0x2AD8	0x200022  	MOV	#2, W2
0x2ADA	0x090011  	REPEAT	#17
0x2ADC	0xD80002  	DIV.S	W0, W2
0x2ADE	0xDD00C1  	SL	W0, #1, W1
0x2AE0	0x2004A0  	MOV	#74, W0
0x2AE2	0x470000  	ADD	W14, W0, W0
0x2AE4	0x108090  	SUBR	W1, [W0], W1
0x2AE6	0x90306E  	MOV	[W14+108], W0
; chessPattern start address is: 8 (W4)
0x2AE8	0x684201  	XOR.B	W0, W1, W4
;__irgrid2_Driver.c,1235 :: 		conversionPattern = ((pixelNumber + 2) / 4 - (pixelNumber + 3) / 4 + (pixelNumber + 1) / 4 - pixelNumber / 4) * (1 - 2 * ilPattern);
0x2AEA	0x90205E  	MOV	[W14+74], W0
0x2AEC	0xECA000  	INC2	W0
0x2AEE	0x200042  	MOV	#4, W2
0x2AF0	0x090011  	REPEAT	#17
0x2AF2	0xD80002  	DIV.S	W0, W2
0x2AF4	0x983740  	MOV	W0, [W14+104]
0x2AF6	0x90205E  	MOV	[W14+74], W0
0x2AF8	0x400063  	ADD	W0, #3, W0
0x2AFA	0x200042  	MOV	#4, W2
0x2AFC	0x090011  	REPEAT	#17
0x2AFE	0xD80002  	DIV.S	W0, W2
0x2B00	0x780100  	MOV	W0, W2
0x2B02	0x90304E  	MOV	[W14+104], W0
0x2B04	0x500002  	SUB	W0, W2, W0
0x2B06	0x983740  	MOV	W0, [W14+104]
0x2B08	0x90205E  	MOV	[W14+74], W0
0x2B0A	0xEC2000  	INC	W0
0x2B0C	0x200042  	MOV	#4, W2
0x2B0E	0x090011  	REPEAT	#17
0x2B10	0xD80002  	DIV.S	W0, W2
0x2B12	0x780080  	MOV	W0, W1
0x2B14	0x90304E  	MOV	[W14+104], W0
0x2B16	0x400001  	ADD	W0, W1, W0
0x2B18	0x983740  	MOV	W0, [W14+104]
0x2B1A	0x90205E  	MOV	[W14+74], W0
0x2B1C	0x200042  	MOV	#4, W2
0x2B1E	0x090011  	REPEAT	#17
0x2B20	0xD80002  	DIV.S	W0, W2
0x2B22	0x780080  	MOV	W0, W1
0x2B24	0x90304E  	MOV	[W14+104], W0
0x2B26	0x500081  	SUB	W0, W1, W1
0x2B28	0x90306E  	MOV	[W14+108], W0
0x2B2A	0xFB0000  	SE	W0, W0
0x2B2C	0xDD0041  	SL	W0, #1, W0
0x2B2E	0x100061  	SUBR	W0, #1, W0
0x2B30	0xB80800  	MUL.UU	W1, W0, W0
0x2B32	0x986F20  	MOV.B	W0, [W14+42]
;__irgrid2_Driver.c,1237 :: 		if(mode == 0)
0x2B34	0x90680E  	MOV.B	[W14+40], W0
0x2B36	0xE10460  	CP.B	W0, #0
0x2B38	0x3A0002  	BRA NZ	L_irgrid2_CalculateTo188
L__irgrid2_CalculateTo435:
; chessPattern end address is: 8 (W4)
;__irgrid2_Driver.c,1239 :: 		pattern = ilPattern;
; pattern start address is: 4 (W2)
0x2B3A	0x90691E  	MOV.B	[W14+41], W2
;__irgrid2_Driver.c,1240 :: 		}
; pattern end address is: 4 (W2)
0x2B3C	0x370001  	BRA	L_irgrid2_CalculateTo189
L_irgrid2_CalculateTo188:
;__irgrid2_Driver.c,1243 :: 		pattern = chessPattern;
; pattern start address is: 4 (W2)
; chessPattern start address is: 8 (W4)
0x2B3E	0x784104  	MOV.B	W4, W2
; chessPattern end address is: 8 (W4)
; pattern end address is: 4 (W2)
;__irgrid2_Driver.c,1244 :: 		}
L_irgrid2_CalculateTo189:
;__irgrid2_Driver.c,1246 :: 		if(pattern == frameData[833])
; pattern start address is: 4 (W2)
0x2B40	0x206820  	MOV	#1666, W0
0x2B42	0x450000  	ADD	W10, W0, W0
0x2B44	0x780090  	MOV	[W0], W1
0x2B46	0xFB0002  	SE	W2, W0
; pattern end address is: 4 (W2)
0x2B48	0xE10001  	CP	W0, W1
0x2B4A	0x3A01C9  	BRA NZ	L_irgrid2_CalculateTo190
L__irgrid2_CalculateTo436:
;__irgrid2_Driver.c,1248 :: 		irData = frameData[pixelNumber];
0x2B4C	0x90205E  	MOV	[W14+74], W0
0x2B4E	0xDD0041  	SL	W0, #1, W0
0x2B50	0x450100  	ADD	W10, W0, W2
0x2B52	0xBE9F8C  	PUSH.D	W12
0x2B54	0xBE9F8A  	PUSH.D	W10
0x2B56	0x780012  	MOV	[W2], W0
0x2B58	0xEB0080  	CLR	W1
0x2B5A	0x07EE18  	RCALL	__Long2Float
0x2B5C	0x981700  	MOV	W0, [W14+32]
0x2B5E	0x981711  	MOV	W1, [W14+34]
;__irgrid2_Driver.c,1249 :: 		if(irData > 32767)
0x2B60	0x2FE002  	MOV	#65024, W2
0x2B62	0x246FF3  	MOV	#18175, W3
0x2B64	0x07ED05  	RCALL	__Compare_Ge_Fp
0x2B66	0xE00000  	CP0	W0
0x2B68	0xEF6000  	CLR.B	W0
0x2B6A	0x340001  	BRA LE	L__irgrid2_CalculateTo437
0x2B6C	0xEC6000  	INC.B	W0
L__irgrid2_CalculateTo437:
0x2B6E	0xBE054F  	POP.D	W10
0x2B70	0xBE064F  	POP.D	W12
0x2B72	0xE24000  	CP0.B	W0
0x2B74	0x32000B  	BRA Z	L_irgrid2_CalculateTo191
L__irgrid2_CalculateTo438:
;__irgrid2_Driver.c,1251 :: 		irData = irData - 65536;
0x2B76	0x90100E  	MOV	[W14+32], W0
0x2B78	0x90109E  	MOV	[W14+34], W1
0x2B7A	0x200002  	MOV	#0, W2
0x2B7C	0x247803  	MOV	#18304, W3
0x2B7E	0xBE9F8C  	PUSH.D	W12
0x2B80	0xBE9F8A  	PUSH.D	W10
0x2B82	0x07EE99  	RCALL	__Sub_FP
0x2B84	0xBE054F  	POP.D	W10
0x2B86	0xBE064F  	POP.D	W12
0x2B88	0x981700  	MOV	W0, [W14+32]
0x2B8A	0x981711  	MOV	W1, [W14+34]
;__irgrid2_Driver.c,1252 :: 		}
L_irgrid2_CalculateTo191:
;__irgrid2_Driver.c,1253 :: 		irData = irData * gain;
0x2B8C	0xBE9F8C  	PUSH.D	W12
0x2B8E	0xBE9F8A  	PUSH.D	W10
0x2B90	0x90100E  	MOV	[W14+32], W0
0x2B92	0x90109E  	MOV	[W14+34], W1
0x2B94	0x90092E  	MOV	[W14+20], W2
0x2B96	0x9009BE  	MOV	[W14+22], W3
0x2B98	0x07EC22  	RCALL	__Mul_FP
0x2B9A	0xBE054F  	POP.D	W10
0x2B9C	0x981700  	MOV	W0, [W14+32]
0x2B9E	0x981711  	MOV	W1, [W14+34]
;__irgrid2_Driver.c,1255 :: 		irData = irData - params->offset[pixelNumber]*(1 + params->kta[pixelNumber]*(ta - 25))*(1 + params->kv[pixelNumber]*(vdd - 3.3));
0x2BA0	0x20C3E0  	MOV	#3134, W0
0x2BA2	0x458080  	ADD	W11, W0, W1
0x2BA4	0x90205E  	MOV	[W14+74], W0
0x2BA6	0xDD0041  	SL	W0, #1, W0
0x2BA8	0x408000  	ADD	W1, W0, W0
0x2BAA	0x983760  	MOV	W0, [W14+108]
0x2BAC	0x2123E0  	MOV	#4670, W0
0x2BAE	0x458080  	ADD	W11, W0, W1
0x2BB0	0x90205E  	MOV	[W14+74], W0
0x2BB2	0xDD0042  	SL	W0, #2, W0
0x2BB4	0x983F00  	MOV	W0, [W14+112]
0x2BB6	0x408000  	ADD	W1, W0, W0
0x2BB8	0x983740  	MOV	W0, [W14+104]
0x2BBA	0x90002E  	MOV	[W14+4], W0
0x2BBC	0x9000BE  	MOV	[W14+6], W1
0x2BBE	0x200002  	MOV	#0, W2
0x2BC0	0x241C83  	MOV	#16840, W3
0x2BC2	0xBE9F8A  	PUSH.D	W10
0x2BC4	0x07EE78  	RCALL	__Sub_FP
0x2BC6	0x90324E  	MOV	[W14+104], W4
0x2BC8	0xBE0114  	MOV.D	[W4], W2
0x2BCA	0x07EC09  	RCALL	__Mul_FP
0x2BCC	0x200002  	MOV	#0, W2
0x2BCE	0x23F803  	MOV	#16256, W3
0x2BD0	0x07EB50  	RCALL	__AddSub_FP
0x2BD2	0x90316E  	MOV	[W14+108], W2
0x2BD4	0x983740  	MOV	W0, [W14+104]
0x2BD6	0x983751  	MOV	W1, [W14+106]
0x2BD8	0x780012  	MOV	[W2], W0
0x2BDA	0xDE80CF  	ASR	W0, #15, W1
0x2BDC	0xEB8100  	SETM	W2
0x2BDE	0x07EDD6  	RCALL	__Long2Float
0x2BE0	0x90314E  	MOV	[W14+104], W2
0x2BE2	0x9031DE  	MOV	[W14+106], W3
0x2BE4	0x07EBFC  	RCALL	__Mul_FP
0x2BE6	0xBE054F  	POP.D	W10
0x2BE8	0x983760  	MOV	W0, [W14+108]
0x2BEA	0x983771  	MOV	W1, [W14+110]
0x2BEC	0x21E3E0  	MOV	#7742, W0
0x2BEE	0x458080  	ADD	W11, W0, W1
0x2BF0	0x90380E  	MOV	[W14+112], W0
0x2BF2	0x408000  	ADD	W1, W0, W0
0x2BF4	0x983740  	MOV	W0, [W14+104]
0x2BF6	0x90000E  	MOV	[W14+0], W0
0x2BF8	0x90009E  	MOV	[W14+2], W1
0x2BFA	0x233332  	MOV	#13107, W2
0x2BFC	0x240533  	MOV	#16467, W3
0x2BFE	0xBE9F8A  	PUSH.D	W10
0x2C00	0x07EE5A  	RCALL	__Sub_FP
0x2C02	0x90324E  	MOV	[W14+104], W4
0x2C04	0xBE0114  	MOV.D	[W4], W2
0x2C06	0x07EBEB  	RCALL	__Mul_FP
0x2C08	0x200002  	MOV	#0, W2
0x2C0A	0x23F803  	MOV	#16256, W3
0x2C0C	0x07EB32  	RCALL	__AddSub_FP
0x2C0E	0x90316E  	MOV	[W14+108], W2
0x2C10	0x9031FE  	MOV	[W14+110], W3
0x2C12	0x07EBE5  	RCALL	__Mul_FP
0x2C14	0x982760  	MOV	W0, [W14+76]
0x2C16	0x982771  	MOV	W1, [W14+78]
0x2C18	0x90100E  	MOV	[W14+32], W0
0x2C1A	0x90109E  	MOV	[W14+34], W1
0x2C1C	0x90216E  	MOV	[W14+76], W2
0x2C1E	0x9021FE  	MOV	[W14+78], W3
0x2C20	0x07EE4A  	RCALL	__Sub_FP
0x2C22	0xBE054F  	POP.D	W10
0x2C24	0xBE064F  	POP.D	W12
0x2C26	0x981700  	MOV	W0, [W14+32]
0x2C28	0x981711  	MOV	W1, [W14+34]
;__irgrid2_Driver.c,1256 :: 		if(mode !=  params->calibrationModeEE)
0x2C2A	0x200210  	MOV	#33, W0
0x2C2C	0x458080  	ADD	W11, W0, W1
0x2C2E	0x90680E  	MOV.B	[W14+40], W0
0x2C30	0xE10411  	CP.B	W0, [W1]
0x2C32	0x32002E  	BRA Z	L_irgrid2_CalculateTo192
L__irgrid2_CalculateTo439:
;__irgrid2_Driver.c,1258 :: 		irData = irData + params->ilChessC[2] * (2 * ilPattern - 1) - params->ilChessC[1] * conversionPattern;
0x2C34	0x22A4A0  	MOV	#10826, W0
0x2C36	0x458000  	ADD	W11, W0, W0
0x2C38	0x983760  	MOV	W0, [W14+108]
0x2C3A	0x400068  	ADD	W0, #8, W0
0x2C3C	0x983740  	MOV	W0, [W14+104]
0x2C3E	0x200290  	MOV	#41, W0
0x2C40	0x470000  	ADD	W14, W0, W0
0x2C42	0xFB0010  	SE	[W0], W0
0x2C44	0xDD0041  	SL	W0, #1, W0
0x2C46	0xED2000  	DEC	W0
0x2C48	0xBE9F8C  	PUSH.D	W12
0x2C4A	0xBE9F8A  	PUSH.D	W10
0x2C4C	0xDE80CF  	ASR	W0, #15, W1
0x2C4E	0xEB8100  	SETM	W2
0x2C50	0x07ED9D  	RCALL	__Long2Float
0x2C52	0x90324E  	MOV	[W14+104], W4
0x2C54	0xBE0114  	MOV.D	[W4], W2
0x2C56	0x07EBC3  	RCALL	__Mul_FP
0x2C58	0x90110E  	MOV	[W14+32], W2
0x2C5A	0x90119E  	MOV	[W14+34], W3
0x2C5C	0x07EB0A  	RCALL	__AddSub_FP
0x2C5E	0x90316E  	MOV	[W14+108], W2
0x2C60	0x983760  	MOV	W0, [W14+108]
0x2C62	0x983771  	MOV	W1, [W14+110]
0x2C64	0x410064  	ADD	W2, #4, W0
0x2C66	0x983740  	MOV	W0, [W14+104]
0x2C68	0x2002A2  	MOV	#42, W2
0x2C6A	0x470102  	ADD	W14, W2, W2
0x2C6C	0xFB0012  	SE	[W2], W0
0x2C6E	0xDE80CF  	ASR	W0, #15, W1
0x2C70	0xEB8100  	SETM	W2
0x2C72	0x07ED8C  	RCALL	__Long2Float
0x2C74	0x90324E  	MOV	[W14+104], W4
0x2C76	0xBE0114  	MOV.D	[W4], W2
0x2C78	0x07EBB2  	RCALL	__Mul_FP
0x2C7A	0x982760  	MOV	W0, [W14+76]
0x2C7C	0x982771  	MOV	W1, [W14+78]
0x2C7E	0x90216E  	MOV	[W14+76], W2
0x2C80	0x9021FE  	MOV	[W14+78], W3
0x2C82	0x90306E  	MOV	[W14+108], W0
0x2C84	0x9030FE  	MOV	[W14+110], W1
0x2C86	0x07EE17  	RCALL	__Sub_FP
0x2C88	0xBE054F  	POP.D	W10
0x2C8A	0xBE064F  	POP.D	W12
0x2C8C	0x981700  	MOV	W0, [W14+32]
0x2C8E	0x981711  	MOV	W1, [W14+34]
;__irgrid2_Driver.c,1259 :: 		}
L_irgrid2_CalculateTo192:
;__irgrid2_Driver.c,1261 :: 		irData = irData / emissivity;
0x2C90	0xBE9F8C  	PUSH.D	W12
0x2C92	0xBE9F8A  	PUSH.D	W10
0x2C94	0xBE010C  	MOV.D	W12, W2
0x2C96	0x90100E  	MOV	[W14+32], W0
0x2C98	0x90109E  	MOV	[W14+34], W1
0x2C9A	0x07EC8A  	RCALL	__Div_FP
0x2C9C	0xBE054F  	POP.D	W10
0x2C9E	0x981700  	MOV	W0, [W14+32]
0x2CA0	0x981711  	MOV	W1, [W14+34]
;__irgrid2_Driver.c,1263 :: 		irData = irData - params->tgc * irDataCP[subPage];
0x2CA2	0x458274  	ADD	W11, #20, W4
0x2CA4	0x983F04  	MOV	W4, [W14+112]
0x2CA6	0x4700F8  	ADD	W14, #24, W1
0x2CA8	0x90203E  	MOV	[W14+70], W0
0x2CAA	0xDD0042  	SL	W0, #2, W0
0x2CAC	0x983760  	MOV	W0, [W14+108]
0x2CAE	0x408000  	ADD	W1, W0, W0
0x2CB0	0xBE0110  	MOV.D	[W0], W2
0x2CB2	0xBE0014  	MOV.D	[W4], W0
0x2CB4	0xBE9F8A  	PUSH.D	W10
0x2CB6	0x07EB93  	RCALL	__Mul_FP
0x2CB8	0x982760  	MOV	W0, [W14+76]
0x2CBA	0x982771  	MOV	W1, [W14+78]
0x2CBC	0x90100E  	MOV	[W14+32], W0
0x2CBE	0x90109E  	MOV	[W14+34], W1
0x2CC0	0x90216E  	MOV	[W14+76], W2
0x2CC2	0x9021FE  	MOV	[W14+78], W3
0x2CC4	0x07EDF8  	RCALL	__Sub_FP
0x2CC6	0xBE054F  	POP.D	W10
0x2CC8	0x981700  	MOV	W0, [W14+32]
0x2CCA	0x981711  	MOV	W1, [W14+34]
;__irgrid2_Driver.c,1265 :: 		alphaCompensated = (params->alpha[pixelNumber] - params->tgc * params->cpAlpha[subPage])*(1 + params->KsTa * (ta - 25));
0x2CCC	0x2003E0  	MOV	#62, W0
0x2CCE	0x458080  	ADD	W11, W0, W1
0x2CD0	0x90205E  	MOV	[W14+74], W0
0x2CD2	0xDD0042  	SL	W0, #2, W0
0x2CD4	0x408100  	ADD	W1, W0, W2
0x2CD6	0xBE0012  	MOV.D	[W2], W0
0x2CD8	0x983740  	MOV	W0, [W14+104]
0x2CDA	0x983751  	MOV	W1, [W14+106]
0x2CDC	0x22A3E0  	MOV	#10814, W0
0x2CDE	0x458080  	ADD	W11, W0, W1
0x2CE0	0x90306E  	MOV	[W14+108], W0
0x2CE2	0x408000  	ADD	W1, W0, W0
0x2CE4	0x7801B0  	MOV	[W0++], W3
0x2CE6	0x780220  	MOV	[W0--], W4
0x2CE8	0x90390E  	MOV	[W14+112], W2
0x2CEA	0xBE0012  	MOV.D	[W2], W0
0x2CEC	0xBE9F8A  	PUSH.D	W10
0x2CEE	0x780103  	MOV	W3, W2
0x2CF0	0x780184  	MOV	W4, W3
0x2CF2	0x07EB75  	RCALL	__Mul_FP
0x2CF4	0x982760  	MOV	W0, [W14+76]
0x2CF6	0x982771  	MOV	W1, [W14+78]
0x2CF8	0x90216E  	MOV	[W14+76], W2
0x2CFA	0x9021FE  	MOV	[W14+78], W3
0x2CFC	0x90304E  	MOV	[W14+104], W0
0x2CFE	0x9030DE  	MOV	[W14+106], W1
0x2D00	0x07EDDA  	RCALL	__Sub_FP
0x2D02	0xBE054F  	POP.D	W10
0x2D04	0x983760  	MOV	W0, [W14+108]
0x2D06	0x983771  	MOV	W1, [W14+110]
0x2D08	0x200220  	MOV	#34, W0
0x2D0A	0x458000  	ADD	W11, W0, W0
0x2D0C	0x983740  	MOV	W0, [W14+104]
0x2D0E	0x90002E  	MOV	[W14+4], W0
0x2D10	0x9000BE  	MOV	[W14+6], W1
0x2D12	0x200002  	MOV	#0, W2
0x2D14	0x241C83  	MOV	#16840, W3
0x2D16	0xBE9F8A  	PUSH.D	W10
0x2D18	0x07EDCE  	RCALL	__Sub_FP
0x2D1A	0x90324E  	MOV	[W14+104], W4
0x2D1C	0xBE0114  	MOV.D	[W4], W2
0x2D1E	0x07EB5F  	RCALL	__Mul_FP
0x2D20	0x200002  	MOV	#0, W2
0x2D22	0x23F803  	MOV	#16256, W3
0x2D24	0x07EAA6  	RCALL	__AddSub_FP
0x2D26	0x90316E  	MOV	[W14+108], W2
0x2D28	0x9031FE  	MOV	[W14+110], W3
0x2D2A	0x07EB59  	RCALL	__Mul_FP
0x2D2C	0x981720  	MOV	W0, [W14+36]
0x2D2E	0x981731  	MOV	W1, [W14+38]
;__irgrid2_Driver.c,1267 :: 		Sx = _pow(alphaCompensated, 3) * (irData + alphaCompensated * taTr);
0x2D30	0x20000C  	MOV	#0, W12
0x2D32	0x24040D  	MOV	#16448, W13
0x2D34	0xBE0500  	MOV.D	W0, W10
0x2D36	0x07EFB9  	RCALL	__irgrid2_Driver__pow
0x2D38	0x983740  	MOV	W0, [W14+104]
0x2D3A	0x983751  	MOV	W1, [W14+106]
0x2D3C	0x90102E  	MOV	[W14+36], W0
0x2D3E	0x9010BE  	MOV	[W14+38], W1
0x2D40	0x90090E  	MOV	[W14+16], W2
0x2D42	0x90099E  	MOV	[W14+18], W3
0x2D44	0x07EB4C  	RCALL	__Mul_FP
0x2D46	0x90110E  	MOV	[W14+32], W2
0x2D48	0x90119E  	MOV	[W14+34], W3
0x2D4A	0x07EA93  	RCALL	__AddSub_FP
0x2D4C	0x90314E  	MOV	[W14+104], W2
0x2D4E	0x9031DE  	MOV	[W14+106], W3
0x2D50	0x07EB46  	RCALL	__Mul_FP
0x2D52	0x981760  	MOV	W0, [W14+44]
0x2D54	0x981771  	MOV	W1, [W14+46]
;__irgrid2_Driver.c,1268 :: 		Sx = _pow(Sx,0.25) * params->ksTo[1];
0x2D56	0x20000C  	MOV	#0, W12
0x2D58	0x23E80D  	MOV	#16000, W13
0x2D5A	0xBE0500  	MOV.D	W0, W10
0x2D5C	0x07EFA6  	RCALL	__irgrid2_Driver__pow
0x2D5E	0xBE054F  	POP.D	W10
0x2D60	0x200262  	MOV	#38, W2
0x2D62	0x458102  	ADD	W11, W2, W2
0x2D64	0x983742  	MOV	W2, [W14+104]
0x2D66	0x410264  	ADD	W2, #4, W4
0x2D68	0xBE0114  	MOV.D	[W4], W2
0x2D6A	0xBE9F8A  	PUSH.D	W10
0x2D6C	0x07EB38  	RCALL	__Mul_FP
0x2D6E	0x981760  	MOV	W0, [W14+44]
0x2D70	0x981771  	MOV	W1, [W14+46]
;__irgrid2_Driver.c,1270 :: 		To = _pow((irData/(alphaCompensated * (1 - params->ksTo[1] * 273.15) + Sx) + taTr),0.25) - 273.15;
0x2D72	0x90304E  	MOV	[W14+104], W0
0x2D74	0x400164  	ADD	W0, #4, W2
0x2D76	0xBE0012  	MOV.D	[W2], W0
0x2D78	0x293332  	MOV	#37683, W2
0x2D7A	0x243883  	MOV	#17288, W3
0x2D7C	0x07EB30  	RCALL	__Mul_FP
0x2D7E	0x982760  	MOV	W0, [W14+76]
0x2D80	0x982771  	MOV	W1, [W14+78]
0x2D82	0x200000  	MOV	#0, W0
0x2D84	0x23F801  	MOV	#16256, W1
0x2D86	0x90216E  	MOV	[W14+76], W2
0x2D88	0x9021FE  	MOV	[W14+78], W3
0x2D8A	0x07ED95  	RCALL	__Sub_FP
0x2D8C	0x90112E  	MOV	[W14+36], W2
0x2D8E	0x9011BE  	MOV	[W14+38], W3
0x2D90	0x07EB26  	RCALL	__Mul_FP
0x2D92	0x90116E  	MOV	[W14+44], W2
0x2D94	0x9011FE  	MOV	[W14+46], W3
0x2D96	0x07EA6D  	RCALL	__AddSub_FP
0x2D98	0xBE0100  	MOV.D	W0, W2
0x2D9A	0x90100E  	MOV	[W14+32], W0
0x2D9C	0x90109E  	MOV	[W14+34], W1
0x2D9E	0x07EC08  	RCALL	__Div_FP
0x2DA0	0x90090E  	MOV	[W14+16], W2
0x2DA2	0x90099E  	MOV	[W14+18], W3
0x2DA4	0x07EA66  	RCALL	__AddSub_FP
0x2DA6	0x20000C  	MOV	#0, W12
0x2DA8	0x23E80D  	MOV	#16000, W13
0x2DAA	0xBE0500  	MOV.D	W0, W10
0x2DAC	0x07EF7E  	RCALL	__irgrid2_Driver__pow
0x2DAE	0x293332  	MOV	#37683, W2
0x2DB0	0x243883  	MOV	#17288, W3
0x2DB2	0x07ED81  	RCALL	__Sub_FP
0x2DB4	0xBE054F  	POP.D	W10
0x2DB6	0x981F00  	MOV	W0, [W14+48]
0x2DB8	0x981F11  	MOV	W1, [W14+50]
;__irgrid2_Driver.c,1272 :: 		if(To < params->ct[1])
0x2DBA	0x200360  	MOV	#54, W0
0x2DBC	0x458000  	ADD	W11, W0, W0
0x2DBE	0x400162  	ADD	W0, #2, W2
0x2DC0	0xBE9F8A  	PUSH.D	W10
0x2DC2	0x780012  	MOV	[W2], W0
0x2DC4	0xDE80CF  	ASR	W0, #15, W1
0x2DC6	0xEB8100  	SETM	W2
0x2DC8	0x07ECE1  	RCALL	__Long2Float
0x2DCA	0xBE0100  	MOV.D	W0, W2
0x2DCC	0x90180E  	MOV	[W14+48], W0
0x2DCE	0x90189E  	MOV	[W14+50], W1
0x2DD0	0x07ED6D  	RCALL	__Compare_Le_Fp
0x2DD2	0xE00000  	CP0	W0
0x2DD4	0xEF6000  	CLR.B	W0
0x2DD6	0x3D0001  	BRA GE	L__irgrid2_CalculateTo440
0x2DD8	0xEC6000  	INC.B	W0
L__irgrid2_CalculateTo440:
0x2DDA	0xBE054F  	POP.D	W10
0x2DDC	0xBE064F  	POP.D	W12
0x2DDE	0xE24000  	CP0.B	W0
0x2DE0	0x320003  	BRA Z	L_irgrid2_CalculateTo193
L__irgrid2_CalculateTo441:
;__irgrid2_Driver.c,1274 :: 		range = 0;
0x2DE2	0xEF2000  	CLR	W0
0x2DE4	0x98C740  	MOV.B	W0, [W14+68]
;__irgrid2_Driver.c,1275 :: 		}
0x2DE6	0x370032  	BRA	L_irgrid2_CalculateTo194
L_irgrid2_CalculateTo193:
;__irgrid2_Driver.c,1276 :: 		else if(To < params->ct[2])
0x2DE8	0x200360  	MOV	#54, W0
0x2DEA	0x458000  	ADD	W11, W0, W0
0x2DEC	0x400164  	ADD	W0, #4, W2
0x2DEE	0xBE9F8C  	PUSH.D	W12
0x2DF0	0xBE9F8A  	PUSH.D	W10
0x2DF2	0x780012  	MOV	[W2], W0
0x2DF4	0xDE80CF  	ASR	W0, #15, W1
0x2DF6	0xEB8100  	SETM	W2
0x2DF8	0x07ECC9  	RCALL	__Long2Float
0x2DFA	0xBE0100  	MOV.D	W0, W2
0x2DFC	0x90180E  	MOV	[W14+48], W0
0x2DFE	0x90189E  	MOV	[W14+50], W1
0x2E00	0x07ED55  	RCALL	__Compare_Le_Fp
0x2E02	0xE00000  	CP0	W0
0x2E04	0xEF6000  	CLR.B	W0
0x2E06	0x3D0001  	BRA GE	L__irgrid2_CalculateTo442
0x2E08	0xEC6000  	INC.B	W0
L__irgrid2_CalculateTo442:
0x2E0A	0xBE054F  	POP.D	W10
0x2E0C	0xBE064F  	POP.D	W12
0x2E0E	0xE24000  	CP0.B	W0
0x2E10	0x320003  	BRA Z	L_irgrid2_CalculateTo195
L__irgrid2_CalculateTo443:
;__irgrid2_Driver.c,1278 :: 		range = 1;
0x2E12	0xB3C010  	MOV.B	#1, W0
0x2E14	0x98C740  	MOV.B	W0, [W14+68]
;__irgrid2_Driver.c,1279 :: 		}
0x2E16	0x37001A  	BRA	L_irgrid2_CalculateTo196
L_irgrid2_CalculateTo195:
;__irgrid2_Driver.c,1280 :: 		else if(To < params->ct[3])
0x2E18	0x200360  	MOV	#54, W0
0x2E1A	0x458000  	ADD	W11, W0, W0
0x2E1C	0x400166  	ADD	W0, #6, W2
0x2E1E	0xBE9F8C  	PUSH.D	W12
0x2E20	0xBE9F8A  	PUSH.D	W10
0x2E22	0x780012  	MOV	[W2], W0
0x2E24	0xDE80CF  	ASR	W0, #15, W1
0x2E26	0xEB8100  	SETM	W2
0x2E28	0x07ECB1  	RCALL	__Long2Float
0x2E2A	0xBE0100  	MOV.D	W0, W2
0x2E2C	0x90180E  	MOV	[W14+48], W0
0x2E2E	0x90189E  	MOV	[W14+50], W1
0x2E30	0x07ED3D  	RCALL	__Compare_Le_Fp
0x2E32	0xE00000  	CP0	W0
0x2E34	0xEF6000  	CLR.B	W0
0x2E36	0x3D0001  	BRA GE	L__irgrid2_CalculateTo444
0x2E38	0xEC6000  	INC.B	W0
L__irgrid2_CalculateTo444:
0x2E3A	0xBE054F  	POP.D	W10
0x2E3C	0xBE064F  	POP.D	W12
0x2E3E	0xE24000  	CP0.B	W0
0x2E40	0x320003  	BRA Z	L_irgrid2_CalculateTo197
L__irgrid2_CalculateTo445:
;__irgrid2_Driver.c,1282 :: 		range = 2;
0x2E42	0xB3C020  	MOV.B	#2, W0
0x2E44	0x98C740  	MOV.B	W0, [W14+68]
;__irgrid2_Driver.c,1283 :: 		}
0x2E46	0x370002  	BRA	L_irgrid2_CalculateTo198
L_irgrid2_CalculateTo197:
;__irgrid2_Driver.c,1286 :: 		range = 3;
0x2E48	0xB3C030  	MOV.B	#3, W0
0x2E4A	0x98C740  	MOV.B	W0, [W14+68]
;__irgrid2_Driver.c,1287 :: 		}
L_irgrid2_CalculateTo198:
L_irgrid2_CalculateTo196:
L_irgrid2_CalculateTo194:
;__irgrid2_Driver.c,1289 :: 		To = _pow((irData / (alphaCompensated * alphaCorrR[range] * (1 + params->ksTo[range] * (To - params->ct[range]))) + taTr),0.25) - 273.15;
0x2E4C	0x200341  	MOV	#52, W1
0x2E4E	0x470081  	ADD	W14, W1, W1
0x2E50	0x200440  	MOV	#68, W0
0x2E52	0x470000  	ADD	W14, W0, W0
0x2E54	0xFB0010  	SE	[W0], W0
0x2E56	0xDD0042  	SL	W0, #2, W0
0x2E58	0x983740  	MOV	W0, [W14+104]
0x2E5A	0x408100  	ADD	W1, W0, W2
0x2E5C	0xBE0012  	MOV.D	[W2], W0
0x2E5E	0xBE9F8C  	PUSH.D	W12
0x2E60	0xBE9F8A  	PUSH.D	W10
0x2E62	0x90112E  	MOV	[W14+36], W2
0x2E64	0x9011BE  	MOV	[W14+38], W3
0x2E66	0x07EABB  	RCALL	__Mul_FP
0x2E68	0xBE054F  	POP.D	W10
0x2E6A	0x983760  	MOV	W0, [W14+108]
0x2E6C	0x983771  	MOV	W1, [W14+110]
0x2E6E	0x200260  	MOV	#38, W0
0x2E70	0x458080  	ADD	W11, W0, W1
0x2E72	0x90304E  	MOV	[W14+104], W0
0x2E74	0x408000  	ADD	W1, W0, W0
0x2E76	0x983740  	MOV	W0, [W14+104]
0x2E78	0x200360  	MOV	#54, W0
0x2E7A	0x458080  	ADD	W11, W0, W1
0x2E7C	0x200440  	MOV	#68, W0
0x2E7E	0x470000  	ADD	W14, W0, W0
0x2E80	0xFB0010  	SE	[W0], W0
0x2E82	0xDD0041  	SL	W0, #1, W0
0x2E84	0x408000  	ADD	W1, W0, W0
0x2E86	0xBE9F8A  	PUSH.D	W10
0x2E88	0x780010  	MOV	[W0], W0
0x2E8A	0xDE80CF  	ASR	W0, #15, W1
0x2E8C	0xEB8100  	SETM	W2
0x2E8E	0x07EC7E  	RCALL	__Long2Float
0x2E90	0x982760  	MOV	W0, [W14+76]
0x2E92	0x982771  	MOV	W1, [W14+78]
0x2E94	0x90180E  	MOV	[W14+48], W0
0x2E96	0x90189E  	MOV	[W14+50], W1
0x2E98	0x90216E  	MOV	[W14+76], W2
0x2E9A	0x9021FE  	MOV	[W14+78], W3
0x2E9C	0x07ED0C  	RCALL	__Sub_FP
0x2E9E	0x90324E  	MOV	[W14+104], W4
0x2EA0	0xBE0114  	MOV.D	[W4], W2
0x2EA2	0x07EA9D  	RCALL	__Mul_FP
0x2EA4	0x200002  	MOV	#0, W2
0x2EA6	0x23F803  	MOV	#16256, W3
0x2EA8	0x07E9E4  	RCALL	__AddSub_FP
0x2EAA	0x90316E  	MOV	[W14+108], W2
0x2EAC	0x9031FE  	MOV	[W14+110], W3
0x2EAE	0x07EA97  	RCALL	__Mul_FP
0x2EB0	0xBE0100  	MOV.D	W0, W2
0x2EB2	0x90100E  	MOV	[W14+32], W0
0x2EB4	0x90109E  	MOV	[W14+34], W1
0x2EB6	0x07EB7C  	RCALL	__Div_FP
0x2EB8	0x90090E  	MOV	[W14+16], W2
0x2EBA	0x90099E  	MOV	[W14+18], W3
0x2EBC	0x07E9DA  	RCALL	__AddSub_FP
0x2EBE	0x20000C  	MOV	#0, W12
0x2EC0	0x23E80D  	MOV	#16000, W13
0x2EC2	0xBE0500  	MOV.D	W0, W10
0x2EC4	0x07EEF2  	RCALL	__irgrid2_Driver__pow
0x2EC6	0x293332  	MOV	#37683, W2
0x2EC8	0x243883  	MOV	#17288, W3
0x2ECA	0x07ECF5  	RCALL	__Sub_FP
0x2ECC	0xBE054F  	POP.D	W10
0x2ECE	0xBE064F  	POP.D	W12
0x2ED0	0x981F00  	MOV	W0, [W14+48]
0x2ED2	0x981F11  	MOV	W1, [W14+50]
;__irgrid2_Driver.c,1291 :: 		result[pixelNumber] = To;
0x2ED4	0x90215E  	MOV	[W14+74], W2
0x2ED6	0xDD11C2  	SL	W2, #2, W3
0x2ED8	0x57016C  	SUB	W14, #12, W2
0x2EDA	0x418112  	ADD	W3, [W2], W2
0x2EDC	0xBE8900  	MOV.D	W0, [W2]
;__irgrid2_Driver.c,1292 :: 		}
L_irgrid2_CalculateTo190:
;__irgrid2_Driver.c,1231 :: 		for(pixelNumber = 0; pixelNumber < 768; pixelNumber++)
0x2EDE	0x9020DE  	MOV	[W14+74], W1
0x2EE0	0x2004A0  	MOV	#74, W0
0x2EE2	0x470000  	ADD	W14, W0, W0
0x2EE4	0x408861  	ADD	W1, #1, [W0]
;__irgrid2_Driver.c,1293 :: 		}
0x2EE6	0x37FDE5  	BRA	L_irgrid2_CalculateTo185
L_irgrid2_CalculateTo186:
;__irgrid2_Driver.c,1294 :: 		}
L_end_irgrid2_CalculateTo:
0x2EE8	0xFA8000  	ULNK
0x2EEA	0x060000  	RETURN
; end of _irgrid2_CalculateTo
_FloatToStr:
0x2F0A	0xFA0006  	LNK	#6
;__Lib_Conversions.c,521 :: 		
;__Lib_Conversions.c,523 :: 		
0x2F0C	0x781F8A  	PUSH	W10
0x2F0E	0x781F8B  	PUSH	W11
0x2F10	0x200000  	MOV	#0, W0
0x2F12	0x984740  	MOV.B	W0, [W14+4]
0x2F14	0x200000  	MOV	#0, W0
0x2F16	0x984750  	MOV.B	W0, [W14+5]
;__Lib_Conversions.c,525 :: 		
;__Lib_Conversions.c,528 :: 		
0x2F18	0x98070A  	MOV	W10, [W14+0]
0x2F1A	0x98071B  	MOV	W11, [W14+2]
;__Lib_Conversions.c,529 :: 		
0x2F1C	0x90010E  	MOV	[W14+0], W2
0x2F1E	0x90019E  	MOV	[W14+2], W3
0x2F20	0x2FFFF0  	MOV	#65535, W0
0x2F22	0x2FFFF1  	MOV	#65535, W1
0x2F24	0xE11000  	CP	W2, W0
0x2F26	0xE19801  	CPB	W3, W1
0x2F28	0x3A0005  	BRA NZ	L_FloatToStr90
L__FloatToStr196:
;__Lib_Conversions.c,530 :: 		
0x2F2A	0x2082EB  	MOV	#lo_addr(?lstr1___Lib_Conversions), W11
0x2F2C	0x78050C  	MOV	W12, W10
0x2F2E	0x07FADA  	RCALL	_strcpy
;__Lib_Conversions.c,531 :: 		
0x2F30	0xB3C030  	MOV.B	#3, W0
0x2F32	0x3700FE  	BRA	L_end_FloatToStr
;__Lib_Conversions.c,532 :: 		
L_FloatToStr90:
;__Lib_Conversions.c,533 :: 		
; i start address is: 12 (W6)
0x2F34	0xB3C016  	MOV.B	#1, W6
;__Lib_Conversions.c,534 :: 		
0x2F36	0x470060  	ADD	W14, #0, W0
0x2F38	0x400063  	ADD	W0, #3, W0
0x2F3A	0x784010  	MOV.B	[W0], W0
0x2F3C	0xAEE000  	BTSS	W0, #7
0x2F3E	0x37000D  	BRA	L__FloatToStr125
;__Lib_Conversions.c,535 :: 		
0x2F40	0x470060  	ADD	W14, #0, W0
0x2F42	0x400163  	ADD	W0, #3, W2
0x2F44	0xFB8092  	ZE	[W2], W1
0x2F46	0x200800  	MOV	#128, W0
0x2F48	0x688000  	XOR	W1, W0, W0
0x2F4A	0x784900  	MOV.B	W0, [W2]
;__Lib_Conversions.c,536 :: 		
; i start address is: 2 (W1)
0x2F4C	0x4340E1  	ADD.B	W6, #1, W1
; i end address is: 12 (W6)
;__Lib_Conversions.c,537 :: 		
0x2F4E	0xB3C2D0  	MOV.B	#45, W0
0x2F50	0x784E00  	MOV.B	W0, [W12]
0x2F52	0x460061  	ADD	W12, #1, W0
0x2F54	0x780600  	MOV	W0, W12
; i end address is: 2 (W1)
0x2F56	0x784201  	MOV.B	W1, W4
;__Lib_Conversions.c,538 :: 		
0x2F58	0x370001  	BRA	L_FloatToStr91
L__FloatToStr125:
;__Lib_Conversions.c,534 :: 		
0x2F5A	0x784206  	MOV.B	W6, W4
;__Lib_Conversions.c,538 :: 		
L_FloatToStr91:
;__Lib_Conversions.c,539 :: 		
; i start address is: 8 (W4)
0x2F5C	0x90000E  	MOV	[W14+0], W0
0x2F5E	0x90009E  	MOV	[W14+2], W1
0x2F60	0xE10060  	CP	W0, #0
0x2F62	0xE18860  	CPB	W1, #0
0x2F64	0x3A0005  	BRA NZ	L_FloatToStr92
L__FloatToStr197:
; i end address is: 8 (W4)
;__Lib_Conversions.c,540 :: 		
0x2F66	0x20832B  	MOV	#lo_addr(?lstr2___Lib_Conversions), W11
0x2F68	0x78050C  	MOV	W12, W10
0x2F6A	0x07FABC  	RCALL	_strcpy
;__Lib_Conversions.c,541 :: 		
0x2F6C	0xEF2000  	CLR	W0
0x2F6E	0x3700E0  	BRA	L_end_FloatToStr
;__Lib_Conversions.c,542 :: 		
L_FloatToStr92:
;__Lib_Conversions.c,543 :: 		
; i start address is: 8 (W4)
0x2F70	0x90010E  	MOV	[W14+0], W2
0x2F72	0x90019E  	MOV	[W14+2], W3
0x2F74	0x200000  	MOV	#0, W0
0x2F76	0x27F801  	MOV	#32640, W1
0x2F78	0xE11000  	CP	W2, W0
0x2F7A	0xE19801  	CPB	W3, W1
0x2F7C	0x3A0005  	BRA NZ	L_FloatToStr93
L__FloatToStr198:
;__Lib_Conversions.c,544 :: 		
0x2F7E	0x20834B  	MOV	#lo_addr(?lstr3___Lib_Conversions), W11
0x2F80	0x78050C  	MOV	W12, W10
0x2F82	0x07FAB0  	RCALL	_strcpy
;__Lib_Conversions.c,545 :: 		
0x2F84	0x784004  	MOV.B	W4, W0
; i end address is: 8 (W4)
0x2F86	0x3700D4  	BRA	L_end_FloatToStr
;__Lib_Conversions.c,546 :: 		
L_FloatToStr93:
;__Lib_Conversions.c,554 :: 		
L_FloatToStr94:
0x2F88	0x781F8C  	PUSH	W12
0x2F8A	0xBE9F8A  	PUSH.D	W10
0x2F8C	0x200002  	MOV	#0, W2
0x2F8E	0x23F803  	MOV	#16256, W3
0x2F90	0x90000E  	MOV	[W14+0], W0
0x2F92	0x90009E  	MOV	[W14+2], W1
0x2F94	0x07EC8B  	RCALL	__Compare_Le_Fp
0x2F96	0xE00000  	CP0	W0
0x2F98	0xEF6000  	CLR.B	W0
0x2F9A	0x3D0001  	BRA GE	L__FloatToStr199
0x2F9C	0xEC6000  	INC.B	W0
L__FloatToStr199:
0x2F9E	0xBE054F  	POP.D	W10
0x2FA0	0x78064F  	POP	W12
0x2FA2	0xE24000  	CP0.B	W0
0x2FA4	0x32000F  	BRA Z	L_FloatToStr95
L__FloatToStr200:
;__Lib_Conversions.c,555 :: 		
0x2FA6	0x781F8C  	PUSH	W12
0x2FA8	0xBE9F8A  	PUSH.D	W10
0x2FAA	0x90000E  	MOV	[W14+0], W0
0x2FAC	0x90009E  	MOV	[W14+2], W1
0x2FAE	0x200002  	MOV	#0, W2
0x2FB0	0x241203  	MOV	#16672, W3
0x2FB2	0x07EA15  	RCALL	__Mul_FP
0x2FB4	0xBE054F  	POP.D	W10
0x2FB6	0x78064F  	POP	W12
0x2FB8	0x980700  	MOV	W0, [W14+0]
0x2FBA	0x980711  	MOV	W1, [W14+2]
;__Lib_Conversions.c,556 :: 		
0x2FBC	0x9040DE  	MOV.B	[W14+5], W1
0x2FBE	0x470065  	ADD	W14, #5, W0
0x2FC0	0x50C861  	SUB.B	W1, #1, [W0]
;__Lib_Conversions.c,557 :: 		
0x2FC2	0x37FFE2  	BRA	L_FloatToStr94
L_FloatToStr95:
;__Lib_Conversions.c,562 :: 		
L_FloatToStr96:
0x2FC4	0x781F8C  	PUSH	W12
0x2FC6	0xBE9F8A  	PUSH.D	W10
0x2FC8	0x200002  	MOV	#0, W2
0x2FCA	0x241203  	MOV	#16672, W3
0x2FCC	0x90000E  	MOV	[W14+0], W0
0x2FCE	0x90009E  	MOV	[W14+2], W1
0x2FD0	0x07EACF  	RCALL	__Compare_Ge_Fp
0x2FD2	0xE00000  	CP0	W0
0x2FD4	0xEF6000  	CLR.B	W0
0x2FD6	0x350001  	BRA LT	L__FloatToStr201
0x2FD8	0xEC6000  	INC.B	W0
L__FloatToStr201:
0x2FDA	0xBE054F  	POP.D	W10
0x2FDC	0x78064F  	POP	W12
0x2FDE	0xE24000  	CP0.B	W0
0x2FE0	0x32000F  	BRA Z	L_FloatToStr97
L__FloatToStr202:
;__Lib_Conversions.c,563 :: 		
0x2FE2	0x781F8C  	PUSH	W12
0x2FE4	0xBE9F8A  	PUSH.D	W10
0x2FE6	0x90000E  	MOV	[W14+0], W0
0x2FE8	0x90009E  	MOV	[W14+2], W1
0x2FEA	0x2CCCD2  	MOV	#52429, W2
0x2FEC	0x23DCC3  	MOV	#15820, W3
0x2FEE	0x07E9F7  	RCALL	__Mul_FP
0x2FF0	0xBE054F  	POP.D	W10
0x2FF2	0x78064F  	POP	W12
0x2FF4	0x980700  	MOV	W0, [W14+0]
0x2FF6	0x980711  	MOV	W1, [W14+2]
;__Lib_Conversions.c,564 :: 		
0x2FF8	0x9040DE  	MOV.B	[W14+5], W1
0x2FFA	0x470065  	ADD	W14, #5, W0
0x2FFC	0x40C861  	ADD.B	W1, #1, [W0]
;__Lib_Conversions.c,565 :: 		
0x2FFE	0x37FFE2  	BRA	L_FloatToStr96
L_FloatToStr97:
;__Lib_Conversions.c,570 :: 		
0x3000	0x470160  	ADD	W14, #0, W2
0x3002	0xD00032  	SL	[W2++], W0
0x3004	0xD280A2  	RLC	[W2--], W1
0x3006	0x980700  	MOV	W0, [W14+0]
0x3008	0x980711  	MOV	W1, [W14+2]
;__Lib_Conversions.c,579 :: 		
0x300A	0x470060  	ADD	W14, #0, W0
0x300C	0x400063  	ADD	W0, #3, W0
0x300E	0x784090  	MOV.B	[W0], W1
0x3010	0xB3C7F0  	MOV.B	#127, W0
; d start address is: 4 (W2)
0x3012	0x50C100  	SUB.B	W1, W0, W2
;__Lib_Conversions.c,582 :: 		
0x3014	0x470060  	ADD	W14, #0, W0
0x3016	0x4000E3  	ADD	W0, #3, W1
0x3018	0xB3C010  	MOV.B	#1, W0
0x301A	0x784880  	MOV.B	W0, [W1]
;__Lib_Conversions.c,583 :: 		
0x301C	0xFB8182  	ZE	W2, W3
; d end address is: 4 (W2)
0x301E	0x470160  	ADD	W14, #0, W2
0x3020	0xBE0012  	MOV.D	[W2], W0
L__FloatToStr203:
0x3022	0xE90183  	DEC	W3, W3
0x3024	0x350003  	BRA LT	L__FloatToStr204
0x3026	0xD00000  	SL	W0, W0
0x3028	0xD28081  	RLC	W1, W1
0x302A	0x37FFFB  	BRA	L__FloatToStr203
L__FloatToStr204:
0x302C	0x980700  	MOV	W0, [W14+0]
0x302E	0x980711  	MOV	W1, [W14+2]
;__Lib_Conversions.c,584 :: 		
0x3030	0x470060  	ADD	W14, #0, W0
0x3032	0x400063  	ADD	W0, #3, W0
0x3034	0x200301  	MOV	#48, W1
0x3036	0xFB8010  	ZE	[W0], W0
0x3038	0x408000  	ADD	W1, W0, W0
0x303A	0x784E00  	MOV.B	W0, [W12]
0x303C	0x460061  	ADD	W12, #1, W0
0x303E	0x780600  	MOV	W0, W12
;__Lib_Conversions.c,585 :: 		
0x3040	0x90405E  	MOV.B	[W14+5], W0
0x3042	0xE10461  	CP.B	W0, #1
0x3044	0x350004  	BRA LT	L__FloatToStr124
L__FloatToStr205:
0x3046	0x90405E  	MOV.B	[W14+5], W0
0x3048	0xE10466  	CP.B	W0, #6
0x304A	0x3C0001  	BRA GT	L__FloatToStr123
L__FloatToStr206:
0x304C	0x370006  	BRA	L_FloatToStr100
L__FloatToStr124:
L__FloatToStr123:
;__Lib_Conversions.c,586 :: 		
0x304E	0xB3C2E0  	MOV.B	#46, W0
0x3050	0x784E00  	MOV.B	W0, [W12]
0x3052	0x460061  	ADD	W12, #1, W0
0x3054	0x780600  	MOV	W0, W12
;__Lib_Conversions.c,587 :: 		
0x3056	0xB3C010  	MOV.B	#1, W0
0x3058	0x984740  	MOV.B	W0, [W14+4]
;__Lib_Conversions.c,588 :: 		
L_FloatToStr100:
;__Lib_Conversions.c,589 :: 		
; d start address is: 10 (W5)
0x305A	0xB3C065  	MOV.B	#6, W5
; d end address is: 10 (W5)
L_FloatToStr101:
; d start address is: 10 (W5)
0x305C	0xE12C60  	CP.B	W5, #0
0x305E	0x32002C  	BRA Z	L_FloatToStr102
L__FloatToStr207:
;__Lib_Conversions.c,590 :: 		
0x3060	0x470060  	ADD	W14, #0, W0
0x3062	0x4000E3  	ADD	W0, #3, W1
0x3064	0xEF2000  	CLR	W0
0x3066	0x784880  	MOV.B	W0, [W1]
;__Lib_Conversions.c,591 :: 		
0x3068	0x470060  	ADD	W14, #0, W0
0x306A	0xD001B0  	SL	[W0++], W3
0x306C	0xD28220  	RLC	[W0--], W4
0x306E	0xD00183  	SL	W3, W3
0x3070	0xD28204  	RLC	W4, W4
0x3072	0x470160  	ADD	W14, #0, W2
0x3074	0x418032  	ADD	W3, [W2++], W0
0x3076	0x4A00A2  	ADDC	W4, [W2--], W1
0x3078	0x980700  	MOV	W0, [W14+0]
0x307A	0x980711  	MOV	W1, [W14+2]
;__Lib_Conversions.c,592 :: 		
0x307C	0x470160  	ADD	W14, #0, W2
0x307E	0xD00032  	SL	[W2++], W0
0x3080	0xD280A2  	RLC	[W2--], W1
0x3082	0x980700  	MOV	W0, [W14+0]
0x3084	0x980711  	MOV	W1, [W14+2]
;__Lib_Conversions.c,593 :: 		
0x3086	0x470060  	ADD	W14, #0, W0
0x3088	0x400063  	ADD	W0, #3, W0
0x308A	0x200301  	MOV	#48, W1
0x308C	0xFB8010  	ZE	[W0], W0
0x308E	0x408000  	ADD	W1, W0, W0
0x3090	0x784E00  	MOV.B	W0, [W12]
0x3092	0x460061  	ADD	W12, #1, W0
0x3094	0x780600  	MOV	W0, W12
;__Lib_Conversions.c,594 :: 		
0x3096	0x90404E  	MOV.B	[W14+4], W0
0x3098	0xE10460  	CP.B	W0, #0
0x309A	0x3A000B  	BRA NZ	L_FloatToStr104
L__FloatToStr208:
;__Lib_Conversions.c,595 :: 		
0x309C	0x90405E  	MOV.B	[W14+5], W0
0x309E	0xED6000  	DEC.B	W0
0x30A0	0x984750  	MOV.B	W0, [W14+5]
0x30A2	0xE10460  	CP.B	W0, #0
0x30A4	0x3A0006  	BRA NZ	L_FloatToStr105
L__FloatToStr209:
;__Lib_Conversions.c,596 :: 		
0x30A6	0xB3C2E0  	MOV.B	#46, W0
0x30A8	0x784E00  	MOV.B	W0, [W12]
0x30AA	0x460061  	ADD	W12, #1, W0
0x30AC	0x780600  	MOV	W0, W12
;__Lib_Conversions.c,597 :: 		
0x30AE	0xB3C010  	MOV.B	#1, W0
0x30B0	0x984740  	MOV.B	W0, [W14+4]
;__Lib_Conversions.c,598 :: 		
L_FloatToStr105:
L_FloatToStr104:
;__Lib_Conversions.c,589 :: 		
; d start address is: 0 (W0)
0x30B2	0x52C061  	SUB.B	W5, #1, W0
; d end address is: 10 (W5)
;__Lib_Conversions.c,599 :: 		
0x30B4	0x784280  	MOV.B	W0, W5
; d end address is: 0 (W0)
0x30B6	0x37FFD2  	BRA	L_FloatToStr101
L_FloatToStr102:
;__Lib_Conversions.c,600 :: 		
L_FloatToStr106:
0x30B8	0x2FFFF0  	MOV	#65535, W0
0x30BA	0x460000  	ADD	W12, W0, W0
0x30BC	0x784090  	MOV.B	[W0], W1
0x30BE	0xB3C300  	MOV.B	#48, W0
0x30C0	0xE10C00  	CP.B	W1, W0
0x30C2	0x3A0003  	BRA NZ	L_FloatToStr107
L__FloatToStr210:
;__Lib_Conversions.c,601 :: 		
0x30C4	0x560061  	SUB	W12, #1, W0
0x30C6	0x780600  	MOV	W0, W12
0x30C8	0x37FFF7  	BRA	L_FloatToStr106
L_FloatToStr107:
;__Lib_Conversions.c,602 :: 		
0x30CA	0x2FFFF0  	MOV	#65535, W0
0x30CC	0x460000  	ADD	W12, W0, W0
0x30CE	0x784090  	MOV.B	[W0], W1
0x30D0	0xB3C2E0  	MOV.B	#46, W0
0x30D2	0xE10C00  	CP.B	W1, W0
0x30D4	0x3A0002  	BRA NZ	L_FloatToStr108
L__FloatToStr211:
;__Lib_Conversions.c,603 :: 		
0x30D6	0x560061  	SUB	W12, #1, W0
0x30D8	0x780600  	MOV	W0, W12
L_FloatToStr108:
;__Lib_Conversions.c,604 :: 		
0x30DA	0x90405E  	MOV.B	[W14+5], W0
0x30DC	0xE10460  	CP.B	W0, #0
0x30DE	0x320025  	BRA Z	L_FloatToStr109
L__FloatToStr212:
;__Lib_Conversions.c,605 :: 		
0x30E0	0xB3C650  	MOV.B	#101, W0
0x30E2	0x784E00  	MOV.B	W0, [W12]
0x30E4	0x460061  	ADD	W12, #1, W0
0x30E6	0x780600  	MOV	W0, W12
;__Lib_Conversions.c,606 :: 		
0x30E8	0x90405E  	MOV.B	[W14+5], W0
0x30EA	0xE10460  	CP.B	W0, #0
0x30EC	0x3D0007  	BRA GE	L_FloatToStr110
L__FloatToStr213:
;__Lib_Conversions.c,607 :: 		
0x30EE	0xB3C2D0  	MOV.B	#45, W0
0x30F0	0x784E00  	MOV.B	W0, [W12]
0x30F2	0x460061  	ADD	W12, #1, W0
0x30F4	0x780600  	MOV	W0, W12
;__Lib_Conversions.c,608 :: 		
0x30F6	0x9040DE  	MOV.B	[W14+5], W1
0x30F8	0x470065  	ADD	W14, #5, W0
0x30FA	0x10C860  	SUBR.B	W1, #0, [W0]
;__Lib_Conversions.c,609 :: 		
L_FloatToStr110:
;__Lib_Conversions.c,610 :: 		
; d start address is: 6 (W3)
0x30FC	0x9041DE  	MOV.B	[W14+5], W3
;__Lib_Conversions.c,611 :: 		
0x30FE	0x90405E  	MOV.B	[W14+5], W0
0x3100	0xE10469  	CP.B	W0, #9
0x3102	0x36000A  	BRA LEU	L_FloatToStr111
L__FloatToStr214:
;__Lib_Conversions.c,612 :: 		
0x3104	0xFB8003  	ZE	W3, W0
0x3106	0x2000A2  	MOV	#10, W2
0x3108	0x090011  	REPEAT	#17
0x310A	0xD80002  	DIV.S	W0, W2
0x310C	0x780080  	MOV	W0, W1
0x310E	0x200300  	MOV	#48, W0
0x3110	0x400001  	ADD	W0, W1, W0
0x3112	0x784E00  	MOV.B	W0, [W12]
0x3114	0x460061  	ADD	W12, #1, W0
0x3116	0x780600  	MOV	W0, W12
L_FloatToStr111:
;__Lib_Conversions.c,613 :: 		
0x3118	0xFB8003  	ZE	W3, W0
; d end address is: 6 (W3)
0x311A	0x2000A2  	MOV	#10, W2
0x311C	0x090011  	REPEAT	#17
0x311E	0xD80002  	DIV.S	W0, W2
0x3120	0x200300  	MOV	#48, W0
0x3122	0x400001  	ADD	W0, W1, W0
0x3124	0x784E00  	MOV.B	W0, [W12]
0x3126	0x460061  	ADD	W12, #1, W0
0x3128	0x780600  	MOV	W0, W12
;__Lib_Conversions.c,614 :: 		
L_FloatToStr109:
;__Lib_Conversions.c,615 :: 		
0x312A	0xEF2000  	CLR	W0
0x312C	0x784E00  	MOV.B	W0, [W12]
;__Lib_Conversions.c,616 :: 		
0x312E	0xEF2000  	CLR	W0
;__Lib_Conversions.c,617 :: 		
;__Lib_Conversions.c,616 :: 		
;__Lib_Conversions.c,617 :: 		
L_end_FloatToStr:
0x3130	0x7805CF  	POP	W11
0x3132	0x78054F  	POP	W10
0x3134	0xFA8000  	ULNK
0x3136	0x060000  	RETURN
; end of _FloatToStr
_strcpy:
0x24E4	0xFA0000  	LNK	#0
;__Lib_CString.c,133 :: 		
;__Lib_CString.c,136 :: 		
; cp start address is: 0 (W0)
0x24E6	0x78000A  	MOV	W10, W0
; cp end address is: 0 (W0)
;__Lib_CString.c,137 :: 		
L_strcpy34:
; cp start address is: 6 (W3)
; cp start address is: 0 (W0)
0x24E8	0x780100  	MOV	W0, W2
; cp start address is: 6 (W3)
0x24EA	0x4001E1  	ADD	W0, #1, W3
; cp end address is: 0 (W0)
; cp end address is: 6 (W3)
0x24EC	0x78008B  	MOV	W11, W1
0x24EE	0x458061  	ADD	W11, #1, W0
0x24F0	0x780580  	MOV	W0, W11
0x24F2	0x784911  	MOV.B	[W1], [W2]
0x24F4	0xE00412  	CP0.B	[W2]
0x24F6	0x320002  	BRA Z	L_strcpy35
L__strcpy133:
; cp end address is: 6 (W3)
;__Lib_CString.c,138 :: 		
; cp start address is: 6 (W3)
0x24F8	0x780003  	MOV	W3, W0
; cp end address is: 6 (W3)
0x24FA	0x37FFF6  	BRA	L_strcpy34
L_strcpy35:
;__Lib_CString.c,139 :: 		
0x24FC	0x78000A  	MOV	W10, W0
;__Lib_CString.c,140 :: 		
L_end_strcpy:
0x24FE	0xFA8000  	ULNK
0x2500	0x060000  	RETURN
; end of _strcpy
_Delay_1ms:
;__Lib_Delays.c,562 :: 		void Delay_1ms()
;__Lib_Delays.c,564 :: 		Delay_ms(1);
0x3192	0x205357  	MOV	#1333, W7
L_Delay_1ms23:
0x3194	0xED200E  	DEC	W7
0x3196	0x3AFFFE  	BRA NZ	L_Delay_1ms23
0x3198	0x000000  	NOP
;__Lib_Delays.c,565 :: 		}
L_end_Delay_1ms:
0x319A	0x060000  	RETURN
; end of _Delay_1ms
0x33AE	0x20800A  	MOV	#2048, W10
0x33B0	0x20000B  	MOV	#0, W11
0x33B2	0x09223C  	REPEAT	#8764
0x33B4	0x781D0B  	MOV	W11, [W10++]
0x33B6	0x060000  	RETURN
0x33B8	0x208001  	MOV	#lo_addr(?lstr4_Click_IR_Grid2_DSPIC), W1
0x33BA	0x2870C0  	MOV	#34572, W0
0x33BC	0x090013  	REPEAT	#19
0x33BE	0x7818B0  	MOV	[W0++], [W1++]
0x33C0	0x7858B0  	MOV.B	[W0++], [W1++]
0x33C2	0x2082A1  	MOV	#lo_addr(_Ta), W1
0x33C4	0x286800  	MOV	#34432, W0
0x33C6	0x09002C  	REPEAT	#44
0x33C8	0x7818B0  	MOV	[W0++], [W1++]
0x33CA	0x7858B0  	MOV.B	[W0++], [W1++]
0x33CC	0x060000  	RETURN
;__irgrid2_Driver.c,0 :: ?ICSirgrid2_readData_readReg_L0 [1664]
0x8000	0x0000 ;?ICSirgrid2_readData_readReg_L0+0
0x8002	0x0000 ;?ICSirgrid2_readData_readReg_L0+2
0x8004	0x0000 ;?ICSirgrid2_readData_readReg_L0+4
0x8006	0x0000 ;?ICSirgrid2_readData_readReg_L0+6
0x8008	0x0000 ;?ICSirgrid2_readData_readReg_L0+8
0x800A	0x0000 ;?ICSirgrid2_readData_readReg_L0+10
0x800C	0x0000 ;?ICSirgrid2_readData_readReg_L0+12
0x800E	0x0000 ;?ICSirgrid2_readData_readReg_L0+14
0x8010	0x0000 ;?ICSirgrid2_readData_readReg_L0+16
0x8012	0x0000 ;?ICSirgrid2_readData_readReg_L0+18
0x8014	0x0000 ;?ICSirgrid2_readData_readReg_L0+20
0x8016	0x0000 ;?ICSirgrid2_readData_readReg_L0+22
0x8018	0x0000 ;?ICSirgrid2_readData_readReg_L0+24
0x801A	0x0000 ;?ICSirgrid2_readData_readReg_L0+26
0x801C	0x0000 ;?ICSirgrid2_readData_readReg_L0+28
0x801E	0x0000 ;?ICSirgrid2_readData_readReg_L0+30
0x8020	0x0000 ;?ICSirgrid2_readData_readReg_L0+32
0x8022	0x0000 ;?ICSirgrid2_readData_readReg_L0+34
0x8024	0x0000 ;?ICSirgrid2_readData_readReg_L0+36
0x8026	0x0000 ;?ICSirgrid2_readData_readReg_L0+38
0x8028	0x0000 ;?ICSirgrid2_readData_readReg_L0+40
0x802A	0x0000 ;?ICSirgrid2_readData_readReg_L0+42
0x802C	0x0000 ;?ICSirgrid2_readData_readReg_L0+44
0x802E	0x0000 ;?ICSirgrid2_readData_readReg_L0+46
0x8030	0x0000 ;?ICSirgrid2_readData_readReg_L0+48
0x8032	0x0000 ;?ICSirgrid2_readData_readReg_L0+50
0x8034	0x0000 ;?ICSirgrid2_readData_readReg_L0+52
0x8036	0x0000 ;?ICSirgrid2_readData_readReg_L0+54
0x8038	0x0000 ;?ICSirgrid2_readData_readReg_L0+56
0x803A	0x0000 ;?ICSirgrid2_readData_readReg_L0+58
0x803C	0x0000 ;?ICSirgrid2_readData_readReg_L0+60
0x803E	0x0000 ;?ICSirgrid2_readData_readReg_L0+62
0x8040	0x0000 ;?ICSirgrid2_readData_readReg_L0+64
0x8042	0x0000 ;?ICSirgrid2_readData_readReg_L0+66
0x8044	0x0000 ;?ICSirgrid2_readData_readReg_L0+68
0x8046	0x0000 ;?ICSirgrid2_readData_readReg_L0+70
0x8048	0x0000 ;?ICSirgrid2_readData_readReg_L0+72
0x804A	0x0000 ;?ICSirgrid2_readData_readReg_L0+74
0x804C	0x0000 ;?ICSirgrid2_readData_readReg_L0+76
0x804E	0x0000 ;?ICSirgrid2_readData_readReg_L0+78
0x8050	0x0000 ;?ICSirgrid2_readData_readReg_L0+80
0x8052	0x0000 ;?ICSirgrid2_readData_readReg_L0+82
0x8054	0x0000 ;?ICSirgrid2_readData_readReg_L0+84
0x8056	0x0000 ;?ICSirgrid2_readData_readReg_L0+86
0x8058	0x0000 ;?ICSirgrid2_readData_readReg_L0+88
0x805A	0x0000 ;?ICSirgrid2_readData_readReg_L0+90
0x805C	0x0000 ;?ICSirgrid2_readData_readReg_L0+92
0x805E	0x0000 ;?ICSirgrid2_readData_readReg_L0+94
0x8060	0x0000 ;?ICSirgrid2_readData_readReg_L0+96
0x8062	0x0000 ;?ICSirgrid2_readData_readReg_L0+98
0x8064	0x0000 ;?ICSirgrid2_readData_readReg_L0+100
0x8066	0x0000 ;?ICSirgrid2_readData_readReg_L0+102
0x8068	0x0000 ;?ICSirgrid2_readData_readReg_L0+104
0x806A	0x0000 ;?ICSirgrid2_readData_readReg_L0+106
0x806C	0x0000 ;?ICSirgrid2_readData_readReg_L0+108
0x806E	0x0000 ;?ICSirgrid2_readData_readReg_L0+110
0x8070	0x0000 ;?ICSirgrid2_readData_readReg_L0+112
0x8072	0x0000 ;?ICSirgrid2_readData_readReg_L0+114
0x8074	0x0000 ;?ICSirgrid2_readData_readReg_L0+116
0x8076	0x0000 ;?ICSirgrid2_readData_readReg_L0+118
0x8078	0x0000 ;?ICSirgrid2_readData_readReg_L0+120
0x807A	0x0000 ;?ICSirgrid2_readData_readReg_L0+122
0x807C	0x0000 ;?ICSirgrid2_readData_readReg_L0+124
0x807E	0x0000 ;?ICSirgrid2_readData_readReg_L0+126
0x8080	0x0000 ;?ICSirgrid2_readData_readReg_L0+128
0x8082	0x0000 ;?ICSirgrid2_readData_readReg_L0+130
0x8084	0x0000 ;?ICSirgrid2_readData_readReg_L0+132
0x8086	0x0000 ;?ICSirgrid2_readData_readReg_L0+134
0x8088	0x0000 ;?ICSirgrid2_readData_readReg_L0+136
0x808A	0x0000 ;?ICSirgrid2_readData_readReg_L0+138
0x808C	0x0000 ;?ICSirgrid2_readData_readReg_L0+140
0x808E	0x0000 ;?ICSirgrid2_readData_readReg_L0+142
0x8090	0x0000 ;?ICSirgrid2_readData_readReg_L0+144
0x8092	0x0000 ;?ICSirgrid2_readData_readReg_L0+146
0x8094	0x0000 ;?ICSirgrid2_readData_readReg_L0+148
0x8096	0x0000 ;?ICSirgrid2_readData_readReg_L0+150
0x8098	0x0000 ;?ICSirgrid2_readData_readReg_L0+152
0x809A	0x0000 ;?ICSirgrid2_readData_readReg_L0+154
0x809C	0x0000 ;?ICSirgrid2_readData_readReg_L0+156
0x809E	0x0000 ;?ICSirgrid2_readData_readReg_L0+158
0x80A0	0x0000 ;?ICSirgrid2_readData_readReg_L0+160
0x80A2	0x0000 ;?ICSirgrid2_readData_readReg_L0+162
0x80A4	0x0000 ;?ICSirgrid2_readData_readReg_L0+164
0x80A6	0x0000 ;?ICSirgrid2_readData_readReg_L0+166
0x80A8	0x0000 ;?ICSirgrid2_readData_readReg_L0+168
0x80AA	0x0000 ;?ICSirgrid2_readData_readReg_L0+170
0x80AC	0x0000 ;?ICSirgrid2_readData_readReg_L0+172
0x80AE	0x0000 ;?ICSirgrid2_readData_readReg_L0+174
0x80B0	0x0000 ;?ICSirgrid2_readData_readReg_L0+176
0x80B2	0x0000 ;?ICSirgrid2_readData_readReg_L0+178
0x80B4	0x0000 ;?ICSirgrid2_readData_readReg_L0+180
0x80B6	0x0000 ;?ICSirgrid2_readData_readReg_L0+182
0x80B8	0x0000 ;?ICSirgrid2_readData_readReg_L0+184
0x80BA	0x0000 ;?ICSirgrid2_readData_readReg_L0+186
0x80BC	0x0000 ;?ICSirgrid2_readData_readReg_L0+188
0x80BE	0x0000 ;?ICSirgrid2_readData_readReg_L0+190
0x80C0	0x0000 ;?ICSirgrid2_readData_readReg_L0+192
0x80C2	0x0000 ;?ICSirgrid2_readData_readReg_L0+194
0x80C4	0x0000 ;?ICSirgrid2_readData_readReg_L0+196
0x80C6	0x0000 ;?ICSirgrid2_readData_readReg_L0+198
0x80C8	0x0000 ;?ICSirgrid2_readData_readReg_L0+200
0x80CA	0x0000 ;?ICSirgrid2_readData_readReg_L0+202
0x80CC	0x0000 ;?ICSirgrid2_readData_readReg_L0+204
0x80CE	0x0000 ;?ICSirgrid2_readData_readReg_L0+206
0x80D0	0x0000 ;?ICSirgrid2_readData_readReg_L0+208
0x80D2	0x0000 ;?ICSirgrid2_readData_readReg_L0+210
0x80D4	0x0000 ;?ICSirgrid2_readData_readReg_L0+212
0x80D6	0x0000 ;?ICSirgrid2_readData_readReg_L0+214
0x80D8	0x0000 ;?ICSirgrid2_readData_readReg_L0+216
0x80DA	0x0000 ;?ICSirgrid2_readData_readReg_L0+218
0x80DC	0x0000 ;?ICSirgrid2_readData_readReg_L0+220
0x80DE	0x0000 ;?ICSirgrid2_readData_readReg_L0+222
0x80E0	0x0000 ;?ICSirgrid2_readData_readReg_L0+224
0x80E2	0x0000 ;?ICSirgrid2_readData_readReg_L0+226
0x80E4	0x0000 ;?ICSirgrid2_readData_readReg_L0+228
0x80E6	0x0000 ;?ICSirgrid2_readData_readReg_L0+230
0x80E8	0x0000 ;?ICSirgrid2_readData_readReg_L0+232
0x80EA	0x0000 ;?ICSirgrid2_readData_readReg_L0+234
0x80EC	0x0000 ;?ICSirgrid2_readData_readReg_L0+236
0x80EE	0x0000 ;?ICSirgrid2_readData_readReg_L0+238
0x80F0	0x0000 ;?ICSirgrid2_readData_readReg_L0+240
0x80F2	0x0000 ;?ICSirgrid2_readData_readReg_L0+242
0x80F4	0x0000 ;?ICSirgrid2_readData_readReg_L0+244
0x80F6	0x0000 ;?ICSirgrid2_readData_readReg_L0+246
0x80F8	0x0000 ;?ICSirgrid2_readData_readReg_L0+248
0x80FA	0x0000 ;?ICSirgrid2_readData_readReg_L0+250
0x80FC	0x0000 ;?ICSirgrid2_readData_readReg_L0+252
0x80FE	0x0000 ;?ICSirgrid2_readData_readReg_L0+254
0x8100	0x0000 ;?ICSirgrid2_readData_readReg_L0+256
0x8102	0x0000 ;?ICSirgrid2_readData_readReg_L0+258
0x8104	0x0000 ;?ICSirgrid2_readData_readReg_L0+260
0x8106	0x0000 ;?ICSirgrid2_readData_readReg_L0+262
0x8108	0x0000 ;?ICSirgrid2_readData_readReg_L0+264
0x810A	0x0000 ;?ICSirgrid2_readData_readReg_L0+266
0x810C	0x0000 ;?ICSirgrid2_readData_readReg_L0+268
0x810E	0x0000 ;?ICSirgrid2_readData_readReg_L0+270
0x8110	0x0000 ;?ICSirgrid2_readData_readReg_L0+272
0x8112	0x0000 ;?ICSirgrid2_readData_readReg_L0+274
0x8114	0x0000 ;?ICSirgrid2_readData_readReg_L0+276
0x8116	0x0000 ;?ICSirgrid2_readData_readReg_L0+278
0x8118	0x0000 ;?ICSirgrid2_readData_readReg_L0+280
0x811A	0x0000 ;?ICSirgrid2_readData_readReg_L0+282
0x811C	0x0000 ;?ICSirgrid2_readData_readReg_L0+284
0x811E	0x0000 ;?ICSirgrid2_readData_readReg_L0+286
0x8120	0x0000 ;?ICSirgrid2_readData_readReg_L0+288
0x8122	0x0000 ;?ICSirgrid2_readData_readReg_L0+290
0x8124	0x0000 ;?ICSirgrid2_readData_readReg_L0+292
0x8126	0x0000 ;?ICSirgrid2_readData_readReg_L0+294
0x8128	0x0000 ;?ICSirgrid2_readData_readReg_L0+296
0x812A	0x0000 ;?ICSirgrid2_readData_readReg_L0+298
0x812C	0x0000 ;?ICSirgrid2_readData_readReg_L0+300
0x812E	0x0000 ;?ICSirgrid2_readData_readReg_L0+302
0x8130	0x0000 ;?ICSirgrid2_readData_readReg_L0+304
0x8132	0x0000 ;?ICSirgrid2_readData_readReg_L0+306
0x8134	0x0000 ;?ICSirgrid2_readData_readReg_L0+308
0x8136	0x0000 ;?ICSirgrid2_readData_readReg_L0+310
0x8138	0x0000 ;?ICSirgrid2_readData_readReg_L0+312
0x813A	0x0000 ;?ICSirgrid2_readData_readReg_L0+314
0x813C	0x0000 ;?ICSirgrid2_readData_readReg_L0+316
0x813E	0x0000 ;?ICSirgrid2_readData_readReg_L0+318
0x8140	0x0000 ;?ICSirgrid2_readData_readReg_L0+320
0x8142	0x0000 ;?ICSirgrid2_readData_readReg_L0+322
0x8144	0x0000 ;?ICSirgrid2_readData_readReg_L0+324
0x8146	0x0000 ;?ICSirgrid2_readData_readReg_L0+326
0x8148	0x0000 ;?ICSirgrid2_readData_readReg_L0+328
0x814A	0x0000 ;?ICSirgrid2_readData_readReg_L0+330
0x814C	0x0000 ;?ICSirgrid2_readData_readReg_L0+332
0x814E	0x0000 ;?ICSirgrid2_readData_readReg_L0+334
0x8150	0x0000 ;?ICSirgrid2_readData_readReg_L0+336
0x8152	0x0000 ;?ICSirgrid2_readData_readReg_L0+338
0x8154	0x0000 ;?ICSirgrid2_readData_readReg_L0+340
0x8156	0x0000 ;?ICSirgrid2_readData_readReg_L0+342
0x8158	0x0000 ;?ICSirgrid2_readData_readReg_L0+344
0x815A	0x0000 ;?ICSirgrid2_readData_readReg_L0+346
0x815C	0x0000 ;?ICSirgrid2_readData_readReg_L0+348
0x815E	0x0000 ;?ICSirgrid2_readData_readReg_L0+350
0x8160	0x0000 ;?ICSirgrid2_readData_readReg_L0+352
0x8162	0x0000 ;?ICSirgrid2_readData_readReg_L0+354
0x8164	0x0000 ;?ICSirgrid2_readData_readReg_L0+356
0x8166	0x0000 ;?ICSirgrid2_readData_readReg_L0+358
0x8168	0x0000 ;?ICSirgrid2_readData_readReg_L0+360
0x816A	0x0000 ;?ICSirgrid2_readData_readReg_L0+362
0x816C	0x0000 ;?ICSirgrid2_readData_readReg_L0+364
0x816E	0x0000 ;?ICSirgrid2_readData_readReg_L0+366
0x8170	0x0000 ;?ICSirgrid2_readData_readReg_L0+368
0x8172	0x0000 ;?ICSirgrid2_readData_readReg_L0+370
0x8174	0x0000 ;?ICSirgrid2_readData_readReg_L0+372
0x8176	0x0000 ;?ICSirgrid2_readData_readReg_L0+374
0x8178	0x0000 ;?ICSirgrid2_readData_readReg_L0+376
0x817A	0x0000 ;?ICSirgrid2_readData_readReg_L0+378
0x817C	0x0000 ;?ICSirgrid2_readData_readReg_L0+380
0x817E	0x0000 ;?ICSirgrid2_readData_readReg_L0+382
0x8180	0x0000 ;?ICSirgrid2_readData_readReg_L0+384
0x8182	0x0000 ;?ICSirgrid2_readData_readReg_L0+386
0x8184	0x0000 ;?ICSirgrid2_readData_readReg_L0+388
0x8186	0x0000 ;?ICSirgrid2_readData_readReg_L0+390
0x8188	0x0000 ;?ICSirgrid2_readData_readReg_L0+392
0x818A	0x0000 ;?ICSirgrid2_readData_readReg_L0+394
0x818C	0x0000 ;?ICSirgrid2_readData_readReg_L0+396
0x818E	0x0000 ;?ICSirgrid2_readData_readReg_L0+398
0x8190	0x0000 ;?ICSirgrid2_readData_readReg_L0+400
0x8192	0x0000 ;?ICSirgrid2_readData_readReg_L0+402
0x8194	0x0000 ;?ICSirgrid2_readData_readReg_L0+404
0x8196	0x0000 ;?ICSirgrid2_readData_readReg_L0+406
0x8198	0x0000 ;?ICSirgrid2_readData_readReg_L0+408
0x819A	0x0000 ;?ICSirgrid2_readData_readReg_L0+410
0x819C	0x0000 ;?ICSirgrid2_readData_readReg_L0+412
0x819E	0x0000 ;?ICSirgrid2_readData_readReg_L0+414
0x81A0	0x0000 ;?ICSirgrid2_readData_readReg_L0+416
0x81A2	0x0000 ;?ICSirgrid2_readData_readReg_L0+418
0x81A4	0x0000 ;?ICSirgrid2_readData_readReg_L0+420
0x81A6	0x0000 ;?ICSirgrid2_readData_readReg_L0+422
0x81A8	0x0000 ;?ICSirgrid2_readData_readReg_L0+424
0x81AA	0x0000 ;?ICSirgrid2_readData_readReg_L0+426
0x81AC	0x0000 ;?ICSirgrid2_readData_readReg_L0+428
0x81AE	0x0000 ;?ICSirgrid2_readData_readReg_L0+430
0x81B0	0x0000 ;?ICSirgrid2_readData_readReg_L0+432
0x81B2	0x0000 ;?ICSirgrid2_readData_readReg_L0+434
0x81B4	0x0000 ;?ICSirgrid2_readData_readReg_L0+436
0x81B6	0x0000 ;?ICSirgrid2_readData_readReg_L0+438
0x81B8	0x0000 ;?ICSirgrid2_readData_readReg_L0+440
0x81BA	0x0000 ;?ICSirgrid2_readData_readReg_L0+442
0x81BC	0x0000 ;?ICSirgrid2_readData_readReg_L0+444
0x81BE	0x0000 ;?ICSirgrid2_readData_readReg_L0+446
0x81C0	0x0000 ;?ICSirgrid2_readData_readReg_L0+448
0x81C2	0x0000 ;?ICSirgrid2_readData_readReg_L0+450
0x81C4	0x0000 ;?ICSirgrid2_readData_readReg_L0+452
0x81C6	0x0000 ;?ICSirgrid2_readData_readReg_L0+454
0x81C8	0x0000 ;?ICSirgrid2_readData_readReg_L0+456
0x81CA	0x0000 ;?ICSirgrid2_readData_readReg_L0+458
0x81CC	0x0000 ;?ICSirgrid2_readData_readReg_L0+460
0x81CE	0x0000 ;?ICSirgrid2_readData_readReg_L0+462
0x81D0	0x0000 ;?ICSirgrid2_readData_readReg_L0+464
0x81D2	0x0000 ;?ICSirgrid2_readData_readReg_L0+466
0x81D4	0x0000 ;?ICSirgrid2_readData_readReg_L0+468
0x81D6	0x0000 ;?ICSirgrid2_readData_readReg_L0+470
0x81D8	0x0000 ;?ICSirgrid2_readData_readReg_L0+472
0x81DA	0x0000 ;?ICSirgrid2_readData_readReg_L0+474
0x81DC	0x0000 ;?ICSirgrid2_readData_readReg_L0+476
0x81DE	0x0000 ;?ICSirgrid2_readData_readReg_L0+478
0x81E0	0x0000 ;?ICSirgrid2_readData_readReg_L0+480
0x81E2	0x0000 ;?ICSirgrid2_readData_readReg_L0+482
0x81E4	0x0000 ;?ICSirgrid2_readData_readReg_L0+484
0x81E6	0x0000 ;?ICSirgrid2_readData_readReg_L0+486
0x81E8	0x0000 ;?ICSirgrid2_readData_readReg_L0+488
0x81EA	0x0000 ;?ICSirgrid2_readData_readReg_L0+490
0x81EC	0x0000 ;?ICSirgrid2_readData_readReg_L0+492
0x81EE	0x0000 ;?ICSirgrid2_readData_readReg_L0+494
0x81F0	0x0000 ;?ICSirgrid2_readData_readReg_L0+496
0x81F2	0x0000 ;?ICSirgrid2_readData_readReg_L0+498
0x81F4	0x0000 ;?ICSirgrid2_readData_readReg_L0+500
0x81F6	0x0000 ;?ICSirgrid2_readData_readReg_L0+502
0x81F8	0x0000 ;?ICSirgrid2_readData_readReg_L0+504
0x81FA	0x0000 ;?ICSirgrid2_readData_readReg_L0+506
0x81FC	0x0000 ;?ICSirgrid2_readData_readReg_L0+508
0x81FE	0x0000 ;?ICSirgrid2_readData_readReg_L0+510
0x8200	0x0000 ;?ICSirgrid2_readData_readReg_L0+512
0x8202	0x0000 ;?ICSirgrid2_readData_readReg_L0+514
0x8204	0x0000 ;?ICSirgrid2_readData_readReg_L0+516
0x8206	0x0000 ;?ICSirgrid2_readData_readReg_L0+518
0x8208	0x0000 ;?ICSirgrid2_readData_readReg_L0+520
0x820A	0x0000 ;?ICSirgrid2_readData_readReg_L0+522
0x820C	0x0000 ;?ICSirgrid2_readData_readReg_L0+524
0x820E	0x0000 ;?ICSirgrid2_readData_readReg_L0+526
0x8210	0x0000 ;?ICSirgrid2_readData_readReg_L0+528
0x8212	0x0000 ;?ICSirgrid2_readData_readReg_L0+530
0x8214	0x0000 ;?ICSirgrid2_readData_readReg_L0+532
0x8216	0x0000 ;?ICSirgrid2_readData_readReg_L0+534
0x8218	0x0000 ;?ICSirgrid2_readData_readReg_L0+536
0x821A	0x0000 ;?ICSirgrid2_readData_readReg_L0+538
0x821C	0x0000 ;?ICSirgrid2_readData_readReg_L0+540
0x821E	0x0000 ;?ICSirgrid2_readData_readReg_L0+542
0x8220	0x0000 ;?ICSirgrid2_readData_readReg_L0+544
0x8222	0x0000 ;?ICSirgrid2_readData_readReg_L0+546
0x8224	0x0000 ;?ICSirgrid2_readData_readReg_L0+548
0x8226	0x0000 ;?ICSirgrid2_readData_readReg_L0+550
0x8228	0x0000 ;?ICSirgrid2_readData_readReg_L0+552
0x822A	0x0000 ;?ICSirgrid2_readData_readReg_L0+554
0x822C	0x0000 ;?ICSirgrid2_readData_readReg_L0+556
0x822E	0x0000 ;?ICSirgrid2_readData_readReg_L0+558
0x8230	0x0000 ;?ICSirgrid2_readData_readReg_L0+560
0x8232	0x0000 ;?ICSirgrid2_readData_readReg_L0+562
0x8234	0x0000 ;?ICSirgrid2_readData_readReg_L0+564
0x8236	0x0000 ;?ICSirgrid2_readData_readReg_L0+566
0x8238	0x0000 ;?ICSirgrid2_readData_readReg_L0+568
0x823A	0x0000 ;?ICSirgrid2_readData_readReg_L0+570
0x823C	0x0000 ;?ICSirgrid2_readData_readReg_L0+572
0x823E	0x0000 ;?ICSirgrid2_readData_readReg_L0+574
0x8240	0x0000 ;?ICSirgrid2_readData_readReg_L0+576
0x8242	0x0000 ;?ICSirgrid2_readData_readReg_L0+578
0x8244	0x0000 ;?ICSirgrid2_readData_readReg_L0+580
0x8246	0x0000 ;?ICSirgrid2_readData_readReg_L0+582
0x8248	0x0000 ;?ICSirgrid2_readData_readReg_L0+584
0x824A	0x0000 ;?ICSirgrid2_readData_readReg_L0+586
0x824C	0x0000 ;?ICSirgrid2_readData_readReg_L0+588
0x824E	0x0000 ;?ICSirgrid2_readData_readReg_L0+590
0x8250	0x0000 ;?ICSirgrid2_readData_readReg_L0+592
0x8252	0x0000 ;?ICSirgrid2_readData_readReg_L0+594
0x8254	0x0000 ;?ICSirgrid2_readData_readReg_L0+596
0x8256	0x0000 ;?ICSirgrid2_readData_readReg_L0+598
0x8258	0x0000 ;?ICSirgrid2_readData_readReg_L0+600
0x825A	0x0000 ;?ICSirgrid2_readData_readReg_L0+602
0x825C	0x0000 ;?ICSirgrid2_readData_readReg_L0+604
0x825E	0x0000 ;?ICSirgrid2_readData_readReg_L0+606
0x8260	0x0000 ;?ICSirgrid2_readData_readReg_L0+608
0x8262	0x0000 ;?ICSirgrid2_readData_readReg_L0+610
0x8264	0x0000 ;?ICSirgrid2_readData_readReg_L0+612
0x8266	0x0000 ;?ICSirgrid2_readData_readReg_L0+614
0x8268	0x0000 ;?ICSirgrid2_readData_readReg_L0+616
0x826A	0x0000 ;?ICSirgrid2_readData_readReg_L0+618
0x826C	0x0000 ;?ICSirgrid2_readData_readReg_L0+620
0x826E	0x0000 ;?ICSirgrid2_readData_readReg_L0+622
0x8270	0x0000 ;?ICSirgrid2_readData_readReg_L0+624
0x8272	0x0000 ;?ICSirgrid2_readData_readReg_L0+626
0x8274	0x0000 ;?ICSirgrid2_readData_readReg_L0+628
0x8276	0x0000 ;?ICSirgrid2_readData_readReg_L0+630
0x8278	0x0000 ;?ICSirgrid2_readData_readReg_L0+632
0x827A	0x0000 ;?ICSirgrid2_readData_readReg_L0+634
0x827C	0x0000 ;?ICSirgrid2_readData_readReg_L0+636
0x827E	0x0000 ;?ICSirgrid2_readData_readReg_L0+638
0x8280	0x0000 ;?ICSirgrid2_readData_readReg_L0+640
0x8282	0x0000 ;?ICSirgrid2_readData_readReg_L0+642
0x8284	0x0000 ;?ICSirgrid2_readData_readReg_L0+644
0x8286	0x0000 ;?ICSirgrid2_readData_readReg_L0+646
0x8288	0x0000 ;?ICSirgrid2_readData_readReg_L0+648
0x828A	0x0000 ;?ICSirgrid2_readData_readReg_L0+650
0x828C	0x0000 ;?ICSirgrid2_readData_readReg_L0+652
0x828E	0x0000 ;?ICSirgrid2_readData_readReg_L0+654
0x8290	0x0000 ;?ICSirgrid2_readData_readReg_L0+656
0x8292	0x0000 ;?ICSirgrid2_readData_readReg_L0+658
0x8294	0x0000 ;?ICSirgrid2_readData_readReg_L0+660
0x8296	0x0000 ;?ICSirgrid2_readData_readReg_L0+662
0x8298	0x0000 ;?ICSirgrid2_readData_readReg_L0+664
0x829A	0x0000 ;?ICSirgrid2_readData_readReg_L0+666
0x829C	0x0000 ;?ICSirgrid2_readData_readReg_L0+668
0x829E	0x0000 ;?ICSirgrid2_readData_readReg_L0+670
0x82A0	0x0000 ;?ICSirgrid2_readData_readReg_L0+672
0x82A2	0x0000 ;?ICSirgrid2_readData_readReg_L0+674
0x82A4	0x0000 ;?ICSirgrid2_readData_readReg_L0+676
0x82A6	0x0000 ;?ICSirgrid2_readData_readReg_L0+678
0x82A8	0x0000 ;?ICSirgrid2_readData_readReg_L0+680
0x82AA	0x0000 ;?ICSirgrid2_readData_readReg_L0+682
0x82AC	0x0000 ;?ICSirgrid2_readData_readReg_L0+684
0x82AE	0x0000 ;?ICSirgrid2_readData_readReg_L0+686
0x82B0	0x0000 ;?ICSirgrid2_readData_readReg_L0+688
0x82B2	0x0000 ;?ICSirgrid2_readData_readReg_L0+690
0x82B4	0x0000 ;?ICSirgrid2_readData_readReg_L0+692
0x82B6	0x0000 ;?ICSirgrid2_readData_readReg_L0+694
0x82B8	0x0000 ;?ICSirgrid2_readData_readReg_L0+696
0x82BA	0x0000 ;?ICSirgrid2_readData_readReg_L0+698
0x82BC	0x0000 ;?ICSirgrid2_readData_readReg_L0+700
0x82BE	0x0000 ;?ICSirgrid2_readData_readReg_L0+702
0x82C0	0x0000 ;?ICSirgrid2_readData_readReg_L0+704
0x82C2	0x0000 ;?ICSirgrid2_readData_readReg_L0+706
0x82C4	0x0000 ;?ICSirgrid2_readData_readReg_L0+708
0x82C6	0x0000 ;?ICSirgrid2_readData_readReg_L0+710
0x82C8	0x0000 ;?ICSirgrid2_readData_readReg_L0+712
0x82CA	0x0000 ;?ICSirgrid2_readData_readReg_L0+714
0x82CC	0x0000 ;?ICSirgrid2_readData_readReg_L0+716
0x82CE	0x0000 ;?ICSirgrid2_readData_readReg_L0+718
0x82D0	0x0000 ;?ICSirgrid2_readData_readReg_L0+720
0x82D2	0x0000 ;?ICSirgrid2_readData_readReg_L0+722
0x82D4	0x0000 ;?ICSirgrid2_readData_readReg_L0+724
0x82D6	0x0000 ;?ICSirgrid2_readData_readReg_L0+726
0x82D8	0x0000 ;?ICSirgrid2_readData_readReg_L0+728
0x82DA	0x0000 ;?ICSirgrid2_readData_readReg_L0+730
0x82DC	0x0000 ;?ICSirgrid2_readData_readReg_L0+732
0x82DE	0x0000 ;?ICSirgrid2_readData_readReg_L0+734
0x82E0	0x0000 ;?ICSirgrid2_readData_readReg_L0+736
0x82E2	0x0000 ;?ICSirgrid2_readData_readReg_L0+738
0x82E4	0x0000 ;?ICSirgrid2_readData_readReg_L0+740
0x82E6	0x0000 ;?ICSirgrid2_readData_readReg_L0+742
0x82E8	0x0000 ;?ICSirgrid2_readData_readReg_L0+744
0x82EA	0x0000 ;?ICSirgrid2_readData_readReg_L0+746
0x82EC	0x0000 ;?ICSirgrid2_readData_readReg_L0+748
0x82EE	0x0000 ;?ICSirgrid2_readData_readReg_L0+750
0x82F0	0x0000 ;?ICSirgrid2_readData_readReg_L0+752
0x82F2	0x0000 ;?ICSirgrid2_readData_readReg_L0+754
0x82F4	0x0000 ;?ICSirgrid2_readData_readReg_L0+756
0x82F6	0x0000 ;?ICSirgrid2_readData_readReg_L0+758
0x82F8	0x0000 ;?ICSirgrid2_readData_readReg_L0+760
0x82FA	0x0000 ;?ICSirgrid2_readData_readReg_L0+762
0x82FC	0x0000 ;?ICSirgrid2_readData_readReg_L0+764
0x82FE	0x0000 ;?ICSirgrid2_readData_readReg_L0+766
0x8300	0x0000 ;?ICSirgrid2_readData_readReg_L0+768
0x8302	0x0000 ;?ICSirgrid2_readData_readReg_L0+770
0x8304	0x0000 ;?ICSirgrid2_readData_readReg_L0+772
0x8306	0x0000 ;?ICSirgrid2_readData_readReg_L0+774
0x8308	0x0000 ;?ICSirgrid2_readData_readReg_L0+776
0x830A	0x0000 ;?ICSirgrid2_readData_readReg_L0+778
0x830C	0x0000 ;?ICSirgrid2_readData_readReg_L0+780
0x830E	0x0000 ;?ICSirgrid2_readData_readReg_L0+782
0x8310	0x0000 ;?ICSirgrid2_readData_readReg_L0+784
0x8312	0x0000 ;?ICSirgrid2_readData_readReg_L0+786
0x8314	0x0000 ;?ICSirgrid2_readData_readReg_L0+788
0x8316	0x0000 ;?ICSirgrid2_readData_readReg_L0+790
0x8318	0x0000 ;?ICSirgrid2_readData_readReg_L0+792
0x831A	0x0000 ;?ICSirgrid2_readData_readReg_L0+794
0x831C	0x0000 ;?ICSirgrid2_readData_readReg_L0+796
0x831E	0x0000 ;?ICSirgrid2_readData_readReg_L0+798
0x8320	0x0000 ;?ICSirgrid2_readData_readReg_L0+800
0x8322	0x0000 ;?ICSirgrid2_readData_readReg_L0+802
0x8324	0x0000 ;?ICSirgrid2_readData_readReg_L0+804
0x8326	0x0000 ;?ICSirgrid2_readData_readReg_L0+806
0x8328	0x0000 ;?ICSirgrid2_readData_readReg_L0+808
0x832A	0x0000 ;?ICSirgrid2_readData_readReg_L0+810
0x832C	0x0000 ;?ICSirgrid2_readData_readReg_L0+812
0x832E	0x0000 ;?ICSirgrid2_readData_readReg_L0+814
0x8330	0x0000 ;?ICSirgrid2_readData_readReg_L0+816
0x8332	0x0000 ;?ICSirgrid2_readData_readReg_L0+818
0x8334	0x0000 ;?ICSirgrid2_readData_readReg_L0+820
0x8336	0x0000 ;?ICSirgrid2_readData_readReg_L0+822
0x8338	0x0000 ;?ICSirgrid2_readData_readReg_L0+824
0x833A	0x0000 ;?ICSirgrid2_readData_readReg_L0+826
0x833C	0x0000 ;?ICSirgrid2_readData_readReg_L0+828
0x833E	0x0000 ;?ICSirgrid2_readData_readReg_L0+830
0x8340	0x0000 ;?ICSirgrid2_readData_readReg_L0+832
0x8342	0x0000 ;?ICSirgrid2_readData_readReg_L0+834
0x8344	0x0000 ;?ICSirgrid2_readData_readReg_L0+836
0x8346	0x0000 ;?ICSirgrid2_readData_readReg_L0+838
0x8348	0x0000 ;?ICSirgrid2_readData_readReg_L0+840
0x834A	0x0000 ;?ICSirgrid2_readData_readReg_L0+842
0x834C	0x0000 ;?ICSirgrid2_readData_readReg_L0+844
0x834E	0x0000 ;?ICSirgrid2_readData_readReg_L0+846
0x8350	0x0000 ;?ICSirgrid2_readData_readReg_L0+848
0x8352	0x0000 ;?ICSirgrid2_readData_readReg_L0+850
0x8354	0x0000 ;?ICSirgrid2_readData_readReg_L0+852
0x8356	0x0000 ;?ICSirgrid2_readData_readReg_L0+854
0x8358	0x0000 ;?ICSirgrid2_readData_readReg_L0+856
0x835A	0x0000 ;?ICSirgrid2_readData_readReg_L0+858
0x835C	0x0000 ;?ICSirgrid2_readData_readReg_L0+860
0x835E	0x0000 ;?ICSirgrid2_readData_readReg_L0+862
0x8360	0x0000 ;?ICSirgrid2_readData_readReg_L0+864
0x8362	0x0000 ;?ICSirgrid2_readData_readReg_L0+866
0x8364	0x0000 ;?ICSirgrid2_readData_readReg_L0+868
0x8366	0x0000 ;?ICSirgrid2_readData_readReg_L0+870
0x8368	0x0000 ;?ICSirgrid2_readData_readReg_L0+872
0x836A	0x0000 ;?ICSirgrid2_readData_readReg_L0+874
0x836C	0x0000 ;?ICSirgrid2_readData_readReg_L0+876
0x836E	0x0000 ;?ICSirgrid2_readData_readReg_L0+878
0x8370	0x0000 ;?ICSirgrid2_readData_readReg_L0+880
0x8372	0x0000 ;?ICSirgrid2_readData_readReg_L0+882
0x8374	0x0000 ;?ICSirgrid2_readData_readReg_L0+884
0x8376	0x0000 ;?ICSirgrid2_readData_readReg_L0+886
0x8378	0x0000 ;?ICSirgrid2_readData_readReg_L0+888
0x837A	0x0000 ;?ICSirgrid2_readData_readReg_L0+890
0x837C	0x0000 ;?ICSirgrid2_readData_readReg_L0+892
0x837E	0x0000 ;?ICSirgrid2_readData_readReg_L0+894
0x8380	0x0000 ;?ICSirgrid2_readData_readReg_L0+896
0x8382	0x0000 ;?ICSirgrid2_readData_readReg_L0+898
0x8384	0x0000 ;?ICSirgrid2_readData_readReg_L0+900
0x8386	0x0000 ;?ICSirgrid2_readData_readReg_L0+902
0x8388	0x0000 ;?ICSirgrid2_readData_readReg_L0+904
0x838A	0x0000 ;?ICSirgrid2_readData_readReg_L0+906
0x838C	0x0000 ;?ICSirgrid2_readData_readReg_L0+908
0x838E	0x0000 ;?ICSirgrid2_readData_readReg_L0+910
0x8390	0x0000 ;?ICSirgrid2_readData_readReg_L0+912
0x8392	0x0000 ;?ICSirgrid2_readData_readReg_L0+914
0x8394	0x0000 ;?ICSirgrid2_readData_readReg_L0+916
0x8396	0x0000 ;?ICSirgrid2_readData_readReg_L0+918
0x8398	0x0000 ;?ICSirgrid2_readData_readReg_L0+920
0x839A	0x0000 ;?ICSirgrid2_readData_readReg_L0+922
0x839C	0x0000 ;?ICSirgrid2_readData_readReg_L0+924
0x839E	0x0000 ;?ICSirgrid2_readData_readReg_L0+926
0x83A0	0x0000 ;?ICSirgrid2_readData_readReg_L0+928
0x83A2	0x0000 ;?ICSirgrid2_readData_readReg_L0+930
0x83A4	0x0000 ;?ICSirgrid2_readData_readReg_L0+932
0x83A6	0x0000 ;?ICSirgrid2_readData_readReg_L0+934
0x83A8	0x0000 ;?ICSirgrid2_readData_readReg_L0+936
0x83AA	0x0000 ;?ICSirgrid2_readData_readReg_L0+938
0x83AC	0x0000 ;?ICSirgrid2_readData_readReg_L0+940
0x83AE	0x0000 ;?ICSirgrid2_readData_readReg_L0+942
0x83B0	0x0000 ;?ICSirgrid2_readData_readReg_L0+944
0x83B2	0x0000 ;?ICSirgrid2_readData_readReg_L0+946
0x83B4	0x0000 ;?ICSirgrid2_readData_readReg_L0+948
0x83B6	0x0000 ;?ICSirgrid2_readData_readReg_L0+950
0x83B8	0x0000 ;?ICSirgrid2_readData_readReg_L0+952
0x83BA	0x0000 ;?ICSirgrid2_readData_readReg_L0+954
0x83BC	0x0000 ;?ICSirgrid2_readData_readReg_L0+956
0x83BE	0x0000 ;?ICSirgrid2_readData_readReg_L0+958
0x83C0	0x0000 ;?ICSirgrid2_readData_readReg_L0+960
0x83C2	0x0000 ;?ICSirgrid2_readData_readReg_L0+962
0x83C4	0x0000 ;?ICSirgrid2_readData_readReg_L0+964
0x83C6	0x0000 ;?ICSirgrid2_readData_readReg_L0+966
0x83C8	0x0000 ;?ICSirgrid2_readData_readReg_L0+968
0x83CA	0x0000 ;?ICSirgrid2_readData_readReg_L0+970
0x83CC	0x0000 ;?ICSirgrid2_readData_readReg_L0+972
0x83CE	0x0000 ;?ICSirgrid2_readData_readReg_L0+974
0x83D0	0x0000 ;?ICSirgrid2_readData_readReg_L0+976
0x83D2	0x0000 ;?ICSirgrid2_readData_readReg_L0+978
0x83D4	0x0000 ;?ICSirgrid2_readData_readReg_L0+980
0x83D6	0x0000 ;?ICSirgrid2_readData_readReg_L0+982
0x83D8	0x0000 ;?ICSirgrid2_readData_readReg_L0+984
0x83DA	0x0000 ;?ICSirgrid2_readData_readReg_L0+986
0x83DC	0x0000 ;?ICSirgrid2_readData_readReg_L0+988
0x83DE	0x0000 ;?ICSirgrid2_readData_readReg_L0+990
0x83E0	0x0000 ;?ICSirgrid2_readData_readReg_L0+992
0x83E2	0x0000 ;?ICSirgrid2_readData_readReg_L0+994
0x83E4	0x0000 ;?ICSirgrid2_readData_readReg_L0+996
0x83E6	0x0000 ;?ICSirgrid2_readData_readReg_L0+998
0x83E8	0x0000 ;?ICSirgrid2_readData_readReg_L0+1000
0x83EA	0x0000 ;?ICSirgrid2_readData_readReg_L0+1002
0x83EC	0x0000 ;?ICSirgrid2_readData_readReg_L0+1004
0x83EE	0x0000 ;?ICSirgrid2_readData_readReg_L0+1006
0x83F0	0x0000 ;?ICSirgrid2_readData_readReg_L0+1008
0x83F2	0x0000 ;?ICSirgrid2_readData_readReg_L0+1010
0x83F4	0x0000 ;?ICSirgrid2_readData_readReg_L0+1012
0x83F6	0x0000 ;?ICSirgrid2_readData_readReg_L0+1014
0x83F8	0x0000 ;?ICSirgrid2_readData_readReg_L0+1016
0x83FA	0x0000 ;?ICSirgrid2_readData_readReg_L0+1018
0x83FC	0x0000 ;?ICSirgrid2_readData_readReg_L0+1020
0x83FE	0x0000 ;?ICSirgrid2_readData_readReg_L0+1022
0x8400	0x0000 ;?ICSirgrid2_readData_readReg_L0+1024
0x8402	0x0000 ;?ICSirgrid2_readData_readReg_L0+1026
0x8404	0x0000 ;?ICSirgrid2_readData_readReg_L0+1028
0x8406	0x0000 ;?ICSirgrid2_readData_readReg_L0+1030
0x8408	0x0000 ;?ICSirgrid2_readData_readReg_L0+1032
0x840A	0x0000 ;?ICSirgrid2_readData_readReg_L0+1034
0x840C	0x0000 ;?ICSirgrid2_readData_readReg_L0+1036
0x840E	0x0000 ;?ICSirgrid2_readData_readReg_L0+1038
0x8410	0x0000 ;?ICSirgrid2_readData_readReg_L0+1040
0x8412	0x0000 ;?ICSirgrid2_readData_readReg_L0+1042
0x8414	0x0000 ;?ICSirgrid2_readData_readReg_L0+1044
0x8416	0x0000 ;?ICSirgrid2_readData_readReg_L0+1046
0x8418	0x0000 ;?ICSirgrid2_readData_readReg_L0+1048
0x841A	0x0000 ;?ICSirgrid2_readData_readReg_L0+1050
0x841C	0x0000 ;?ICSirgrid2_readData_readReg_L0+1052
0x841E	0x0000 ;?ICSirgrid2_readData_readReg_L0+1054
0x8420	0x0000 ;?ICSirgrid2_readData_readReg_L0+1056
0x8422	0x0000 ;?ICSirgrid2_readData_readReg_L0+1058
0x8424	0x0000 ;?ICSirgrid2_readData_readReg_L0+1060
0x8426	0x0000 ;?ICSirgrid2_readData_readReg_L0+1062
0x8428	0x0000 ;?ICSirgrid2_readData_readReg_L0+1064
0x842A	0x0000 ;?ICSirgrid2_readData_readReg_L0+1066
0x842C	0x0000 ;?ICSirgrid2_readData_readReg_L0+1068
0x842E	0x0000 ;?ICSirgrid2_readData_readReg_L0+1070
0x8430	0x0000 ;?ICSirgrid2_readData_readReg_L0+1072
0x8432	0x0000 ;?ICSirgrid2_readData_readReg_L0+1074
0x8434	0x0000 ;?ICSirgrid2_readData_readReg_L0+1076
0x8436	0x0000 ;?ICSirgrid2_readData_readReg_L0+1078
0x8438	0x0000 ;?ICSirgrid2_readData_readReg_L0+1080
0x843A	0x0000 ;?ICSirgrid2_readData_readReg_L0+1082
0x843C	0x0000 ;?ICSirgrid2_readData_readReg_L0+1084
0x843E	0x0000 ;?ICSirgrid2_readData_readReg_L0+1086
0x8440	0x0000 ;?ICSirgrid2_readData_readReg_L0+1088
0x8442	0x0000 ;?ICSirgrid2_readData_readReg_L0+1090
0x8444	0x0000 ;?ICSirgrid2_readData_readReg_L0+1092
0x8446	0x0000 ;?ICSirgrid2_readData_readReg_L0+1094
0x8448	0x0000 ;?ICSirgrid2_readData_readReg_L0+1096
0x844A	0x0000 ;?ICSirgrid2_readData_readReg_L0+1098
0x844C	0x0000 ;?ICSirgrid2_readData_readReg_L0+1100
0x844E	0x0000 ;?ICSirgrid2_readData_readReg_L0+1102
0x8450	0x0000 ;?ICSirgrid2_readData_readReg_L0+1104
0x8452	0x0000 ;?ICSirgrid2_readData_readReg_L0+1106
0x8454	0x0000 ;?ICSirgrid2_readData_readReg_L0+1108
0x8456	0x0000 ;?ICSirgrid2_readData_readReg_L0+1110
0x8458	0x0000 ;?ICSirgrid2_readData_readReg_L0+1112
0x845A	0x0000 ;?ICSirgrid2_readData_readReg_L0+1114
0x845C	0x0000 ;?ICSirgrid2_readData_readReg_L0+1116
0x845E	0x0000 ;?ICSirgrid2_readData_readReg_L0+1118
0x8460	0x0000 ;?ICSirgrid2_readData_readReg_L0+1120
0x8462	0x0000 ;?ICSirgrid2_readData_readReg_L0+1122
0x8464	0x0000 ;?ICSirgrid2_readData_readReg_L0+1124
0x8466	0x0000 ;?ICSirgrid2_readData_readReg_L0+1126
0x8468	0x0000 ;?ICSirgrid2_readData_readReg_L0+1128
0x846A	0x0000 ;?ICSirgrid2_readData_readReg_L0+1130
0x846C	0x0000 ;?ICSirgrid2_readData_readReg_L0+1132
0x846E	0x0000 ;?ICSirgrid2_readData_readReg_L0+1134
0x8470	0x0000 ;?ICSirgrid2_readData_readReg_L0+1136
0x8472	0x0000 ;?ICSirgrid2_readData_readReg_L0+1138
0x8474	0x0000 ;?ICSirgrid2_readData_readReg_L0+1140
0x8476	0x0000 ;?ICSirgrid2_readData_readReg_L0+1142
0x8478	0x0000 ;?ICSirgrid2_readData_readReg_L0+1144
0x847A	0x0000 ;?ICSirgrid2_readData_readReg_L0+1146
0x847C	0x0000 ;?ICSirgrid2_readData_readReg_L0+1148
0x847E	0x0000 ;?ICSirgrid2_readData_readReg_L0+1150
0x8480	0x0000 ;?ICSirgrid2_readData_readReg_L0+1152
0x8482	0x0000 ;?ICSirgrid2_readData_readReg_L0+1154
0x8484	0x0000 ;?ICSirgrid2_readData_readReg_L0+1156
0x8486	0x0000 ;?ICSirgrid2_readData_readReg_L0+1158
0x8488	0x0000 ;?ICSirgrid2_readData_readReg_L0+1160
0x848A	0x0000 ;?ICSirgrid2_readData_readReg_L0+1162
0x848C	0x0000 ;?ICSirgrid2_readData_readReg_L0+1164
0x848E	0x0000 ;?ICSirgrid2_readData_readReg_L0+1166
0x8490	0x0000 ;?ICSirgrid2_readData_readReg_L0+1168
0x8492	0x0000 ;?ICSirgrid2_readData_readReg_L0+1170
0x8494	0x0000 ;?ICSirgrid2_readData_readReg_L0+1172
0x8496	0x0000 ;?ICSirgrid2_readData_readReg_L0+1174
0x8498	0x0000 ;?ICSirgrid2_readData_readReg_L0+1176
0x849A	0x0000 ;?ICSirgrid2_readData_readReg_L0+1178
0x849C	0x0000 ;?ICSirgrid2_readData_readReg_L0+1180
0x849E	0x0000 ;?ICSirgrid2_readData_readReg_L0+1182
0x84A0	0x0000 ;?ICSirgrid2_readData_readReg_L0+1184
0x84A2	0x0000 ;?ICSirgrid2_readData_readReg_L0+1186
0x84A4	0x0000 ;?ICSirgrid2_readData_readReg_L0+1188
0x84A6	0x0000 ;?ICSirgrid2_readData_readReg_L0+1190
0x84A8	0x0000 ;?ICSirgrid2_readData_readReg_L0+1192
0x84AA	0x0000 ;?ICSirgrid2_readData_readReg_L0+1194
0x84AC	0x0000 ;?ICSirgrid2_readData_readReg_L0+1196
0x84AE	0x0000 ;?ICSirgrid2_readData_readReg_L0+1198
0x84B0	0x0000 ;?ICSirgrid2_readData_readReg_L0+1200
0x84B2	0x0000 ;?ICSirgrid2_readData_readReg_L0+1202
0x84B4	0x0000 ;?ICSirgrid2_readData_readReg_L0+1204
0x84B6	0x0000 ;?ICSirgrid2_readData_readReg_L0+1206
0x84B8	0x0000 ;?ICSirgrid2_readData_readReg_L0+1208
0x84BA	0x0000 ;?ICSirgrid2_readData_readReg_L0+1210
0x84BC	0x0000 ;?ICSirgrid2_readData_readReg_L0+1212
0x84BE	0x0000 ;?ICSirgrid2_readData_readReg_L0+1214
0x84C0	0x0000 ;?ICSirgrid2_readData_readReg_L0+1216
0x84C2	0x0000 ;?ICSirgrid2_readData_readReg_L0+1218
0x84C4	0x0000 ;?ICSirgrid2_readData_readReg_L0+1220
0x84C6	0x0000 ;?ICSirgrid2_readData_readReg_L0+1222
0x84C8	0x0000 ;?ICSirgrid2_readData_readReg_L0+1224
0x84CA	0x0000 ;?ICSirgrid2_readData_readReg_L0+1226
0x84CC	0x0000 ;?ICSirgrid2_readData_readReg_L0+1228
0x84CE	0x0000 ;?ICSirgrid2_readData_readReg_L0+1230
0x84D0	0x0000 ;?ICSirgrid2_readData_readReg_L0+1232
0x84D2	0x0000 ;?ICSirgrid2_readData_readReg_L0+1234
0x84D4	0x0000 ;?ICSirgrid2_readData_readReg_L0+1236
0x84D6	0x0000 ;?ICSirgrid2_readData_readReg_L0+1238
0x84D8	0x0000 ;?ICSirgrid2_readData_readReg_L0+1240
0x84DA	0x0000 ;?ICSirgrid2_readData_readReg_L0+1242
0x84DC	0x0000 ;?ICSirgrid2_readData_readReg_L0+1244
0x84DE	0x0000 ;?ICSirgrid2_readData_readReg_L0+1246
0x84E0	0x0000 ;?ICSirgrid2_readData_readReg_L0+1248
0x84E2	0x0000 ;?ICSirgrid2_readData_readReg_L0+1250
0x84E4	0x0000 ;?ICSirgrid2_readData_readReg_L0+1252
0x84E6	0x0000 ;?ICSirgrid2_readData_readReg_L0+1254
0x84E8	0x0000 ;?ICSirgrid2_readData_readReg_L0+1256
0x84EA	0x0000 ;?ICSirgrid2_readData_readReg_L0+1258
0x84EC	0x0000 ;?ICSirgrid2_readData_readReg_L0+1260
0x84EE	0x0000 ;?ICSirgrid2_readData_readReg_L0+1262
0x84F0	0x0000 ;?ICSirgrid2_readData_readReg_L0+1264
0x84F2	0x0000 ;?ICSirgrid2_readData_readReg_L0+1266
0x84F4	0x0000 ;?ICSirgrid2_readData_readReg_L0+1268
0x84F6	0x0000 ;?ICSirgrid2_readData_readReg_L0+1270
0x84F8	0x0000 ;?ICSirgrid2_readData_readReg_L0+1272
0x84FA	0x0000 ;?ICSirgrid2_readData_readReg_L0+1274
0x84FC	0x0000 ;?ICSirgrid2_readData_readReg_L0+1276
0x84FE	0x0000 ;?ICSirgrid2_readData_readReg_L0+1278
0x8500	0x0000 ;?ICSirgrid2_readData_readReg_L0+1280
0x8502	0x0000 ;?ICSirgrid2_readData_readReg_L0+1282
0x8504	0x0000 ;?ICSirgrid2_readData_readReg_L0+1284
0x8506	0x0000 ;?ICSirgrid2_readData_readReg_L0+1286
0x8508	0x0000 ;?ICSirgrid2_readData_readReg_L0+1288
0x850A	0x0000 ;?ICSirgrid2_readData_readReg_L0+1290
0x850C	0x0000 ;?ICSirgrid2_readData_readReg_L0+1292
0x850E	0x0000 ;?ICSirgrid2_readData_readReg_L0+1294
0x8510	0x0000 ;?ICSirgrid2_readData_readReg_L0+1296
0x8512	0x0000 ;?ICSirgrid2_readData_readReg_L0+1298
0x8514	0x0000 ;?ICSirgrid2_readData_readReg_L0+1300
0x8516	0x0000 ;?ICSirgrid2_readData_readReg_L0+1302
0x8518	0x0000 ;?ICSirgrid2_readData_readReg_L0+1304
0x851A	0x0000 ;?ICSirgrid2_readData_readReg_L0+1306
0x851C	0x0000 ;?ICSirgrid2_readData_readReg_L0+1308
0x851E	0x0000 ;?ICSirgrid2_readData_readReg_L0+1310
0x8520	0x0000 ;?ICSirgrid2_readData_readReg_L0+1312
0x8522	0x0000 ;?ICSirgrid2_readData_readReg_L0+1314
0x8524	0x0000 ;?ICSirgrid2_readData_readReg_L0+1316
0x8526	0x0000 ;?ICSirgrid2_readData_readReg_L0+1318
0x8528	0x0000 ;?ICSirgrid2_readData_readReg_L0+1320
0x852A	0x0000 ;?ICSirgrid2_readData_readReg_L0+1322
0x852C	0x0000 ;?ICSirgrid2_readData_readReg_L0+1324
0x852E	0x0000 ;?ICSirgrid2_readData_readReg_L0+1326
0x8530	0x0000 ;?ICSirgrid2_readData_readReg_L0+1328
0x8532	0x0000 ;?ICSirgrid2_readData_readReg_L0+1330
0x8534	0x0000 ;?ICSirgrid2_readData_readReg_L0+1332
0x8536	0x0000 ;?ICSirgrid2_readData_readReg_L0+1334
0x8538	0x0000 ;?ICSirgrid2_readData_readReg_L0+1336
0x853A	0x0000 ;?ICSirgrid2_readData_readReg_L0+1338
0x853C	0x0000 ;?ICSirgrid2_readData_readReg_L0+1340
0x853E	0x0000 ;?ICSirgrid2_readData_readReg_L0+1342
0x8540	0x0000 ;?ICSirgrid2_readData_readReg_L0+1344
0x8542	0x0000 ;?ICSirgrid2_readData_readReg_L0+1346
0x8544	0x0000 ;?ICSirgrid2_readData_readReg_L0+1348
0x8546	0x0000 ;?ICSirgrid2_readData_readReg_L0+1350
0x8548	0x0000 ;?ICSirgrid2_readData_readReg_L0+1352
0x854A	0x0000 ;?ICSirgrid2_readData_readReg_L0+1354
0x854C	0x0000 ;?ICSirgrid2_readData_readReg_L0+1356
0x854E	0x0000 ;?ICSirgrid2_readData_readReg_L0+1358
0x8550	0x0000 ;?ICSirgrid2_readData_readReg_L0+1360
0x8552	0x0000 ;?ICSirgrid2_readData_readReg_L0+1362
0x8554	0x0000 ;?ICSirgrid2_readData_readReg_L0+1364
0x8556	0x0000 ;?ICSirgrid2_readData_readReg_L0+1366
0x8558	0x0000 ;?ICSirgrid2_readData_readReg_L0+1368
0x855A	0x0000 ;?ICSirgrid2_readData_readReg_L0+1370
0x855C	0x0000 ;?ICSirgrid2_readData_readReg_L0+1372
0x855E	0x0000 ;?ICSirgrid2_readData_readReg_L0+1374
0x8560	0x0000 ;?ICSirgrid2_readData_readReg_L0+1376
0x8562	0x0000 ;?ICSirgrid2_readData_readReg_L0+1378
0x8564	0x0000 ;?ICSirgrid2_readData_readReg_L0+1380
0x8566	0x0000 ;?ICSirgrid2_readData_readReg_L0+1382
0x8568	0x0000 ;?ICSirgrid2_readData_readReg_L0+1384
0x856A	0x0000 ;?ICSirgrid2_readData_readReg_L0+1386
0x856C	0x0000 ;?ICSirgrid2_readData_readReg_L0+1388
0x856E	0x0000 ;?ICSirgrid2_readData_readReg_L0+1390
0x8570	0x0000 ;?ICSirgrid2_readData_readReg_L0+1392
0x8572	0x0000 ;?ICSirgrid2_readData_readReg_L0+1394
0x8574	0x0000 ;?ICSirgrid2_readData_readReg_L0+1396
0x8576	0x0000 ;?ICSirgrid2_readData_readReg_L0+1398
0x8578	0x0000 ;?ICSirgrid2_readData_readReg_L0+1400
0x857A	0x0000 ;?ICSirgrid2_readData_readReg_L0+1402
0x857C	0x0000 ;?ICSirgrid2_readData_readReg_L0+1404
0x857E	0x0000 ;?ICSirgrid2_readData_readReg_L0+1406
0x8580	0x0000 ;?ICSirgrid2_readData_readReg_L0+1408
0x8582	0x0000 ;?ICSirgrid2_readData_readReg_L0+1410
0x8584	0x0000 ;?ICSirgrid2_readData_readReg_L0+1412
0x8586	0x0000 ;?ICSirgrid2_readData_readReg_L0+1414
0x8588	0x0000 ;?ICSirgrid2_readData_readReg_L0+1416
0x858A	0x0000 ;?ICSirgrid2_readData_readReg_L0+1418
0x858C	0x0000 ;?ICSirgrid2_readData_readReg_L0+1420
0x858E	0x0000 ;?ICSirgrid2_readData_readReg_L0+1422
0x8590	0x0000 ;?ICSirgrid2_readData_readReg_L0+1424
0x8592	0x0000 ;?ICSirgrid2_readData_readReg_L0+1426
0x8594	0x0000 ;?ICSirgrid2_readData_readReg_L0+1428
0x8596	0x0000 ;?ICSirgrid2_readData_readReg_L0+1430
0x8598	0x0000 ;?ICSirgrid2_readData_readReg_L0+1432
0x859A	0x0000 ;?ICSirgrid2_readData_readReg_L0+1434
0x859C	0x0000 ;?ICSirgrid2_readData_readReg_L0+1436
0x859E	0x0000 ;?ICSirgrid2_readData_readReg_L0+1438
0x85A0	0x0000 ;?ICSirgrid2_readData_readReg_L0+1440
0x85A2	0x0000 ;?ICSirgrid2_readData_readReg_L0+1442
0x85A4	0x0000 ;?ICSirgrid2_readData_readReg_L0+1444
0x85A6	0x0000 ;?ICSirgrid2_readData_readReg_L0+1446
0x85A8	0x0000 ;?ICSirgrid2_readData_readReg_L0+1448
0x85AA	0x0000 ;?ICSirgrid2_readData_readReg_L0+1450
0x85AC	0x0000 ;?ICSirgrid2_readData_readReg_L0+1452
0x85AE	0x0000 ;?ICSirgrid2_readData_readReg_L0+1454
0x85B0	0x0000 ;?ICSirgrid2_readData_readReg_L0+1456
0x85B2	0x0000 ;?ICSirgrid2_readData_readReg_L0+1458
0x85B4	0x0000 ;?ICSirgrid2_readData_readReg_L0+1460
0x85B6	0x0000 ;?ICSirgrid2_readData_readReg_L0+1462
0x85B8	0x0000 ;?ICSirgrid2_readData_readReg_L0+1464
0x85BA	0x0000 ;?ICSirgrid2_readData_readReg_L0+1466
0x85BC	0x0000 ;?ICSirgrid2_readData_readReg_L0+1468
0x85BE	0x0000 ;?ICSirgrid2_readData_readReg_L0+1470
0x85C0	0x0000 ;?ICSirgrid2_readData_readReg_L0+1472
0x85C2	0x0000 ;?ICSirgrid2_readData_readReg_L0+1474
0x85C4	0x0000 ;?ICSirgrid2_readData_readReg_L0+1476
0x85C6	0x0000 ;?ICSirgrid2_readData_readReg_L0+1478
0x85C8	0x0000 ;?ICSirgrid2_readData_readReg_L0+1480
0x85CA	0x0000 ;?ICSirgrid2_readData_readReg_L0+1482
0x85CC	0x0000 ;?ICSirgrid2_readData_readReg_L0+1484
0x85CE	0x0000 ;?ICSirgrid2_readData_readReg_L0+1486
0x85D0	0x0000 ;?ICSirgrid2_readData_readReg_L0+1488
0x85D2	0x0000 ;?ICSirgrid2_readData_readReg_L0+1490
0x85D4	0x0000 ;?ICSirgrid2_readData_readReg_L0+1492
0x85D6	0x0000 ;?ICSirgrid2_readData_readReg_L0+1494
0x85D8	0x0000 ;?ICSirgrid2_readData_readReg_L0+1496
0x85DA	0x0000 ;?ICSirgrid2_readData_readReg_L0+1498
0x85DC	0x0000 ;?ICSirgrid2_readData_readReg_L0+1500
0x85DE	0x0000 ;?ICSirgrid2_readData_readReg_L0+1502
0x85E0	0x0000 ;?ICSirgrid2_readData_readReg_L0+1504
0x85E2	0x0000 ;?ICSirgrid2_readData_readReg_L0+1506
0x85E4	0x0000 ;?ICSirgrid2_readData_readReg_L0+1508
0x85E6	0x0000 ;?ICSirgrid2_readData_readReg_L0+1510
0x85E8	0x0000 ;?ICSirgrid2_readData_readReg_L0+1512
0x85EA	0x0000 ;?ICSirgrid2_readData_readReg_L0+1514
0x85EC	0x0000 ;?ICSirgrid2_readData_readReg_L0+1516
0x85EE	0x0000 ;?ICSirgrid2_readData_readReg_L0+1518
0x85F0	0x0000 ;?ICSirgrid2_readData_readReg_L0+1520
0x85F2	0x0000 ;?ICSirgrid2_readData_readReg_L0+1522
0x85F4	0x0000 ;?ICSirgrid2_readData_readReg_L0+1524
0x85F6	0x0000 ;?ICSirgrid2_readData_readReg_L0+1526
0x85F8	0x0000 ;?ICSirgrid2_readData_readReg_L0+1528
0x85FA	0x0000 ;?ICSirgrid2_readData_readReg_L0+1530
0x85FC	0x0000 ;?ICSirgrid2_readData_readReg_L0+1532
0x85FE	0x0000 ;?ICSirgrid2_readData_readReg_L0+1534
0x8600	0x0000 ;?ICSirgrid2_readData_readReg_L0+1536
0x8602	0x0000 ;?ICSirgrid2_readData_readReg_L0+1538
0x8604	0x0000 ;?ICSirgrid2_readData_readReg_L0+1540
0x8606	0x0000 ;?ICSirgrid2_readData_readReg_L0+1542
0x8608	0x0000 ;?ICSirgrid2_readData_readReg_L0+1544
0x860A	0x0000 ;?ICSirgrid2_readData_readReg_L0+1546
0x860C	0x0000 ;?ICSirgrid2_readData_readReg_L0+1548
0x860E	0x0000 ;?ICSirgrid2_readData_readReg_L0+1550
0x8610	0x0000 ;?ICSirgrid2_readData_readReg_L0+1552
0x8612	0x0000 ;?ICSirgrid2_readData_readReg_L0+1554
0x8614	0x0000 ;?ICSirgrid2_readData_readReg_L0+1556
0x8616	0x0000 ;?ICSirgrid2_readData_readReg_L0+1558
0x8618	0x0000 ;?ICSirgrid2_readData_readReg_L0+1560
0x861A	0x0000 ;?ICSirgrid2_readData_readReg_L0+1562
0x861C	0x0000 ;?ICSirgrid2_readData_readReg_L0+1564
0x861E	0x0000 ;?ICSirgrid2_readData_readReg_L0+1566
0x8620	0x0000 ;?ICSirgrid2_readData_readReg_L0+1568
0x8622	0x0000 ;?ICSirgrid2_readData_readReg_L0+1570
0x8624	0x0000 ;?ICSirgrid2_readData_readReg_L0+1572
0x8626	0x0000 ;?ICSirgrid2_readData_readReg_L0+1574
0x8628	0x0000 ;?ICSirgrid2_readData_readReg_L0+1576
0x862A	0x0000 ;?ICSirgrid2_readData_readReg_L0+1578
0x862C	0x0000 ;?ICSirgrid2_readData_readReg_L0+1580
0x862E	0x0000 ;?ICSirgrid2_readData_readReg_L0+1582
0x8630	0x0000 ;?ICSirgrid2_readData_readReg_L0+1584
0x8632	0x0000 ;?ICSirgrid2_readData_readReg_L0+1586
0x8634	0x0000 ;?ICSirgrid2_readData_readReg_L0+1588
0x8636	0x0000 ;?ICSirgrid2_readData_readReg_L0+1590
0x8638	0x0000 ;?ICSirgrid2_readData_readReg_L0+1592
0x863A	0x0000 ;?ICSirgrid2_readData_readReg_L0+1594
0x863C	0x0000 ;?ICSirgrid2_readData_readReg_L0+1596
0x863E	0x0000 ;?ICSirgrid2_readData_readReg_L0+1598
0x8640	0x0000 ;?ICSirgrid2_readData_readReg_L0+1600
0x8642	0x0000 ;?ICSirgrid2_readData_readReg_L0+1602
0x8644	0x0000 ;?ICSirgrid2_readData_readReg_L0+1604
0x8646	0x0000 ;?ICSirgrid2_readData_readReg_L0+1606
0x8648	0x0000 ;?ICSirgrid2_readData_readReg_L0+1608
0x864A	0x0000 ;?ICSirgrid2_readData_readReg_L0+1610
0x864C	0x0000 ;?ICSirgrid2_readData_readReg_L0+1612
0x864E	0x0000 ;?ICSirgrid2_readData_readReg_L0+1614
0x8650	0x0000 ;?ICSirgrid2_readData_readReg_L0+1616
0x8652	0x0000 ;?ICSirgrid2_readData_readReg_L0+1618
0x8654	0x0000 ;?ICSirgrid2_readData_readReg_L0+1620
0x8656	0x0000 ;?ICSirgrid2_readData_readReg_L0+1622
0x8658	0x0000 ;?ICSirgrid2_readData_readReg_L0+1624
0x865A	0x0000 ;?ICSirgrid2_readData_readReg_L0+1626
0x865C	0x0000 ;?ICSirgrid2_readData_readReg_L0+1628
0x865E	0x0000 ;?ICSirgrid2_readData_readReg_L0+1630
0x8660	0x0000 ;?ICSirgrid2_readData_readReg_L0+1632
0x8662	0x0000 ;?ICSirgrid2_readData_readReg_L0+1634
0x8664	0x0000 ;?ICSirgrid2_readData_readReg_L0+1636
0x8666	0x0000 ;?ICSirgrid2_readData_readReg_L0+1638
0x8668	0x0000 ;?ICSirgrid2_readData_readReg_L0+1640
0x866A	0x0000 ;?ICSirgrid2_readData_readReg_L0+1642
0x866C	0x0000 ;?ICSirgrid2_readData_readReg_L0+1644
0x866E	0x0000 ;?ICSirgrid2_readData_readReg_L0+1646
0x8670	0x0000 ;?ICSirgrid2_readData_readReg_L0+1648
0x8672	0x0000 ;?ICSirgrid2_readData_readReg_L0+1650
0x8674	0x0000 ;?ICSirgrid2_readData_readReg_L0+1652
0x8676	0x0000 ;?ICSirgrid2_readData_readReg_L0+1654
0x8678	0x0000 ;?ICSirgrid2_readData_readReg_L0+1656
0x867A	0x0000 ;?ICSirgrid2_readData_readReg_L0+1658
0x867C	0x0000 ;?ICSirgrid2_readData_readReg_L0+1660
0x867E	0x0000 ;?ICSirgrid2_readData_readReg_L0+1662
; end of ?ICSirgrid2_readData_readReg_L0
;Click_IR_Grid2_DSPIC.c,0 :: ?ICS_Ta [4]
0x8680	0x0000 ;?ICS_Ta+0
0x8682	0x0000 ;?ICS_Ta+2
; end of ?ICS_Ta
;__Lib_Conversions.c,0 :: ?ICS?lstr1___Lib_Conversions [4]
0x8684	0x614E ;?ICS?lstr1___Lib_Conversions+0
0x8686	0x004E ;?ICS?lstr1___Lib_Conversions+2
; end of ?ICS?lstr1___Lib_Conversions
;__Lib_Conversions.c,0 :: ?ICS?lstr2___Lib_Conversions [2]
0x8688	0x0030 ;?ICS?lstr2___Lib_Conversions+0
; end of ?ICS?lstr2___Lib_Conversions
;__Lib_Conversions.c,0 :: ?ICS?lstr3___Lib_Conversions [4]
0x868A	0x4E49 ;?ICS?lstr3___Lib_Conversions+0
0x868C	0x0046 ;?ICS?lstr3___Lib_Conversions+2
; end of ?ICS?lstr3___Lib_Conversions
;Click_IR_Grid2_DSPIC.c,0 :: ?ICS?lstr6_Click_IR_Grid2_DSPIC [2]
0x868E	0x007C ;?ICS?lstr6_Click_IR_Grid2_DSPIC+0
; end of ?ICS?lstr6_Click_IR_Grid2_DSPIC
;Click_IR_Grid2_DSPIC.c,0 :: ?ICS?lstr7_Click_IR_Grid2_DSPIC [2]
0x8690	0x0020 ;?ICS?lstr7_Click_IR_Grid2_DSPIC+0
; end of ?ICS?lstr7_Click_IR_Grid2_DSPIC
;Click_IR_Grid2_DSPIC.c,0 :: ?ICS?lstr8_Click_IR_Grid2_DSPIC [2]
0x8692	0x0020 ;?ICS?lstr8_Click_IR_Grid2_DSPIC+0
; end of ?ICS?lstr8_Click_IR_Grid2_DSPIC
;,0 :: _initBlock_8 [71]
; Containing: ?ICS?lstr3_Click_IR_Grid2_DSPIC [23]
;             ?ICS?lstr1_Click_IR_Grid2_DSPIC [22]
;             ?ICS?lstr2_Click_IR_Grid2_DSPIC [26]
0x8694	0x6D41 ;_initBlock_8+0 : ?ICS?lstr3_Click_IR_Grid2_DSPIC at 0x8694
0x8696	0x6962 ;_initBlock_8+2
0x8698	0x6E65 ;_initBlock_8+4
0x869A	0x2074 ;_initBlock_8+6
0x869C	0x6574 ;_initBlock_8+8
0x869E	0x706D ;_initBlock_8+10
0x86A0	0x7265 ;_initBlock_8+12
0x86A2	0x7461 ;_initBlock_8+14
0x86A4	0x7275 ;_initBlock_8+16
0x86A6	0x3A65 ;_initBlock_8+18
0x86A8	0x2020 ;_initBlock_8+20
0x86AA	0x2000 ;_initBlock_8+22 : ?ICS?lstr1_Click_IR_Grid2_DSPIC at 0x86AB
0x86AC	0x2D2D ;_initBlock_8+24
0x86AE	0x202D ;_initBlock_8+26
0x86B0	0x7953 ;_initBlock_8+28
0x86B2	0x7473 ;_initBlock_8+30
0x86B4	0x6D65 ;_initBlock_8+32
0x86B6	0x4920 ;_initBlock_8+34
0x86B8	0x696E ;_initBlock_8+36
0x86BA	0x2074 ;_initBlock_8+38
0x86BC	0x2D2D ;_initBlock_8+40
0x86BE	0x202D ;_initBlock_8+42
0x86C0	0x2D00 ;_initBlock_8+44 : ?ICS?lstr2_Click_IR_Grid2_DSPIC at 0x86C1
0x86C2	0x2D2D ;_initBlock_8+46
0x86C4	0x5320 ;_initBlock_8+48
0x86C6	0x6174 ;_initBlock_8+50
0x86C8	0x7472 ;_initBlock_8+52
0x86CA	0x6D20 ;_initBlock_8+54
0x86CC	0x6165 ;_initBlock_8+56
0x86CE	0x7573 ;_initBlock_8+58
0x86D0	0x6572 ;_initBlock_8+60
0x86D2	0x656D ;_initBlock_8+62
0x86D4	0x746E ;_initBlock_8+64
0x86D6	0x2D20 ;_initBlock_8+66
0x86D8	0x2D2D ;_initBlock_8+68
0x86DA	0x00 ;_initBlock_8+70
; end of _initBlock_8
;easypicfusion_v7_P33FJ256GP710A.c,47 :: __MIKROBUS1_GPIO [48]
0x86DC	0xFFFF ;__MIKROBUS1_GPIO+0
0x86DE	0xFFFF ;__MIKROBUS1_GPIO+2
0x86E0	0xFFFF ;__MIKROBUS1_GPIO+4
0x86E2	0xFFFF ;__MIKROBUS1_GPIO+6
0x86E4	0xFFFF ;__MIKROBUS1_GPIO+8
0x86E6	0xFFFF ;__MIKROBUS1_GPIO+10
0x86E8	0xFFFF ;__MIKROBUS1_GPIO+12
0x86EA	0xFFFF ;__MIKROBUS1_GPIO+14
0x86EC	0xFFFF ;__MIKROBUS1_GPIO+16
0x86EE	0xFFFF ;__MIKROBUS1_GPIO+18
0x86F0	0xFFFF ;__MIKROBUS1_GPIO+20
0x86F2	0xFFFF ;__MIKROBUS1_GPIO+22
0x86F4	0xFFFF ;__MIKROBUS1_GPIO+24
0x86F6	0xFFFF ;__MIKROBUS1_GPIO+26
0x86F8	0xFFFF ;__MIKROBUS1_GPIO+28
0x86FA	0xFFFF ;__MIKROBUS1_GPIO+30
0x86FC	0xFFFF ;__MIKROBUS1_GPIO+32
0x86FE	0xFFFF ;__MIKROBUS1_GPIO+34
0x8700	0xFFFF ;__MIKROBUS1_GPIO+36
0x8702	0xFFFF ;__MIKROBUS1_GPIO+38
0x8704	0xFFFF ;__MIKROBUS1_GPIO+40
0x8706	0xFFFF ;__MIKROBUS1_GPIO+42
0x8708	0xFFFF ;__MIKROBUS1_GPIO+44
0x870A	0xFFFF ;__MIKROBUS1_GPIO+46
; end of __MIKROBUS1_GPIO
;Click_IR_Grid2_DSPIC.c,0 :: ?ICS?lstr4_Click_IR_Grid2_DSPIC [2]
0x870C	0x0020 ;?ICS?lstr4_Click_IR_Grid2_DSPIC+0
; end of ?ICS?lstr4_Click_IR_Grid2_DSPIC
;Click_IR_Grid2_DSPIC.c,0 :: ?ICS?lstr5_Click_IR_Grid2_DSPIC [39]
0x870E	0x2D2D ;?ICS?lstr5_Click_IR_Grid2_DSPIC+0
0x8710	0x202D ;?ICS?lstr5_Click_IR_Grid2_DSPIC+2
0x8712	0x6950 ;?ICS?lstr5_Click_IR_Grid2_DSPIC+4
0x8714	0x6578 ;?ICS?lstr5_Click_IR_Grid2_DSPIC+6
0x8716	0x206C ;?ICS?lstr5_Click_IR_Grid2_DSPIC+8
0x8718	0x6574 ;?ICS?lstr5_Click_IR_Grid2_DSPIC+10
0x871A	0x706D ;?ICS?lstr5_Click_IR_Grid2_DSPIC+12
0x871C	0x7265 ;?ICS?lstr5_Click_IR_Grid2_DSPIC+14
0x871E	0x7461 ;?ICS?lstr5_Click_IR_Grid2_DSPIC+16
0x8720	0x7275 ;?ICS?lstr5_Click_IR_Grid2_DSPIC+18
0x8722	0x2065 ;?ICS?lstr5_Click_IR_Grid2_DSPIC+20
0x8724	0x616D ;?ICS?lstr5_Click_IR_Grid2_DSPIC+22
0x8726	0x7274 ;?ICS?lstr5_Click_IR_Grid2_DSPIC+24
0x8728	0x7869 ;?ICS?lstr5_Click_IR_Grid2_DSPIC+26
0x872A	0x3320 ;?ICS?lstr5_Click_IR_Grid2_DSPIC+28
0x872C	0x7832 ;?ICS?lstr5_Click_IR_Grid2_DSPIC+30
0x872E	0x3432 ;?ICS?lstr5_Click_IR_Grid2_DSPIC+32
0x8730	0x2D20 ;?ICS?lstr5_Click_IR_Grid2_DSPIC+34
0x8732	0x2D2D ;?ICS?lstr5_Click_IR_Grid2_DSPIC+36
0x8734	0x00 ;?ICS?lstr5_Click_IR_Grid2_DSPIC+38
; end of ?ICS?lstr5_Click_IR_Grid2_DSPIC
;__irgrid2_Driver.c,176 :: __irgrid2_Driver__exp_coeff_L0 [40]
0x8736	0x0000 ;__irgrid2_Driver__exp_coeff_L0+0
0x8738	0x3F80 ;__irgrid2_Driver__exp_coeff_L0+2
0x873A	0x7218 ;__irgrid2_Driver__exp_coeff_L0+4
0x873C	0x3F31 ;__irgrid2_Driver__exp_coeff_L0+6
0x873E	0xFDF0 ;__irgrid2_Driver__exp_coeff_L0+8
0x8740	0x3E75 ;__irgrid2_Driver__exp_coeff_L0+10
0x8742	0x5847 ;__irgrid2_Driver__exp_coeff_L0+12
0x8744	0x3D63 ;__irgrid2_Driver__exp_coeff_L0+14
0x8746	0x9558 ;__irgrid2_Driver__exp_coeff_L0+16
0x8748	0x3C1D ;__irgrid2_Driver__exp_coeff_L0+18
0x874A	0xC482 ;__irgrid2_Driver__exp_coeff_L0+20
0x874C	0x3AAE ;__irgrid2_Driver__exp_coeff_L0+22
0x874E	0x78A8 ;__irgrid2_Driver__exp_coeff_L0+24
0x8750	0x3921 ;__irgrid2_Driver__exp_coeff_L0+26
0x8752	0x93EF ;__irgrid2_Driver__exp_coeff_L0+28
0x8754	0x3780 ;__irgrid2_Driver__exp_coeff_L0+30
0x8756	0x92A0 ;__irgrid2_Driver__exp_coeff_L0+32
0x8758	0x35A7 ;__irgrid2_Driver__exp_coeff_L0+34
0x875A	0x5646 ;__irgrid2_Driver__exp_coeff_L0+36
0x875C	0x3415 ;__irgrid2_Driver__exp_coeff_L0+38
; end of __irgrid2_Driver__exp_coeff_L0
;__irgrid2_Driver.c,215 :: __irgrid2_Driver__log_coeff_L0 [36]
0x875E	0xE6FF ;__irgrid2_Driver__log_coeff_L0+0
0x8760	0x2EDB ;__irgrid2_Driver__log_coeff_L0+2
0x8762	0xFFC4 ;__irgrid2_Driver__log_coeff_L0+4
0x8764	0x3F7F ;__irgrid2_Driver__log_coeff_L0+6
0x8766	0xEF80 ;__irgrid2_Driver__log_coeff_L0+8
0x8768	0xBEFF ;__irgrid2_Driver__log_coeff_L0+10
0x876A	0xE190 ;__irgrid2_Driver__log_coeff_L0+12
0x876C	0x3EA9 ;__irgrid2_Driver__log_coeff_L0+14
0x876E	0x82EC ;__irgrid2_Driver__log_coeff_L0+16
0x8770	0xBE76 ;__irgrid2_Driver__log_coeff_L0+18
0x8772	0xAD82 ;__irgrid2_Driver__log_coeff_L0+20
0x8774	0x3E2B ;__irgrid2_Driver__log_coeff_L0+22
0x8776	0x3C0E ;__irgrid2_Driver__log_coeff_L0+24
0x8778	0xBDC3 ;__irgrid2_Driver__log_coeff_L0+26
0x877A	0xD187 ;__irgrid2_Driver__log_coeff_L0+28
0x877C	0x3D13 ;__irgrid2_Driver__log_coeff_L0+30
0x877E	0x7841 ;__irgrid2_Driver__log_coeff_L0+32
0x8780	0xBBD3 ;__irgrid2_Driver__log_coeff_L0+34
; end of __irgrid2_Driver__log_coeff_L0
;easypicfusion_v7_P33FJ256GP710A.c,15 :: __MIKROBUS1_I2C [10]
0x8782	0x096C ;__MIKROBUS1_I2C+0
0x8784	0x09D0 ;__MIKROBUS1_I2C+2
0x8786	0x0BBC ;__MIKROBUS1_I2C+4
0x8788	0x0B7C ;__MIKROBUS1_I2C+6
0x878A	0x09E4 ;__MIKROBUS1_I2C+8
; end of __MIKROBUS1_I2C
;__irgrid2_Driver.c,0 :: ?ICSirgrid2_getPixelTemperature__tr_L0 [4]
0x878C	0x0000 ;?ICSirgrid2_getPixelTemperature__tr_L0+0
0x878E	0x0000 ;?ICSirgrid2_getPixelTemperature__tr_L0+2
; end of ?ICSirgrid2_getPixelTemperature__tr_L0
;__irgrid2_Driver.c,0 :: ?ICSirgrid2_getPixelTemperature__emissivity_L0 [4]
0x8790	0x3333 ;?ICSirgrid2_getPixelTemperature__emissivity_L0+0
0x8792	0x3F73 ;?ICSirgrid2_getPixelTemperature__emissivity_L0+2
; end of ?ICSirgrid2_getPixelTemperature__emissivity_L0
;Click_IR_Grid2_DSPIC.c,3 :: __IRGRID2_I2C_CFG [4]
0x8794	0x1A80 ;__IRGRID2_I2C_CFG+0
0x8796	0x0006 ;__IRGRID2_I2C_CFG+2
; end of __IRGRID2_I2C_CFG
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0200     [114]    __Compare_Fp
0x0272     [364]    __AddSub_FP
0x03DE     [282]    __Mul_FP
0x04F8     [120]    __Float2Longint
0x0570      [10]    __Compare_Ge_Fp
0x057A      [54]    __irgrid2_Driver__eval_poly
0x05B0     [310]    __Div_FP
0x06E6      [14]    __Lib_I2C_12_p24_p33_I2C2_Is_Finished
0x06F4      [14]    __Lib_I2C_12_p24_p33_I2C1_Is_Finished
0x0702      [44]    __irgrid2_Driver__frexp
0x072E      [94]    __irgrid2_Driver__ldexp
0x078C     [182]    __Long2Float
0x0842     [106]    __irgrid2_Driver__floor
0x08AC      [10]    __Compare_Le_Fp
0x08B6      [10]    __Sub_FP
0x08C0      [10]    _UART1_Data_Ready
0x08CA      [12]    _UART1_Tx_Idle
0x08D6      [10]    _UART2_Data_Ready
0x08E0      [12]    _UART2_Read
0x08EC      [74]    _I2C1_Is_Idle
0x0936      [42]    _I2C1_Start
0x0960      [12]    _UART1_Read
0x096C      [42]    _I2C2_Start
0x0996      [12]    _UART2_Tx_Idle
0x09A2      [46]    _I2C1_Read
0x09D0      [20]    _I2C2_Stop
0x09E4      [46]    _I2C2_Read
0x0A12     [252]    __irgrid2_Driver__exp
0x0B0E     [110]    __irgrid2_Driver__log
0x0B7C      [22]    _I2C2_Write
0x0B92      [22]    _I2C1_Write
0x0BA8      [20]    _I2C1_Restart
0x0BBC      [20]    _I2C2_Restart
0x0BD0      [20]    _I2C1_Stop
0x0BE4      [74]    _I2C2_Is_Idle
0x0C2E     [124]    __irgrid2_Driver_hal_i2cRead
0x0CAA     [222]    __irgrid2_Driver__pow
0x0D88      [82]    __Divide_32x32
0x0DDA      [88]    __Modulus_32x32
0x0E32       [4]    _Get_Fosc_Per_Cyc
0x0E36      [10]    _Delay_10ms
0x0E40      [18]    __Multiply_32x32
0x0E52       [6]    _Get_Fosc_kHz
0x0E58      [30]    __Lib_I2C_12_p24_p33_SetI2C2Ptrs
0x0E76      [52]    __irgrid2_Driver_CheckAdjacentPixels
0x0EAA      [10]    _Delay_1us
0x0EB4      [14]    __Lib_I2C_12_p24_p33_I2C2_Wait_For_Idle
0x0EC2      [14]    _Delay_100ms
0x0ED0     [110]    __irgrid2_Driver_hal_i2cWrite
0x0F3E      [18]    __irgrid2_Driver_hal_i2cStart
0x0F50     [370]    __irgrid2_Driver_ExtractKsToParameters
0x10C2      [86]    __irgrid2_Driver_ExtractKsTaParameters
0x1118     [144]    _irgrid2_readData
0x11A8     [740]    __irgrid2_Driver_ExtractAlphaParameters
0x148C      [14]    _UART1_Write
0x149A      [14]    _UART2_Write
0x14A8      [28]    __irgrid2_Driver_ExtractGainParameters
0x14C4      [72]    _I2C2_Init
0x150C      [66]    _irgrid2_writeByte
0x154E      [20]    __irgrid2_Driver_ExtractResolutionParameters
0x1562      [80]    __irgrid2_Driver_ExtractTgcParameters
0x15B2     [214]    _irgrid2_GetVdd
0x1688     [370]    __irgrid2_Driver_ExtractCILCParameters
0x17FA     [612]    __irgrid2_Driver_ExtractCPParameters
0x1A5E     [258]    _UART2_Init
0x1B60     [334]    __irgrid2_Driver_ExtractDeviatingPixels
0x1CAE     [258]    _UART1_Init
0x1DB0     [320]    __irgrid2_Driver_ExtractKvPixelParameters
0x1EF0      [56]    __irgrid2_Driver_ExtractVDDParameters
0x1F28     [262]    __irgrid2_Driver_ExtractPTATParameters
0x202E      [18]    __irgrid2_Driver_CheckEEPROMValid
0x2040     [508]    __irgrid2_Driver_ExtractKtaPixelParameters
0x223C     [490]    __irgrid2_Driver_ExtractOffsetParameters
0x2426     [138]    _irgrid2_getFrameData
0x24B0      [52]    _irgrid2_setRefreshRate
0x24E4      [30]    _strcpy
0x2502      [10]    easypicfusion_v7_P33FJ256GP710A__log_init1
0x250C      [16]    easypicfusion_v7_P33FJ256GP710A__i2cInit_2
0x251C      [80]    _irgrid2_ExtractParameters
0x256C      [10]    easypicfusion_v7_P33FJ256GP710A__log_initUartA
0x2576      [10]    easypicfusion_v7_P33FJ256GP710A__log_initUartB
0x2580      [14]    easypicfusion_v7_P33FJ256GP710A__log_write
0x258E       [4]    easypicfusion_v7_P33FJ256GP710A__log_init2
0x2592      [22]    _irgrid2_readEEPROM
0x25A8      [16]    easypicfusion_v7_P33FJ256GP710A__i2cInit_1
0x25B8     [292]    _irgrid2_GetTa
0x26DC       [2]    __irgrid2_Driver_hal_gpioMap
0x26DE    [2062]    _irgrid2_CalculateTo
0x2EEC      [30]    __irgrid2_Driver_hal_i2cMap
0x2F0A     [558]    _FloatToStr
0x3138      [90]    _irgrid2_getPixelTemperature
0x3192      [10]    _Delay_1ms
0x319C      [16]    _irgrid2_i2cDriverInit
0x31AC      [26]    _irgrid2_init
0x31C6     [110]    _mikrobus_logWrite
0x3234      [74]    _mikrobus_logInit
0x327E      [34]    _mikrobus_i2cInit
0x32A0      [12]    _Delay_80us
0x32AC     [144]    _applicationTask
0x333C      [32]    _applicationInit
0x335C      [50]    _systemInit
0x338E      [32]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0200       [2]    I2C1RCV
0x0210       [2]    I2C2RCV
0x0214       [2]    I2C2BRG
0x008A       [2]    IFS3
0x0886       [2]    _UART_Rd_Ptr
0x0888       [2]    _UART_Wr_Ptr
0x0086       [2]    IFS1
0x088A       [2]    _I2C_Read_Ptr
0x088C       [2]    _I2C_Restart_Ptr
0x088E       [2]    _I2C_Start_Ptr
0x0890       [2]    _I2C_Write_Ptr
0x0208       [2]    I2C1STAT
0x0202       [2]    I2C1TRN
0x0892       [2]    _I2C_Stop_Ptr
0x0234       [2]    U2TXREG
0x0236       [2]    U2RXREG
0x0228       [2]    U1BRG
0x0224       [2]    U1TXREG
0x0894    [1668]    irgrid2_getPixelTemperature_mlx90640Frame_L0
0x0F18    [1664]    irgrid2_init_eeMLX90640_L0
0x0226       [2]    U1RXREG
0x0230       [2]    U2MODE
0x1598       [2]    _UART_Tx_Idle_Ptr
0x159A       [2]    _UART_Rdy_Ptr
0x0232       [2]    U2STA
0x0222       [2]    U1STA
0x0220       [2]    U1MODE
0x0238       [2]    U2BRG
0x159C       [2]    __irgrid2_Driver_fp_i2cWrite
0x159E       [2]    _logger
0x15A0    [3072]    _pixelTemp
0x21A0     [100]    _demoText
0x2204       [2]    _cnt
0x0206       [2]    I2C1CON
0x0216       [2]    I2C2CON
0x2206       [2]    _I2C_Is_Idle_Ptr
0x0212       [2]    I2C2TRN
0x0218       [2]    I2C2STAT
0x2208       [2]    __irgrid2_Driver_fp_i2cRead
0x220A       [2]    __irgrid2_Driver_fp_i2cStart
0x220C       [2]    __irgrid2_Driver_fp_i2cStop
0x220E       [2]    __irgrid2_Driver_fp_i2cRestart
0x2210   [10858]    __irgrid2_Driver_mlx90640
0x0829       [1]    __irgrid2_Driver__slaveAddress
0x0800       [2]    ?lstr4_Click_IR_Grid2_DSPIC
0x0802      [39]    ?lstr5_Click_IR_Grid2_DSPIC
0x082A       [4]    _Ta
0x082E       [4]    ?lstr1___Lib_Conversions
0x0832       [2]    ?lstr2___Lib_Conversions
0x0834       [4]    ?lstr3___Lib_Conversions
0x0838       [2]    ?lstr6_Click_IR_Grid2_DSPIC
0x083A       [2]    ?lstr7_Click_IR_Grid2_DSPIC
0x083C       [2]    ?lstr8_Click_IR_Grid2_DSPIC
0x083E      [23]    ?lstr3_Click_IR_Grid2_DSPIC
0x0855      [22]    ?lstr1_Click_IR_Grid2_DSPIC
0x086B      [26]    ?lstr2_Click_IR_Grid2_DSPIC
0x0086       [2]    IFS1
0x008A       [2]    IFS3
0x0200       [2]    I2C1RCV
0x0202       [2]    I2C1TRN
0x0206       [2]    I2C1CON
0x0208       [2]    I2C1STAT
0x0210       [2]    I2C2RCV
0x0212       [2]    I2C2TRN
0x0214       [2]    I2C2BRG
0x0216       [2]    I2C2CON
0x0218       [2]    I2C2STAT
0x0220       [2]    U1MODE
0x0222       [2]    U1STA
0x0224       [2]    U1TXREG
0x0226       [2]    U1RXREG
0x0228       [2]    U1BRG
0x0230       [2]    U2MODE
0x0232       [2]    U2STA
0x0234       [2]    U2TXREG
0x0236       [2]    U2RXREG
0x0238       [2]    U2BRG
0x0014       [4]    FARG___irgrid2_Driver__eval_poly_x
0x0018       [2]    FARG___irgrid2_Driver__eval_poly_d
0x001A       [2]    FARG___irgrid2_Driver__eval_poly_n
0x0014       [4]    FARG___irgrid2_Driver__frexp_value
0x0018       [2]    FARG___irgrid2_Driver__frexp_eptr
0x0014       [4]    FARG___irgrid2_Driver__ldexp_value
0x0018       [2]    FARG___irgrid2_Driver__ldexp_newexp
0x0014       [4]    FARG___irgrid2_Driver__floor_x
0x0014       [2]    FARG_I2C1_Read_ack
0x0014       [2]    FARG_I2C2_Read_ack
0x0014       [4]    FARG___irgrid2_Driver__exp_x
0x0014       [4]    FARG___irgrid2_Driver__log_x
0x0014       [1]    FARG_I2C2_Write_data_
0x0014       [1]    FARG_I2C1_Write_data_
0x0014       [1]    FARG___irgrid2_Driver_hal_i2cRead_slaveAddress
0x0016       [2]    FARG___irgrid2_Driver_hal_i2cRead_pBuf
0x0018       [2]    FARG___irgrid2_Driver_hal_i2cRead_nBytes
0x001A       [1]    FARG___irgrid2_Driver_hal_i2cRead_endMode
0x0014       [4]    FARG___irgrid2_Driver__pow_x
0x0018       [4]    FARG___irgrid2_Driver__pow_y
0x0014       [2]    FARG___irgrid2_Driver_CheckAdjacentPixels_pix1
0x0016       [2]    FARG___irgrid2_Driver_CheckAdjacentPixels_pix2
0x0014       [1]    FARG___irgrid2_Driver_hal_i2cWrite_slaveAddress
0x0016       [2]    FARG___irgrid2_Driver_hal_i2cWrite_pBuf
0x0018       [2]    FARG___irgrid2_Driver_hal_i2cWrite_nBytes
0x001A       [1]    FARG___irgrid2_Driver_hal_i2cWrite_endMode
0x0014       [2]    FARG___irgrid2_Driver_ExtractKsToParameters_eeData
0x0016       [2]    FARG___irgrid2_Driver_ExtractKsToParameters_mlx90640
0x0014       [2]    FARG___irgrid2_Driver_ExtractKsTaParameters_eeData
0x0016       [2]    FARG___irgrid2_Driver_ExtractKsTaParameters_mlx90640
0x0014       [2]    FARG_irgrid2_readData_startAddr
0x0016       [2]    FARG_irgrid2_readData_nBytes
0x0018       [2]    FARG_irgrid2_readData_dataOUT
0x0014       [2]    FARG___irgrid2_Driver_ExtractAlphaParameters_eeData
0x0016       [2]    FARG___irgrid2_Driver_ExtractAlphaParameters_mlx90640
0x0014       [2]    FARG_UART1_Write__data
0x0014       [2]    FARG_UART2_Write__data
0x0014       [2]    FARG___irgrid2_Driver_ExtractGainParameters_eeData
0x0016       [2]    FARG___irgrid2_Driver_ExtractGainParameters_mlx90640
0x0014       [4]    FARG_I2C2_Init_scl
0x0014       [2]    FARG_irgrid2_writeByte_reg
0x0016       [2]    FARG_irgrid2_writeByte__data
0x0014       [2]    FARG___irgrid2_Driver_ExtractResolutionParameters_eeData
0x0016       [2]    FARG___irgrid2_Driver_ExtractResolutionParameters_mlx90640
0x0014       [2]    FARG___irgrid2_Driver_ExtractTgcParameters_eeData
0x0016       [2]    FARG___irgrid2_Driver_ExtractTgcParameters_mlx90640
0x0014       [2]    FARG_irgrid2_GetVdd_frameData
0x0016       [2]    FARG_irgrid2_GetVdd_params
0x0014       [2]    FARG___irgrid2_Driver_ExtractCILCParameters_eeData
0x0016       [2]    FARG___irgrid2_Driver_ExtractCILCParameters_mlx90640
0x0014       [2]    FARG___irgrid2_Driver_ExtractCPParameters_eeData
0x0016       [2]    FARG___irgrid2_Driver_ExtractCPParameters_mlx90640
0x0014       [4]    FARG_UART2_Init_baud_rate
0x0014       [2]    FARG___irgrid2_Driver_ExtractDeviatingPixels_eeData
0x0016       [2]    FARG___irgrid2_Driver_ExtractDeviatingPixels_mlx90640
0x0014       [4]    FARG_UART1_Init_baud_rate
0x0014       [2]    FARG___irgrid2_Driver_ExtractKvPixelParameters_eeData
0x0016       [2]    FARG___irgrid2_Driver_ExtractKvPixelParameters_mlx90640
0x0014       [2]    FARG___irgrid2_Driver_ExtractVDDParameters_eeData
0x0016       [2]    FARG___irgrid2_Driver_ExtractVDDParameters_mlx90640
0x0014       [2]    FARG___irgrid2_Driver_ExtractPTATParameters_eeData
0x0016       [2]    FARG___irgrid2_Driver_ExtractPTATParameters_mlx90640
0x0014       [2]    FARG___irgrid2_Driver_CheckEEPROMValid_eeData
0x0014       [2]    FARG___irgrid2_Driver_ExtractKtaPixelParameters_eeData
0x0016       [2]    FARG___irgrid2_Driver_ExtractKtaPixelParameters_mlx90640
0x0014       [2]    FARG___irgrid2_Driver_ExtractOffsetParameters_eeData
0x0016       [2]    FARG___irgrid2_Driver_ExtractOffsetParameters_mlx90640
0x0014       [2]    FARG_irgrid2_getFrameData_frameData
0x0014       [1]    FARG_irgrid2_setRefreshRate_refreshRate
0x0014       [2]    FARG_strcpy_to
0x0016       [2]    FARG_strcpy_from
0x0014       [4]    FARG_easypicfusion_v7_P33FJ256GP710A__log_init1_baud
0x0014       [2]    FARG_easypicfusion_v7_P33FJ256GP710A__i2cInit_2_cfg
0x0014       [2]    FARG_irgrid2_ExtractParameters_eeData
0x0016       [2]    FARG_irgrid2_ExtractParameters_mlx90640
0x0014       [4]    FARG_easypicfusion_v7_P33FJ256GP710A__log_initUartA_baud
0x0014       [4]    FARG_easypicfusion_v7_P33FJ256GP710A__log_initUartB_baud
0x0014       [2]    FARG_easypicfusion_v7_P33FJ256GP710A__log_write_data_
0x0014       [4]    FARG_easypicfusion_v7_P33FJ256GP710A__log_init2_baud
0x0014       [2]    FARG_irgrid2_readEEPROM_eeData
0x0014       [2]    FARG_easypicfusion_v7_P33FJ256GP710A__i2cInit_1_cfg
0x0014       [2]    FARG_irgrid2_GetTa_frameData
0x0016       [2]    FARG_irgrid2_GetTa_params
0x0014       [2]    FARG___irgrid2_Driver_hal_gpioMap_gpioObj
0x0014       [2]    FARG_irgrid2_CalculateTo_frameData
0x0016       [2]    FARG_irgrid2_CalculateTo_params
0x0018       [4]    FARG_irgrid2_CalculateTo_emissivity
0x0014       [2]    FARG___irgrid2_Driver_hal_i2cMap_i2cObj
0x0014       [4]    FARG_FloatToStr_fnum
0x0018       [2]    FARG_FloatToStr_str
0x0014       [2]    FARG_irgrid2_getPixelTemperature_Ta
0x0016       [2]    FARG_irgrid2_getPixelTemperature_pixelTemp
0x0014       [2]    FARG_irgrid2_i2cDriverInit_gpioObj
0x0016       [2]    FARG_irgrid2_i2cDriverInit_i2cObj
0x0018       [1]    FARG_irgrid2_i2cDriverInit_slave
0x0014       [2]    FARG_mikrobus_logWrite_data_
0x0016       [1]    FARG_mikrobus_logWrite_format
0x0014       [1]    FARG_mikrobus_logInit_port
0x0016       [4]    FARG_mikrobus_logInit_baud
0x0014       [1]    FARG_mikrobus_i2cInit_bus
0x0016       [2]    FARG_mikrobus_i2cInit_cfg
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x8000    [1664]    ?ICSirgrid2_readData_readReg_L0
0x8680       [4]    ?ICS_Ta
0x8684       [4]    ?ICS?lstr1___Lib_Conversions
0x8688       [2]    ?ICS?lstr2___Lib_Conversions
0x868A       [4]    ?ICS?lstr3___Lib_Conversions
0x868E       [2]    ?ICS?lstr6_Click_IR_Grid2_DSPIC
0x8690       [2]    ?ICS?lstr7_Click_IR_Grid2_DSPIC
0x8692       [2]    ?ICS?lstr8_Click_IR_Grid2_DSPIC
0x8694      [23]    ?ICS?lstr3_Click_IR_Grid2_DSPIC
0x86AB      [22]    ?ICS?lstr1_Click_IR_Grid2_DSPIC
0x86C1      [26]    ?ICS?lstr2_Click_IR_Grid2_DSPIC
0x86DC      [48]    __MIKROBUS1_GPIO
0x870C       [2]    ?ICS?lstr4_Click_IR_Grid2_DSPIC
0x870E      [39]    ?ICS?lstr5_Click_IR_Grid2_DSPIC
0x8736      [40]    __irgrid2_Driver__exp_coeff_L0
0x875E      [36]    __irgrid2_Driver__log_coeff_L0
0x8782      [10]    __MIKROBUS1_I2C
0x878C       [4]    ?ICSirgrid2_getPixelTemperature__tr_L0
0x8790       [4]    ?ICSirgrid2_getPixelTemperature__emissivity_L0
0x8794       [4]    __IRGRID2_I2C_CFG
