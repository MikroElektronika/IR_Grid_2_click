;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 28.8.2018. 14:56:00
;----------------------------------------------

;Address Opcode 	ASM
____SysVT:
0x0000	0xFFFC2000  	536936444
0x0004	0x481D0000  	18461
0x0008	0x48150000  	18453
0x000C	0x48150000  	18453
0x0010	0x48150000  	18453
0x0014	0x48150000  	18453
0x0018	0x48150000  	18453
0x001C	0x48150000  	18453
0x0020	0x48150000  	18453
0x0024	0x48150000  	18453
0x0028	0x48150000  	18453
0x002C	0x48150000  	18453
0x0030	0x48150000  	18453
0x0034	0x48150000  	18453
0x0038	0x48150000  	18453
0x003C	0x48150000  	18453
0x0040	0x48150000  	18453
0x0044	0x48150000  	18453
0x0048	0x48150000  	18453
0x004C	0x48150000  	18453
0x0050	0x48150000  	18453
0x0054	0x48150000  	18453
0x0058	0x48150000  	18453
0x005C	0x48150000  	18453
0x0060	0x48150000  	18453
0x0064	0x48150000  	18453
0x0068	0x48150000  	18453
0x006C	0x48150000  	18453
0x0070	0x48150000  	18453
0x0074	0x48150000  	18453
0x0078	0x48150000  	18453
0x007C	0x48150000  	18453
0x0080	0x48150000  	18453
0x0084	0x48150000  	18453
0x0088	0x48150000  	18453
0x008C	0x48150000  	18453
0x0090	0x48150000  	18453
0x0094	0x48150000  	18453
0x0098	0x48150000  	18453
0x009C	0x48150000  	18453
0x00A0	0x48150000  	18453
0x00A4	0x48150000  	18453
0x00A8	0x48150000  	18453
0x00AC	0x48150000  	18453
0x00B0	0x48150000  	18453
0x00B4	0x48150000  	18453
0x00B8	0x48150000  	18453
0x00BC	0x48150000  	18453
0x00C0	0x48150000  	18453
0x00C4	0x48150000  	18453
0x00C8	0x48150000  	18453
0x00CC	0x48150000  	18453
0x00D0	0x48150000  	18453
0x00D4	0x48150000  	18453
0x00D8	0x48150000  	18453
0x00DC	0x48150000  	18453
0x00E0	0x48150000  	18453
0x00E4	0x48150000  	18453
0x00E8	0x48150000  	18453
0x00EC	0x48150000  	18453
0x00F0	0x48150000  	18453
0x00F4	0x48150000  	18453
0x00F8	0x48150000  	18453
0x00FC	0x48150000  	18453
0x0100	0x48150000  	18453
0x0104	0x48150000  	18453
0x0108	0x48150000  	18453
0x010C	0x48150000  	18453
0x0110	0x48150000  	18453
0x0114	0x48150000  	18453
0x0118	0x48150000  	18453
0x011C	0x48150000  	18453
0x0120	0x48150000  	18453
0x0124	0x48150000  	18453
0x0128	0x48150000  	18453
0x012C	0x48150000  	18453
0x0130	0x48150000  	18453
0x0134	0x48150000  	18453
0x0138	0x48150000  	18453
0x013C	0x48150000  	18453
0x0140	0x48150000  	18453
0x0144	0x48150000  	18453
0x0148	0x48150000  	18453
0x014C	0x48150000  	18453
; end of ____SysVT
_main:
;Click_IR_Grid2_STM.c, 82 :: 		void main()
0x481C	0xF000F80E  BL	18492
0x4820	0xF000FDB8  BL	21396
0x4824	0xF7FFFFEC  BL	18432
0x4828	0xF000FD74  BL	21268
;Click_IR_Grid2_STM.c, 84 :: 		systemInit();
0x482C	0xF7FFFF28  BL	_systemInit+0
;Click_IR_Grid2_STM.c, 85 :: 		applicationInit();
0x4830	0xF7FFFF4C  BL	_applicationInit+0
;Click_IR_Grid2_STM.c, 87 :: 		while (1)
L_main10:
;Click_IR_Grid2_STM.c, 89 :: 		applicationTask();
0x4834	0xF7FFFF64  BL	_applicationTask+0
;Click_IR_Grid2_STM.c, 90 :: 		}
0x4838	0xE7FC    B	L_main10
;Click_IR_Grid2_STM.c, 91 :: 		}
L_end_main:
L__main_end_loop:
0x483A	0xE7FE    B	L__main_end_loop
; end of _main
___CC2DW:
;__Lib_System_105_107.c, 28 :: 		
0x47EC	0xB081    SUB	SP, SP, #4
;__Lib_System_105_107.c, 30 :: 		
L_loopDW:
;__Lib_System_105_107.c, 31 :: 		
0x47EE	0xF81C9B01  LDRB	R9, [R12], #1
;__Lib_System_105_107.c, 32 :: 		
0x47F2	0xF80B9B01  STRB	R9, [R11], #1
;__Lib_System_105_107.c, 33 :: 		
0x47F6	0xEBBB0F0A  CMP	R11, R10, LSL #0
;__Lib_System_105_107.c, 34 :: 		
0x47FA	0xD1F8    BNE	L_loopDW
;__Lib_System_105_107.c, 36 :: 		
L_end___CC2DW:
0x47FC	0xB001    ADD	SP, SP, #4
0x47FE	0x4770    BX	LR
; end of ___CC2DW
___FillZeros:
;__Lib_System_105_107.c, 70 :: 		
0x4644	0xB081    SUB	SP, SP, #4
;__Lib_System_105_107.c, 72 :: 		
0x4646	0xF04F0900  MOV	R9, #0
;__Lib_System_105_107.c, 73 :: 		
0x464A	0xF04F0C00  MOV	R12, #0
;__Lib_System_105_107.c, 74 :: 		
0x464E	0xEBBD0F0A  CMP	SP, R10, LSL #0
;__Lib_System_105_107.c, 75 :: 		
0x4652	0xDC04    BGT	L_loopFZs
;__Lib_System_105_107.c, 76 :: 		
0x4654	0xEBBD0F0B  CMP	SP, R11, LSL #0
;__Lib_System_105_107.c, 77 :: 		
0x4658	0xDB01    BLT	L_loopFZs
;__Lib_System_105_107.c, 78 :: 		
0x465A	0x46D4    MOV	R12, R10
;__Lib_System_105_107.c, 79 :: 		
0x465C	0x46EA    MOV	R10, SP
;__Lib_System_105_107.c, 80 :: 		
L_loopFZs:
;__Lib_System_105_107.c, 81 :: 		
0x465E	0xF84B9B04  STR	R9, [R11], #4
;__Lib_System_105_107.c, 82 :: 		
0x4662	0xEBBB0F0A  CMP	R11, R10, LSL #0
;__Lib_System_105_107.c, 83 :: 		
0x4666	0xD1FA    BNE	L_loopFZs
;__Lib_System_105_107.c, 84 :: 		
0x4668	0xEBBC0F0A  CMP	R12, R10, LSL #0
;__Lib_System_105_107.c, 85 :: 		
0x466C	0xDD05    BLE	L_norep
;__Lib_System_105_107.c, 86 :: 		
0x466E	0x46E2    MOV	R10, R12
;__Lib_System_105_107.c, 87 :: 		
0x4670	0xF8D9B000  LDR	R11, [R9, #0]
;__Lib_System_105_107.c, 88 :: 		
0x4674	0xF10B0B04  ADD	R11, R11, #4
;__Lib_System_105_107.c, 89 :: 		
0x4678	0xE7F1    B	L_loopFZs
;__Lib_System_105_107.c, 90 :: 		
L_norep:
;__Lib_System_105_107.c, 92 :: 		
L_end___FillZeros:
0x467A	0xB001    ADD	SP, SP, #4
0x467C	0x4770    BX	LR
; end of ___FillZeros
_systemInit:
;Click_IR_Grid2_STM.c, 39 :: 		void systemInit()
0x4680	0xB081    SUB	SP, SP, #4
0x4682	0xF8CDE000  STR	LR, [SP, #0]
;Click_IR_Grid2_STM.c, 41 :: 		Delay_80us();
0x4686	0xF7FFFF63  BL	_Delay_80us+0
;Click_IR_Grid2_STM.c, 42 :: 		mikrobus_i2cInit( _MIKROBUS1, &_IRGRID2_I2C_CFG[0] );
0x468A	0x480E    LDR	R0, [PC, #56]
0x468C	0x4601    MOV	R1, R0
0x468E	0x2000    MOVS	R0, #0
0x4690	0xF7FFFF46  BL	_mikrobus_i2cInit+0
;Click_IR_Grid2_STM.c, 43 :: 		mikrobus_logInit( _LOG_USBUART_A, 115200 );
0x4694	0xF44F31E1  MOV	R1, #115200
0x4698	0x2020    MOVS	R0, #32
0x469A	0xF7FFFDB1  BL	_mikrobus_logInit+0
;Click_IR_Grid2_STM.c, 44 :: 		mikrobus_logWrite(" --- System Init --- ", _LOG_LINE);
0x469E	0x480A    LDR	R0, [PC, #40]
0x46A0	0x2102    MOVS	R1, #2
0x46A2	0xF7FFFF61  BL	_mikrobus_logWrite+0
;Click_IR_Grid2_STM.c, 45 :: 		Delay_ms( 100 );
0x46A6	0xF644777F  MOVW	R7, #20351
0x46AA	0xF2C00712  MOVT	R7, #18
0x46AE	0xBF00    NOP
0x46B0	0xBF00    NOP
L_systemInit0:
0x46B2	0x1E7F    SUBS	R7, R7, #1
0x46B4	0xD1FD    BNE	L_systemInit0
0x46B6	0xBF00    NOP
0x46B8	0xBF00    NOP
0x46BA	0xBF00    NOP
;Click_IR_Grid2_STM.c, 46 :: 		}
L_end_systemInit:
0x46BC	0xF8DDE000  LDR	LR, [SP, #0]
0x46C0	0xB001    ADD	SP, SP, #4
0x46C2	0x4770    BX	LR
0x46C4	0x3F9C0000  	__IRGRID2_I2C_CFG+0
0x46C8	0x001A2000  	?lstr1_Click_IR_Grid2_STM+0
; end of _systemInit
_Delay_80us:
;__Lib_Delays.c, 29 :: 		void Delay_80us() {
;__Lib_Delays.c, 30 :: 		Delay_us(78);
0x4550	0xF24037A7  MOVW	R7, #935
0x4554	0xF2C00700  MOVT	R7, #0
L_Delay_80us8:
0x4558	0x1E7F    SUBS	R7, R7, #1
0x455A	0xD1FD    BNE	L_Delay_80us8
0x455C	0xBF00    NOP
0x455E	0xBF00    NOP
0x4560	0xBF00    NOP
0x4562	0xBF00    NOP
0x4564	0xBF00    NOP
;__Lib_Delays.c, 31 :: 		}
L_end_Delay_80us:
0x4566	0x4770    BX	LR
; end of _Delay_80us
_mikrobus_i2cInit:
;easymx_v7_STM32F107VC.c, 222 :: 		T_mikrobus_ret mikrobus_i2cInit(T_mikrobus_soc bus, const uint32_t *cfg)
; cfg start address is: 4 (R1)
; bus start address is: 0 (R0)
0x4520	0xB081    SUB	SP, SP, #4
0x4522	0xF8CDE000  STR	LR, [SP, #0]
0x4526	0x468B    MOV	R11, R1
; cfg end address is: 4 (R1)
; bus end address is: 0 (R0)
; bus start address is: 0 (R0)
; cfg start address is: 44 (R11)
;easymx_v7_STM32F107VC.c, 224 :: 		switch( bus )
0x4528	0xE009    B	L_mikrobus_i2cInit83
; bus end address is: 0 (R0)
;easymx_v7_STM32F107VC.c, 227 :: 		case _MIKROBUS1 : return _i2cInit_1( cfg );
L_mikrobus_i2cInit85:
0x452A	0x4658    MOV	R0, R11
; cfg end address is: 44 (R11)
0x452C	0xF7FFFD44  BL	easymx_v7_STM32F107VC__i2cInit_1+0
0x4530	0xE00A    B	L_end_mikrobus_i2cInit
;easymx_v7_STM32F107VC.c, 230 :: 		case _MIKROBUS2 : return _i2cInit_2( cfg );
L_mikrobus_i2cInit86:
; cfg start address is: 44 (R11)
0x4532	0x4658    MOV	R0, R11
; cfg end address is: 44 (R11)
0x4534	0xF7FFFD60  BL	easymx_v7_STM32F107VC__i2cInit_2+0
0x4538	0xE006    B	L_end_mikrobus_i2cInit
;easymx_v7_STM32F107VC.c, 244 :: 		default : return _MIKROBUS_ERR_BUS;
L_mikrobus_i2cInit87:
0x453A	0x2001    MOVS	R0, #1
0x453C	0xE004    B	L_end_mikrobus_i2cInit
;easymx_v7_STM32F107VC.c, 245 :: 		}
L_mikrobus_i2cInit83:
; cfg start address is: 44 (R11)
; bus start address is: 0 (R0)
0x453E	0x2800    CMP	R0, #0
0x4540	0xD0F3    BEQ	L_mikrobus_i2cInit85
0x4542	0x2801    CMP	R0, #1
0x4544	0xD0F5    BEQ	L_mikrobus_i2cInit86
; bus end address is: 0 (R0)
; cfg end address is: 44 (R11)
0x4546	0xE7F8    B	L_mikrobus_i2cInit87
;easymx_v7_STM32F107VC.c, 248 :: 		}
L_end_mikrobus_i2cInit:
0x4548	0xF8DDE000  LDR	LR, [SP, #0]
0x454C	0xB001    ADD	SP, SP, #4
0x454E	0x4770    BX	LR
; end of _mikrobus_i2cInit
easymx_v7_STM32F107VC__i2cInit_1:
;__em_f107vc_i2c.c, 29 :: 		static T_mikrobus_ret _i2cInit_1(const uint32_t* cfg)
; cfg start address is: 0 (R0)
0x3FB8	0xB081    SUB	SP, SP, #4
0x3FBA	0xF8CDE000  STR	LR, [SP, #0]
; cfg end address is: 0 (R0)
; cfg start address is: 0 (R0)
;__em_f107vc_i2c.c, 31 :: 		I2C1_Init_Advanced( cfg[0], &_GPIO_MODULE_I2C1_PB67);
0x3FBE	0x6801    LDR	R1, [R0, #0]
; cfg end address is: 0 (R0)
0x3FC0	0x4608    MOV	R0, R1
0x3FC2	0x4904    LDR	R1, [PC, #16]
0x3FC4	0xF7FFF8FC  BL	_I2C1_Init_Advanced+0
;__em_f107vc_i2c.c, 32 :: 		return _MIKROBUS_OK;
0x3FC8	0x2000    MOVS	R0, __MIKROBUS_OK
;__em_f107vc_i2c.c, 33 :: 		}
L_end__i2cInit_1:
0x3FCA	0xF8DDE000  LDR	LR, [SP, #0]
0x3FCE	0xB001    ADD	SP, SP, #4
0x3FD0	0x4770    BX	LR
0x3FD2	0xBF00    NOP
0x3FD4	0x50900000  	__GPIO_MODULE_I2C1_PB67+0
; end of easymx_v7_STM32F107VC__i2cInit_1
_I2C1_Init_Advanced:
;__Lib_I2C_12.c, 544 :: 		
; module start address is: 4 (R1)
; I2C_ClockSpeed start address is: 0 (R0)
0x31C0	0xB081    SUB	SP, SP, #4
0x31C2	0xF8CDE000  STR	LR, [SP, #0]
; module end address is: 4 (R1)
; I2C_ClockSpeed end address is: 0 (R0)
; I2C_ClockSpeed start address is: 0 (R0)
; module start address is: 4 (R1)
;__Lib_I2C_12.c, 545 :: 		
0x31C6	0x460A    MOV	R2, R1
; module end address is: 4 (R1)
0x31C8	0x4601    MOV	R1, R0
; I2C_ClockSpeed end address is: 0 (R0)
0x31CA	0x4803    LDR	R0, [PC, #12]
0x31CC	0xF7FEFD46  BL	_I2Cx_Init_Advanced+0
;__Lib_I2C_12.c, 546 :: 		
L_end_I2C1_Init_Advanced:
0x31D0	0xF8DDE000  LDR	LR, [SP, #0]
0x31D4	0xB001    ADD	SP, SP, #4
0x31D6	0x4770    BX	LR
0x31D8	0x54004000  	I2C1_CR1+0
; end of _I2C1_Init_Advanced
_I2Cx_Init_Advanced:
;__Lib_I2C_12.c, 591 :: 		
; module start address is: 8 (R2)
; I2C_ClockSpeed start address is: 4 (R1)
; I2C_BASE start address is: 0 (R0)
0x1C5C	0xB088    SUB	SP, SP, #32
0x1C5E	0xF8CDE000  STR	LR, [SP, #0]
0x1C62	0x460E    MOV	R6, R1
; module end address is: 8 (R2)
; I2C_ClockSpeed end address is: 4 (R1)
; I2C_BASE end address is: 0 (R0)
; I2C_BASE start address is: 0 (R0)
; I2C_ClockSpeed start address is: 24 (R6)
; module start address is: 8 (R2)
;__Lib_I2C_12.c, 593 :: 		
;__Lib_I2C_12.c, 600 :: 		
0x1C64	0x4B55    LDR	R3, [PC, #340]
0x1C66	0x4298    CMP	R0, R3
0x1C68	0xD10D    BNE	L_I2Cx_Init_Advanced112
;__Lib_I2C_12.c, 601 :: 		
0x1C6A	0x2401    MOVS	R4, #1
0x1C6C	0xB264    SXTB	R4, R4
0x1C6E	0x4B54    LDR	R3, [PC, #336]
0x1C70	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_12.c, 602 :: 		
0x1C72	0x4C54    LDR	R4, [PC, #336]
0x1C74	0x4B54    LDR	R3, [PC, #336]
0x1C76	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_12.c, 603 :: 		
0x1C78	0x4C54    LDR	R4, [PC, #336]
0x1C7A	0x4B55    LDR	R3, [PC, #340]
0x1C7C	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_12.c, 604 :: 		
0x1C7E	0x4C55    LDR	R4, [PC, #340]
0x1C80	0x4B55    LDR	R3, [PC, #340]
0x1C82	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_12.c, 605 :: 		
0x1C84	0xE00F    B	L_I2Cx_Init_Advanced113
L_I2Cx_Init_Advanced112:
;__Lib_I2C_12.c, 606 :: 		
0x1C86	0x4B55    LDR	R3, [PC, #340]
0x1C88	0x4298    CMP	R0, R3
0x1C8A	0xD10C    BNE	L_I2Cx_Init_Advanced114
;__Lib_I2C_12.c, 607 :: 		
0x1C8C	0x2401    MOVS	R4, #1
0x1C8E	0xB264    SXTB	R4, R4
0x1C90	0x4B53    LDR	R3, [PC, #332]
0x1C92	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_12.c, 608 :: 		
0x1C94	0x4C53    LDR	R4, [PC, #332]
0x1C96	0x4B4C    LDR	R3, [PC, #304]
0x1C98	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_12.c, 609 :: 		
0x1C9A	0x4C53    LDR	R4, [PC, #332]
0x1C9C	0x4B4C    LDR	R3, [PC, #304]
0x1C9E	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_12.c, 610 :: 		
0x1CA0	0x4C52    LDR	R4, [PC, #328]
0x1CA2	0x4B4D    LDR	R3, [PC, #308]
0x1CA4	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_12.c, 611 :: 		
L_I2Cx_Init_Advanced114:
L_I2Cx_Init_Advanced113:
;__Lib_I2C_12.c, 612 :: 		
0x1CA6	0x9601    STR	R6, [SP, #4]
; module end address is: 8 (R2)
0x1CA8	0x9002    STR	R0, [SP, #8]
0x1CAA	0x4610    MOV	R0, R2
0x1CAC	0xF7FFFAC0  BL	_GPIO_Alternate_Function_Enable+0
0x1CB0	0x9802    LDR	R0, [SP, #8]
0x1CB2	0x9E01    LDR	R6, [SP, #4]
;__Lib_I2C_12.c, 617 :: 		
0x1CB4	0x1D03    ADDS	R3, R0, #4
0x1CB6	0x681B    LDR	R3, [R3, #0]
;__Lib_I2C_12.c, 619 :: 		
0x1CB8	0xB29C    UXTH	R4, R3
0x1CBA	0xF06F033F  MVN	R3, #63
0x1CBE	0xEA040303  AND	R3, R4, R3, LSL #0
; tmpreg start address is: 20 (R5)
0x1CC2	0xB29D    UXTH	R5, R3
;__Lib_I2C_12.c, 621 :: 		
0x1CC4	0xAB03    ADD	R3, SP, #12
0x1CC6	0x9001    STR	R0, [SP, #4]
0x1CC8	0x4618    MOV	R0, R3
0x1CCA	0xF7FFFA51  BL	_RCC_GetClocksFrequency+0
0x1CCE	0x9801    LDR	R0, [SP, #4]
;__Lib_I2C_12.c, 622 :: 		
; pclk1 start address is: 28 (R7)
0x1CD0	0x9F05    LDR	R7, [SP, #20]
;__Lib_I2C_12.c, 624 :: 		
0x1CD2	0x9C05    LDR	R4, [SP, #20]
0x1CD4	0x4B46    LDR	R3, [PC, #280]
0x1CD6	0xFBB4F3F3  UDIV	R3, R4, R3
; freqrange start address is: 4 (R1)
0x1CDA	0xB299    UXTH	R1, R3
;__Lib_I2C_12.c, 625 :: 		
0x1CDC	0xB29B    UXTH	R3, R3
0x1CDE	0xEA450403  ORR	R4, R5, R3, LSL #0
0x1CE2	0xB2A4    UXTH	R4, R4
; tmpreg end address is: 20 (R5)
;__Lib_I2C_12.c, 627 :: 		
0x1CE4	0x1D03    ADDS	R3, R0, #4
0x1CE6	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_12.c, 631 :: 		
0x1CE8	0x2400    MOVS	R4, #0
0x1CEA	0x6803    LDR	R3, [R0, #0]
0x1CEC	0xF3640300  BFI	R3, R4, #0, #1
0x1CF0	0x6003    STR	R3, [R0, #0]
;__Lib_I2C_12.c, 634 :: 		
; tmpreg start address is: 8 (R2)
0x1CF2	0x2200    MOVS	R2, #0
;__Lib_I2C_12.c, 637 :: 		
0x1CF4	0x4B3F    LDR	R3, [PC, #252]
0x1CF6	0x429E    CMP	R6, R3
0x1CF8	0xD812    BHI	L_I2Cx_Init_Advanced115
;__Lib_I2C_12.c, 640 :: 		
0x1CFA	0x0073    LSLS	R3, R6, #1
; I2C_ClockSpeed end address is: 24 (R6)
0x1CFC	0xFBB7F4F3  UDIV	R4, R7, R3
; pclk1 end address is: 28 (R7)
; result start address is: 16 (R4)
0x1D00	0xB2A4    UXTH	R4, R4
;__Lib_I2C_12.c, 642 :: 		
0x1D02	0x2C04    CMP	R4, #4
0x1D04	0xD202    BCS	L__I2Cx_Init_Advanced144
; result end address is: 16 (R4)
;__Lib_I2C_12.c, 645 :: 		
; result start address is: 12 (R3)
0x1D06	0x2304    MOVS	R3, #4
; result end address is: 12 (R3)
0x1D08	0x461C    MOV	R4, R3
;__Lib_I2C_12.c, 646 :: 		
0x1D0A	0xE7FF    B	L_I2Cx_Init_Advanced116
L__I2Cx_Init_Advanced144:
;__Lib_I2C_12.c, 642 :: 		
;__Lib_I2C_12.c, 646 :: 		
L_I2Cx_Init_Advanced116:
;__Lib_I2C_12.c, 648 :: 		
; result start address is: 16 (R4)
0x1D0C	0xEA420304  ORR	R3, R2, R4, LSL #0
; result end address is: 16 (R4)
0x1D10	0xB29A    UXTH	R2, R3
;__Lib_I2C_12.c, 650 :: 		
0x1D12	0xF2000420  ADDW	R4, R0, #32
0x1D16	0x1C4B    ADDS	R3, R1, #1
0x1D18	0xB29B    UXTH	R3, R3
; freqrange end address is: 4 (R1)
0x1D1A	0x6023    STR	R3, [R4, #0]
;__Lib_I2C_12.c, 651 :: 		
0x1D1C	0xB291    UXTH	R1, R2
0x1D1E	0xE03F    B	L_I2Cx_Init_Advanced117
L_I2Cx_Init_Advanced115:
;__Lib_I2C_12.c, 656 :: 		
; freqrange start address is: 4 (R1)
; pclk1 start address is: 28 (R7)
; I2C_ClockSpeed start address is: 24 (R6)
0x1D20	0x2303    MOVS	R3, #3
0x1D22	0xFB06F403  MUL	R4, R6, R3
0x1D26	0xFBB7F3F4  UDIV	R3, R7, R4
; result start address is: 32 (R8)
0x1D2A	0xFA1FF883  UXTH	R8, R3
;__Lib_I2C_12.c, 659 :: 		
0x1D2E	0x2319    MOVS	R3, #25
0x1D30	0xFB06F503  MUL	R5, R6, R3
0x1D34	0xFBB7F3F5  UDIV	R3, R7, R5
; result25 start address is: 36 (R9)
0x1D38	0xFA1FF983  UXTH	R9, R3
;__Lib_I2C_12.c, 661 :: 		
0x1D3C	0xFB08F404  MUL	R4, R8, R4
; result end address is: 32 (R8)
;__Lib_I2C_12.c, 663 :: 		
0x1D40	0xFB09F305  MUL	R3, R9, R5
; result25 end address is: 36 (R9)
;__Lib_I2C_12.c, 665 :: 		
0x1D44	0x1B3C    SUB	R4, R7, R4
0x1D46	0x1AFB    SUB	R3, R7, R3
0x1D48	0x429C    CMP	R4, R3
0x1D4A	0xD205    BCS	L_I2Cx_Init_Advanced118
;__Lib_I2C_12.c, 666 :: 		
0x1D4C	0x2303    MOVS	R3, #3
0x1D4E	0x4373    MULS	R3, R6, R3
; I2C_ClockSpeed end address is: 24 (R6)
0x1D50	0xFBB7F4F3  UDIV	R4, R7, R3
; pclk1 end address is: 28 (R7)
; result start address is: 16 (R4)
0x1D54	0xB2A4    UXTH	R4, R4
;__Lib_I2C_12.c, 667 :: 		
; result end address is: 16 (R4)
0x1D56	0xE006    B	L_I2Cx_Init_Advanced119
L_I2Cx_Init_Advanced118:
;__Lib_I2C_12.c, 669 :: 		
; pclk1 start address is: 28 (R7)
; I2C_ClockSpeed start address is: 24 (R6)
0x1D58	0x2319    MOVS	R3, #25
0x1D5A	0x4373    MULS	R3, R6, R3
; I2C_ClockSpeed end address is: 24 (R6)
0x1D5C	0xFBB7F4F3  UDIV	R4, R7, R3
; pclk1 end address is: 28 (R7)
; result start address is: 16 (R4)
0x1D60	0xB2A4    UXTH	R4, R4
;__Lib_I2C_12.c, 670 :: 		
0x1D62	0xF4444480  ORR	R4, R4, #16384
; result end address is: 16 (R4)
;__Lib_I2C_12.c, 671 :: 		
L_I2Cx_Init_Advanced119:
;__Lib_I2C_12.c, 674 :: 		
; result start address is: 16 (R4)
0x1D66	0xF64073FF  MOVW	R3, #4095
0x1D6A	0xEA040303  AND	R3, R4, R3, LSL #0
0x1D6E	0xB913    CBNZ	R3, L__I2Cx_Init_Advanced145
;__Lib_I2C_12.c, 677 :: 		
0x1D70	0xF0440401  ORR	R4, R4, #1
; result end address is: 16 (R4)
;__Lib_I2C_12.c, 678 :: 		
0x1D74	0xE7FF    B	L_I2Cx_Init_Advanced120
L__I2Cx_Init_Advanced145:
;__Lib_I2C_12.c, 674 :: 		
;__Lib_I2C_12.c, 678 :: 		
L_I2Cx_Init_Advanced120:
;__Lib_I2C_12.c, 680 :: 		
; result start address is: 16 (R4)
0x1D76	0xF4444300  ORR	R3, R4, #32768
; result end address is: 16 (R4)
0x1D7A	0xB29B    UXTH	R3, R3
0x1D7C	0x431A    ORRS	R2, R3
0x1D7E	0xB292    UXTH	R2, R2
;__Lib_I2C_12.c, 682 :: 		
0x1D80	0xF2000520  ADDW	R5, R0, #32
0x1D84	0xF240132C  MOVW	R3, #300
0x1D88	0xFB01F403  MUL	R4, R1, R3
0x1D8C	0xB2A4    UXTH	R4, R4
; freqrange end address is: 4 (R1)
0x1D8E	0xF24033E8  MOVW	R3, #1000
0x1D92	0xFBB4F3F3  UDIV	R3, R4, R3
0x1D96	0xB29B    UXTH	R3, R3
0x1D98	0x1C5B    ADDS	R3, R3, #1
0x1D9A	0xB29B    UXTH	R3, R3
0x1D9C	0x602B    STR	R3, [R5, #0]
; tmpreg end address is: 8 (R2)
0x1D9E	0xB291    UXTH	R1, R2
;__Lib_I2C_12.c, 683 :: 		
L_I2Cx_Init_Advanced117:
;__Lib_I2C_12.c, 685 :: 		
; tmpreg start address is: 4 (R1)
0x1DA0	0xF200031C  ADDW	R3, R0, #28
0x1DA4	0x6019    STR	R1, [R3, #0]
; tmpreg end address is: 4 (R1)
;__Lib_I2C_12.c, 687 :: 		
0x1DA6	0x2300    MOVS	R3, #0
0x1DA8	0x6003    STR	R3, [R0, #0]
;__Lib_I2C_12.c, 688 :: 		
0x1DAA	0x2401    MOVS	R4, #1
0x1DAC	0x6803    LDR	R3, [R0, #0]
0x1DAE	0xF3640300  BFI	R3, R4, #0, #1
0x1DB2	0x6003    STR	R3, [R0, #0]
; I2C_BASE end address is: 0 (R0)
;__Lib_I2C_12.c, 689 :: 		
L_end_I2Cx_Init_Advanced:
0x1DB4	0xF8DDE000  LDR	LR, [SP, #0]
0x1DB8	0xB008    ADD	SP, SP, #32
0x1DBA	0x4770    BX	LR
0x1DBC	0x54004000  	I2C1_CR1+0
0x1DC0	0x03D44242  	RCC_APB1ENR+0
0x1DC4	0x15B90000  	_I2C1_Start+0
0x1DC8	0x37882000  	_I2C_Start_Ptr+0
0x1DCC	0x13950000  	_I2C1_Read+0
0x1DD0	0x378C2000  	_I2C_Read_Ptr+0
0x1DD4	0x15E90000  	_I2C1_Write+0
0x1DD8	0x37902000  	_I2C_Write_Ptr+0
0x1DDC	0x58004000  	I2C2_CR1+0
0x1DE0	0x03D84242  	RCC_APB1ENR+0
0x1DE4	0x12190000  	_I2C2_Start+0
0x1DE8	0x13710000  	_I2C2_Read+0
0x1DEC	0x160D0000  	_I2C2_Write+0
0x1DF0	0x4240000F  	#1000000
0x1DF4	0x86A00001  	#100000
; end of _I2Cx_Init_Advanced
_RCC_GetClocksFrequency:
;__Lib_System_105_107.c, 452 :: 		
; RCC_Clocks start address is: 0 (R0)
0x1170	0xB082    SUB	SP, SP, #8
0x1172	0xF8CDE000  STR	LR, [SP, #0]
0x1176	0x4603    MOV	R3, R0
; RCC_Clocks end address is: 0 (R0)
; RCC_Clocks start address is: 12 (R3)
;__Lib_System_105_107.c, 455 :: 		
0x1178	0x4619    MOV	R1, R3
0x117A	0x9101    STR	R1, [SP, #4]
0x117C	0xF7FFFF16  BL	_Get_Fosc_kHz+0
0x1180	0xF24031E8  MOVW	R1, #1000
0x1184	0xFB00F201  MUL	R2, R0, R1
0x1188	0x9901    LDR	R1, [SP, #4]
0x118A	0x600A    STR	R2, [R1, #0]
;__Lib_System_105_107.c, 458 :: 		
0x118C	0x491F    LDR	R1, [PC, #124]
0x118E	0x7809    LDRB	R1, [R1, #0]
0x1190	0xF3C11103  UBFX	R1, R1, #4, #4
; tmp start address is: 0 (R0)
0x1194	0xB2C8    UXTB	R0, R1
;__Lib_System_105_107.c, 459 :: 		
0x1196	0x491E    LDR	R1, [PC, #120]
0x1198	0x1809    ADDS	R1, R1, R0
; tmp end address is: 0 (R0)
0x119A	0x7808    LDRB	R0, [R1, #0]
; presc start address is: 0 (R0)
0x119C	0xB2C0    UXTB	R0, R0
;__Lib_System_105_107.c, 461 :: 		
0x119E	0x1D1A    ADDS	R2, R3, #4
0x11A0	0x6819    LDR	R1, [R3, #0]
0x11A2	0x40C1    LSRS	R1, R0
; presc end address is: 0 (R0)
0x11A4	0x6011    STR	R1, [R2, #0]
;__Lib_System_105_107.c, 463 :: 		
0x11A6	0x4919    LDR	R1, [PC, #100]
0x11A8	0x8809    LDRH	R1, [R1, #0]
0x11AA	0xF3C12102  UBFX	R1, R1, #8, #3
; tmp start address is: 0 (R0)
0x11AE	0xB288    UXTH	R0, R1
;__Lib_System_105_107.c, 464 :: 		
0x11B0	0x4917    LDR	R1, [PC, #92]
0x11B2	0x1809    ADDS	R1, R1, R0
; tmp end address is: 0 (R0)
0x11B4	0x7808    LDRB	R0, [R1, #0]
; presc start address is: 0 (R0)
0x11B6	0xB2C0    UXTB	R0, R0
;__Lib_System_105_107.c, 466 :: 		
0x11B8	0xF2030208  ADDW	R2, R3, #8
0x11BC	0x1D19    ADDS	R1, R3, #4
0x11BE	0x6809    LDR	R1, [R1, #0]
0x11C0	0x40C1    LSRS	R1, R0
; presc end address is: 0 (R0)
0x11C2	0x6011    STR	R1, [R2, #0]
;__Lib_System_105_107.c, 468 :: 		
0x11C4	0x4911    LDR	R1, [PC, #68]
0x11C6	0x8809    LDRH	R1, [R1, #0]
0x11C8	0xF3C121C2  UBFX	R1, R1, #11, #3
; tmp start address is: 0 (R0)
0x11CC	0xB288    UXTH	R0, R1
;__Lib_System_105_107.c, 469 :: 		
0x11CE	0x4910    LDR	R1, [PC, #64]
0x11D0	0x1809    ADDS	R1, R1, R0
; tmp end address is: 0 (R0)
0x11D2	0x7808    LDRB	R0, [R1, #0]
; presc start address is: 0 (R0)
0x11D4	0xB2C0    UXTB	R0, R0
;__Lib_System_105_107.c, 471 :: 		
0x11D6	0xF203020C  ADDW	R2, R3, #12
0x11DA	0x1D19    ADDS	R1, R3, #4
0x11DC	0x6809    LDR	R1, [R1, #0]
0x11DE	0x40C1    LSRS	R1, R0
; presc end address is: 0 (R0)
0x11E0	0x6011    STR	R1, [R2, #0]
;__Lib_System_105_107.c, 473 :: 		
0x11E2	0x490A    LDR	R1, [PC, #40]
0x11E4	0x8809    LDRH	R1, [R1, #0]
0x11E6	0xF3C13181  UBFX	R1, R1, #14, #2
; tmp start address is: 0 (R0)
0x11EA	0xB288    UXTH	R0, R1
;__Lib_System_105_107.c, 474 :: 		
0x11EC	0x4909    LDR	R1, [PC, #36]
0x11EE	0x1809    ADDS	R1, R1, R0
; tmp end address is: 0 (R0)
0x11F0	0x7809    LDRB	R1, [R1, #0]
; presc start address is: 0 (R0)
0x11F2	0xB2C8    UXTB	R0, R1
;__Lib_System_105_107.c, 476 :: 		
0x11F4	0xF2030210  ADDW	R2, R3, #16
0x11F8	0xF203010C  ADDW	R1, R3, #12
; RCC_Clocks end address is: 12 (R3)
0x11FC	0x6809    LDR	R1, [R1, #0]
0x11FE	0xFBB1F1F0  UDIV	R1, R1, R0
; presc end address is: 0 (R0)
0x1202	0x6011    STR	R1, [R2, #0]
;__Lib_System_105_107.c, 477 :: 		
L_end_RCC_GetClocksFrequency:
0x1204	0xF8DDE000  LDR	LR, [SP, #0]
0x1208	0xB002    ADD	SP, SP, #8
0x120A	0x4770    BX	LR
0x120C	0x10044002  	RCC_CFGRbits+0
0x1210	0x52EC0000  	__Lib_System_105_107_APBAHBPrescTable+0
0x1214	0x53100000  	__Lib_System_105_107_ADCPrescTable+0
; end of _RCC_GetClocksFrequency
_Get_Fosc_kHz:
;__Lib_Delays.c, 9 :: 		unsigned long Get_Fosc_kHz(){
;__Lib_Delays.c, 10 :: 		return __System_CLOCK_IN_KHZ;
0x0FAC	0x4801    LDR	R0, [PC, #4]
0x0FAE	0x6800    LDR	R0, [R0, #0]
;__Lib_Delays.c, 11 :: 		}
L_end_Get_Fosc_kHz:
0x0FB0	0x4770    BX	LR
0x0FB2	0xBF00    NOP
0x0FB4	0x37782000  	___System_CLOCK_IN_KHZ+0
; end of _Get_Fosc_kHz
_GPIO_Alternate_Function_Enable:
;__Lib_GPIO_32F10x.c, 303 :: 		
; module start address is: 0 (R0)
0x1230	0xB081    SUB	SP, SP, #4
0x1232	0xF8CDE000  STR	LR, [SP, #0]
; module end address is: 0 (R0)
; module start address is: 0 (R0)
;__Lib_GPIO_32F10x.c, 304 :: 		
;__Lib_GPIO_32F10x.c, 305 :: 		
;__Lib_GPIO_32F10x.c, 307 :: 		
0x1236	0x2201    MOVS	R2, #1
0x1238	0xB252    SXTB	R2, R2
0x123A	0x493E    LDR	R1, [PC, #248]
0x123C	0x600A    STR	R2, [R1, #0]
;__Lib_GPIO_32F10x.c, 309 :: 		
0x123E	0xF2000168  ADDW	R1, R0, #104
0x1242	0x680B    LDR	R3, [R1, #0]
0x1244	0xF06F6100  MVN	R1, #134217728
0x1248	0xEA030201  AND	R2, R3, R1, LSL #0
; gpio_remap start address is: 16 (R4)
0x124C	0x4614    MOV	R4, R2
;__Lib_GPIO_32F10x.c, 310 :: 		
0x124E	0xF0036100  AND	R1, R3, #134217728
0x1252	0x0EC9    LSRS	R1, R1, #27
; newstate start address is: 12 (R3)
0x1254	0x460B    MOV	R3, R1
;__Lib_GPIO_32F10x.c, 312 :: 		
0x1256	0xF0024100  AND	R1, R2, #-2147483648
0x125A	0xF1B14F00  CMP	R1, #-2147483648
0x125E	0xD102    BNE	L_GPIO_Alternate_Function_Enable66
;__Lib_GPIO_32F10x.c, 314 :: 		
0x1260	0x4935    LDR	R1, [PC, #212]
; tmpreg start address is: 8 (R2)
0x1262	0x680A    LDR	R2, [R1, #0]
;__Lib_GPIO_32F10x.c, 315 :: 		
; tmpreg end address is: 8 (R2)
0x1264	0xE001    B	L_GPIO_Alternate_Function_Enable67
L_GPIO_Alternate_Function_Enable66:
;__Lib_GPIO_32F10x.c, 318 :: 		
0x1266	0x4935    LDR	R1, [PC, #212]
; tmpreg start address is: 8 (R2)
0x1268	0x680A    LDR	R2, [R1, #0]
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 319 :: 		
L_GPIO_Alternate_Function_Enable67:
;__Lib_GPIO_32F10x.c, 321 :: 		
; tmpreg start address is: 8 (R2)
0x126A	0xF4042170  AND	R1, R4, #983040
0x126E	0x0C09    LSRS	R1, R1, #16
; tmpmask start address is: 24 (R6)
0x1270	0x460E    MOV	R6, R1
;__Lib_GPIO_32F10x.c, 322 :: 		
0x1272	0xF64F71FF  MOVW	R1, #65535
0x1276	0xEA040101  AND	R1, R4, R1, LSL #0
; tmp start address is: 20 (R5)
0x127A	0x460D    MOV	R5, R1
;__Lib_GPIO_32F10x.c, 324 :: 		
0x127C	0xF4041140  AND	R1, R4, #3145728
0x1280	0xF5B11F40  CMP	R1, #3145728
0x1284	0xD10D    BNE	L_GPIO_Alternate_Function_Enable68
; tmpmask end address is: 24 (R6)
;__Lib_GPIO_32F10x.c, 326 :: 		
0x1286	0xF06F6170  MVN	R1, #251658240
0x128A	0xEA020101  AND	R1, R2, R1, LSL #0
; tmpreg end address is: 8 (R2)
; tmpreg start address is: 24 (R6)
0x128E	0x460E    MOV	R6, R1
;__Lib_GPIO_32F10x.c, 327 :: 		
0x1290	0x492A    LDR	R1, [PC, #168]
0x1292	0x680A    LDR	R2, [R1, #0]
0x1294	0xF06F6170  MVN	R1, #251658240
0x1298	0x400A    ANDS	R2, R1
0x129A	0x4928    LDR	R1, [PC, #160]
0x129C	0x600A    STR	R2, [R1, #0]
;__Lib_GPIO_32F10x.c, 328 :: 		
0x129E	0x4632    MOV	R2, R6
; tmpreg end address is: 24 (R6)
0x12A0	0xE016    B	L_GPIO_Alternate_Function_Enable69
L_GPIO_Alternate_Function_Enable68:
;__Lib_GPIO_32F10x.c, 329 :: 		
; tmpreg start address is: 8 (R2)
; tmpmask start address is: 24 (R6)
0x12A2	0xF4041180  AND	R1, R4, #1048576
0x12A6	0xF5B11F80  CMP	R1, #1048576
0x12AA	0xD109    BNE	L_GPIO_Alternate_Function_Enable70
;__Lib_GPIO_32F10x.c, 331 :: 		
0x12AC	0xF04F0103  MOV	R1, #3
0x12B0	0x40B1    LSLS	R1, R6
; tmpmask end address is: 24 (R6)
;__Lib_GPIO_32F10x.c, 332 :: 		
0x12B2	0x43C9    MVN	R1, R1
0x12B4	0xEA020101  AND	R1, R2, R1, LSL #0
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 333 :: 		
0x12B8	0xF0416170  ORR	R1, R1, #251658240
; tmpreg start address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 334 :: 		
0x12BC	0x460A    MOV	R2, R1
; tmpreg end address is: 4 (R1)
0x12BE	0xE007    B	L_GPIO_Alternate_Function_Enable71
L_GPIO_Alternate_Function_Enable70:
;__Lib_GPIO_32F10x.c, 337 :: 		
; tmpreg start address is: 8 (R2)
0x12C0	0x0D61    LSRS	R1, R4, #21
0x12C2	0x0109    LSLS	R1, R1, #4
0x12C4	0xFA05F101  LSL	R1, R5, R1
0x12C8	0x43C9    MVN	R1, R1
0x12CA	0x400A    ANDS	R2, R1
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 338 :: 		
0x12CC	0xF0426270  ORR	R2, R2, #251658240
; tmpreg start address is: 8 (R2)
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 339 :: 		
L_GPIO_Alternate_Function_Enable71:
; tmpreg start address is: 8 (R2)
; tmpreg end address is: 8 (R2)
L_GPIO_Alternate_Function_Enable69:
;__Lib_GPIO_32F10x.c, 341 :: 		
; tmpreg start address is: 8 (R2)
0x12D0	0xB12B    CBZ	R3, L__GPIO_Alternate_Function_Enable106
; newstate end address is: 12 (R3)
;__Lib_GPIO_32F10x.c, 343 :: 		
0x12D2	0x0D61    LSRS	R1, R4, #21
0x12D4	0x0109    LSLS	R1, R1, #4
0x12D6	0xFA05F101  LSL	R1, R5, R1
; tmp end address is: 20 (R5)
0x12DA	0x430A    ORRS	R2, R1
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 344 :: 		
0x12DC	0xE7FF    B	L_GPIO_Alternate_Function_Enable72
L__GPIO_Alternate_Function_Enable106:
;__Lib_GPIO_32F10x.c, 341 :: 		
;__Lib_GPIO_32F10x.c, 344 :: 		
L_GPIO_Alternate_Function_Enable72:
;__Lib_GPIO_32F10x.c, 346 :: 		
; tmpreg start address is: 8 (R2)
0x12DE	0xF0044100  AND	R1, R4, #-2147483648
; gpio_remap end address is: 16 (R4)
0x12E2	0xF1B14F00  CMP	R1, #-2147483648
0x12E6	0xD102    BNE	L_GPIO_Alternate_Function_Enable73
;__Lib_GPIO_32F10x.c, 348 :: 		
0x12E8	0x4913    LDR	R1, [PC, #76]
0x12EA	0x600A    STR	R2, [R1, #0]
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 349 :: 		
0x12EC	0xE001    B	L_GPIO_Alternate_Function_Enable74
L_GPIO_Alternate_Function_Enable73:
;__Lib_GPIO_32F10x.c, 352 :: 		
; tmpreg start address is: 8 (R2)
0x12EE	0x4913    LDR	R1, [PC, #76]
0x12F0	0x600A    STR	R2, [R1, #0]
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 353 :: 		
L_GPIO_Alternate_Function_Enable74:
;__Lib_GPIO_32F10x.c, 356 :: 		
; i start address is: 40 (R10)
0x12F2	0xF2400A00  MOVW	R10, #0
; module end address is: 0 (R0)
; i end address is: 40 (R10)
0x12F6	0x4681    MOV	R9, R0
;__Lib_GPIO_32F10x.c, 357 :: 		
L_GPIO_Alternate_Function_Enable75:
; i start address is: 40 (R10)
; module start address is: 36 (R9)
0x12F8	0xEA4F018A  LSL	R1, R10, #2
0x12FC	0xEB090101  ADD	R1, R9, R1, LSL #0
0x1300	0x6809    LDR	R1, [R1, #0]
0x1302	0xF1B13FFF  CMP	R1, #-1
0x1306	0xD010    BEQ	L_GPIO_Alternate_Function_Enable76
;__Lib_GPIO_32F10x.c, 358 :: 		
0x1308	0xF1090134  ADD	R1, R9, #52
0x130C	0xEA4F038A  LSL	R3, R10, #2
0x1310	0x18C9    ADDS	R1, R1, R3
0x1312	0x6809    LDR	R1, [R1, #0]
0x1314	0x460A    MOV	R2, R1
0x1316	0xEB090103  ADD	R1, R9, R3, LSL #0
0x131A	0x6809    LDR	R1, [R1, #0]
0x131C	0x4608    MOV	R0, R1
0x131E	0x4611    MOV	R1, R2
0x1320	0xF7FFFE4A  BL	__Lib_GPIO_32F10x_GPIO_Configure_Pin+0
;__Lib_GPIO_32F10x.c, 359 :: 		
0x1324	0xF10A0A01  ADD	R10, R10, #1
;__Lib_GPIO_32F10x.c, 360 :: 		
; module end address is: 36 (R9)
; i end address is: 40 (R10)
0x1328	0xE7E6    B	L_GPIO_Alternate_Function_Enable75
L_GPIO_Alternate_Function_Enable76:
;__Lib_GPIO_32F10x.c, 363 :: 		
L_end_GPIO_Alternate_Function_Enable:
0x132A	0xF8DDE000  LDR	LR, [SP, #0]
0x132E	0xB001    ADD	SP, SP, #4
0x1330	0x4770    BX	LR
0x1332	0xBF00    NOP
0x1334	0x03004242  	RCC_APB2ENRbits+0
0x1338	0x001C4001  	AFIO_MAPR2+0
0x133C	0x00044001  	AFIO_MAPR+0
; end of _GPIO_Alternate_Function_Enable
__Lib_GPIO_32F10x_GPIO_Configure_Pin:
;__Lib_GPIO_32F10x.c, 282 :: 		
; config start address is: 4 (R1)
; af_pin start address is: 0 (R0)
0x0FB8	0xB083    SUB	SP, SP, #12
0x0FBA	0xF8CDE000  STR	LR, [SP, #0]
; config end address is: 4 (R1)
; af_pin end address is: 0 (R0)
; af_pin start address is: 0 (R0)
; config start address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 286 :: 		
0x0FBE	0xF00003FF  AND	R3, R0, #255
; af_pin end address is: 0 (R0)
0x0FC2	0x091A    LSRS	R2, R3, #4
; port start address is: 0 (R0)
0x0FC4	0x4610    MOV	R0, R2
;__Lib_GPIO_32F10x.c, 287 :: 		
0x0FC6	0xF003020F  AND	R2, R3, #15
; pin start address is: 12 (R3)
0x0FCA	0x4613    MOV	R3, R2
;__Lib_GPIO_32F10x.c, 290 :: 		
0x0FCC	0xE014    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin57
; port end address is: 0 (R0)
;__Lib_GPIO_32F10x.c, 291 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin59:
0x0FCE	0x4A19    LDR	R2, [PC, #100]
0x0FD0	0x9202    STR	R2, [SP, #8]
0x0FD2	0xE01F    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 292 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin60:
0x0FD4	0x4A18    LDR	R2, [PC, #96]
0x0FD6	0x9202    STR	R2, [SP, #8]
0x0FD8	0xE01C    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 293 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin61:
0x0FDA	0x4A18    LDR	R2, [PC, #96]
0x0FDC	0x9202    STR	R2, [SP, #8]
0x0FDE	0xE019    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 294 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin62:
0x0FE0	0x4A17    LDR	R2, [PC, #92]
0x0FE2	0x9202    STR	R2, [SP, #8]
0x0FE4	0xE016    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 295 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin63:
0x0FE6	0x4A17    LDR	R2, [PC, #92]
0x0FE8	0x9202    STR	R2, [SP, #8]
0x0FEA	0xE013    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 296 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin64:
0x0FEC	0x4A16    LDR	R2, [PC, #88]
0x0FEE	0x9202    STR	R2, [SP, #8]
0x0FF0	0xE010    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 297 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin65:
0x0FF2	0x4A16    LDR	R2, [PC, #88]
0x0FF4	0x9202    STR	R2, [SP, #8]
0x0FF6	0xE00D    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 298 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin57:
; port start address is: 0 (R0)
0x0FF8	0x2800    CMP	R0, #0
0x0FFA	0xD0E8    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin59
0x0FFC	0x2801    CMP	R0, #1
0x0FFE	0xD0E9    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin60
0x1000	0x2802    CMP	R0, #2
0x1002	0xD0EA    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin61
0x1004	0x2803    CMP	R0, #3
0x1006	0xD0EB    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin62
0x1008	0x2804    CMP	R0, #4
0x100A	0xD0EC    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin63
0x100C	0x2805    CMP	R0, #5
0x100E	0xD0ED    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin64
0x1010	0x2806    CMP	R0, #6
0x1012	0xD0EE    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin65
; port end address is: 0 (R0)
L___Lib_GPIO_32F10x_GPIO_Configure_Pin58:
;__Lib_GPIO_32F10x.c, 300 :: 		
0x1014	0x2201    MOVS	R2, #1
0x1016	0xB212    SXTH	R2, R2
0x1018	0x409A    LSLS	R2, R3
; pin end address is: 12 (R3)
0x101A	0xF8AD2004  STRH	R2, [SP, #4]
; config end address is: 4 (R1)
0x101E	0x9802    LDR	R0, [SP, #8]
0x1020	0x460A    MOV	R2, R1
0x1022	0xF8BD1004  LDRH	R1, [SP, #4]
0x1026	0xF7FFF965  BL	_GPIO_Config+0
;__Lib_GPIO_32F10x.c, 301 :: 		
L_end_GPIO_Configure_Pin:
0x102A	0xF8DDE000  LDR	LR, [SP, #0]
0x102E	0xB003    ADD	SP, SP, #12
0x1030	0x4770    BX	LR
0x1032	0xBF00    NOP
0x1034	0x08004001  	#1073809408
0x1038	0x0C004001  	#1073810432
0x103C	0x10004001  	#1073811456
0x1040	0x14004001  	#1073812480
0x1044	0x18004001  	#1073813504
0x1048	0x1C004001  	#1073814528
0x104C	0x20004001  	#1073815552
; end of __Lib_GPIO_32F10x_GPIO_Configure_Pin
_GPIO_Config:
;__Lib_GPIO_32F10x.c, 124 :: 		
; config start address is: 8 (R2)
; pin_mask start address is: 4 (R1)
; port start address is: 0 (R0)
0x02F4	0xB081    SUB	SP, SP, #4
0x02F6	0xF8CDE000  STR	LR, [SP, #0]
0x02FA	0xB28C    UXTH	R4, R1
0x02FC	0x4615    MOV	R5, R2
; config end address is: 8 (R2)
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; pin_mask start address is: 16 (R4)
; config start address is: 20 (R5)
;__Lib_GPIO_32F10x.c, 129 :: 		
0x02FE	0x4B77    LDR	R3, [PC, #476]
0x0300	0xEA000303  AND	R3, R0, R3, LSL #0
; port end address is: 0 (R0)
; port start address is: 24 (R6)
0x0304	0x461E    MOV	R6, R3
;__Lib_GPIO_32F10x.c, 131 :: 		
0x0306	0x4618    MOV	R0, R3
0x0308	0xF7FFFF22  BL	_GPIO_Clk_Enable+0
;__Lib_GPIO_32F10x.c, 134 :: 		
0x030C	0xF1B40FFF  CMP	R4, #255
0x0310	0xD10C    BNE	L_GPIO_Config18
;__Lib_GPIO_32F10x.c, 135 :: 		
0x0312	0x4B73    LDR	R3, [PC, #460]
0x0314	0x429D    CMP	R5, R3
0x0316	0xD103    BNE	L_GPIO_Config19
; pin_mask end address is: 16 (R4)
; config end address is: 20 (R5)
;__Lib_GPIO_32F10x.c, 136 :: 		
0x0318	0xF04F3333  MOV	R3, #858993459
0x031C	0x6033    STR	R3, [R6, #0]
; port end address is: 24 (R6)
;__Lib_GPIO_32F10x.c, 137 :: 		
0x031E	0xE0D9    B	L_end_GPIO_Config
;__Lib_GPIO_32F10x.c, 138 :: 		
L_GPIO_Config19:
;__Lib_GPIO_32F10x.c, 139 :: 		
; port start address is: 24 (R6)
; config start address is: 20 (R5)
; pin_mask start address is: 16 (R4)
0x0320	0x2D42    CMP	R5, #66
0x0322	0xD103    BNE	L_GPIO_Config20
; pin_mask end address is: 16 (R4)
; config end address is: 20 (R5)
;__Lib_GPIO_32F10x.c, 140 :: 		
0x0324	0xF04F3344  MOV	R3, #1145324612
0x0328	0x6033    STR	R3, [R6, #0]
; port end address is: 24 (R6)
;__Lib_GPIO_32F10x.c, 141 :: 		
0x032A	0xE0D3    B	L_end_GPIO_Config
;__Lib_GPIO_32F10x.c, 142 :: 		
L_GPIO_Config20:
;__Lib_GPIO_32F10x.c, 143 :: 		
; port start address is: 24 (R6)
; config start address is: 20 (R5)
; pin_mask start address is: 16 (R4)
L_GPIO_Config18:
;__Lib_GPIO_32F10x.c, 145 :: 		
0x032C	0xF64F73FF  MOVW	R3, #65535
0x0330	0x429C    CMP	R4, R3
0x0332	0xD114    BNE	L_GPIO_Config21
;__Lib_GPIO_32F10x.c, 146 :: 		
0x0334	0x4B6A    LDR	R3, [PC, #424]
0x0336	0x429D    CMP	R5, R3
0x0338	0xD107    BNE	L_GPIO_Config22
; pin_mask end address is: 16 (R4)
; config end address is: 20 (R5)
;__Lib_GPIO_32F10x.c, 147 :: 		
0x033A	0xF04F3333  MOV	R3, #858993459
0x033E	0x6033    STR	R3, [R6, #0]
;__Lib_GPIO_32F10x.c, 148 :: 		
0x0340	0x1D34    ADDS	R4, R6, #4
; port end address is: 24 (R6)
0x0342	0xF04F3333  MOV	R3, #858993459
0x0346	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_32F10x.c, 149 :: 		
0x0348	0xE0C4    B	L_end_GPIO_Config
;__Lib_GPIO_32F10x.c, 150 :: 		
L_GPIO_Config22:
;__Lib_GPIO_32F10x.c, 151 :: 		
; port start address is: 24 (R6)
; config start address is: 20 (R5)
; pin_mask start address is: 16 (R4)
0x034A	0x2D42    CMP	R5, #66
0x034C	0xD107    BNE	L_GPIO_Config23
; pin_mask end address is: 16 (R4)
; config end address is: 20 (R5)
;__Lib_GPIO_32F10x.c, 152 :: 		
0x034E	0xF04F3344  MOV	R3, #1145324612
0x0352	0x6033    STR	R3, [R6, #0]
;__Lib_GPIO_32F10x.c, 153 :: 		
0x0354	0x1D34    ADDS	R4, R6, #4
; port end address is: 24 (R6)
0x0356	0xF04F3344  MOV	R3, #1145324612
0x035A	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_32F10x.c, 154 :: 		
0x035C	0xE0BA    B	L_end_GPIO_Config
;__Lib_GPIO_32F10x.c, 155 :: 		
L_GPIO_Config23:
;__Lib_GPIO_32F10x.c, 156 :: 		
; port start address is: 24 (R6)
; config start address is: 20 (R5)
; pin_mask start address is: 16 (R4)
L_GPIO_Config21:
;__Lib_GPIO_32F10x.c, 158 :: 		
; currentmode start address is: 4 (R1)
0x035E	0x2100    MOVS	R1, #0
;__Lib_GPIO_32F10x.c, 159 :: 		
; speed start address is: 0 (R0)
0x0360	0x2000    MOVS	R0, #0
;__Lib_GPIO_32F10x.c, 161 :: 		
0x0362	0xF0050301  AND	R3, R5, #1
0x0366	0xB10B    CBZ	R3, L_GPIO_Config24
;__Lib_GPIO_32F10x.c, 162 :: 		
0x0368	0x2100    MOVS	R1, #0
0x036A	0xE01D    B	L_GPIO_Config25
L_GPIO_Config24:
;__Lib_GPIO_32F10x.c, 163 :: 		
0x036C	0xF0050302  AND	R3, R5, #2
0x0370	0xB133    CBZ	R3, L_GPIO_Config26
; currentmode end address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 164 :: 		
0x0372	0xF40573C0  AND	R3, R5, #384
0x0376	0xB10B    CBZ	R3, L_GPIO_Config27
;__Lib_GPIO_32F10x.c, 165 :: 		
; currentmode start address is: 4 (R1)
0x0378	0x2108    MOVS	R1, #8
; currentmode end address is: 4 (R1)
0x037A	0xE000    B	L_GPIO_Config28
L_GPIO_Config27:
;__Lib_GPIO_32F10x.c, 167 :: 		
; currentmode start address is: 4 (R1)
0x037C	0x2104    MOVS	R1, #4
; currentmode end address is: 4 (R1)
L_GPIO_Config28:
;__Lib_GPIO_32F10x.c, 168 :: 		
; currentmode start address is: 4 (R1)
0x037E	0xE013    B	L_GPIO_Config29
L_GPIO_Config26:
;__Lib_GPIO_32F10x.c, 169 :: 		
0x0380	0xF0050304  AND	R3, R5, #4
0x0384	0xB133    CBZ	R3, L_GPIO_Config30
; currentmode end address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 170 :: 		
0x0386	0xF0050320  AND	R3, R5, #32
0x038A	0xB10B    CBZ	R3, L_GPIO_Config31
;__Lib_GPIO_32F10x.c, 171 :: 		
; currentmode start address is: 4 (R1)
0x038C	0x2104    MOVS	R1, #4
; currentmode end address is: 4 (R1)
0x038E	0xE000    B	L_GPIO_Config32
L_GPIO_Config31:
;__Lib_GPIO_32F10x.c, 173 :: 		
; currentmode start address is: 4 (R1)
0x0390	0x2100    MOVS	R1, #0
; currentmode end address is: 4 (R1)
L_GPIO_Config32:
;__Lib_GPIO_32F10x.c, 174 :: 		
; currentmode start address is: 4 (R1)
0x0392	0xE009    B	L_GPIO_Config33
L_GPIO_Config30:
;__Lib_GPIO_32F10x.c, 175 :: 		
0x0394	0xF0050308  AND	R3, R5, #8
0x0398	0xB133    CBZ	R3, L__GPIO_Config100
; currentmode end address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 176 :: 		
0x039A	0xF0050320  AND	R3, R5, #32
0x039E	0xB10B    CBZ	R3, L_GPIO_Config35
;__Lib_GPIO_32F10x.c, 177 :: 		
; currentmode start address is: 4 (R1)
0x03A0	0x210C    MOVS	R1, #12
; currentmode end address is: 4 (R1)
0x03A2	0xE000    B	L_GPIO_Config36
L_GPIO_Config35:
;__Lib_GPIO_32F10x.c, 179 :: 		
; currentmode start address is: 4 (R1)
0x03A4	0x2108    MOVS	R1, #8
; currentmode end address is: 4 (R1)
L_GPIO_Config36:
;__Lib_GPIO_32F10x.c, 180 :: 		
; currentmode start address is: 4 (R1)
; currentmode end address is: 4 (R1)
0x03A6	0xE7FF    B	L_GPIO_Config34
L__GPIO_Config100:
;__Lib_GPIO_32F10x.c, 175 :: 		
;__Lib_GPIO_32F10x.c, 180 :: 		
L_GPIO_Config34:
; currentmode start address is: 4 (R1)
; currentmode end address is: 4 (R1)
L_GPIO_Config33:
; currentmode start address is: 4 (R1)
; currentmode end address is: 4 (R1)
L_GPIO_Config29:
; currentmode start address is: 4 (R1)
; currentmode end address is: 4 (R1)
L_GPIO_Config25:
;__Lib_GPIO_32F10x.c, 182 :: 		
; currentmode start address is: 4 (R1)
0x03A8	0x4B4E    LDR	R3, [PC, #312]
0x03AA	0xEA050303  AND	R3, R5, R3, LSL #0
0x03AE	0xB10B    CBZ	R3, L_GPIO_Config37
;__Lib_GPIO_32F10x.c, 183 :: 		
0x03B0	0x2003    MOVS	R0, #3
0x03B2	0xE009    B	L_GPIO_Config38
L_GPIO_Config37:
;__Lib_GPIO_32F10x.c, 184 :: 		
0x03B4	0xF4057300  AND	R3, R5, #512
0x03B8	0xB10B    CBZ	R3, L_GPIO_Config39
;__Lib_GPIO_32F10x.c, 185 :: 		
0x03BA	0x2002    MOVS	R0, #2
0x03BC	0xE004    B	L_GPIO_Config40
L_GPIO_Config39:
;__Lib_GPIO_32F10x.c, 186 :: 		
0x03BE	0xF4056380  AND	R3, R5, #1024
0x03C2	0xB10B    CBZ	R3, L__GPIO_Config101
;__Lib_GPIO_32F10x.c, 187 :: 		
0x03C4	0x2001    MOVS	R0, #1
; speed end address is: 0 (R0)
0x03C6	0xE7FF    B	L_GPIO_Config41
L__GPIO_Config101:
;__Lib_GPIO_32F10x.c, 186 :: 		
;__Lib_GPIO_32F10x.c, 187 :: 		
L_GPIO_Config41:
; speed start address is: 0 (R0)
; speed end address is: 0 (R0)
L_GPIO_Config40:
; speed start address is: 0 (R0)
; speed end address is: 0 (R0)
L_GPIO_Config38:
;__Lib_GPIO_32F10x.c, 189 :: 		
; speed start address is: 0 (R0)
;__Lib_GPIO_32F10x.c, 195 :: 		
0x03C8	0xF005030C  AND	R3, R5, #12
0x03CC	0xB10B    CBZ	R3, L__GPIO_Config102
;__Lib_GPIO_32F10x.c, 198 :: 		
0x03CE	0x4301    ORRS	R1, R0
; speed end address is: 0 (R0)
; currentmode end address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 199 :: 		
0x03D0	0xE7FF    B	L_GPIO_Config42
L__GPIO_Config102:
;__Lib_GPIO_32F10x.c, 195 :: 		
;__Lib_GPIO_32F10x.c, 199 :: 		
L_GPIO_Config42:
;__Lib_GPIO_32F10x.c, 201 :: 		
; currentmode start address is: 4 (R1)
0x03D2	0xF00403FF  AND	R3, R4, #255
0x03D6	0xB29B    UXTH	R3, R3
0x03D8	0x2B00    CMP	R3, #0
0x03DA	0xD03B    BEQ	L__GPIO_Config104
;__Lib_GPIO_32F10x.c, 202 :: 		
0x03DC	0x6837    LDR	R7, [R6, #0]
; tmpreg start address is: 28 (R7)
;__Lib_GPIO_32F10x.c, 204 :: 		
; pinpos start address is: 0 (R0)
0x03DE	0x2000    MOVS	R0, #0
; pin_mask end address is: 16 (R4)
; config end address is: 20 (R5)
; currentmode end address is: 4 (R1)
; tmpreg end address is: 28 (R7)
; pinpos end address is: 0 (R0)
; port end address is: 24 (R6)
0x03E0	0xFA1FF884  UXTH	R8, R4
0x03E4	0x4632    MOV	R2, R6
0x03E6	0x462E    MOV	R6, R5
L_GPIO_Config44:
; pinpos start address is: 0 (R0)
; tmpreg start address is: 28 (R7)
; currentmode start address is: 4 (R1)
; port start address is: 8 (R2)
; config start address is: 24 (R6)
; pin_mask start address is: 32 (R8)
0x03E8	0x2808    CMP	R0, #8
0x03EA	0xD22C    BCS	L_GPIO_Config45
;__Lib_GPIO_32F10x.c, 206 :: 		
0x03EC	0xF04F0301  MOV	R3, #1
0x03F0	0xFA03F400  LSL	R4, R3, R0
;__Lib_GPIO_32F10x.c, 208 :: 		
0x03F4	0xEA080304  AND	R3, R8, R4, LSL #0
;__Lib_GPIO_32F10x.c, 210 :: 		
0x03F8	0x42A3    CMP	R3, R4
0x03FA	0xD122    BNE	L__GPIO_Config103
;__Lib_GPIO_32F10x.c, 212 :: 		
0x03FC	0x0085    LSLS	R5, R0, #2
;__Lib_GPIO_32F10x.c, 214 :: 		
0x03FE	0xF04F030F  MOV	R3, #15
0x0402	0x40AB    LSLS	R3, R5
;__Lib_GPIO_32F10x.c, 215 :: 		
0x0404	0x43DB    MVN	R3, R3
0x0406	0xEA070403  AND	R4, R7, R3, LSL #0
; tmpreg end address is: 28 (R7)
;__Lib_GPIO_32F10x.c, 218 :: 		
0x040A	0xFA01F305  LSL	R3, R1, R5
0x040E	0xEA440303  ORR	R3, R4, R3, LSL #0
; tmpreg start address is: 20 (R5)
0x0412	0x461D    MOV	R5, R3
;__Lib_GPIO_32F10x.c, 221 :: 		
0x0414	0xF4067381  AND	R3, R6, #258
0x0418	0xF5B37F81  CMP	R3, #258
0x041C	0xD105    BNE	L_GPIO_Config48
;__Lib_GPIO_32F10x.c, 223 :: 		
0x041E	0xF2020414  ADDW	R4, R2, #20
0x0422	0xF04F0301  MOV	R3, #1
0x0426	0x4083    LSLS	R3, R0
0x0428	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_32F10x.c, 224 :: 		
L_GPIO_Config48:
;__Lib_GPIO_32F10x.c, 226 :: 		
0x042A	0xF0060382  AND	R3, R6, #130
0x042E	0x2B82    CMP	R3, #130
0x0430	0xD105    BNE	L_GPIO_Config49
;__Lib_GPIO_32F10x.c, 228 :: 		
0x0432	0xF2020410  ADDW	R4, R2, #16
0x0436	0xF04F0301  MOV	R3, #1
0x043A	0x4083    LSLS	R3, R0
0x043C	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_32F10x.c, 229 :: 		
L_GPIO_Config49:
;__Lib_GPIO_32F10x.c, 230 :: 		
0x043E	0x462F    MOV	R7, R5
0x0440	0xE7FF    B	L_GPIO_Config47
; tmpreg end address is: 20 (R5)
L__GPIO_Config103:
;__Lib_GPIO_32F10x.c, 210 :: 		
;__Lib_GPIO_32F10x.c, 230 :: 		
L_GPIO_Config47:
;__Lib_GPIO_32F10x.c, 204 :: 		
; tmpreg start address is: 28 (R7)
0x0442	0x1C40    ADDS	R0, R0, #1
;__Lib_GPIO_32F10x.c, 231 :: 		
; pinpos end address is: 0 (R0)
0x0444	0xE7D0    B	L_GPIO_Config44
L_GPIO_Config45:
;__Lib_GPIO_32F10x.c, 232 :: 		
0x0446	0x6017    STR	R7, [R2, #0]
; currentmode end address is: 4 (R1)
; port end address is: 8 (R2)
; config end address is: 24 (R6)
; pin_mask end address is: 32 (R8)
; tmpreg end address is: 28 (R7)
0x0448	0xFA1FF088  UXTH	R0, R8
0x044C	0x460F    MOV	R7, R1
0x044E	0x4631    MOV	R1, R6
0x0450	0x4616    MOV	R6, R2
;__Lib_GPIO_32F10x.c, 234 :: 		
0x0452	0xE002    B	L_GPIO_Config43
L__GPIO_Config104:
;__Lib_GPIO_32F10x.c, 201 :: 		
0x0454	0x460F    MOV	R7, R1
0x0456	0x4629    MOV	R1, R5
0x0458	0xB2A0    UXTH	R0, R4
;__Lib_GPIO_32F10x.c, 234 :: 		
L_GPIO_Config43:
;__Lib_GPIO_32F10x.c, 238 :: 		
; currentmode start address is: 28 (R7)
; port start address is: 24 (R6)
; config start address is: 4 (R1)
; pin_mask start address is: 0 (R0)
0x045A	0xF1B00FFF  CMP	R0, #255
0x045E	0xD939    BLS	L_GPIO_Config50
;__Lib_GPIO_32F10x.c, 240 :: 		
0x0460	0x1D33    ADDS	R3, R6, #4
0x0462	0xF8D38000  LDR	R8, [R3, #0]
; tmpreg start address is: 32 (R8)
;__Lib_GPIO_32F10x.c, 241 :: 		
; pinpos start address is: 8 (R2)
0x0466	0x2200    MOVS	R2, #0
; port end address is: 24 (R6)
; tmpreg end address is: 32 (R8)
; pinpos end address is: 8 (R2)
L_GPIO_Config51:
; pinpos start address is: 8 (R2)
; tmpreg start address is: 32 (R8)
; pin_mask start address is: 0 (R0)
; pin_mask end address is: 0 (R0)
; config start address is: 4 (R1)
; config end address is: 4 (R1)
; port start address is: 24 (R6)
; currentmode start address is: 28 (R7)
; currentmode end address is: 28 (R7)
0x0468	0x2A08    CMP	R2, #8
0x046A	0xD230    BCS	L_GPIO_Config52
; pin_mask end address is: 0 (R0)
; config end address is: 4 (R1)
; currentmode end address is: 28 (R7)
;__Lib_GPIO_32F10x.c, 243 :: 		
; currentmode start address is: 28 (R7)
; config start address is: 4 (R1)
; pin_mask start address is: 0 (R0)
0x046C	0xF2020408  ADDW	R4, R2, #8
0x0470	0xF04F0301  MOV	R3, #1
0x0474	0xFA03F404  LSL	R4, R3, R4
;__Lib_GPIO_32F10x.c, 245 :: 		
0x0478	0xEA000304  AND	R3, R0, R4, LSL #0
;__Lib_GPIO_32F10x.c, 246 :: 		
0x047C	0x42A3    CMP	R3, R4
0x047E	0xD124    BNE	L__GPIO_Config105
;__Lib_GPIO_32F10x.c, 248 :: 		
0x0480	0x0095    LSLS	R5, R2, #2
;__Lib_GPIO_32F10x.c, 250 :: 		
0x0482	0xF04F030F  MOV	R3, #15
0x0486	0x40AB    LSLS	R3, R5
;__Lib_GPIO_32F10x.c, 251 :: 		
0x0488	0x43DB    MVN	R3, R3
0x048A	0xEA080803  AND	R8, R8, R3, LSL #0
; tmpreg end address is: 32 (R8)
;__Lib_GPIO_32F10x.c, 254 :: 		
0x048E	0xFA07F305  LSL	R3, R7, R5
0x0492	0xEA480803  ORR	R8, R8, R3, LSL #0
; tmpreg start address is: 32 (R8)
;__Lib_GPIO_32F10x.c, 257 :: 		
0x0496	0xF4017381  AND	R3, R1, #258
0x049A	0xF5B37F81  CMP	R3, #258
0x049E	0xD107    BNE	L_GPIO_Config55
;__Lib_GPIO_32F10x.c, 259 :: 		
0x04A0	0xF2060514  ADDW	R5, R6, #20
0x04A4	0xF2020408  ADDW	R4, R2, #8
0x04A8	0xF04F0301  MOV	R3, #1
0x04AC	0x40A3    LSLS	R3, R4
0x04AE	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F10x.c, 260 :: 		
L_GPIO_Config55:
;__Lib_GPIO_32F10x.c, 262 :: 		
0x04B0	0xF0010382  AND	R3, R1, #130
0x04B4	0x2B82    CMP	R3, #130
0x04B6	0xD107    BNE	L_GPIO_Config56
;__Lib_GPIO_32F10x.c, 264 :: 		
0x04B8	0xF2060510  ADDW	R5, R6, #16
0x04BC	0xF2020408  ADDW	R4, R2, #8
0x04C0	0xF04F0301  MOV	R3, #1
0x04C4	0x40A3    LSLS	R3, R4
0x04C6	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F10x.c, 265 :: 		
L_GPIO_Config56:
;__Lib_GPIO_32F10x.c, 266 :: 		
0x04C8	0xE7FF    B	L_GPIO_Config54
; tmpreg end address is: 32 (R8)
L__GPIO_Config105:
;__Lib_GPIO_32F10x.c, 246 :: 		
;__Lib_GPIO_32F10x.c, 266 :: 		
L_GPIO_Config54:
;__Lib_GPIO_32F10x.c, 241 :: 		
; tmpreg start address is: 32 (R8)
0x04CA	0x1C52    ADDS	R2, R2, #1
;__Lib_GPIO_32F10x.c, 267 :: 		
; pin_mask end address is: 0 (R0)
; config end address is: 4 (R1)
; currentmode end address is: 28 (R7)
; pinpos end address is: 8 (R2)
0x04CC	0xE7CC    B	L_GPIO_Config51
L_GPIO_Config52:
;__Lib_GPIO_32F10x.c, 268 :: 		
0x04CE	0x1D33    ADDS	R3, R6, #4
; port end address is: 24 (R6)
0x04D0	0xF8C38000  STR	R8, [R3, #0]
; tmpreg end address is: 32 (R8)
;__Lib_GPIO_32F10x.c, 269 :: 		
L_GPIO_Config50:
;__Lib_GPIO_32F10x.c, 270 :: 		
L_end_GPIO_Config:
0x04D4	0xF8DDE000  LDR	LR, [SP, #0]
0x04D8	0xB001    ADD	SP, SP, #4
0x04DA	0x4770    BX	LR
0x04DC	0xFC00FFFF  	#-1024
0x04E0	0x00140008  	#524308
0x04E4	0x08000008  	#526336
; end of _GPIO_Config
_GPIO_Clk_Enable:
;__Lib_GPIO_32F10x.c, 83 :: 		
; gpio_port start address is: 0 (R0)
0x0150	0xB081    SUB	SP, SP, #4
; gpio_port end address is: 0 (R0)
; gpio_port start address is: 0 (R0)
;__Lib_GPIO_32F10x.c, 85 :: 		
0x0152	0x4919    LDR	R1, [PC, #100]
0x0154	0xEA000101  AND	R1, R0, R1, LSL #0
; gpio_port end address is: 0 (R0)
; prt start address is: 0 (R0)
0x0158	0x4608    MOV	R0, R1
;__Lib_GPIO_32F10x.c, 86 :: 		
; pos start address is: 8 (R2)
0x015A	0x2200    MOVS	R2, #0
;__Lib_GPIO_32F10x.c, 87 :: 		
0x015C	0xE00E    B	L_GPIO_Clk_Enable0
; prt end address is: 0 (R0)
; pos end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 88 :: 		
L_GPIO_Clk_Enable2:
; pos start address is: 0 (R0)
0x015E	0x2004    MOVS	R0, #4
; pos end address is: 0 (R0)
0x0160	0xE022    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 89 :: 		
L_GPIO_Clk_Enable3:
; pos start address is: 0 (R0)
0x0162	0x2008    MOVS	R0, #8
; pos end address is: 0 (R0)
0x0164	0xE020    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 90 :: 		
L_GPIO_Clk_Enable4:
; pos start address is: 0 (R0)
0x0166	0x2010    MOVS	R0, #16
; pos end address is: 0 (R0)
0x0168	0xE01E    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 91 :: 		
L_GPIO_Clk_Enable5:
; pos start address is: 0 (R0)
0x016A	0x2020    MOVS	R0, #32
; pos end address is: 0 (R0)
0x016C	0xE01C    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 92 :: 		
L_GPIO_Clk_Enable6:
; pos start address is: 0 (R0)
0x016E	0x2040    MOVS	R0, #64
; pos end address is: 0 (R0)
0x0170	0xE01A    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 93 :: 		
L_GPIO_Clk_Enable7:
; pos start address is: 0 (R0)
0x0172	0x2080    MOVS	R0, #128
; pos end address is: 0 (R0)
0x0174	0xE018    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 94 :: 		
L_GPIO_Clk_Enable8:
; pos start address is: 0 (R0)
0x0176	0xF2401000  MOVW	R0, #256
; pos end address is: 0 (R0)
0x017A	0xE015    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 95 :: 		
L_GPIO_Clk_Enable0:
; pos start address is: 8 (R2)
; prt start address is: 0 (R0)
0x017C	0x490F    LDR	R1, [PC, #60]
0x017E	0x4288    CMP	R0, R1
0x0180	0xD0ED    BEQ	L_GPIO_Clk_Enable2
0x0182	0x490F    LDR	R1, [PC, #60]
0x0184	0x4288    CMP	R0, R1
0x0186	0xD0EC    BEQ	L_GPIO_Clk_Enable3
0x0188	0x490E    LDR	R1, [PC, #56]
0x018A	0x4288    CMP	R0, R1
0x018C	0xD0EB    BEQ	L_GPIO_Clk_Enable4
0x018E	0x490E    LDR	R1, [PC, #56]
0x0190	0x4288    CMP	R0, R1
0x0192	0xD0EA    BEQ	L_GPIO_Clk_Enable5
0x0194	0x490D    LDR	R1, [PC, #52]
0x0196	0x4288    CMP	R0, R1
0x0198	0xD0E9    BEQ	L_GPIO_Clk_Enable6
0x019A	0x490D    LDR	R1, [PC, #52]
0x019C	0x4288    CMP	R0, R1
0x019E	0xD0E8    BEQ	L_GPIO_Clk_Enable7
0x01A0	0x490C    LDR	R1, [PC, #48]
0x01A2	0x4288    CMP	R0, R1
0x01A4	0xD0E7    BEQ	L_GPIO_Clk_Enable8
; prt end address is: 0 (R0)
; pos end address is: 8 (R2)
0x01A6	0x4610    MOV	R0, R2
L_GPIO_Clk_Enable1:
;__Lib_GPIO_32F10x.c, 97 :: 		
; pos start address is: 0 (R0)
0x01A8	0x490B    LDR	R1, [PC, #44]
0x01AA	0x6809    LDR	R1, [R1, #0]
0x01AC	0xEA410200  ORR	R2, R1, R0, LSL #0
; pos end address is: 0 (R0)
0x01B0	0x4909    LDR	R1, [PC, #36]
0x01B2	0x600A    STR	R2, [R1, #0]
;__Lib_GPIO_32F10x.c, 98 :: 		
L_end_GPIO_Clk_Enable:
0x01B4	0xB001    ADD	SP, SP, #4
0x01B6	0x4770    BX	LR
0x01B8	0xFC00FFFF  	#-1024
0x01BC	0x08004001  	#1073809408
0x01C0	0x0C004001  	#1073810432
0x01C4	0x10004001  	#1073811456
0x01C8	0x14004001  	#1073812480
0x01CC	0x18004001  	#1073813504
0x01D0	0x1C004001  	#1073814528
0x01D4	0x20004001  	#1073815552
0x01D8	0x10184002  	RCC_APB2ENR+0
; end of _GPIO_Clk_Enable
easymx_v7_STM32F107VC__i2cInit_2:
;__em_f107vc_i2c.c, 35 :: 		static T_mikrobus_ret _i2cInit_2(const uint32_t* cfg)
; cfg start address is: 0 (R0)
0x3FF8	0xB081    SUB	SP, SP, #4
0x3FFA	0xF8CDE000  STR	LR, [SP, #0]
; cfg end address is: 0 (R0)
; cfg start address is: 0 (R0)
;__em_f107vc_i2c.c, 37 :: 		I2C1_Init_Advanced( cfg[0], &_GPIO_MODULE_I2C1_PB67);
0x3FFE	0x6801    LDR	R1, [R0, #0]
; cfg end address is: 0 (R0)
0x4000	0x4608    MOV	R0, R1
0x4002	0x4904    LDR	R1, [PC, #16]
0x4004	0xF7FFF8DC  BL	_I2C1_Init_Advanced+0
;__em_f107vc_i2c.c, 38 :: 		return _MIKROBUS_OK;
0x4008	0x2000    MOVS	R0, __MIKROBUS_OK
;__em_f107vc_i2c.c, 39 :: 		}
L_end__i2cInit_2:
0x400A	0xF8DDE000  LDR	LR, [SP, #0]
0x400E	0xB001    ADD	SP, SP, #4
0x4010	0x4770    BX	LR
0x4012	0xBF00    NOP
0x4014	0x50900000  	__GPIO_MODULE_I2C1_PB67+0
; end of easymx_v7_STM32F107VC__i2cInit_2
_mikrobus_logInit:
;easymx_v7_STM32F107VC.c, 283 :: 		T_mikrobus_ret mikrobus_logInit(T_log_bus port, const uint32_t baud)
; baud start address is: 4 (R1)
; port start address is: 0 (R0)
0x4200	0xB081    SUB	SP, SP, #4
0x4202	0xF8CDE000  STR	LR, [SP, #0]
; baud end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; baud start address is: 4 (R1)
;easymx_v7_STM32F107VC.c, 285 :: 		switch( port )
0x4206	0xE011    B	L_mikrobus_logInit88
; port end address is: 0 (R0)
;easymx_v7_STM32F107VC.c, 288 :: 		case _MIKROBUS1 : return _log_init1( baud );
L_mikrobus_logInit90:
0x4208	0x4608    MOV	R0, R1
; baud end address is: 4 (R1)
0x420A	0xF7FFFF6D  BL	easymx_v7_STM32F107VC__log_init1+0
0x420E	0xE016    B	L_end_mikrobus_logInit
;easymx_v7_STM32F107VC.c, 291 :: 		case _MIKROBUS2: return _log_init2( baud );
L_mikrobus_logInit91:
; baud start address is: 4 (R1)
0x4210	0x4608    MOV	R0, R1
; baud end address is: 4 (R1)
0x4212	0xF7FFFF4D  BL	easymx_v7_STM32F107VC__log_init2+0
0x4216	0xE012    B	L_end_mikrobus_logInit
;easymx_v7_STM32F107VC.c, 309 :: 		case _LOG_USBUART_A : return _log_initUartA( baud );
L_mikrobus_logInit92:
; baud start address is: 4 (R1)
0x4218	0x4608    MOV	R0, R1
; baud end address is: 4 (R1)
0x421A	0xF7FFFF9D  BL	easymx_v7_STM32F107VC__log_initUartA+0
0x421E	0xE00E    B	L_end_mikrobus_logInit
;easymx_v7_STM32F107VC.c, 312 :: 		case _LOG_USBUART_B : return _log_initUartB( baud );
L_mikrobus_logInit93:
; baud start address is: 4 (R1)
0x4220	0x4608    MOV	R0, R1
; baud end address is: 4 (R1)
0x4222	0xF7FFFF7D  BL	easymx_v7_STM32F107VC__log_initUartB+0
0x4226	0xE00A    B	L_end_mikrobus_logInit
;easymx_v7_STM32F107VC.c, 314 :: 		default : return _MIKROBUS_ERR_BUS;
L_mikrobus_logInit94:
0x4228	0x2001    MOVS	R0, #1
0x422A	0xE008    B	L_end_mikrobus_logInit
;easymx_v7_STM32F107VC.c, 315 :: 		}
L_mikrobus_logInit88:
; baud start address is: 4 (R1)
; port start address is: 0 (R0)
0x422C	0x2800    CMP	R0, #0
0x422E	0xD0EB    BEQ	L_mikrobus_logInit90
0x4230	0x2801    CMP	R0, #1
0x4232	0xD0ED    BEQ	L_mikrobus_logInit91
0x4234	0x2820    CMP	R0, #32
0x4236	0xD0EF    BEQ	L_mikrobus_logInit92
0x4238	0x2830    CMP	R0, #48
0x423A	0xD0F1    BEQ	L_mikrobus_logInit93
; port end address is: 0 (R0)
; baud end address is: 4 (R1)
0x423C	0xE7F4    B	L_mikrobus_logInit94
;easymx_v7_STM32F107VC.c, 317 :: 		}
L_end_mikrobus_logInit:
0x423E	0xF8DDE000  LDR	LR, [SP, #0]
0x4242	0xB001    ADD	SP, SP, #4
0x4244	0x4770    BX	LR
; end of _mikrobus_logInit
easymx_v7_STM32F107VC__log_init1:
;__em_f107vc_log.c, 23 :: 		static T_mikrobus_ret _log_init1(uint32_t baud)
; baud start address is: 0 (R0)
0x40E8	0xB081    SUB	SP, SP, #4
0x40EA	0xF8CDE000  STR	LR, [SP, #0]
; baud end address is: 0 (R0)
; baud start address is: 0 (R0)
;__em_f107vc_log.c, 25 :: 		UART3_Init_Advanced(baud, _UART_8_BIT_DATA, _UART_NOPARITY, _UART_ONE_STOPBIT, &_GPIO_MODULE_USART3_PD89);
0x40EE	0x4909    LDR	R1, [PC, #36]
0x40F0	0xB402    PUSH	(R1)
0x40F2	0xF2400300  MOVW	R3, #0
0x40F6	0xF2400200  MOVW	R2, #0
0x40FA	0xF2400100  MOVW	R1, #0
; baud end address is: 0 (R0)
0x40FE	0xF7FFF84B  BL	_UART3_Init_Advanced+0
0x4102	0xB001    ADD	SP, SP, #4
;__em_f107vc_log.c, 26 :: 		logger = UART3_Write;
0x4104	0x4A04    LDR	R2, [PC, #16]
0x4106	0x4905    LDR	R1, [PC, #20]
0x4108	0x600A    STR	R2, [R1, #0]
;__em_f107vc_log.c, 27 :: 		return 0;
0x410A	0x2000    MOVS	R0, #0
;__em_f107vc_log.c, 28 :: 		}
L_end__log_init1:
0x410C	0xF8DDE000  LDR	LR, [SP, #0]
0x4110	0xB001    ADD	SP, SP, #4
0x4112	0x4770    BX	LR
0x4114	0x50FC0000  	__GPIO_MODULE_USART3_PD89+0
0x4118	0x33910000  	_UART3_Write+0
0x411C	0x0CF82000  	_logger+0
; end of easymx_v7_STM32F107VC__log_init1
_UART3_Init_Advanced:
;__Lib_UART_123_45.c, 384 :: 		
; stop_bits start address is: 12 (R3)
; parity start address is: 8 (R2)
; data_bits start address is: 4 (R1)
; baud_rate start address is: 0 (R0)
0x3198	0xB081    SUB	SP, SP, #4
0x319A	0xF8CDE000  STR	LR, [SP, #0]
; stop_bits end address is: 12 (R3)
; parity end address is: 8 (R2)
; data_bits end address is: 4 (R1)
; baud_rate end address is: 0 (R0)
; baud_rate start address is: 0 (R0)
; data_bits start address is: 4 (R1)
; parity start address is: 8 (R2)
; stop_bits start address is: 12 (R3)
; module start address is: 20 (R5)
0x319E	0x9D01    LDR	R5, [SP, #4]
;__Lib_UART_123_45.c, 386 :: 		
0x31A0	0x462C    MOV	R4, R5
; module end address is: 20 (R5)
0x31A2	0xB410    PUSH	(R4)
; parity end address is: 8 (R2)
0x31A4	0xB408    PUSH	(R3)
0x31A6	0xB293    UXTH	R3, R2
0x31A8	0xB28A    UXTH	R2, R1
; data_bits end address is: 4 (R1)
0x31AA	0x4601    MOV	R1, R0
; baud_rate end address is: 0 (R0)
0x31AC	0x4803    LDR	R0, [PC, #12]
; stop_bits end address is: 12 (R3)
0x31AE	0xF7FEFC1D  BL	__Lib_UART_123_45_UARTx_Init_Advanced+0
0x31B2	0xB002    ADD	SP, SP, #8
;__Lib_UART_123_45.c, 387 :: 		
L_end_UART3_Init_Advanced:
0x31B4	0xF8DDE000  LDR	LR, [SP, #0]
0x31B8	0xB001    ADD	SP, SP, #4
0x31BA	0x4770    BX	LR
0x31BC	0x48004000  	USART3_SR+0
; end of _UART3_Init_Advanced
__Lib_UART_123_45_UARTx_Init_Advanced:
;__Lib_UART_123_45.c, 294 :: 		
; parity start address is: 12 (R3)
; baud_rate start address is: 4 (R1)
; UART_Base start address is: 0 (R0)
0x19EC	0xB089    SUB	SP, SP, #36
0x19EE	0xF8CDE000  STR	LR, [SP, #0]
0x19F2	0x4683    MOV	R11, R0
0x19F4	0xB298    UXTH	R0, R3
0x19F6	0x468C    MOV	R12, R1
; parity end address is: 12 (R3)
; baud_rate end address is: 4 (R1)
; UART_Base end address is: 0 (R0)
; UART_Base start address is: 44 (R11)
; baud_rate start address is: 48 (R12)
; parity start address is: 0 (R0)
; stop_bits start address is: 4 (R1)
0x19F8	0xF8BD1024  LDRH	R1, [SP, #36]
; module start address is: 24 (R6)
0x19FC	0x9E0A    LDR	R6, [SP, #40]
;__Lib_UART_123_45.c, 298 :: 		
0x19FE	0xAC04    ADD	R4, SP, #16
0x1A00	0xF8AD1004  STRH	R1, [SP, #4]
0x1A04	0xF8AD0008  STRH	R0, [SP, #8]
0x1A08	0x4620    MOV	R0, R4
0x1A0A	0xF7FFFBB1  BL	_RCC_GetClocksFrequency+0
0x1A0E	0xF8BD0008  LDRH	R0, [SP, #8]
0x1A12	0xF8BD1004  LDRH	R1, [SP, #4]
;__Lib_UART_123_45.c, 301 :: 		
0x1A16	0x4C64    LDR	R4, [PC, #400]
0x1A18	0x45A3    CMP	R11, R4
0x1A1A	0xD112    BNE	L___Lib_UART_123_45_UARTx_Init_Advanced15
;__Lib_UART_123_45.c, 302 :: 		
0x1A1C	0x2501    MOVS	R5, #1
0x1A1E	0xB26D    SXTB	R5, R5
0x1A20	0x4C62    LDR	R4, [PC, #392]
0x1A22	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 303 :: 		
0x1A24	0x4D62    LDR	R5, [PC, #392]
0x1A26	0x4C63    LDR	R4, [PC, #396]
0x1A28	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 304 :: 		
0x1A2A	0x4D63    LDR	R5, [PC, #396]
0x1A2C	0x4C63    LDR	R4, [PC, #396]
0x1A2E	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 305 :: 		
0x1A30	0x4D63    LDR	R5, [PC, #396]
0x1A32	0x4C64    LDR	R4, [PC, #400]
0x1A34	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 306 :: 		
0x1A36	0x4D64    LDR	R5, [PC, #400]
0x1A38	0x4C64    LDR	R4, [PC, #400]
0x1A3A	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 307 :: 		
0x1A3C	0x9C07    LDR	R4, [SP, #28]
0x1A3E	0x9403    STR	R4, [SP, #12]
;__Lib_UART_123_45.c, 308 :: 		
0x1A40	0xE056    B	L___Lib_UART_123_45_UARTx_Init_Advanced16
L___Lib_UART_123_45_UARTx_Init_Advanced15:
;__Lib_UART_123_45.c, 309 :: 		
0x1A42	0x4C63    LDR	R4, [PC, #396]
0x1A44	0x45A3    CMP	R11, R4
0x1A46	0xD112    BNE	L___Lib_UART_123_45_UARTx_Init_Advanced17
;__Lib_UART_123_45.c, 310 :: 		
0x1A48	0x2501    MOVS	R5, #1
0x1A4A	0xB26D    SXTB	R5, R5
0x1A4C	0x4C61    LDR	R4, [PC, #388]
0x1A4E	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 311 :: 		
0x1A50	0x4D61    LDR	R5, [PC, #388]
0x1A52	0x4C58    LDR	R4, [PC, #352]
0x1A54	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 312 :: 		
0x1A56	0x4D61    LDR	R5, [PC, #388]
0x1A58	0x4C58    LDR	R4, [PC, #352]
0x1A5A	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 313 :: 		
0x1A5C	0x4D60    LDR	R5, [PC, #384]
0x1A5E	0x4C59    LDR	R4, [PC, #356]
0x1A60	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 314 :: 		
0x1A62	0x4D60    LDR	R5, [PC, #384]
0x1A64	0x4C59    LDR	R4, [PC, #356]
0x1A66	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 315 :: 		
0x1A68	0x9C06    LDR	R4, [SP, #24]
0x1A6A	0x9403    STR	R4, [SP, #12]
;__Lib_UART_123_45.c, 316 :: 		
0x1A6C	0xE040    B	L___Lib_UART_123_45_UARTx_Init_Advanced18
L___Lib_UART_123_45_UARTx_Init_Advanced17:
;__Lib_UART_123_45.c, 317 :: 		
0x1A6E	0x4C5E    LDR	R4, [PC, #376]
0x1A70	0x45A3    CMP	R11, R4
0x1A72	0xD112    BNE	L___Lib_UART_123_45_UARTx_Init_Advanced19
;__Lib_UART_123_45.c, 318 :: 		
0x1A74	0x2501    MOVS	R5, #1
0x1A76	0xB26D    SXTB	R5, R5
0x1A78	0x4C5C    LDR	R4, [PC, #368]
0x1A7A	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 319 :: 		
0x1A7C	0x4D5C    LDR	R5, [PC, #368]
0x1A7E	0x4C4D    LDR	R4, [PC, #308]
0x1A80	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 320 :: 		
0x1A82	0x4D5C    LDR	R5, [PC, #368]
0x1A84	0x4C4D    LDR	R4, [PC, #308]
0x1A86	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 321 :: 		
0x1A88	0x4D5B    LDR	R5, [PC, #364]
0x1A8A	0x4C4E    LDR	R4, [PC, #312]
0x1A8C	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 322 :: 		
0x1A8E	0x4D5B    LDR	R5, [PC, #364]
0x1A90	0x4C4E    LDR	R4, [PC, #312]
0x1A92	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 323 :: 		
0x1A94	0x9C06    LDR	R4, [SP, #24]
0x1A96	0x9403    STR	R4, [SP, #12]
;__Lib_UART_123_45.c, 324 :: 		
0x1A98	0xE02A    B	L___Lib_UART_123_45_UARTx_Init_Advanced20
L___Lib_UART_123_45_UARTx_Init_Advanced19:
;__Lib_UART_123_45.c, 325 :: 		
0x1A9A	0x4C59    LDR	R4, [PC, #356]
0x1A9C	0x45A3    CMP	R11, R4
0x1A9E	0xD112    BNE	L___Lib_UART_123_45_UARTx_Init_Advanced21
;__Lib_UART_123_45.c, 326 :: 		
0x1AA0	0x2501    MOVS	R5, #1
0x1AA2	0xB26D    SXTB	R5, R5
0x1AA4	0x4C57    LDR	R4, [PC, #348]
0x1AA6	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 327 :: 		
0x1AA8	0x4D57    LDR	R5, [PC, #348]
0x1AAA	0x4C42    LDR	R4, [PC, #264]
0x1AAC	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 328 :: 		
0x1AAE	0x4D57    LDR	R5, [PC, #348]
0x1AB0	0x4C42    LDR	R4, [PC, #264]
0x1AB2	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 329 :: 		
0x1AB4	0x4D56    LDR	R5, [PC, #344]
0x1AB6	0x4C43    LDR	R4, [PC, #268]
0x1AB8	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 330 :: 		
0x1ABA	0x4D56    LDR	R5, [PC, #344]
0x1ABC	0x4C43    LDR	R4, [PC, #268]
0x1ABE	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 331 :: 		
0x1AC0	0x9C06    LDR	R4, [SP, #24]
0x1AC2	0x9403    STR	R4, [SP, #12]
;__Lib_UART_123_45.c, 332 :: 		
0x1AC4	0xE014    B	L___Lib_UART_123_45_UARTx_Init_Advanced22
L___Lib_UART_123_45_UARTx_Init_Advanced21:
;__Lib_UART_123_45.c, 333 :: 		
0x1AC6	0x4C54    LDR	R4, [PC, #336]
0x1AC8	0x45A3    CMP	R11, R4
0x1ACA	0xD111    BNE	L___Lib_UART_123_45_UARTx_Init_Advanced23
;__Lib_UART_123_45.c, 334 :: 		
0x1ACC	0x2501    MOVS	R5, #1
0x1ACE	0xB26D    SXTB	R5, R5
0x1AD0	0x4C52    LDR	R4, [PC, #328]
0x1AD2	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 335 :: 		
0x1AD4	0x4D52    LDR	R5, [PC, #328]
0x1AD6	0x4C37    LDR	R4, [PC, #220]
0x1AD8	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 336 :: 		
0x1ADA	0x4D52    LDR	R5, [PC, #328]
0x1ADC	0x4C37    LDR	R4, [PC, #220]
0x1ADE	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 337 :: 		
0x1AE0	0x4D51    LDR	R5, [PC, #324]
0x1AE2	0x4C38    LDR	R4, [PC, #224]
0x1AE4	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 338 :: 		
0x1AE6	0x4D51    LDR	R5, [PC, #324]
0x1AE8	0x4C38    LDR	R4, [PC, #224]
0x1AEA	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 339 :: 		
0x1AEC	0x9C06    LDR	R4, [SP, #24]
0x1AEE	0x9403    STR	R4, [SP, #12]
;__Lib_UART_123_45.c, 340 :: 		
L___Lib_UART_123_45_UARTx_Init_Advanced23:
L___Lib_UART_123_45_UARTx_Init_Advanced22:
L___Lib_UART_123_45_UARTx_Init_Advanced20:
L___Lib_UART_123_45_UARTx_Init_Advanced18:
L___Lib_UART_123_45_UARTx_Init_Advanced16:
;__Lib_UART_123_45.c, 342 :: 		
0x1AF0	0xF8AD1004  STRH	R1, [SP, #4]
; module end address is: 24 (R6)
0x1AF4	0xF8AD0008  STRH	R0, [SP, #8]
0x1AF8	0x4630    MOV	R0, R6
0x1AFA	0xF7FFFB99  BL	_GPIO_Alternate_Function_Enable+0
0x1AFE	0xF8BD0008  LDRH	R0, [SP, #8]
0x1B02	0xF8BD1004  LDRH	R1, [SP, #4]
;__Lib_UART_123_45.c, 344 :: 		
0x1B06	0xF10B0510  ADD	R5, R11, #16
0x1B0A	0x2400    MOVS	R4, #0
0x1B0C	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45.c, 345 :: 		
0x1B0E	0xF10B0510  ADD	R5, R11, #16
0x1B12	0x682C    LDR	R4, [R5, #0]
0x1B14	0x430C    ORRS	R4, R1
; stop_bits end address is: 4 (R1)
0x1B16	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45.c, 346 :: 		
0x1B18	0xF10B050C  ADD	R5, R11, #12
0x1B1C	0x2400    MOVS	R4, #0
0x1B1E	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45.c, 348 :: 		
0x1B20	0xB118    CBZ	R0, L___Lib_UART_123_45_UARTx_Init_Advanced38
;__Lib_UART_123_45.c, 349 :: 		
0x1B22	0xF4406080  ORR	R0, R0, #1024
0x1B26	0xB280    UXTH	R0, R0
; parity end address is: 0 (R0)
;__Lib_UART_123_45.c, 350 :: 		
0x1B28	0xE7FF    B	L___Lib_UART_123_45_UARTx_Init_Advanced24
L___Lib_UART_123_45_UARTx_Init_Advanced38:
;__Lib_UART_123_45.c, 348 :: 		
;__Lib_UART_123_45.c, 350 :: 		
L___Lib_UART_123_45_UARTx_Init_Advanced24:
;__Lib_UART_123_45.c, 352 :: 		
; parity start address is: 0 (R0)
0x1B2A	0xF10B050C  ADD	R5, R11, #12
0x1B2E	0x682C    LDR	R4, [R5, #0]
0x1B30	0x4304    ORRS	R4, R0
; parity end address is: 0 (R0)
0x1B32	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45.c, 354 :: 		
0x1B34	0xF10B060C  ADD	R6, R11, #12
0x1B38	0x2501    MOVS	R5, #1
0x1B3A	0x6834    LDR	R4, [R6, #0]
0x1B3C	0xF365344D  BFI	R4, R5, #13, #1
0x1B40	0x6034    STR	R4, [R6, #0]
;__Lib_UART_123_45.c, 355 :: 		
0x1B42	0xF10B060C  ADD	R6, R11, #12
0x1B46	0x2501    MOVS	R5, #1
0x1B48	0x6834    LDR	R4, [R6, #0]
0x1B4A	0xF36504C3  BFI	R4, R5, #3, #1
0x1B4E	0x6034    STR	R4, [R6, #0]
;__Lib_UART_123_45.c, 356 :: 		
0x1B50	0xF10B060C  ADD	R6, R11, #12
0x1B54	0x2501    MOVS	R5, #1
0x1B56	0x6834    LDR	R4, [R6, #0]
0x1B58	0xF3650482  BFI	R4, R5, #2, #1
0x1B5C	0x6034    STR	R4, [R6, #0]
;__Lib_UART_123_45.c, 357 :: 		
0x1B5E	0xF10B0514  ADD	R5, R11, #20
0x1B62	0x2400    MOVS	R4, #0
0x1B64	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45.c, 362 :: 		
0x1B66	0x9D03    LDR	R5, [SP, #12]
0x1B68	0x2419    MOVS	R4, #25
0x1B6A	0x4365    MULS	R5, R4, R5
0x1B6C	0xEA4F048C  LSL	R4, R12, #2
; baud_rate end address is: 48 (R12)
0x1B70	0xFBB5F7F4  UDIV	R7, R5, R4
;__Lib_UART_123_45.c, 363 :: 		
0x1B74	0x2464    MOVS	R4, #100
0x1B76	0xFBB7F4F4  UDIV	R4, R7, R4
0x1B7A	0x0126    LSLS	R6, R4, #4
;__Lib_UART_123_45.c, 365 :: 		
0x1B7C	0x0935    LSRS	R5, R6, #4
0x1B7E	0x2464    MOVS	R4, #100
0x1B80	0x436C    MULS	R4, R5, R4
0x1B82	0x1B3C    SUB	R4, R7, R4
;__Lib_UART_123_45.c, 366 :: 		
0x1B84	0x0124    LSLS	R4, R4, #4
0x1B86	0xF2040532  ADDW	R5, R4, #50
0x1B8A	0x2464    MOVS	R4, #100
0x1B8C	0xFBB5F4F4  UDIV	R4, R5, R4
0x1B90	0xF004040F  AND	R4, R4, #15
0x1B94	0xEA460404  ORR	R4, R6, R4, LSL #0
;__Lib_UART_123_45.c, 368 :: 		
0x1B98	0xF10B0508  ADD	R5, R11, #8
; UART_Base end address is: 44 (R11)
0x1B9C	0xB2A4    UXTH	R4, R4
0x1B9E	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45.c, 369 :: 		
L_end_UARTx_Init_Advanced:
0x1BA0	0xF8DDE000  LDR	LR, [SP, #0]
0x1BA4	0xB009    ADD	SP, SP, #36
0x1BA6	0x4770    BX	LR
0x1BA8	0x38004001  	USART1_SR+0
0x1BAC	0x03384242  	RCC_APB2ENR+0
0x1BB0	0x35950000  	_UART1_Write+0
0x1BB4	0x37942000  	_UART_Wr_Ptr+0
0x1BB8	0x13590000  	_UART1_Read+0
0x1BBC	0x37982000  	_UART_Rd_Ptr+0
0x1BC0	0x13410000  	_UART1_Data_Ready+0
0x1BC4	0x379C2000  	_UART_Rdy_Ptr+0
0x1BC8	0x11290000  	_UART1_Tx_Idle+0
0x1BCC	0x37A02000  	_UART_Tx_Idle_Ptr+0
0x1BD0	0x44004000  	USART2_SR+0
0x1BD4	0x03C44242  	RCC_APB1ENR+0
0x1BD8	0x31DD0000  	_UART2_Write+0
0x1BDC	0x11590000  	_UART2_Read+0
0x1BE0	0x11410000  	_UART2_Data_Ready+0
0x1BE4	0x11110000  	_UART2_Tx_Idle+0
0x1BE8	0x48004000  	USART3_SR+0
0x1BEC	0x03C84242  	RCC_APB1ENR+0
0x1BF0	0x33910000  	_UART3_Write+0
0x1BF4	0x10690000  	_UART3_Read+0
0x1BF8	0x10810000  	_UART3_Data_Ready+0
0x1BFC	0x10510000  	_UART3_Tx_Idle+0
0x1C00	0x4C004000  	UART4_SR+0
0x1C04	0x03CC4242  	RCC_APB1ENR+0
0x1C08	0x1F990000  	_UART4_Write+0
0x1C0C	0x10E10000  	_UART4_Read+0
0x1C10	0x10F90000  	_UART4_Data_Ready+0
0x1C14	0x10C90000  	_UART4_Tx_Idle+0
0x1C18	0x50004000  	UART5_SR+0
0x1C1C	0x03D04242  	RCC_APB1ENR+0
0x1C20	0x1DF90000  	_UART5_Write+0
0x1C24	0x10990000  	_UART5_Read+0
0x1C28	0x10B10000  	_UART5_Data_Ready+0
0x1C2C	0x15D10000  	_UART5_Tx_Idle+0
; end of __Lib_UART_123_45_UARTx_Init_Advanced
easymx_v7_STM32F107VC__log_init2:
;__em_f107vc_log.c, 30 :: 		static T_mikrobus_ret _log_init2(uint32_t baud)
; baud start address is: 0 (R0)
0x40B0	0xB081    SUB	SP, SP, #4
0x40B2	0xF8CDE000  STR	LR, [SP, #0]
; baud end address is: 0 (R0)
; baud start address is: 0 (R0)
;__em_f107vc_log.c, 32 :: 		UART2_Init_Advanced(baud, _UART_8_BIT_DATA, _UART_NOPARITY, _UART_ONE_STOPBIT, &_GPIO_MODULE_USART2_PD56);
0x40B6	0x4909    LDR	R1, [PC, #36]
0x40B8	0xB402    PUSH	(R1)
0x40BA	0xF2400300  MOVW	R3, #0
0x40BE	0xF2400200  MOVW	R2, #0
0x40C2	0xF2400100  MOVW	R1, #0
; baud end address is: 0 (R0)
0x40C6	0xF7FEFFEF  BL	_UART2_Init_Advanced+0
0x40CA	0xB001    ADD	SP, SP, #4
;__em_f107vc_log.c, 33 :: 		logger = UART2_Write;
0x40CC	0x4A04    LDR	R2, [PC, #16]
0x40CE	0x4905    LDR	R1, [PC, #20]
0x40D0	0x600A    STR	R2, [R1, #0]
;__em_f107vc_log.c, 34 :: 		return 0;
0x40D2	0x2000    MOVS	R0, #0
;__em_f107vc_log.c, 35 :: 		}
L_end__log_init2:
0x40D4	0xF8DDE000  LDR	LR, [SP, #0]
0x40D8	0xB001    ADD	SP, SP, #4
0x40DA	0x4770    BX	LR
0x40DC	0x51680000  	__GPIO_MODULE_USART2_PD56+0
0x40E0	0x31DD0000  	_UART2_Write+0
0x40E4	0x0CF82000  	_logger+0
; end of easymx_v7_STM32F107VC__log_init2
_UART2_Init_Advanced:
;__Lib_UART_123_45.c, 378 :: 		
; stop_bits start address is: 12 (R3)
; parity start address is: 8 (R2)
; data_bits start address is: 4 (R1)
; baud_rate start address is: 0 (R0)
0x30A8	0xB081    SUB	SP, SP, #4
0x30AA	0xF8CDE000  STR	LR, [SP, #0]
; stop_bits end address is: 12 (R3)
; parity end address is: 8 (R2)
; data_bits end address is: 4 (R1)
; baud_rate end address is: 0 (R0)
; baud_rate start address is: 0 (R0)
; data_bits start address is: 4 (R1)
; parity start address is: 8 (R2)
; stop_bits start address is: 12 (R3)
; module start address is: 20 (R5)
0x30AE	0x9D01    LDR	R5, [SP, #4]
;__Lib_UART_123_45.c, 380 :: 		
0x30B0	0x462C    MOV	R4, R5
; module end address is: 20 (R5)
0x30B2	0xB410    PUSH	(R4)
; parity end address is: 8 (R2)
0x30B4	0xB408    PUSH	(R3)
0x30B6	0xB293    UXTH	R3, R2
0x30B8	0xB28A    UXTH	R2, R1
; data_bits end address is: 4 (R1)
0x30BA	0x4601    MOV	R1, R0
; baud_rate end address is: 0 (R0)
0x30BC	0x4803    LDR	R0, [PC, #12]
; stop_bits end address is: 12 (R3)
0x30BE	0xF7FEFC95  BL	__Lib_UART_123_45_UARTx_Init_Advanced+0
0x30C2	0xB002    ADD	SP, SP, #8
;__Lib_UART_123_45.c, 381 :: 		
L_end_UART2_Init_Advanced:
0x30C4	0xF8DDE000  LDR	LR, [SP, #0]
0x30C8	0xB001    ADD	SP, SP, #4
0x30CA	0x4770    BX	LR
0x30CC	0x44004000  	USART2_SR+0
; end of _UART2_Init_Advanced
easymx_v7_STM32F107VC__log_initUartA:
;__em_f107vc_log.c, 37 :: 		static T_mikrobus_ret _log_initUartA(uint32_t baud)
; baud start address is: 0 (R0)
0x4158	0xB081    SUB	SP, SP, #4
0x415A	0xF8CDE000  STR	LR, [SP, #0]
; baud end address is: 0 (R0)
; baud start address is: 0 (R0)
;__em_f107vc_log.c, 39 :: 		UART1_Init_Advanced(baud, _UART_8_BIT_DATA, _UART_NOPARITY, _UART_ONE_STOPBIT, &_GPIO_MODULE_USART1_PA9_10);
0x415E	0x4909    LDR	R1, [PC, #36]
0x4160	0xB402    PUSH	(R1)
0x4162	0xF2400300  MOVW	R3, #0
0x4166	0xF2400200  MOVW	R2, #0
0x416A	0xF2400100  MOVW	R1, #0
; baud end address is: 0 (R0)
0x416E	0xF7FEFF87  BL	_UART1_Init_Advanced+0
0x4172	0xB001    ADD	SP, SP, #4
;__em_f107vc_log.c, 40 :: 		logger = UART1_Write;
0x4174	0x4A04    LDR	R2, [PC, #16]
0x4176	0x4905    LDR	R1, [PC, #20]
0x4178	0x600A    STR	R2, [R1, #0]
;__em_f107vc_log.c, 41 :: 		return 0;
0x417A	0x2000    MOVS	R0, #0
;__em_f107vc_log.c, 42 :: 		}
L_end__log_initUartA:
0x417C	0xF8DDE000  LDR	LR, [SP, #0]
0x4180	0xB001    ADD	SP, SP, #4
0x4182	0x4770    BX	LR
0x4184	0x51D40000  	__GPIO_MODULE_USART1_PA9_10+0
0x4188	0x35950000  	_UART1_Write+0
0x418C	0x0CF82000  	_logger+0
; end of easymx_v7_STM32F107VC__log_initUartA
_UART1_Init_Advanced:
;__Lib_UART_123_45.c, 372 :: 		
; stop_bits start address is: 12 (R3)
; parity start address is: 8 (R2)
; data_bits start address is: 4 (R1)
; baud_rate start address is: 0 (R0)
0x3080	0xB081    SUB	SP, SP, #4
0x3082	0xF8CDE000  STR	LR, [SP, #0]
; stop_bits end address is: 12 (R3)
; parity end address is: 8 (R2)
; data_bits end address is: 4 (R1)
; baud_rate end address is: 0 (R0)
; baud_rate start address is: 0 (R0)
; data_bits start address is: 4 (R1)
; parity start address is: 8 (R2)
; stop_bits start address is: 12 (R3)
; module start address is: 20 (R5)
0x3086	0x9D01    LDR	R5, [SP, #4]
;__Lib_UART_123_45.c, 374 :: 		
0x3088	0x462C    MOV	R4, R5
; module end address is: 20 (R5)
0x308A	0xB410    PUSH	(R4)
; parity end address is: 8 (R2)
0x308C	0xB408    PUSH	(R3)
0x308E	0xB293    UXTH	R3, R2
0x3090	0xB28A    UXTH	R2, R1
; data_bits end address is: 4 (R1)
0x3092	0x4601    MOV	R1, R0
; baud_rate end address is: 0 (R0)
0x3094	0x4803    LDR	R0, [PC, #12]
; stop_bits end address is: 12 (R3)
0x3096	0xF7FEFCA9  BL	__Lib_UART_123_45_UARTx_Init_Advanced+0
0x309A	0xB002    ADD	SP, SP, #8
;__Lib_UART_123_45.c, 375 :: 		
L_end_UART1_Init_Advanced:
0x309C	0xF8DDE000  LDR	LR, [SP, #0]
0x30A0	0xB001    ADD	SP, SP, #4
0x30A2	0x4770    BX	LR
0x30A4	0x38004001  	USART1_SR+0
; end of _UART1_Init_Advanced
easymx_v7_STM32F107VC__log_initUartB:
;__em_f107vc_log.c, 44 :: 		static T_mikrobus_ret _log_initUartB(uint32_t baud)
; baud start address is: 0 (R0)
0x4120	0xB081    SUB	SP, SP, #4
0x4122	0xF8CDE000  STR	LR, [SP, #0]
; baud end address is: 0 (R0)
; baud start address is: 0 (R0)
;__em_f107vc_log.c, 46 :: 		UART2_Init_Advanced(baud, _UART_8_BIT_DATA, _UART_NOPARITY, _UART_ONE_STOPBIT, &_GPIO_MODULE_USART2_PD56);
0x4126	0x4909    LDR	R1, [PC, #36]
0x4128	0xB402    PUSH	(R1)
0x412A	0xF2400300  MOVW	R3, #0
0x412E	0xF2400200  MOVW	R2, #0
0x4132	0xF2400100  MOVW	R1, #0
; baud end address is: 0 (R0)
0x4136	0xF7FEFFB7  BL	_UART2_Init_Advanced+0
0x413A	0xB001    ADD	SP, SP, #4
;__em_f107vc_log.c, 47 :: 		logger = UART2_Write;
0x413C	0x4A04    LDR	R2, [PC, #16]
0x413E	0x4905    LDR	R1, [PC, #20]
0x4140	0x600A    STR	R2, [R1, #0]
;__em_f107vc_log.c, 48 :: 		return 0;
0x4142	0x2000    MOVS	R0, #0
;__em_f107vc_log.c, 49 :: 		}
L_end__log_initUartB:
0x4144	0xF8DDE000  LDR	LR, [SP, #0]
0x4148	0xB001    ADD	SP, SP, #4
0x414A	0x4770    BX	LR
0x414C	0x51680000  	__GPIO_MODULE_USART2_PD56+0
0x4150	0x31DD0000  	_UART2_Write+0
0x4154	0x0CF82000  	_logger+0
; end of easymx_v7_STM32F107VC__log_initUartB
_mikrobus_logWrite:
;easymx_v7_STM32F107VC.c, 319 :: 		T_mikrobus_ret mikrobus_logWrite(uint8_t* data_, T_log_format format)
; format start address is: 4 (R1)
; data_ start address is: 0 (R0)
0x4568	0xB083    SUB	SP, SP, #12
0x456A	0xF8CDE000  STR	LR, [SP, #0]
0x456E	0x4602    MOV	R2, R0
; format end address is: 4 (R1)
; data_ end address is: 0 (R0)
; data_ start address is: 8 (R2)
; format start address is: 4 (R1)
;easymx_v7_STM32F107VC.c, 321 :: 		uint8_t *ptr = data_;
; ptr start address is: 0 (R0)
0x4570	0x4610    MOV	R0, R2
; data_ end address is: 8 (R2)
;easymx_v7_STM32F107VC.c, 322 :: 		uint8_t row = 13;
0x4572	0x220D    MOVS	R2, #13
0x4574	0xF88D2008  STRB	R2, [SP, #8]
0x4578	0x220A    MOVS	R2, #10
0x457A	0xF88D2009  STRB	R2, [SP, #9]
;easymx_v7_STM32F107VC.c, 323 :: 		uint8_t line = 10;
;easymx_v7_STM32F107VC.c, 324 :: 		switch( format )
0x457E	0xE01F    B	L_mikrobus_logWrite95
; format end address is: 4 (R1)
;easymx_v7_STM32F107VC.c, 326 :: 		case _LOG_BYTE :
L_mikrobus_logWrite97:
;easymx_v7_STM32F107VC.c, 327 :: 		_log_write( ptr );
; ptr end address is: 0 (R0)
0x4580	0xF7FFFD2A  BL	easymx_v7_STM32F107VC__log_write+0
;easymx_v7_STM32F107VC.c, 328 :: 		break;
0x4584	0xE023    B	L_mikrobus_logWrite96
;easymx_v7_STM32F107VC.c, 329 :: 		case _LOG_TEXT :
L_mikrobus_logWrite98:
;easymx_v7_STM32F107VC.c, 330 :: 		while( *ptr )
; ptr start address is: 0 (R0)
L_mikrobus_logWrite99:
; ptr end address is: 0 (R0)
; ptr start address is: 0 (R0)
0x4586	0x7802    LDRB	R2, [R0, #0]
0x4588	0xB12A    CBZ	R2, L_mikrobus_logWrite100
;easymx_v7_STM32F107VC.c, 332 :: 		_log_write( ptr );
0x458A	0x9001    STR	R0, [SP, #4]
0x458C	0xF7FFFD24  BL	easymx_v7_STM32F107VC__log_write+0
0x4590	0x9801    LDR	R0, [SP, #4]
;easymx_v7_STM32F107VC.c, 333 :: 		ptr++;
0x4592	0x1C40    ADDS	R0, R0, #1
;easymx_v7_STM32F107VC.c, 334 :: 		}
; ptr end address is: 0 (R0)
0x4594	0xE7F7    B	L_mikrobus_logWrite99
L_mikrobus_logWrite100:
;easymx_v7_STM32F107VC.c, 335 :: 		break;
0x4596	0xE01A    B	L_mikrobus_logWrite96
;easymx_v7_STM32F107VC.c, 336 :: 		case _LOG_LINE :
L_mikrobus_logWrite101:
;easymx_v7_STM32F107VC.c, 337 :: 		while( *ptr )
; ptr start address is: 0 (R0)
L_mikrobus_logWrite102:
; ptr end address is: 0 (R0)
; ptr start address is: 0 (R0)
0x4598	0x7802    LDRB	R2, [R0, #0]
0x459A	0xB12A    CBZ	R2, L_mikrobus_logWrite103
;easymx_v7_STM32F107VC.c, 339 :: 		_log_write( ptr );
0x459C	0x9001    STR	R0, [SP, #4]
0x459E	0xF7FFFD1B  BL	easymx_v7_STM32F107VC__log_write+0
0x45A2	0x9801    LDR	R0, [SP, #4]
;easymx_v7_STM32F107VC.c, 340 :: 		ptr++;
0x45A4	0x1C40    ADDS	R0, R0, #1
;easymx_v7_STM32F107VC.c, 341 :: 		}
; ptr end address is: 0 (R0)
0x45A6	0xE7F7    B	L_mikrobus_logWrite102
L_mikrobus_logWrite103:
;easymx_v7_STM32F107VC.c, 342 :: 		_log_write( &row );
0x45A8	0xAA02    ADD	R2, SP, #8
0x45AA	0x4610    MOV	R0, R2
0x45AC	0xF7FFFD14  BL	easymx_v7_STM32F107VC__log_write+0
;easymx_v7_STM32F107VC.c, 343 :: 		_log_write( &line );
0x45B0	0xF10D0209  ADD	R2, SP, #9
0x45B4	0x4610    MOV	R0, R2
0x45B6	0xF7FFFD0F  BL	easymx_v7_STM32F107VC__log_write+0
;easymx_v7_STM32F107VC.c, 344 :: 		break;
0x45BA	0xE008    B	L_mikrobus_logWrite96
;easymx_v7_STM32F107VC.c, 345 :: 		default :
L_mikrobus_logWrite104:
;easymx_v7_STM32F107VC.c, 346 :: 		return _MIKROBUS_ERR_LOG;
0x45BC	0x2006    MOVS	R0, #6
0x45BE	0xE007    B	L_end_mikrobus_logWrite
;easymx_v7_STM32F107VC.c, 347 :: 		}
L_mikrobus_logWrite95:
; ptr start address is: 0 (R0)
; format start address is: 4 (R1)
0x45C0	0x2900    CMP	R1, #0
0x45C2	0xD0DD    BEQ	L_mikrobus_logWrite97
0x45C4	0x2901    CMP	R1, #1
0x45C6	0xD0DE    BEQ	L_mikrobus_logWrite98
0x45C8	0x2902    CMP	R1, #2
0x45CA	0xD0E5    BEQ	L_mikrobus_logWrite101
; format end address is: 4 (R1)
; ptr end address is: 0 (R0)
0x45CC	0xE7F6    B	L_mikrobus_logWrite104
L_mikrobus_logWrite96:
;easymx_v7_STM32F107VC.c, 348 :: 		return 0;
0x45CE	0x2000    MOVS	R0, #0
;easymx_v7_STM32F107VC.c, 349 :: 		}
L_end_mikrobus_logWrite:
0x45D0	0xF8DDE000  LDR	LR, [SP, #0]
0x45D4	0xB003    ADD	SP, SP, #12
0x45D6	0x4770    BX	LR
; end of _mikrobus_logWrite
easymx_v7_STM32F107VC__log_write:
;__em_f107vc_log.c, 17 :: 		static T_mikrobus_ret _log_write(uint8_t *data_)
; data_ start address is: 0 (R0)
0x3FD8	0xB081    SUB	SP, SP, #4
0x3FDA	0xF8CDE000  STR	LR, [SP, #0]
; data_ end address is: 0 (R0)
; data_ start address is: 0 (R0)
;__em_f107vc_log.c, 19 :: 		logger( *data_ );
0x3FDE	0x7801    LDRB	R1, [R0, #0]
; data_ end address is: 0 (R0)
0x3FE0	0xB2CC    UXTB	R4, R1
0x3FE2	0xB2A0    UXTH	R0, R4
0x3FE4	0x4C03    LDR	R4, [PC, #12]
0x3FE6	0x6824    LDR	R4, [R4, #0]
0x3FE8	0x47A0    BLX	R4
;__em_f107vc_log.c, 20 :: 		return 0;
0x3FEA	0x2000    MOVS	R0, #0
;__em_f107vc_log.c, 21 :: 		}
L_end__log_write:
0x3FEC	0xF8DDE000  LDR	LR, [SP, #0]
0x3FF0	0xB001    ADD	SP, SP, #4
0x3FF2	0x4770    BX	LR
0x3FF4	0x0CF82000  	_logger+0
; end of easymx_v7_STM32F107VC__log_write
_UART1_Write:
;__Lib_UART_123_45.c, 41 :: 		
; _data start address is: 0 (R0)
0x3594	0xB081    SUB	SP, SP, #4
0x3596	0xF8CDE000  STR	LR, [SP, #0]
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
;__Lib_UART_123_45.c, 42 :: 		
0x359A	0xB281    UXTH	R1, R0
; _data end address is: 0 (R0)
0x359C	0x4803    LDR	R0, [PC, #12]
0x359E	0xF7FEFA15  BL	__Lib_UART_123_45_UARTx_Write+0
;__Lib_UART_123_45.c, 43 :: 		
L_end_UART1_Write:
0x35A2	0xF8DDE000  LDR	LR, [SP, #0]
0x35A6	0xB001    ADD	SP, SP, #4
0x35A8	0x4770    BX	LR
0x35AA	0xBF00    NOP
0x35AC	0x38004001  	USART1_SR+0
; end of _UART1_Write
__Lib_UART_123_45_UARTx_Write:
;__Lib_UART_123_45.c, 35 :: 		
; _data start address is: 4 (R1)
; UART_Base start address is: 0 (R0)
0x19CC	0xB081    SUB	SP, SP, #4
; _data end address is: 4 (R1)
; UART_Base end address is: 0 (R0)
; UART_Base start address is: 0 (R0)
; _data start address is: 4 (R1)
0x19CE	0xF8AD1000  STRH	R1, [SP, #0]
; UART_Base end address is: 0 (R0)
; _data end address is: 4 (R1)
0x19D2	0x4601    MOV	R1, R0
0x19D4	0xF8BD0000  LDRH	R0, [SP, #0]
;__Lib_UART_123_45.c, 36 :: 		
L___Lib_UART_123_45_UARTx_Write0:
; _data start address is: 0 (R0)
; UART_Base start address is: 4 (R1)
0x19D8	0x680B    LDR	R3, [R1, #0]
0x19DA	0xF3C312C0  UBFX	R2, R3, #7, #1
0x19DE	0xB902    CBNZ	R2, L___Lib_UART_123_45_UARTx_Write1
;__Lib_UART_123_45.c, 37 :: 		
0x19E0	0xE7FA    B	L___Lib_UART_123_45_UARTx_Write0
L___Lib_UART_123_45_UARTx_Write1:
;__Lib_UART_123_45.c, 38 :: 		
0x19E2	0x1D0A    ADDS	R2, R1, #4
; UART_Base end address is: 4 (R1)
0x19E4	0x6010    STR	R0, [R2, #0]
; _data end address is: 0 (R0)
;__Lib_UART_123_45.c, 39 :: 		
L_end_UARTx_Write:
0x19E6	0xB001    ADD	SP, SP, #4
0x19E8	0x4770    BX	LR
; end of __Lib_UART_123_45_UARTx_Write
_UART2_Write:
;__Lib_UART_123_45.c, 45 :: 		
; _data start address is: 0 (R0)
0x31DC	0xB081    SUB	SP, SP, #4
0x31DE	0xF8CDE000  STR	LR, [SP, #0]
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
;__Lib_UART_123_45.c, 46 :: 		
0x31E2	0xB281    UXTH	R1, R0
; _data end address is: 0 (R0)
0x31E4	0x4803    LDR	R0, [PC, #12]
0x31E6	0xF7FEFBF1  BL	__Lib_UART_123_45_UARTx_Write+0
;__Lib_UART_123_45.c, 47 :: 		
L_end_UART2_Write:
0x31EA	0xF8DDE000  LDR	LR, [SP, #0]
0x31EE	0xB001    ADD	SP, SP, #4
0x31F0	0x4770    BX	LR
0x31F2	0xBF00    NOP
0x31F4	0x44004000  	USART2_SR+0
; end of _UART2_Write
_UART3_Write:
;__Lib_UART_123_45.c, 49 :: 		
; _data start address is: 0 (R0)
0x3390	0xB081    SUB	SP, SP, #4
0x3392	0xF8CDE000  STR	LR, [SP, #0]
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
;__Lib_UART_123_45.c, 50 :: 		
0x3396	0xB281    UXTH	R1, R0
; _data end address is: 0 (R0)
0x3398	0x4803    LDR	R0, [PC, #12]
0x339A	0xF7FEFB17  BL	__Lib_UART_123_45_UARTx_Write+0
;__Lib_UART_123_45.c, 51 :: 		
L_end_UART3_Write:
0x339E	0xF8DDE000  LDR	LR, [SP, #0]
0x33A2	0xB001    ADD	SP, SP, #4
0x33A4	0x4770    BX	LR
0x33A6	0xBF00    NOP
0x33A8	0x48004000  	USART3_SR+0
; end of _UART3_Write
_UART4_Write:
;__Lib_UART_123_45.c, 53 :: 		
; _data start address is: 0 (R0)
0x1F98	0xB081    SUB	SP, SP, #4
0x1F9A	0xF8CDE000  STR	LR, [SP, #0]
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
;__Lib_UART_123_45.c, 54 :: 		
0x1F9E	0xB281    UXTH	R1, R0
; _data end address is: 0 (R0)
0x1FA0	0x4803    LDR	R0, [PC, #12]
0x1FA2	0xF7FFFD13  BL	__Lib_UART_123_45_UARTx_Write+0
;__Lib_UART_123_45.c, 55 :: 		
L_end_UART4_Write:
0x1FA6	0xF8DDE000  LDR	LR, [SP, #0]
0x1FAA	0xB001    ADD	SP, SP, #4
0x1FAC	0x4770    BX	LR
0x1FAE	0xBF00    NOP
0x1FB0	0x4C004000  	UART4_SR+0
; end of _UART4_Write
_UART5_Write:
;__Lib_UART_123_45.c, 57 :: 		
; _data start address is: 0 (R0)
0x1DF8	0xB081    SUB	SP, SP, #4
0x1DFA	0xF8CDE000  STR	LR, [SP, #0]
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
;__Lib_UART_123_45.c, 58 :: 		
0x1DFE	0xB281    UXTH	R1, R0
; _data end address is: 0 (R0)
0x1E00	0x4803    LDR	R0, [PC, #12]
0x1E02	0xF7FFFDE3  BL	__Lib_UART_123_45_UARTx_Write+0
;__Lib_UART_123_45.c, 59 :: 		
L_end_UART5_Write:
0x1E06	0xF8DDE000  LDR	LR, [SP, #0]
0x1E0A	0xB001    ADD	SP, SP, #4
0x1E0C	0x4770    BX	LR
0x1E0E	0xBF00    NOP
0x1E10	0x50004000  	UART5_SR+0
; end of _UART5_Write
_applicationInit:
;Click_IR_Grid2_STM.c, 48 :: 		void applicationInit()
0x46CC	0xB081    SUB	SP, SP, #4
0x46CE	0xF8CDE000  STR	LR, [SP, #0]
;Click_IR_Grid2_STM.c, 50 :: 		irgrid2_i2cDriverInit( (T_IRGRID2_P)&_MIKROBUS1_GPIO, (T_IRGRID2_P)&_MIKROBUS1_I2C, 0x33 );
0x46D2	0x2233    MOVS	R2, #51
0x46D4	0x4907    LDR	R1, [PC, #28]
0x46D6	0x4808    LDR	R0, [PC, #32]
0x46D8	0xF7FFFF10  BL	_irgrid2_i2cDriverInit+0
;Click_IR_Grid2_STM.c, 51 :: 		irgrid2_init();
0x46DC	0xF7FFFEF6  BL	_irgrid2_init+0
;Click_IR_Grid2_STM.c, 52 :: 		mikrobus_logWrite("--- Start measurement ---", _LOG_LINE);
0x46E0	0x4806    LDR	R0, [PC, #24]
0x46E2	0x2102    MOVS	R1, #2
0x46E4	0xF7FFFF40  BL	_mikrobus_logWrite+0
;Click_IR_Grid2_STM.c, 53 :: 		Delay_100ms();
0x46E8	0xF7FFFC5A  BL	_Delay_100ms+0
;Click_IR_Grid2_STM.c, 54 :: 		}
L_end_applicationInit:
0x46EC	0xF8DDE000  LDR	LR, [SP, #0]
0x46F0	0xB001    ADD	SP, SP, #4
0x46F2	0x4770    BX	LR
0x46F4	0x52FC0000  	__MIKROBUS1_I2C+0
0x46F8	0x52400000  	__MIKROBUS1_GPIO+0
0x46FC	0x00002000  	?lstr2_Click_IR_Grid2_STM+0
; end of _applicationInit
_irgrid2_i2cDriverInit:
;__irgrid2_driver.c, 890 :: 		void irgrid2_i2cDriverInit(T_IRGRID2_P gpioObj, T_IRGRID2_P i2cObj, uint8_t slave)
; slave start address is: 8 (R2)
; i2cObj start address is: 4 (R1)
; gpioObj start address is: 0 (R0)
0x44FC	0xB081    SUB	SP, SP, #4
0x44FE	0xF8CDE000  STR	LR, [SP, #0]
0x4502	0x4604    MOV	R4, R0
; slave end address is: 8 (R2)
; i2cObj end address is: 4 (R1)
; gpioObj end address is: 0 (R0)
; gpioObj start address is: 16 (R4)
; i2cObj start address is: 4 (R1)
; slave start address is: 8 (R2)
;__irgrid2_driver.c, 892 :: 		_slaveAddress = slave;
0x4504	0x4B05    LDR	R3, [PC, #20]
0x4506	0x701A    STRB	R2, [R3, #0]
; slave end address is: 8 (R2)
;__irgrid2_driver.c, 893 :: 		hal_i2cMap( (T_HAL_P)i2cObj );
0x4508	0x4608    MOV	R0, R1
; i2cObj end address is: 4 (R1)
0x450A	0xF7FFFE41  BL	__irgrid2_driver_hal_i2cMap+0
;__irgrid2_driver.c, 894 :: 		hal_gpioMap( (T_HAL_P)gpioObj );
0x450E	0x4620    MOV	R0, R4
; gpioObj end address is: 16 (R4)
0x4510	0xF7FFFE74  BL	__irgrid2_driver_hal_gpioMap+0
;__irgrid2_driver.c, 895 :: 		}
L_end_irgrid2_i2cDriverInit:
0x4514	0xF8DDE000  LDR	LR, [SP, #0]
0x4518	0xB001    ADD	SP, SP, #4
0x451A	0x4770    BX	LR
0x451C	0x0CF62000  	__irgrid2_driver__slaveAddress+0
; end of _irgrid2_i2cDriverInit
__irgrid2_driver_hal_i2cMap:
;__hal_stm32.c, 82 :: 		static void hal_i2cMap(T_HAL_P i2cObj)
; i2cObj start address is: 0 (R0)
; i2cObj end address is: 0 (R0)
; i2cObj start address is: 0 (R0)
;__hal_stm32.c, 86 :: 		fp_i2cStart    = tmp->i2cStart;
0x4190	0x6802    LDR	R2, [R0, #0]
0x4192	0x4906    LDR	R1, [PC, #24]
0x4194	0x600A    STR	R2, [R1, #0]
;__hal_stm32.c, 87 :: 		fp_i2cWrite    = tmp->i2cWrite;
0x4196	0x1D01    ADDS	R1, R0, #4
0x4198	0x680A    LDR	R2, [R1, #0]
0x419A	0x4905    LDR	R1, [PC, #20]
0x419C	0x600A    STR	R2, [R1, #0]
;__hal_stm32.c, 88 :: 		fp_i2cRead     = tmp->i2cRead;
0x419E	0xF2000108  ADDW	R1, R0, #8
; i2cObj end address is: 0 (R0)
0x41A2	0x680A    LDR	R2, [R1, #0]
0x41A4	0x4903    LDR	R1, [PC, #12]
0x41A6	0x600A    STR	R2, [R1, #0]
;__hal_stm32.c, 89 :: 		}
L_end_hal_i2cMap:
0x41A8	0x4770    BX	LR
0x41AA	0xBF00    NOP
0x41AC	0x37742000  	__irgrid2_driver_fp_i2cStart+0
0x41B0	0x376C2000  	__irgrid2_driver_fp_i2cWrite+0
0x41B4	0x37702000  	__irgrid2_driver_fp_i2cRead+0
; end of __irgrid2_driver_hal_i2cMap
__irgrid2_driver_hal_gpioMap:
;__irgrid2_hal.c, 321 :: 		static void hal_gpioMap(T_HAL_P gpioObj)
;__irgrid2_hal.c, 397 :: 		}
L_end_hal_gpioMap:
0x41FC	0x4770    BX	LR
; end of __irgrid2_driver_hal_gpioMap
_irgrid2_init:
;__irgrid2_driver.c, 1020 :: 		void irgrid2_init()
0x44CC	0xB081    SUB	SP, SP, #4
0x44CE	0xF8CDE000  STR	LR, [SP, #0]
;__irgrid2_driver.c, 1024 :: 		irgrid2_readEEPROM(eeMLX90640);
0x44D2	0x4808    LDR	R0, [PC, #32]
0x44D4	0xF7FFFE70  BL	_irgrid2_readEEPROM+0
;__irgrid2_driver.c, 1025 :: 		irgrid2_ExtractParameters(eeMLX90640, &mlx90640);
0x44D8	0x4907    LDR	R1, [PC, #28]
0x44DA	0x4806    LDR	R0, [PC, #24]
0x44DC	0xF7FFFD9C  BL	_irgrid2_ExtractParameters+0
;__irgrid2_driver.c, 1026 :: 		irgrid2_setRefreshRate( 0x03 );
0x44E0	0x2003    MOVS	R0, #3
0x44E2	0xF7FFFD37  BL	_irgrid2_setRefreshRate+0
;__irgrid2_driver.c, 1027 :: 		Delay_100ms();
0x44E6	0xF7FFFD5B  BL	_Delay_100ms+0
;__irgrid2_driver.c, 1028 :: 		}
L_end_irgrid2_init:
0x44EA	0xF8DDE000  LDR	LR, [SP, #0]
0x44EE	0xB001    ADD	SP, SP, #4
0x44F0	0x4770    BX	LR
0x44F2	0xBF00    NOP
0x44F4	0x37A42000  	irgrid2_init_eeMLX90640_L0+0
0x44F8	0x0CFC2000  	__irgrid2_driver_mlx90640+0
; end of _irgrid2_init
_irgrid2_readEEPROM:
;__irgrid2_driver.c, 972 :: 		void irgrid2_readEEPROM(uint16_t *eeData)
; eeData start address is: 0 (R0)
0x41B8	0xB081    SUB	SP, SP, #4
0x41BA	0xF8CDE000  STR	LR, [SP, #0]
; eeData end address is: 0 (R0)
; eeData start address is: 0 (R0)
;__irgrid2_driver.c, 974 :: 		irgrid2_readData(0x2400, 832, eeData);
0x41BE	0x4602    MOV	R2, R0
; eeData end address is: 0 (R0)
0x41C0	0xF2403140  MOVW	R1, #832
0x41C4	0xF2424000  MOVW	R0, #9216
0x41C8	0xF7FEF90A  BL	_irgrid2_readData+0
;__irgrid2_driver.c, 975 :: 		}
L_end_irgrid2_readEEPROM:
0x41CC	0xF8DDE000  LDR	LR, [SP, #0]
0x41D0	0xB001    ADD	SP, SP, #4
0x41D2	0x4770    BX	LR
; end of _irgrid2_readEEPROM
_irgrid2_readData:
;__irgrid2_driver.c, 943 :: 		void irgrid2_readData(uint16_t startAddr, uint16_t nBytes, uint16_t *dataOUT)
; startAddr start address is: 0 (R0)
0x23E0	0xF2AD6D94  SUBW	SP, SP, #1684
0x23E4	0xF8CDE000  STR	LR, [SP, #0]
0x23E8	0xF8AD1688  STRH	R1, [SP, #1672]
0x23EC	0xF8CD268C  STR	R2, [SP, #1676]
; startAddr end address is: 0 (R0)
; startAddr start address is: 0 (R0)
;__irgrid2_driver.c, 946 :: 		uint8_t readReg[ 1664 ] = {0};
0x23F0	0xF10D0B06  ADD	R11, SP, #6
0x23F4	0xF50B6AD0  ADD	R10, R11, #1664
0x23F8	0xF8DFC0AC  LDR	R12, [PC, #172]
0x23FC	0xF002F9F6  BL	___CC2DW+0
;__irgrid2_driver.c, 947 :: 		uint16_t cnt = 0;
;__irgrid2_driver.c, 948 :: 		uint16_t dataCnt = 0;
;__irgrid2_driver.c, 949 :: 		uint16_t nMemAddressRead = 0;
;__irgrid2_driver.c, 950 :: 		uint16_t i = 0;
;__irgrid2_driver.c, 952 :: 		nMemAddressRead = 2 * nBytes;
0x2400	0xF8BD3688  LDRH	R3, [SP, #1672]
0x2404	0x005B    LSLS	R3, R3, #1
0x2406	0xF8AD3690  STRH	R3, [SP, #1680]
;__irgrid2_driver.c, 954 :: 		writeReg[ 0 ] = (uint8_t)(startAddr >> 8);
0x240A	0xAC01    ADD	R4, SP, #4
0x240C	0x0A03    LSRS	R3, R0, #8
0x240E	0xB2DB    UXTB	R3, R3
0x2410	0x7023    STRB	R3, [R4, #0]
;__irgrid2_driver.c, 955 :: 		writeReg[ 1 ] = (uint8_t)(startAddr & 0x00FF);
0x2412	0x1C64    ADDS	R4, R4, #1
0x2414	0xF00003FF  AND	R3, R0, #255
; startAddr end address is: 0 (R0)
0x2418	0xB2DB    UXTB	R3, R3
0x241A	0x7023    STRB	R3, [R4, #0]
;__irgrid2_driver.c, 957 :: 		hal_i2cStart();
0x241C	0xF7FFFC08  BL	__irgrid2_driver_hal_i2cStart+0
;__irgrid2_driver.c, 958 :: 		hal_i2cWrite(_slaveAddress, writeReg, 2, END_MODE_RESTART);
0x2420	0xAC01    ADD	R4, SP, #4
0x2422	0x4B22    LDR	R3, [PC, #136]
0x2424	0x781B    LDRB	R3, [R3, #0]
0x2426	0x2202    MOVS	R2, #2
0x2428	0x4621    MOV	R1, R4
0x242A	0xB2D8    UXTB	R0, R3
0x242C	0x2300    MOVS	R3, #0
0x242E	0xF7FFF99B  BL	__irgrid2_driver_hal_i2cWrite+0
;__irgrid2_driver.c, 959 :: 		Delay_10ms();
0x2432	0xF7FFF98D  BL	_Delay_10ms+0
;__irgrid2_driver.c, 960 :: 		hal_i2cRead(_slaveAddress, readReg, nMemAddressRead, END_MODE_STOP);
0x2436	0xF10D0406  ADD	R4, SP, #6
0x243A	0x4B1C    LDR	R3, [PC, #112]
0x243C	0x781B    LDRB	R3, [R3, #0]
0x243E	0xF8BD2690  LDRH	R2, [SP, #1680]
0x2442	0x4621    MOV	R1, R4
0x2444	0xB2D8    UXTB	R0, R3
0x2446	0x2301    MOVS	R3, #1
0x2448	0xF7FFF970  BL	__irgrid2_driver_hal_i2cRead+0
;__irgrid2_driver.c, 962 :: 		for(cnt=0; cnt < nBytes; cnt++)
; cnt start address is: 4 (R1)
0x244C	0x2100    MOVS	R1, #0
; cnt end address is: 4 (R1)
0x244E	0xB288    UXTH	R0, R1
L_irgrid2_readData155:
; cnt start address is: 0 (R0)
0x2450	0xF8BD3688  LDRH	R3, [SP, #1672]
0x2454	0x4298    CMP	R0, R3
0x2456	0xD221    BCS	L_irgrid2_readData156
;__irgrid2_driver.c, 964 :: 		i = cnt << 1;
0x2458	0x0045    LSLS	R5, R0, #1
0x245A	0xB2AD    UXTH	R5, R5
; i start address is: 4 (R1)
0x245C	0xB2A9    UXTH	R1, R5
;__irgrid2_driver.c, 965 :: 		dataOUT[cnt] = readReg[ i ];
0x245E	0x0044    LSLS	R4, R0, #1
0x2460	0xF8DD368C  LDR	R3, [SP, #1676]
0x2464	0x191C    ADDS	R4, R3, R4
0x2466	0xF10D0606  ADD	R6, SP, #6
0x246A	0x1973    ADDS	R3, R6, R5
0x246C	0x781B    LDRB	R3, [R3, #0]
0x246E	0x8023    STRH	R3, [R4, #0]
;__irgrid2_driver.c, 966 :: 		dataOUT[cnt] <<= 8;
0x2470	0x0044    LSLS	R4, R0, #1
0x2472	0xF8DD368C  LDR	R3, [SP, #1676]
0x2476	0x191C    ADDS	R4, R3, R4
0x2478	0x8823    LDRH	R3, [R4, #0]
0x247A	0x021B    LSLS	R3, R3, #8
0x247C	0x8023    STRH	R3, [R4, #0]
;__irgrid2_driver.c, 967 :: 		dataOUT[cnt] |= readReg[ i + 1 ];
0x247E	0x0044    LSLS	R4, R0, #1
0x2480	0xF8DD368C  LDR	R3, [SP, #1676]
0x2484	0x191D    ADDS	R5, R3, R4
0x2486	0x1C4B    ADDS	R3, R1, #1
0x2488	0xB29B    UXTH	R3, R3
; i end address is: 4 (R1)
0x248A	0x18F3    ADDS	R3, R6, R3
0x248C	0x781C    LDRB	R4, [R3, #0]
0x248E	0x882B    LDRH	R3, [R5, #0]
0x2490	0x4323    ORRS	R3, R4
0x2492	0x802B    STRH	R3, [R5, #0]
;__irgrid2_driver.c, 962 :: 		for(cnt=0; cnt < nBytes; cnt++)
0x2494	0x1C43    ADDS	R3, R0, #1
; cnt end address is: 0 (R0)
; cnt start address is: 4 (R1)
0x2496	0xB299    UXTH	R1, R3
;__irgrid2_driver.c, 968 :: 		}
0x2498	0xB288    UXTH	R0, R1
; cnt end address is: 4 (R1)
0x249A	0xE7D9    B	L_irgrid2_readData155
L_irgrid2_readData156:
;__irgrid2_driver.c, 969 :: 		}
L_end_irgrid2_readData:
0x249C	0xF8DDE000  LDR	LR, [SP, #0]
0x24A0	0xF20D6D94  ADDW	SP, SP, #1684
0x24A4	0x4770    BX	LR
0x24A6	0xBF00    NOP
0x24A8	0x49800000  	?ICSirgrid2_readData_readReg_L0+0
0x24AC	0x0CF62000  	__irgrid2_driver__slaveAddress+0
; end of _irgrid2_readData
__irgrid2_driver_hal_i2cStart:
;__hal_stm32.c, 91 :: 		static int hal_i2cStart()
0x1C30	0xB082    SUB	SP, SP, #8
0x1C32	0xF8CDE000  STR	LR, [SP, #0]
;__hal_stm32.c, 93 :: 		int res = 0;
0x1C36	0xF2400400  MOVW	R4, #0
0x1C3A	0xF8AD4004  STRH	R4, [SP, #4]
;__hal_stm32.c, 94 :: 		res |= fp_i2cStart();
0x1C3E	0x4C06    LDR	R4, [PC, #24]
0x1C40	0x6824    LDR	R4, [R4, #0]
0x1C42	0x47A0    BLX	R4
0x1C44	0xF9BD1004  LDRSH	R1, [SP, #4]
0x1C48	0xEA410000  ORR	R0, R1, R0, LSL #0
;__hal_stm32.c, 95 :: 		return res;
0x1C4C	0xB200    SXTH	R0, R0
;__hal_stm32.c, 96 :: 		}
L_end_hal_i2cStart:
0x1C4E	0xF8DDE000  LDR	LR, [SP, #0]
0x1C52	0xB002    ADD	SP, SP, #8
0x1C54	0x4770    BX	LR
0x1C56	0xBF00    NOP
0x1C58	0x37742000  	__irgrid2_driver_fp_i2cStart+0
; end of __irgrid2_driver_hal_i2cStart
_I2C1_Start:
;__Lib_I2C_12.c, 536 :: 		
0x15B8	0xB081    SUB	SP, SP, #4
0x15BA	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_I2C_12.c, 537 :: 		
0x15BE	0x4803    LDR	R0, [PC, #12]
0x15C0	0xF7FFF8F4  BL	_I2Cx_Start+0
;__Lib_I2C_12.c, 538 :: 		
L_end_I2C1_Start:
0x15C4	0xF8DDE000  LDR	LR, [SP, #0]
0x15C8	0xB001    ADD	SP, SP, #4
0x15CA	0x4770    BX	LR
0x15CC	0x54004000  	I2C1_CR1+0
; end of _I2C1_Start
_I2Cx_Start:
;__Lib_I2C_12.c, 204 :: 		
; I2C_BASE start address is: 0 (R0)
0x07AC	0xB083    SUB	SP, SP, #12
0x07AE	0xF8CDE000  STR	LR, [SP, #0]
0x07B2	0x4603    MOV	R3, R0
; I2C_BASE end address is: 0 (R0)
; I2C_BASE start address is: 12 (R3)
;__Lib_I2C_12.c, 205 :: 		
; timeout start address is: 0 (R0)
0x07B4	0xF04F0000  MOV	R0, #0
;__Lib_I2C_12.c, 208 :: 		
0x07B8	0x4926    LDR	R1, [PC, #152]
0x07BA	0x428B    CMP	R3, R1
0x07BC	0xD106    BNE	L_I2Cx_Start7
; timeout end address is: 0 (R0)
;__Lib_I2C_12.c, 209 :: 		
0x07BE	0x4926    LDR	R1, [PC, #152]
; timeout start address is: 16 (R4)
0x07C0	0x680C    LDR	R4, [R1, #0]
;__Lib_I2C_12.c, 210 :: 		
0x07C2	0x4926    LDR	R1, [PC, #152]
0x07C4	0x680A    LDR	R2, [R1, #0]
0x07C6	0x4926    LDR	R1, [PC, #152]
0x07C8	0x600A    STR	R2, [R1, #0]
;__Lib_I2C_12.c, 211 :: 		
; timeout end address is: 16 (R4)
0x07CA	0xE00B    B	L_I2Cx_Start8
L_I2Cx_Start7:
;__Lib_I2C_12.c, 212 :: 		
; timeout start address is: 0 (R0)
0x07CC	0x4925    LDR	R1, [PC, #148]
0x07CE	0x428B    CMP	R3, R1
0x07D0	0xD107    BNE	L__I2Cx_Start123
; timeout end address is: 0 (R0)
;__Lib_I2C_12.c, 213 :: 		
0x07D2	0x4925    LDR	R1, [PC, #148]
; timeout start address is: 0 (R0)
0x07D4	0x6808    LDR	R0, [R1, #0]
;__Lib_I2C_12.c, 214 :: 		
0x07D6	0x4925    LDR	R1, [PC, #148]
0x07D8	0x680A    LDR	R2, [R1, #0]
0x07DA	0x4921    LDR	R1, [PC, #132]
0x07DC	0x600A    STR	R2, [R1, #0]
; timeout end address is: 0 (R0)
0x07DE	0x4604    MOV	R4, R0
;__Lib_I2C_12.c, 215 :: 		
0x07E0	0xE000    B	L_I2Cx_Start9
L__I2Cx_Start123:
;__Lib_I2C_12.c, 212 :: 		
0x07E2	0x4604    MOV	R4, R0
;__Lib_I2C_12.c, 215 :: 		
L_I2Cx_Start9:
; timeout start address is: 16 (R4)
; timeout end address is: 16 (R4)
L_I2Cx_Start8:
;__Lib_I2C_12.c, 217 :: 		
; timeout start address is: 16 (R4)
0x07E4	0x4922    LDR	R1, [PC, #136]
0x07E6	0x600C    STR	R4, [R1, #0]
;__Lib_I2C_12.c, 219 :: 		
0x07E8	0x9401    STR	R4, [SP, #4]
0x07EA	0x9302    STR	R3, [SP, #8]
0x07EC	0x4618    MOV	R0, R3
0x07EE	0xF7FFFE7B  BL	__Lib_I2C_12_I2Cx_Wait_For_Idle+0
0x07F2	0x9B02    LDR	R3, [SP, #8]
0x07F4	0x9C01    LDR	R4, [SP, #4]
0x07F6	0xB910    CBNZ	R0, L_I2Cx_Start10
; I2C_BASE end address is: 12 (R3)
; timeout end address is: 16 (R4)
;__Lib_I2C_12.c, 220 :: 		
0x07F8	0xF64F70FF  MOVW	R0, #65535
0x07FC	0xE025    B	L_end_I2Cx_Start
;__Lib_I2C_12.c, 221 :: 		
L_I2Cx_Start10:
;__Lib_I2C_12.c, 224 :: 		
; timeout start address is: 16 (R4)
; I2C_BASE start address is: 12 (R3)
0x07FE	0x2201    MOVS	R2, #1
0x0800	0x6819    LDR	R1, [R3, #0]
0x0802	0xF3622108  BFI	R1, R2, #8, #1
0x0806	0x6019    STR	R1, [R3, #0]
;__Lib_I2C_12.c, 226 :: 		
0x0808	0xF2030114  ADDW	R1, R3, #20
0x080C	0x680A    LDR	R2, [R1, #0]
0x080E	0xF3C22140  UBFX	R1, R2, #9, #1
0x0812	0xB111    CBZ	R1, L_I2Cx_Start11
; I2C_BASE end address is: 12 (R3)
; timeout end address is: 16 (R4)
;__Lib_I2C_12.c, 227 :: 		
0x0814	0xF64F70FF  MOVW	R0, #65535
0x0818	0xE017    B	L_end_I2Cx_Start
;__Lib_I2C_12.c, 228 :: 		
L_I2Cx_Start11:
;__Lib_I2C_12.c, 229 :: 		
; timeout start address is: 16 (R4)
; I2C_BASE start address is: 12 (R3)
0x081A	0x4625    MOV	R5, R4
; timeout end address is: 16 (R4)
0x081C	0x461C    MOV	R4, R3
L_I2Cx_Start12:
; I2C_BASE end address is: 12 (R3)
; timeout start address is: 20 (R5)
; I2C_BASE start address is: 16 (R4)
0x081E	0x4915    LDR	R1, [PC, #84]
0x0820	0x4620    MOV	R0, R4
0x0822	0xF7FFFF29  BL	_ChekXForEvent+0
0x0826	0xB978    CBNZ	R0, L_I2Cx_Start13
;__Lib_I2C_12.c, 230 :: 		
0x0828	0x4911    LDR	R1, [PC, #68]
0x082A	0x6809    LDR	R1, [R1, #0]
0x082C	0xB159    CBZ	R1, L__I2Cx_Start124
;__Lib_I2C_12.c, 231 :: 		
0x082E	0xB935    CBNZ	R5, L_I2Cx_Start15
; I2C_BASE end address is: 16 (R4)
; timeout end address is: 20 (R5)
;__Lib_I2C_12.c, 232 :: 		
0x0830	0x2006    MOVS	R0, #6
0x0832	0x4C0B    LDR	R4, [PC, #44]
0x0834	0x6824    LDR	R4, [R4, #0]
0x0836	0x47A0    BLX	R4
;__Lib_I2C_12.c, 233 :: 		
0x0838	0xF64F70FF  MOVW	R0, #65535
0x083C	0xE005    B	L_end_I2Cx_Start
;__Lib_I2C_12.c, 234 :: 		
L_I2Cx_Start15:
;__Lib_I2C_12.c, 235 :: 		
; timeout start address is: 20 (R5)
; I2C_BASE start address is: 16 (R4)
0x083E	0x1E69    SUBS	R1, R5, #1
; timeout end address is: 20 (R5)
; timeout start address is: 0 (R0)
0x0840	0x4608    MOV	R0, R1
; timeout end address is: 0 (R0)
0x0842	0x4605    MOV	R5, R0
;__Lib_I2C_12.c, 236 :: 		
0x0844	0xE7FF    B	L_I2Cx_Start14
L__I2Cx_Start124:
;__Lib_I2C_12.c, 230 :: 		
;__Lib_I2C_12.c, 236 :: 		
L_I2Cx_Start14:
;__Lib_I2C_12.c, 237 :: 		
; timeout start address is: 20 (R5)
; I2C_BASE end address is: 16 (R4)
; timeout end address is: 20 (R5)
0x0846	0xE7EA    B	L_I2Cx_Start12
L_I2Cx_Start13:
;__Lib_I2C_12.c, 238 :: 		
0x0848	0x2000    MOVS	R0, #0
;__Lib_I2C_12.c, 239 :: 		
L_end_I2Cx_Start:
0x084A	0xF8DDE000  LDR	LR, [SP, #0]
0x084E	0xB003    ADD	SP, SP, #12
0x0850	0x4770    BX	LR
0x0852	0xBF00    NOP
0x0854	0x54004000  	I2C1_CR1+0
0x0858	0x00842000  	__Lib_I2C_12__I2C1_TIMEOUT+0
0x085C	0x37802000  	_I2C1_Timeout_Ptr+0
0x0860	0x377C2000  	_I2Cx_Timeout_Ptr+0
0x0864	0x58004000  	I2C2_CR1+0
0x0868	0x00882000  	__Lib_I2C_12__I2C2_TIMEOUT+0
0x086C	0x37842000  	_I2C2_Timeout_Ptr+0
0x0870	0x008C2000  	__Lib_I2C_12__I2Cx_TIMEOUT+0
0x0874	0x00010003  	#196609
; end of _I2Cx_Start
easymx_v7_STM32F107VC__setAN_1:
;__em_f107vc_gpio.c, 43 :: 		static void _setAN_1  (uint8_t value) 	{ GPIOA_ODR.B4  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0294	0x4901    LDR	R1, [PC, #4]
0x0296	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setAN_1:
0x0298	0x4770    BX	LR
0x029A	0xBF00    NOP
0x029C	0x01904221  	GPIOA_ODR+0
; end of easymx_v7_STM32F107VC__setAN_1
easymx_v7_STM32F107VC__setRST_1:
;__em_f107vc_gpio.c, 44 :: 		static void _setRST_1 (uint8_t value) 	{ GPIOC_ODR.B2  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x02A0	0x4901    LDR	R1, [PC, #4]
0x02A2	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setRST_1:
0x02A4	0x4770    BX	LR
0x02A6	0xBF00    NOP
0x02A8	0x01884222  	GPIOC_ODR+0
; end of easymx_v7_STM32F107VC__setRST_1
easymx_v7_STM32F107VC__setCS_1:
;__em_f107vc_gpio.c, 45 :: 		static void _setCS_1  (uint8_t value) 	{ GPIOD_ODR.B13 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0288	0x4901    LDR	R1, [PC, #4]
0x028A	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setCS_1:
0x028C	0x4770    BX	LR
0x028E	0xBF00    NOP
0x0290	0x81B44222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setCS_1
easymx_v7_STM32F107VC__setSCK_1:
;__em_f107vc_gpio.c, 46 :: 		static void _setSCK_1 (uint8_t value) 	{ GPIOC_ODR.B10 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0270	0x4901    LDR	R1, [PC, #4]
0x0272	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setSCK_1:
0x0274	0x4770    BX	LR
0x0276	0xBF00    NOP
0x0278	0x01A84222  	GPIOC_ODR+0
; end of easymx_v7_STM32F107VC__setSCK_1
easymx_v7_STM32F107VC__setMISO_1:
;__em_f107vc_gpio.c, 47 :: 		static void _setMISO_1(uint8_t value) 	{ GPIOC_ODR.B11 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x027C	0x4901    LDR	R1, [PC, #4]
0x027E	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setMISO_1:
0x0280	0x4770    BX	LR
0x0282	0xBF00    NOP
0x0284	0x01AC4222  	GPIOC_ODR+0
; end of easymx_v7_STM32F107VC__setMISO_1
easymx_v7_STM32F107VC__setMOSI_1:
;__em_f107vc_gpio.c, 48 :: 		static void _setMOSI_1(uint8_t value) 	{ GPIOC_ODR.B12 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x02AC	0x4901    LDR	R1, [PC, #4]
0x02AE	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setMOSI_1:
0x02B0	0x4770    BX	LR
0x02B2	0xBF00    NOP
0x02B4	0x01B04222  	GPIOC_ODR+0
; end of easymx_v7_STM32F107VC__setMOSI_1
easymx_v7_STM32F107VC__setPWM_1:
;__em_f107vc_gpio.c, 49 :: 		static void _setPWM_1 (uint8_t value) 	{ GPIOA_ODR.B0  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x02DC	0x4901    LDR	R1, [PC, #4]
0x02DE	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setPWM_1:
0x02E0	0x4770    BX	LR
0x02E2	0xBF00    NOP
0x02E4	0x01804221  	GPIOA_ODR+0
; end of easymx_v7_STM32F107VC__setPWM_1
easymx_v7_STM32F107VC__setINT_1:
;__em_f107vc_gpio.c, 50 :: 		static void _setINT_1 (uint8_t value) 	{ GPIOD_ODR.B10 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x02E8	0x4901    LDR	R1, [PC, #4]
0x02EA	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setINT_1:
0x02EC	0x4770    BX	LR
0x02EE	0xBF00    NOP
0x02F0	0x81A84222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setINT_1
easymx_v7_STM32F107VC__setRX_1:
;__em_f107vc_gpio.c, 51 :: 		static void _setRX_1  (uint8_t value) 	{ GPIOD_ODR.B9  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x02D0	0x4901    LDR	R1, [PC, #4]
0x02D2	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setRX_1:
0x02D4	0x4770    BX	LR
0x02D6	0xBF00    NOP
0x02D8	0x81A44222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setRX_1
easymx_v7_STM32F107VC__setTX_1:
;__em_f107vc_gpio.c, 52 :: 		static void _setTX_1  (uint8_t value) 	{ GPIOD_ODR.B8  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x02B8	0x4901    LDR	R1, [PC, #4]
0x02BA	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setTX_1:
0x02BC	0x4770    BX	LR
0x02BE	0xBF00    NOP
0x02C0	0x81A04222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setTX_1
easymx_v7_STM32F107VC__setSCL_1:
;__em_f107vc_gpio.c, 53 :: 		static void _setSCL_1 (uint8_t value) 	{ GPIOB_ODR.B6  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x02C4	0x4901    LDR	R1, [PC, #4]
0x02C6	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setSCL_1:
0x02C8	0x4770    BX	LR
0x02CA	0xBF00    NOP
0x02CC	0x81984221  	GPIOB_ODR+0
; end of easymx_v7_STM32F107VC__setSCL_1
easymx_v7_STM32F107VC__setSDA_1:
;__em_f107vc_gpio.c, 54 :: 		static void _setSDA_1 (uint8_t value) 	{ GPIOB_ODR.B7  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0210	0x4901    LDR	R1, [PC, #4]
0x0212	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setSDA_1:
0x0214	0x4770    BX	LR
0x0216	0xBF00    NOP
0x0218	0x819C4221  	GPIOB_ODR+0
; end of easymx_v7_STM32F107VC__setSDA_1
easymx_v7_STM32F107VC__setAN_2:
;__em_f107vc_gpio.c, 68 :: 		static void _setAN_2  (uint8_t value)   { GPIOA_ODR.B5  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x021C	0x4901    LDR	R1, [PC, #4]
0x021E	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setAN_2:
0x0220	0x4770    BX	LR
0x0222	0xBF00    NOP
0x0224	0x01944221  	GPIOA_ODR+0
; end of easymx_v7_STM32F107VC__setAN_2
easymx_v7_STM32F107VC__setRST_2:
;__em_f107vc_gpio.c, 69 :: 		static void _setRST_2 (uint8_t value)   { GPIOC_ODR.B3  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0228	0x4901    LDR	R1, [PC, #4]
0x022A	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setRST_2:
0x022C	0x4770    BX	LR
0x022E	0xBF00    NOP
0x0230	0x018C4222  	GPIOC_ODR+0
; end of easymx_v7_STM32F107VC__setRST_2
easymx_v7_STM32F107VC__setCS_2:
;__em_f107vc_gpio.c, 70 :: 		static void _setCS_2  (uint8_t value)   { GPIOD_ODR.B14 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0258	0x4901    LDR	R1, [PC, #4]
0x025A	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setCS_2:
0x025C	0x4770    BX	LR
0x025E	0xBF00    NOP
0x0260	0x81B84222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setCS_2
easymx_v7_STM32F107VC__setSCK_2:
;__em_f107vc_gpio.c, 71 :: 		static void _setSCK_2 (uint8_t value)   { GPIOC_ODR.B10 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0264	0x4901    LDR	R1, [PC, #4]
0x0266	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setSCK_2:
0x0268	0x4770    BX	LR
0x026A	0xBF00    NOP
0x026C	0x01A84222  	GPIOC_ODR+0
; end of easymx_v7_STM32F107VC__setSCK_2
easymx_v7_STM32F107VC__setMISO_2:
;__em_f107vc_gpio.c, 72 :: 		static void _setMISO_2(uint8_t value)   { GPIOC_ODR.B11 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x024C	0x4901    LDR	R1, [PC, #4]
0x024E	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setMISO_2:
0x0250	0x4770    BX	LR
0x0252	0xBF00    NOP
0x0254	0x01AC4222  	GPIOC_ODR+0
; end of easymx_v7_STM32F107VC__setMISO_2
easymx_v7_STM32F107VC__setMOSI_2:
;__em_f107vc_gpio.c, 73 :: 		static void _setMOSI_2(uint8_t value)   { GPIOC_ODR.B12 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0234	0x4901    LDR	R1, [PC, #4]
0x0236	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setMOSI_2:
0x0238	0x4770    BX	LR
0x023A	0xBF00    NOP
0x023C	0x01B04222  	GPIOC_ODR+0
; end of easymx_v7_STM32F107VC__setMOSI_2
easymx_v7_STM32F107VC__setPWM_2:
;__em_f107vc_gpio.c, 74 :: 		static void _setPWM_2 (uint8_t value)   { GPIOD_ODR.B12 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0240	0x4901    LDR	R1, [PC, #4]
0x0242	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setPWM_2:
0x0244	0x4770    BX	LR
0x0246	0xBF00    NOP
0x0248	0x81B04222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setPWM_2
easymx_v7_STM32F107VC__setINT_2:
;__em_f107vc_gpio.c, 75 :: 		static void _setINT_2 (uint8_t value)   { GPIOD_ODR.B12 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x06B4	0x4901    LDR	R1, [PC, #4]
0x06B6	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setINT_2:
0x06B8	0x4770    BX	LR
0x06BA	0xBF00    NOP
0x06BC	0x81B04222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setINT_2
easymx_v7_STM32F107VC__setRX_2:
;__em_f107vc_gpio.c, 76 :: 		static void _setRX_2  (uint8_t value)   { GPIOD_ODR.B6  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x06A8	0x4901    LDR	R1, [PC, #4]
0x06AA	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setRX_2:
0x06AC	0x4770    BX	LR
0x06AE	0xBF00    NOP
0x06B0	0x81984222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setRX_2
easymx_v7_STM32F107VC__setTX_2:
;__em_f107vc_gpio.c, 77 :: 		static void _setTX_2  (uint8_t value)   { GPIOD_ODR.B5  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x06CC	0x4901    LDR	R1, [PC, #4]
0x06CE	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setTX_2:
0x06D0	0x4770    BX	LR
0x06D2	0xBF00    NOP
0x06D4	0x81944222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setTX_2
easymx_v7_STM32F107VC__setSCL_2:
;__em_f107vc_gpio.c, 78 :: 		static void _setSCL_2 (uint8_t value)   { GPIOB_ODR.B6  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x06C0	0x4901    LDR	R1, [PC, #4]
0x06C2	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setSCL_2:
0x06C4	0x4770    BX	LR
0x06C6	0xBF00    NOP
0x06C8	0x81984221  	GPIOB_ODR+0
; end of easymx_v7_STM32F107VC__setSCL_2
easymx_v7_STM32F107VC__setSDA_2:
;__em_f107vc_gpio.c, 79 :: 		static void _setSDA_2 (uint8_t value)   { GPIOB_ODR.B7  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x069C	0x4901    LDR	R1, [PC, #4]
0x069E	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setSDA_2:
0x06A0	0x4770    BX	LR
0x06A2	0xBF00    NOP
0x06A4	0x819C4221  	GPIOB_ODR+0
; end of easymx_v7_STM32F107VC__setSDA_2
__Lib_I2C_12_I2Cx_Wait_For_Idle:
;__Lib_I2C_12.c, 172 :: 		
; I2C_BASE start address is: 0 (R0)
0x04E8	0xB081    SUB	SP, SP, #4
0x04EA	0xF8CDE000  STR	LR, [SP, #0]
; I2C_BASE end address is: 0 (R0)
; I2C_BASE start address is: 0 (R0)
;__Lib_I2C_12.c, 173 :: 		
; timeout start address is: 8 (R2)
0x04EE	0xF04F0200  MOV	R2, #0
;__Lib_I2C_12.c, 176 :: 		
0x04F2	0x4919    LDR	R1, [PC, #100]
0x04F4	0x4288    CMP	R0, R1
0x04F6	0xD107    BNE	L___Lib_I2C_12_I2Cx_Wait_For_Idle0
; timeout end address is: 8 (R2)
;__Lib_I2C_12.c, 177 :: 		
0x04F8	0x4918    LDR	R1, [PC, #96]
; timeout start address is: 12 (R3)
0x04FA	0x680B    LDR	R3, [R1, #0]
;__Lib_I2C_12.c, 178 :: 		
0x04FC	0x4918    LDR	R1, [PC, #96]
0x04FE	0x680A    LDR	R2, [R1, #0]
0x0500	0x4918    LDR	R1, [PC, #96]
0x0502	0x600A    STR	R2, [R1, #0]
;__Lib_I2C_12.c, 179 :: 		
0x0504	0x461C    MOV	R4, R3
; timeout end address is: 12 (R3)
0x0506	0xE00B    B	L___Lib_I2C_12_I2Cx_Wait_For_Idle1
L___Lib_I2C_12_I2Cx_Wait_For_Idle0:
;__Lib_I2C_12.c, 180 :: 		
; timeout start address is: 8 (R2)
0x0508	0x4917    LDR	R1, [PC, #92]
0x050A	0x4288    CMP	R0, R1
0x050C	0xD107    BNE	L___Lib_I2C_12_I2Cx_Wait_For_Idle121
; timeout end address is: 8 (R2)
;__Lib_I2C_12.c, 181 :: 		
0x050E	0x4917    LDR	R1, [PC, #92]
; timeout start address is: 12 (R3)
0x0510	0x680B    LDR	R3, [R1, #0]
;__Lib_I2C_12.c, 182 :: 		
0x0512	0x4917    LDR	R1, [PC, #92]
0x0514	0x680A    LDR	R2, [R1, #0]
0x0516	0x4913    LDR	R1, [PC, #76]
0x0518	0x600A    STR	R2, [R1, #0]
; timeout end address is: 12 (R3)
0x051A	0x461C    MOV	R4, R3
;__Lib_I2C_12.c, 183 :: 		
0x051C	0xE000    B	L___Lib_I2C_12_I2Cx_Wait_For_Idle2
L___Lib_I2C_12_I2Cx_Wait_For_Idle121:
;__Lib_I2C_12.c, 180 :: 		
0x051E	0x4614    MOV	R4, R2
;__Lib_I2C_12.c, 183 :: 		
L___Lib_I2C_12_I2Cx_Wait_For_Idle2:
; timeout start address is: 16 (R4)
; timeout end address is: 16 (R4)
L___Lib_I2C_12_I2Cx_Wait_For_Idle1:
;__Lib_I2C_12.c, 185 :: 		
; timeout start address is: 16 (R4)
0x0520	0x4914    LDR	R1, [PC, #80]
0x0522	0x600C    STR	R4, [R1, #0]
; I2C_BASE end address is: 0 (R0)
; timeout end address is: 16 (R4)
0x0524	0x4603    MOV	R3, R0
;__Lib_I2C_12.c, 187 :: 		
L___Lib_I2C_12_I2Cx_Wait_For_Idle3:
; timeout start address is: 16 (R4)
; I2C_BASE start address is: 12 (R3)
0x0526	0x4618    MOV	R0, R3
0x0528	0xF7FFFE58  BL	_I2Cx_Is_Idle+0
0x052C	0xB970    CBNZ	R0, L___Lib_I2C_12_I2Cx_Wait_For_Idle4
;__Lib_I2C_12.c, 188 :: 		
0x052E	0x4911    LDR	R1, [PC, #68]
0x0530	0x6809    LDR	R1, [R1, #0]
0x0532	0xB151    CBZ	R1, L___Lib_I2C_12_I2Cx_Wait_For_Idle122
;__Lib_I2C_12.c, 189 :: 		
0x0534	0xB92C    CBNZ	R4, L___Lib_I2C_12_I2Cx_Wait_For_Idle6
; I2C_BASE end address is: 12 (R3)
; timeout end address is: 16 (R4)
;__Lib_I2C_12.c, 190 :: 		
0x0536	0x2005    MOVS	R0, #5
0x0538	0x4C0A    LDR	R4, [PC, #40]
0x053A	0x6824    LDR	R4, [R4, #0]
0x053C	0x47A0    BLX	R4
;__Lib_I2C_12.c, 191 :: 		
0x053E	0x2000    MOVS	R0, #0
0x0540	0xE005    B	L_end_I2Cx_Wait_For_Idle
;__Lib_I2C_12.c, 192 :: 		
L___Lib_I2C_12_I2Cx_Wait_For_Idle6:
;__Lib_I2C_12.c, 193 :: 		
; timeout start address is: 16 (R4)
; I2C_BASE start address is: 12 (R3)
0x0542	0x1E61    SUBS	R1, R4, #1
; timeout end address is: 16 (R4)
; timeout start address is: 0 (R0)
0x0544	0x4608    MOV	R0, R1
; timeout end address is: 0 (R0)
0x0546	0x4604    MOV	R4, R0
;__Lib_I2C_12.c, 194 :: 		
0x0548	0xE7FF    B	L___Lib_I2C_12_I2Cx_Wait_For_Idle5
L___Lib_I2C_12_I2Cx_Wait_For_Idle122:
;__Lib_I2C_12.c, 188 :: 		
;__Lib_I2C_12.c, 194 :: 		
L___Lib_I2C_12_I2Cx_Wait_For_Idle5:
;__Lib_I2C_12.c, 195 :: 		
; timeout start address is: 16 (R4)
; I2C_BASE end address is: 12 (R3)
; timeout end address is: 16 (R4)
0x054A	0xE7EC    B	L___Lib_I2C_12_I2Cx_Wait_For_Idle3
L___Lib_I2C_12_I2Cx_Wait_For_Idle4:
;__Lib_I2C_12.c, 196 :: 		
0x054C	0x2001    MOVS	R0, #1
;__Lib_I2C_12.c, 197 :: 		
L_end_I2Cx_Wait_For_Idle:
0x054E	0xF8DDE000  LDR	LR, [SP, #0]
0x0552	0xB001    ADD	SP, SP, #4
0x0554	0x4770    BX	LR
0x0556	0xBF00    NOP
0x0558	0x54004000  	I2C1_CR1+0
0x055C	0x00842000  	__Lib_I2C_12__I2C1_TIMEOUT+0
0x0560	0x37802000  	_I2C1_Timeout_Ptr+0
0x0564	0x377C2000  	_I2Cx_Timeout_Ptr+0
0x0568	0x58004000  	I2C2_CR1+0
0x056C	0x00882000  	__Lib_I2C_12__I2C2_TIMEOUT+0
0x0570	0x37842000  	_I2C2_Timeout_Ptr+0
0x0574	0x008C2000  	__Lib_I2C_12__I2Cx_TIMEOUT+0
; end of __Lib_I2C_12_I2Cx_Wait_For_Idle
_I2Cx_Is_Idle:
;__Lib_I2C_12.c, 167 :: 		
; I2C_BASE start address is: 0 (R0)
0x01DC	0xB081    SUB	SP, SP, #4
; I2C_BASE end address is: 0 (R0)
; I2C_BASE start address is: 0 (R0)
;__Lib_I2C_12.c, 168 :: 		
0x01DE	0xF2000118  ADDW	R1, R0, #24
; I2C_BASE end address is: 0 (R0)
0x01E2	0x680A    LDR	R2, [R1, #0]
0x01E4	0xF3C20140  UBFX	R1, R2, #1, #1
0x01E8	0xF0810101  EOR	R1, R1, #1
0x01EC	0xB2C9    UXTB	R1, R1
0x01EE	0xB2C8    UXTB	R0, R1
;__Lib_I2C_12.c, 169 :: 		
L_end_I2Cx_Is_Idle:
0x01F0	0xB001    ADD	SP, SP, #4
0x01F2	0x4770    BX	LR
; end of _I2Cx_Is_Idle
_ChekXForEvent:
;__Lib_I2C_12.c, 199 :: 		
; Event start address is: 4 (R1)
; I2C_BASE start address is: 0 (R0)
0x0678	0xB081    SUB	SP, SP, #4
0x067A	0xF8CDE000  STR	LR, [SP, #0]
0x067E	0x460B    MOV	R3, R1
; Event end address is: 4 (R1)
; I2C_BASE end address is: 0 (R0)
; I2C_BASE start address is: 0 (R0)
; Event start address is: 12 (R3)
;__Lib_I2C_12.c, 200 :: 		
; I2C_BASE end address is: 0 (R0)
0x0680	0xF7FFFDB8  BL	_I2Cx_Get_Status+0
0x0684	0xEA000203  AND	R2, R0, R3, LSL #0
0x0688	0x429A    CMP	R2, R3
0x068A	0xF2400200  MOVW	R2, #0
0x068E	0xD100    BNE	L__ChekXForEvent156
0x0690	0x2201    MOVS	R2, #1
L__ChekXForEvent156:
; Event end address is: 12 (R3)
0x0692	0xB2D0    UXTB	R0, R2
;__Lib_I2C_12.c, 201 :: 		
L_end_ChekXForEvent:
0x0694	0xF8DDE000  LDR	LR, [SP, #0]
0x0698	0xB001    ADD	SP, SP, #4
0x069A	0x4770    BX	LR
; end of _ChekXForEvent
_I2Cx_Get_Status:
;__Lib_I2C_12.c, 154 :: 		
; I2C_BASE start address is: 0 (R0)
0x01F4	0xB081    SUB	SP, SP, #4
; I2C_BASE end address is: 0 (R0)
; I2C_BASE start address is: 0 (R0)
;__Lib_I2C_12.c, 157 :: 		
0x01F6	0xF2000114  ADDW	R1, R0, #20
0x01FA	0x680A    LDR	R2, [R1, #0]
;__Lib_I2C_12.c, 158 :: 		
0x01FC	0xF2000118  ADDW	R1, R0, #24
; I2C_BASE end address is: 0 (R0)
0x0200	0x6809    LDR	R1, [R1, #0]
;__Lib_I2C_12.c, 160 :: 		
0x0202	0x0409    LSLS	R1, R1, #16
0x0204	0xEA420101  ORR	R1, R2, R1, LSL #0
0x0208	0x4608    MOV	R0, R1
;__Lib_I2C_12.c, 161 :: 		
L_end_I2Cx_Get_Status:
0x020A	0xB001    ADD	SP, SP, #4
0x020C	0x4770    BX	LR
; end of _I2Cx_Get_Status
_I2C2_Start:
;__Lib_I2C_12.c, 566 :: 		
0x1218	0xB081    SUB	SP, SP, #4
0x121A	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_I2C_12.c, 567 :: 		
0x121E	0x4803    LDR	R0, [PC, #12]
0x1220	0xF7FFFAC4  BL	_I2Cx_Start+0
;__Lib_I2C_12.c, 568 :: 		
L_end_I2C2_Start:
0x1224	0xF8DDE000  LDR	LR, [SP, #0]
0x1228	0xB001    ADD	SP, SP, #4
0x122A	0x4770    BX	LR
0x122C	0x58004000  	I2C2_CR1+0
; end of _I2C2_Start
_UART1_Read:
;__Lib_UART_123_45.c, 104 :: 		
0x1358	0xB081    SUB	SP, SP, #4
0x135A	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 105 :: 		
0x135E	0x4803    LDR	R0, [PC, #12]
0x1360	0xF7FFFB0A  BL	__Lib_UART_123_45_UARTx_Read+0
;__Lib_UART_123_45.c, 106 :: 		
L_end_UART1_Read:
0x1364	0xF8DDE000  LDR	LR, [SP, #0]
0x1368	0xB001    ADD	SP, SP, #4
0x136A	0x4770    BX	LR
0x136C	0x38004001  	USART1_SR+0
; end of _UART1_Read
__Lib_UART_123_45_UARTx_Read:
;__Lib_UART_123_45.c, 96 :: 		
; UART_Base start address is: 0 (R0)
0x0978	0xB081    SUB	SP, SP, #4
; UART_Base end address is: 0 (R0)
; UART_Base start address is: 0 (R0)
; UART_Base end address is: 0 (R0)
;__Lib_UART_123_45.c, 98 :: 		
L___Lib_UART_123_45_UARTx_Read4:
; UART_Base start address is: 0 (R0)
0x097A	0x6802    LDR	R2, [R0, #0]
0x097C	0xF3C21140  UBFX	R1, R2, #5, #1
0x0980	0xB901    CBNZ	R1, L___Lib_UART_123_45_UARTx_Read5
0x0982	0xE7FA    B	L___Lib_UART_123_45_UARTx_Read4
L___Lib_UART_123_45_UARTx_Read5:
;__Lib_UART_123_45.c, 101 :: 		
0x0984	0x1D01    ADDS	R1, R0, #4
; UART_Base end address is: 0 (R0)
0x0986	0x6809    LDR	R1, [R1, #0]
0x0988	0xB288    UXTH	R0, R1
;__Lib_UART_123_45.c, 102 :: 		
L_end_UARTx_Read:
0x098A	0xB001    ADD	SP, SP, #4
0x098C	0x4770    BX	LR
; end of __Lib_UART_123_45_UARTx_Read
_UART1_Data_Ready:
;__Lib_UART_123_45.c, 131 :: 		
0x1340	0xB081    SUB	SP, SP, #4
0x1342	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 132 :: 		
0x1346	0x4803    LDR	R0, [PC, #12]
0x1348	0xF7FFFB10  BL	__Lib_UART_123_45_UARTx_Data_Ready+0
;__Lib_UART_123_45.c, 133 :: 		
L_end_UART1_Data_Ready:
0x134C	0xF8DDE000  LDR	LR, [SP, #0]
0x1350	0xB001    ADD	SP, SP, #4
0x1352	0x4770    BX	LR
0x1354	0x38004001  	USART1_SR+0
; end of _UART1_Data_Ready
__Lib_UART_123_45_UARTx_Data_Ready:
;__Lib_UART_123_45.c, 126 :: 		
; UART_Base start address is: 0 (R0)
0x096C	0xB081    SUB	SP, SP, #4
; UART_Base end address is: 0 (R0)
; UART_Base start address is: 0 (R0)
;__Lib_UART_123_45.c, 128 :: 		
0x096E	0x6801    LDR	R1, [R0, #0]
; UART_Base end address is: 0 (R0)
0x0970	0xF3C11040  UBFX	R0, R1, #5, #1
;__Lib_UART_123_45.c, 129 :: 		
L_end_UARTx_Data_Ready:
0x0974	0xB001    ADD	SP, SP, #4
0x0976	0x4770    BX	LR
; end of __Lib_UART_123_45_UARTx_Data_Ready
_UART1_Tx_Idle:
;__Lib_UART_123_45.c, 212 :: 		
0x1128	0xB081    SUB	SP, SP, #4
0x112A	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 213 :: 		
0x112E	0x4803    LDR	R0, [PC, #12]
0x1130	0xF7FFFC16  BL	__Lib_UART_123_45_UARTx_Tx_Idle+0
;__Lib_UART_123_45.c, 214 :: 		
L_end_UART1_Tx_Idle:
0x1134	0xF8DDE000  LDR	LR, [SP, #0]
0x1138	0xB001    ADD	SP, SP, #4
0x113A	0x4770    BX	LR
0x113C	0x38004001  	USART1_SR+0
; end of _UART1_Tx_Idle
__Lib_UART_123_45_UARTx_Tx_Idle:
;__Lib_UART_123_45.c, 208 :: 		
; UART_Base start address is: 0 (R0)
0x0960	0xB081    SUB	SP, SP, #4
; UART_Base end address is: 0 (R0)
; UART_Base start address is: 0 (R0)
;__Lib_UART_123_45.c, 209 :: 		
0x0962	0x6801    LDR	R1, [R0, #0]
; UART_Base end address is: 0 (R0)
0x0964	0xF3C11080  UBFX	R0, R1, #6, #1
;__Lib_UART_123_45.c, 210 :: 		
L_end_UARTx_Tx_Idle:
0x0968	0xB001    ADD	SP, SP, #4
0x096A	0x4770    BX	LR
; end of __Lib_UART_123_45_UARTx_Tx_Idle
_UART2_Read:
;__Lib_UART_123_45.c, 108 :: 		
0x1158	0xB081    SUB	SP, SP, #4
0x115A	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 109 :: 		
0x115E	0x4803    LDR	R0, [PC, #12]
0x1160	0xF7FFFC0A  BL	__Lib_UART_123_45_UARTx_Read+0
;__Lib_UART_123_45.c, 110 :: 		
L_end_UART2_Read:
0x1164	0xF8DDE000  LDR	LR, [SP, #0]
0x1168	0xB001    ADD	SP, SP, #4
0x116A	0x4770    BX	LR
0x116C	0x44004000  	USART2_SR+0
; end of _UART2_Read
_UART2_Data_Ready:
;__Lib_UART_123_45.c, 135 :: 		
0x1140	0xB081    SUB	SP, SP, #4
0x1142	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 136 :: 		
0x1146	0x4803    LDR	R0, [PC, #12]
0x1148	0xF7FFFC10  BL	__Lib_UART_123_45_UARTx_Data_Ready+0
;__Lib_UART_123_45.c, 137 :: 		
L_end_UART2_Data_Ready:
0x114C	0xF8DDE000  LDR	LR, [SP, #0]
0x1150	0xB001    ADD	SP, SP, #4
0x1152	0x4770    BX	LR
0x1154	0x44004000  	USART2_SR+0
; end of _UART2_Data_Ready
_UART2_Tx_Idle:
;__Lib_UART_123_45.c, 216 :: 		
0x1110	0xB081    SUB	SP, SP, #4
0x1112	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 217 :: 		
0x1116	0x4803    LDR	R0, [PC, #12]
0x1118	0xF7FFFC22  BL	__Lib_UART_123_45_UARTx_Tx_Idle+0
;__Lib_UART_123_45.c, 218 :: 		
L_end_UART2_Tx_Idle:
0x111C	0xF8DDE000  LDR	LR, [SP, #0]
0x1120	0xB001    ADD	SP, SP, #4
0x1122	0x4770    BX	LR
0x1124	0x44004000  	USART2_SR+0
; end of _UART2_Tx_Idle
_UART3_Read:
;__Lib_UART_123_45.c, 112 :: 		
0x1068	0xB081    SUB	SP, SP, #4
0x106A	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 113 :: 		
0x106E	0x4803    LDR	R0, [PC, #12]
0x1070	0xF7FFFC82  BL	__Lib_UART_123_45_UARTx_Read+0
;__Lib_UART_123_45.c, 114 :: 		
L_end_UART3_Read:
0x1074	0xF8DDE000  LDR	LR, [SP, #0]
0x1078	0xB001    ADD	SP, SP, #4
0x107A	0x4770    BX	LR
0x107C	0x48004000  	USART3_SR+0
; end of _UART3_Read
_UART3_Data_Ready:
;__Lib_UART_123_45.c, 139 :: 		
0x1080	0xB081    SUB	SP, SP, #4
0x1082	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 140 :: 		
0x1086	0x4803    LDR	R0, [PC, #12]
0x1088	0xF7FFFC70  BL	__Lib_UART_123_45_UARTx_Data_Ready+0
;__Lib_UART_123_45.c, 141 :: 		
L_end_UART3_Data_Ready:
0x108C	0xF8DDE000  LDR	LR, [SP, #0]
0x1090	0xB001    ADD	SP, SP, #4
0x1092	0x4770    BX	LR
0x1094	0x48004000  	USART3_SR+0
; end of _UART3_Data_Ready
_UART3_Tx_Idle:
;__Lib_UART_123_45.c, 220 :: 		
0x1050	0xB081    SUB	SP, SP, #4
0x1052	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 221 :: 		
0x1056	0x4803    LDR	R0, [PC, #12]
0x1058	0xF7FFFC82  BL	__Lib_UART_123_45_UARTx_Tx_Idle+0
;__Lib_UART_123_45.c, 222 :: 		
L_end_UART3_Tx_Idle:
0x105C	0xF8DDE000  LDR	LR, [SP, #0]
0x1060	0xB001    ADD	SP, SP, #4
0x1062	0x4770    BX	LR
0x1064	0x48004000  	USART3_SR+0
; end of _UART3_Tx_Idle
_UART4_Read:
;__Lib_UART_123_45.c, 116 :: 		
0x10E0	0xB081    SUB	SP, SP, #4
0x10E2	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 117 :: 		
0x10E6	0x4803    LDR	R0, [PC, #12]
0x10E8	0xF7FFFC46  BL	__Lib_UART_123_45_UARTx_Read+0
;__Lib_UART_123_45.c, 118 :: 		
L_end_UART4_Read:
0x10EC	0xF8DDE000  LDR	LR, [SP, #0]
0x10F0	0xB001    ADD	SP, SP, #4
0x10F2	0x4770    BX	LR
0x10F4	0x4C004000  	UART4_SR+0
; end of _UART4_Read
_UART4_Data_Ready:
;__Lib_UART_123_45.c, 143 :: 		
0x10F8	0xB081    SUB	SP, SP, #4
0x10FA	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 144 :: 		
0x10FE	0x4803    LDR	R0, [PC, #12]
0x1100	0xF7FFFC34  BL	__Lib_UART_123_45_UARTx_Data_Ready+0
;__Lib_UART_123_45.c, 145 :: 		
L_end_UART4_Data_Ready:
0x1104	0xF8DDE000  LDR	LR, [SP, #0]
0x1108	0xB001    ADD	SP, SP, #4
0x110A	0x4770    BX	LR
0x110C	0x4C004000  	UART4_SR+0
; end of _UART4_Data_Ready
_UART4_Tx_Idle:
;__Lib_UART_123_45.c, 224 :: 		
0x10C8	0xB081    SUB	SP, SP, #4
0x10CA	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 225 :: 		
0x10CE	0x4803    LDR	R0, [PC, #12]
0x10D0	0xF7FFFC46  BL	__Lib_UART_123_45_UARTx_Tx_Idle+0
;__Lib_UART_123_45.c, 226 :: 		
L_end_UART4_Tx_Idle:
0x10D4	0xF8DDE000  LDR	LR, [SP, #0]
0x10D8	0xB001    ADD	SP, SP, #4
0x10DA	0x4770    BX	LR
0x10DC	0x4C004000  	UART4_SR+0
; end of _UART4_Tx_Idle
_UART5_Read:
;__Lib_UART_123_45.c, 120 :: 		
0x1098	0xB081    SUB	SP, SP, #4
0x109A	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 121 :: 		
0x109E	0x4803    LDR	R0, [PC, #12]
0x10A0	0xF7FFFC6A  BL	__Lib_UART_123_45_UARTx_Read+0
;__Lib_UART_123_45.c, 122 :: 		
L_end_UART5_Read:
0x10A4	0xF8DDE000  LDR	LR, [SP, #0]
0x10A8	0xB001    ADD	SP, SP, #4
0x10AA	0x4770    BX	LR
0x10AC	0x50004000  	UART5_SR+0
; end of _UART5_Read
_UART5_Data_Ready:
;__Lib_UART_123_45.c, 147 :: 		
0x10B0	0xB081    SUB	SP, SP, #4
0x10B2	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 148 :: 		
0x10B6	0x4803    LDR	R0, [PC, #12]
0x10B8	0xF7FFFC58  BL	__Lib_UART_123_45_UARTx_Data_Ready+0
;__Lib_UART_123_45.c, 149 :: 		
L_end_UART5_Data_Ready:
0x10BC	0xF8DDE000  LDR	LR, [SP, #0]
0x10C0	0xB001    ADD	SP, SP, #4
0x10C2	0x4770    BX	LR
0x10C4	0x50004000  	UART5_SR+0
; end of _UART5_Data_Ready
_UART5_Tx_Idle:
;__Lib_UART_123_45.c, 228 :: 		
0x15D0	0xB081    SUB	SP, SP, #4
0x15D2	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 229 :: 		
0x15D6	0x4803    LDR	R0, [PC, #12]
0x15D8	0xF7FFF9C2  BL	__Lib_UART_123_45_UARTx_Tx_Idle+0
;__Lib_UART_123_45.c, 230 :: 		
L_end_UART5_Tx_Idle:
0x15DC	0xF8DDE000  LDR	LR, [SP, #0]
0x15E0	0xB001    ADD	SP, SP, #4
0x15E2	0x4770    BX	LR
0x15E4	0x50004000  	UART5_SR+0
; end of _UART5_Tx_Idle
__irgrid2_driver_hal_i2cWrite:
;__hal_stm32.c, 98 :: 		static int hal_i2cWrite(uint8_t slaveAddress, uint8_t *pBuf, uint16_t nBytes, uint8_t endMode)
; endMode start address is: 12 (R3)
; nBytes start address is: 8 (R2)
; pBuf start address is: 4 (R1)
; slaveAddress start address is: 0 (R0)
0x1768	0xB082    SUB	SP, SP, #8
0x176A	0xF8CDE000  STR	LR, [SP, #0]
; endMode end address is: 12 (R3)
; nBytes end address is: 8 (R2)
; pBuf end address is: 4 (R1)
; slaveAddress end address is: 0 (R0)
; slaveAddress start address is: 0 (R0)
; pBuf start address is: 4 (R1)
; nBytes start address is: 8 (R2)
; endMode start address is: 12 (R3)
;__hal_stm32.c, 100 :: 		int res = 0;
0x176E	0xF2400400  MOVW	R4, #0
0x1772	0xF8AD4004  STRH	R4, [SP, #4]
;__hal_stm32.c, 102 :: 		res |= fp_i2cWrite(slaveAddress, ptr, nBytes, endMode);
; endMode end address is: 12 (R3)
; nBytes end address is: 8 (R2)
; pBuf end address is: 4 (R1)
; slaveAddress end address is: 0 (R0)
0x1776	0x4C05    LDR	R4, [PC, #20]
0x1778	0x6824    LDR	R4, [R4, #0]
0x177A	0x47A0    BLX	R4
0x177C	0xF9BD4004  LDRSH	R4, [SP, #4]
0x1780	0x4304    ORRS	R4, R0
;__hal_stm32.c, 103 :: 		return res;
0x1782	0xB220    SXTH	R0, R4
;__hal_stm32.c, 104 :: 		}
L_end_hal_i2cWrite:
0x1784	0xF8DDE000  LDR	LR, [SP, #0]
0x1788	0xB002    ADD	SP, SP, #8
0x178A	0x4770    BX	LR
0x178C	0x376C2000  	__irgrid2_driver_fp_i2cWrite+0
; end of __irgrid2_driver_hal_i2cWrite
_I2C1_Write:
;__Lib_I2C_12.c, 556 :: 		
; END_mode start address is: 12 (R3)
; count start address is: 8 (R2)
; buf start address is: 4 (R1)
; slave_address start address is: 0 (R0)
0x15E8	0xB081    SUB	SP, SP, #4
0x15EA	0xF8CDE000  STR	LR, [SP, #0]
; END_mode end address is: 12 (R3)
; count end address is: 8 (R2)
; buf end address is: 4 (R1)
; slave_address end address is: 0 (R0)
; slave_address start address is: 0 (R0)
; buf start address is: 4 (R1)
; count start address is: 8 (R2)
; END_mode start address is: 12 (R3)
;__Lib_I2C_12.c, 557 :: 		
0x15EE	0xB408    PUSH	(R3)
; count end address is: 8 (R2)
0x15F0	0x4613    MOV	R3, R2
0x15F2	0x460A    MOV	R2, R1
; buf end address is: 4 (R1)
0x15F4	0xB2C1    UXTB	R1, R0
; slave_address end address is: 0 (R0)
0x15F6	0x4804    LDR	R0, [PC, #16]
; END_mode end address is: 12 (R3)
0x15F8	0xF7FFFC0C  BL	_I2Cx_Write+0
0x15FC	0xB001    ADD	SP, SP, #4
;__Lib_I2C_12.c, 558 :: 		
L_end_I2C1_Write:
0x15FE	0xF8DDE000  LDR	LR, [SP, #0]
0x1602	0xB001    ADD	SP, SP, #4
0x1604	0x4770    BX	LR
0x1606	0xBF00    NOP
0x1608	0x54004000  	I2C1_CR1+0
; end of _I2C1_Write
_I2Cx_Write:
;__Lib_I2C_12.c, 245 :: 		
; count start address is: 12 (R3)
; buf start address is: 8 (R2)
; slave_address start address is: 4 (R1)
; I2C_BASE start address is: 0 (R0)
0x0E14	0xB082    SUB	SP, SP, #8
0x0E16	0xF8CDE000  STR	LR, [SP, #0]
; count end address is: 12 (R3)
; buf end address is: 8 (R2)
; slave_address end address is: 4 (R1)
; I2C_BASE end address is: 0 (R0)
; I2C_BASE start address is: 0 (R0)
; slave_address start address is: 4 (R1)
; buf start address is: 8 (R2)
; count start address is: 12 (R3)
; END_mode start address is: 24 (R6)
0x0E1A	0x9E02    LDR	R6, [SP, #8]
;__Lib_I2C_12.c, 247 :: 		
; timeout start address is: 20 (R5)
0x0E1C	0xF04F0500  MOV	R5, #0
;__Lib_I2C_12.c, 250 :: 		
0x0E20	0x4C56    LDR	R4, [PC, #344]
0x0E22	0x42A0    CMP	R0, R4
0x0E24	0xD106    BNE	L_I2Cx_Write16
; timeout end address is: 20 (R5)
;__Lib_I2C_12.c, 251 :: 		
0x0E26	0x4C56    LDR	R4, [PC, #344]
; timeout start address is: 28 (R7)
0x0E28	0x6827    LDR	R7, [R4, #0]
;__Lib_I2C_12.c, 252 :: 		
0x0E2A	0x4C56    LDR	R4, [PC, #344]
0x0E2C	0x6825    LDR	R5, [R4, #0]
0x0E2E	0x4C56    LDR	R4, [PC, #344]
0x0E30	0x6025    STR	R5, [R4, #0]
;__Lib_I2C_12.c, 253 :: 		
; timeout end address is: 28 (R7)
0x0E32	0xE00A    B	L_I2Cx_Write17
L_I2Cx_Write16:
;__Lib_I2C_12.c, 254 :: 		
; timeout start address is: 20 (R5)
0x0E34	0x4C55    LDR	R4, [PC, #340]
0x0E36	0x42A0    CMP	R0, R4
0x0E38	0xD106    BNE	L__I2Cx_Write125
; timeout end address is: 20 (R5)
;__Lib_I2C_12.c, 255 :: 		
0x0E3A	0x4C55    LDR	R4, [PC, #340]
; timeout start address is: 28 (R7)
0x0E3C	0x6827    LDR	R7, [R4, #0]
;__Lib_I2C_12.c, 256 :: 		
0x0E3E	0x4C55    LDR	R4, [PC, #340]
0x0E40	0x6825    LDR	R5, [R4, #0]
0x0E42	0x4C51    LDR	R4, [PC, #324]
0x0E44	0x6025    STR	R5, [R4, #0]
; timeout end address is: 28 (R7)
;__Lib_I2C_12.c, 257 :: 		
0x0E46	0xE000    B	L_I2Cx_Write18
L__I2Cx_Write125:
;__Lib_I2C_12.c, 254 :: 		
0x0E48	0x462F    MOV	R7, R5
;__Lib_I2C_12.c, 257 :: 		
L_I2Cx_Write18:
; timeout start address is: 28 (R7)
; timeout end address is: 28 (R7)
L_I2Cx_Write17:
;__Lib_I2C_12.c, 259 :: 		
; timeout start address is: 28 (R7)
0x0E4A	0x4C53    LDR	R4, [PC, #332]
0x0E4C	0x6027    STR	R7, [R4, #0]
;__Lib_I2C_12.c, 261 :: 		
0x0E4E	0xF2000510  ADDW	R5, R0, #16
0x0E52	0x004C    LSLS	R4, R1, #1
0x0E54	0xB2A4    UXTH	R4, R4
; slave_address end address is: 4 (R1)
0x0E56	0x602C    STR	R4, [R5, #0]
; I2C_BASE end address is: 0 (R0)
; buf end address is: 8 (R2)
; count end address is: 12 (R3)
; END_mode end address is: 24 (R6)
; timeout end address is: 28 (R7)
0x0E58	0x46B9    MOV	R9, R7
0x0E5A	0x4607    MOV	R7, R0
0x0E5C	0x4690    MOV	R8, R2
0x0E5E	0x4635    MOV	R5, R6
0x0E60	0x461E    MOV	R6, R3
;__Lib_I2C_12.c, 262 :: 		
L_I2Cx_Write19:
; timeout start address is: 36 (R9)
; END_mode start address is: 20 (R5)
; count start address is: 24 (R6)
; buf start address is: 32 (R8)
; I2C_BASE start address is: 28 (R7)
0x0E62	0x494E    LDR	R1, [PC, #312]
0x0E64	0x4638    MOV	R0, R7
0x0E66	0xF7FFFC07  BL	_ChekXForEvent+0
0x0E6A	0xB988    CBNZ	R0, L_I2Cx_Write20
;__Lib_I2C_12.c, 263 :: 		
0x0E6C	0x4C4A    LDR	R4, [PC, #296]
0x0E6E	0x6824    LDR	R4, [R4, #0]
0x0E70	0xB16C    CBZ	R4, L__I2Cx_Write126
;__Lib_I2C_12.c, 264 :: 		
0x0E72	0xF1B90F00  CMP	R9, #0
0x0E76	0xD106    BNE	L_I2Cx_Write22
; count end address is: 24 (R6)
; I2C_BASE end address is: 28 (R7)
; buf end address is: 32 (R8)
; timeout end address is: 36 (R9)
; END_mode end address is: 20 (R5)
;__Lib_I2C_12.c, 265 :: 		
0x0E78	0x2004    MOVS	R0, #4
0x0E7A	0x4C43    LDR	R4, [PC, #268]
0x0E7C	0x6824    LDR	R4, [R4, #0]
0x0E7E	0x47A0    BLX	R4
;__Lib_I2C_12.c, 266 :: 		
0x0E80	0xF64F70FF  MOVW	R0, #65535
0x0E84	0xE076    B	L_end_I2Cx_Write
;__Lib_I2C_12.c, 267 :: 		
L_I2Cx_Write22:
;__Lib_I2C_12.c, 268 :: 		
; END_mode start address is: 20 (R5)
; timeout start address is: 36 (R9)
; buf start address is: 32 (R8)
; I2C_BASE start address is: 28 (R7)
; count start address is: 24 (R6)
0x0E86	0xF1A90001  SUB	R0, R9, #1
; timeout end address is: 36 (R9)
; timeout start address is: 0 (R0)
; timeout end address is: 0 (R0)
0x0E8A	0x4681    MOV	R9, R0
;__Lib_I2C_12.c, 269 :: 		
0x0E8C	0xE7FF    B	L_I2Cx_Write21
L__I2Cx_Write126:
;__Lib_I2C_12.c, 263 :: 		
;__Lib_I2C_12.c, 269 :: 		
L_I2Cx_Write21:
;__Lib_I2C_12.c, 270 :: 		
; timeout start address is: 36 (R9)
; timeout end address is: 36 (R9)
0x0E8E	0xE7E8    B	L_I2Cx_Write19
L_I2Cx_Write20:
;__Lib_I2C_12.c, 271 :: 		
; i start address is: 0 (R0)
0x0E90	0x2000    MOVS	R0, #0
; count end address is: 24 (R6)
; I2C_BASE end address is: 28 (R7)
; buf end address is: 32 (R8)
; i end address is: 0 (R0)
; END_mode end address is: 20 (R5)
0x0E92	0x9701    STR	R7, [SP, #4]
0x0E94	0x4629    MOV	R1, R5
0x0E96	0x4637    MOV	R7, R6
0x0E98	0x9E01    LDR	R6, [SP, #4]
L_I2Cx_Write23:
; i start address is: 0 (R0)
; I2C_BASE start address is: 24 (R6)
; buf start address is: 32 (R8)
; count start address is: 28 (R7)
; END_mode start address is: 4 (R1)
0x0E9A	0x1E7C    SUBS	R4, R7, #1
0x0E9C	0x42A0    CMP	R0, R4
0x0E9E	0xD226    BCS	L_I2Cx_Write24
;__Lib_I2C_12.c, 272 :: 		
0x0EA0	0xF2060510  ADDW	R5, R6, #16
0x0EA4	0xEB080400  ADD	R4, R8, R0, LSL #0
0x0EA8	0x7824    LDRB	R4, [R4, #0]
0x0EAA	0x602C    STR	R4, [R5, #0]
;__Lib_I2C_12.c, 274 :: 		
0x0EAC	0x4C3A    LDR	R4, [PC, #232]
; timeout start address is: 36 (R9)
0x0EAE	0xF8D49000  LDR	R9, [R4, #0]
; END_mode end address is: 4 (R1)
; count end address is: 28 (R7)
; buf end address is: 32 (R8)
; timeout end address is: 36 (R9)
; i end address is: 0 (R0)
; I2C_BASE end address is: 24 (R6)
0x0EB2	0x4682    MOV	R10, R0
0x0EB4	0x460D    MOV	R5, R1
;__Lib_I2C_12.c, 275 :: 		
L_I2Cx_Write26:
; timeout start address is: 36 (R9)
; END_mode start address is: 20 (R5)
; count start address is: 28 (R7)
; buf start address is: 32 (R8)
; I2C_BASE start address is: 24 (R6)
; i start address is: 40 (R10)
0x0EB6	0x493A    LDR	R1, [PC, #232]
0x0EB8	0x4630    MOV	R0, R6
0x0EBA	0xF7FFFBDD  BL	_ChekXForEvent+0
0x0EBE	0xB988    CBNZ	R0, L_I2Cx_Write27
;__Lib_I2C_12.c, 276 :: 		
0x0EC0	0x4C35    LDR	R4, [PC, #212]
0x0EC2	0x6824    LDR	R4, [R4, #0]
0x0EC4	0xB16C    CBZ	R4, L__I2Cx_Write127
;__Lib_I2C_12.c, 277 :: 		
0x0EC6	0xF1B90F00  CMP	R9, #0
0x0ECA	0xD106    BNE	L_I2Cx_Write29
; count end address is: 28 (R7)
; buf end address is: 32 (R8)
; i end address is: 40 (R10)
; timeout end address is: 36 (R9)
; END_mode end address is: 20 (R5)
; I2C_BASE end address is: 24 (R6)
;__Lib_I2C_12.c, 278 :: 		
0x0ECC	0x2004    MOVS	R0, #4
0x0ECE	0x4C2E    LDR	R4, [PC, #184]
0x0ED0	0x6824    LDR	R4, [R4, #0]
0x0ED2	0x47A0    BLX	R4
;__Lib_I2C_12.c, 279 :: 		
0x0ED4	0xF64F70FF  MOVW	R0, #65535
0x0ED8	0xE04C    B	L_end_I2Cx_Write
;__Lib_I2C_12.c, 280 :: 		
L_I2Cx_Write29:
;__Lib_I2C_12.c, 281 :: 		
; I2C_BASE start address is: 24 (R6)
; END_mode start address is: 20 (R5)
; timeout start address is: 36 (R9)
; i start address is: 40 (R10)
; buf start address is: 32 (R8)
; count start address is: 28 (R7)
0x0EDA	0xF1A90001  SUB	R0, R9, #1
; timeout end address is: 36 (R9)
; timeout start address is: 0 (R0)
; timeout end address is: 0 (R0)
0x0EDE	0x4681    MOV	R9, R0
;__Lib_I2C_12.c, 282 :: 		
0x0EE0	0xE7FF    B	L_I2Cx_Write28
L__I2Cx_Write127:
;__Lib_I2C_12.c, 276 :: 		
;__Lib_I2C_12.c, 282 :: 		
L_I2Cx_Write28:
;__Lib_I2C_12.c, 283 :: 		
; timeout start address is: 36 (R9)
; timeout end address is: 36 (R9)
0x0EE2	0xE7E8    B	L_I2Cx_Write26
L_I2Cx_Write27:
;__Lib_I2C_12.c, 271 :: 		
0x0EE4	0xF10A0401  ADD	R4, R10, #1
; i end address is: 40 (R10)
; i start address is: 0 (R0)
0x0EE8	0x4620    MOV	R0, R4
;__Lib_I2C_12.c, 284 :: 		
0x0EEA	0x4629    MOV	R1, R5
; count end address is: 28 (R7)
; END_mode end address is: 20 (R5)
0x0EEC	0xE7D5    B	L_I2Cx_Write23
L_I2Cx_Write24:
;__Lib_I2C_12.c, 286 :: 		
; END_mode start address is: 4 (R1)
0x0EEE	0xF2060510  ADDW	R5, R6, #16
0x0EF2	0xEB080400  ADD	R4, R8, R0, LSL #0
; buf end address is: 32 (R8)
; i end address is: 0 (R0)
0x0EF6	0x7824    LDRB	R4, [R4, #0]
0x0EF8	0x602C    STR	R4, [R5, #0]
;__Lib_I2C_12.c, 288 :: 		
0x0EFA	0x4C27    LDR	R4, [PC, #156]
; timeout start address is: 28 (R7)
0x0EFC	0x6827    LDR	R7, [R4, #0]
; END_mode end address is: 4 (R1)
; I2C_BASE end address is: 24 (R6)
; timeout end address is: 28 (R7)
0x0EFE	0x460D    MOV	R5, R1
;__Lib_I2C_12.c, 289 :: 		
L_I2Cx_Write30:
; timeout start address is: 28 (R7)
; END_mode start address is: 20 (R5)
; I2C_BASE start address is: 24 (R6)
0x0F00	0x4928    LDR	R1, [PC, #160]
0x0F02	0x4630    MOV	R0, R6
0x0F04	0xF7FFFBB8  BL	_ChekXForEvent+0
0x0F08	0xB970    CBNZ	R0, L_I2Cx_Write31
;__Lib_I2C_12.c, 290 :: 		
0x0F0A	0x4C23    LDR	R4, [PC, #140]
0x0F0C	0x6824    LDR	R4, [R4, #0]
0x0F0E	0xB154    CBZ	R4, L__I2Cx_Write128
;__Lib_I2C_12.c, 291 :: 		
0x0F10	0xB937    CBNZ	R7, L_I2Cx_Write33
; END_mode end address is: 20 (R5)
; I2C_BASE end address is: 24 (R6)
; timeout end address is: 28 (R7)
;__Lib_I2C_12.c, 292 :: 		
0x0F12	0x2004    MOVS	R0, #4
0x0F14	0x4C1C    LDR	R4, [PC, #112]
0x0F16	0x6824    LDR	R4, [R4, #0]
0x0F18	0x47A0    BLX	R4
;__Lib_I2C_12.c, 293 :: 		
0x0F1A	0xF64F70FF  MOVW	R0, #65535
0x0F1E	0xE029    B	L_end_I2Cx_Write
;__Lib_I2C_12.c, 294 :: 		
L_I2Cx_Write33:
;__Lib_I2C_12.c, 295 :: 		
; timeout start address is: 28 (R7)
; I2C_BASE start address is: 24 (R6)
; END_mode start address is: 20 (R5)
0x0F20	0x1E78    SUBS	R0, R7, #1
; timeout end address is: 28 (R7)
; timeout start address is: 0 (R0)
; timeout end address is: 0 (R0)
0x0F22	0x4607    MOV	R7, R0
;__Lib_I2C_12.c, 296 :: 		
0x0F24	0xE7FF    B	L_I2Cx_Write32
L__I2Cx_Write128:
;__Lib_I2C_12.c, 290 :: 		
;__Lib_I2C_12.c, 296 :: 		
L_I2Cx_Write32:
;__Lib_I2C_12.c, 297 :: 		
; timeout start address is: 28 (R7)
; timeout end address is: 28 (R7)
0x0F26	0xE7EB    B	L_I2Cx_Write30
L_I2Cx_Write31:
;__Lib_I2C_12.c, 298 :: 		
0x0F28	0x2D01    CMP	R5, #1
0x0F2A	0xD105    BNE	L_I2Cx_Write34
; END_mode end address is: 20 (R5)
;__Lib_I2C_12.c, 299 :: 		
0x0F2C	0x2501    MOVS	R5, #1
0x0F2E	0x6834    LDR	R4, [R6, #0]
0x0F30	0xF3652449  BFI	R4, R5, #9, #1
0x0F34	0x6034    STR	R4, [R6, #0]
; I2C_BASE end address is: 24 (R6)
0x0F36	0xE01C    B	L_I2Cx_Write35
L_I2Cx_Write34:
;__Lib_I2C_12.c, 301 :: 		
; I2C_BASE start address is: 24 (R6)
0x0F38	0x2501    MOVS	R5, #1
0x0F3A	0x6834    LDR	R4, [R6, #0]
0x0F3C	0xF3652408  BFI	R4, R5, #8, #1
0x0F40	0x6034    STR	R4, [R6, #0]
;__Lib_I2C_12.c, 303 :: 		
0x0F42	0x4C15    LDR	R4, [PC, #84]
; timeout start address is: 28 (R7)
0x0F44	0x6827    LDR	R7, [R4, #0]
; I2C_BASE end address is: 24 (R6)
; timeout end address is: 28 (R7)
0x0F46	0x4635    MOV	R5, R6
;__Lib_I2C_12.c, 304 :: 		
L_I2Cx_Write36:
; timeout start address is: 28 (R7)
; I2C_BASE start address is: 20 (R5)
0x0F48	0x4917    LDR	R1, [PC, #92]
0x0F4A	0x4628    MOV	R0, R5
0x0F4C	0xF7FFFB94  BL	_ChekXForEvent+0
0x0F50	0xB978    CBNZ	R0, L_I2Cx_Write37
;__Lib_I2C_12.c, 305 :: 		
0x0F52	0x4C11    LDR	R4, [PC, #68]
0x0F54	0x6824    LDR	R4, [R4, #0]
0x0F56	0xB15C    CBZ	R4, L__I2Cx_Write129
;__Lib_I2C_12.c, 306 :: 		
0x0F58	0xB937    CBNZ	R7, L_I2Cx_Write39
; I2C_BASE end address is: 20 (R5)
; timeout end address is: 28 (R7)
;__Lib_I2C_12.c, 307 :: 		
0x0F5A	0x2004    MOVS	R0, #4
0x0F5C	0x4C0A    LDR	R4, [PC, #40]
0x0F5E	0x6824    LDR	R4, [R4, #0]
0x0F60	0x47A0    BLX	R4
;__Lib_I2C_12.c, 308 :: 		
0x0F62	0xF64F70FF  MOVW	R0, #65535
0x0F66	0xE005    B	L_end_I2Cx_Write
;__Lib_I2C_12.c, 309 :: 		
L_I2Cx_Write39:
;__Lib_I2C_12.c, 310 :: 		
; timeout start address is: 28 (R7)
; I2C_BASE start address is: 20 (R5)
0x0F68	0x1E7C    SUBS	R4, R7, #1
; timeout end address is: 28 (R7)
; timeout start address is: 0 (R0)
0x0F6A	0x4620    MOV	R0, R4
; timeout end address is: 0 (R0)
0x0F6C	0x4607    MOV	R7, R0
;__Lib_I2C_12.c, 311 :: 		
0x0F6E	0xE7FF    B	L_I2Cx_Write38
L__I2Cx_Write129:
;__Lib_I2C_12.c, 305 :: 		
;__Lib_I2C_12.c, 311 :: 		
L_I2Cx_Write38:
;__Lib_I2C_12.c, 312 :: 		
; timeout start address is: 28 (R7)
; I2C_BASE end address is: 20 (R5)
; timeout end address is: 28 (R7)
0x0F70	0xE7EA    B	L_I2Cx_Write36
L_I2Cx_Write37:
;__Lib_I2C_12.c, 313 :: 		
L_I2Cx_Write35:
;__Lib_I2C_12.c, 314 :: 		
0x0F72	0x2000    MOVS	R0, #0
;__Lib_I2C_12.c, 315 :: 		
L_end_I2Cx_Write:
0x0F74	0xF8DDE000  LDR	LR, [SP, #0]
0x0F78	0xB002    ADD	SP, SP, #8
0x0F7A	0x4770    BX	LR
0x0F7C	0x54004000  	I2C1_CR1+0
0x0F80	0x00842000  	__Lib_I2C_12__I2C1_TIMEOUT+0
0x0F84	0x37802000  	_I2C1_Timeout_Ptr+0
0x0F88	0x377C2000  	_I2Cx_Timeout_Ptr+0
0x0F8C	0x58004000  	I2C2_CR1+0
0x0F90	0x00882000  	__Lib_I2C_12__I2C2_TIMEOUT+0
0x0F94	0x37842000  	_I2C2_Timeout_Ptr+0
0x0F98	0x008C2000  	__Lib_I2C_12__I2Cx_TIMEOUT+0
0x0F9C	0x00820007  	#458882
0x0FA0	0x00800007  	#458880
0x0FA4	0x00840007  	#458884
0x0FA8	0x00010003  	#196609
; end of _I2Cx_Write
_I2C2_Write:
;__Lib_I2C_12.c, 586 :: 		
; END_mode start address is: 12 (R3)
; count start address is: 8 (R2)
; buf start address is: 4 (R1)
; slave_address start address is: 0 (R0)
0x160C	0xB081    SUB	SP, SP, #4
0x160E	0xF8CDE000  STR	LR, [SP, #0]
; END_mode end address is: 12 (R3)
; count end address is: 8 (R2)
; buf end address is: 4 (R1)
; slave_address end address is: 0 (R0)
; slave_address start address is: 0 (R0)
; buf start address is: 4 (R1)
; count start address is: 8 (R2)
; END_mode start address is: 12 (R3)
;__Lib_I2C_12.c, 587 :: 		
0x1612	0xB408    PUSH	(R3)
; count end address is: 8 (R2)
0x1614	0x4613    MOV	R3, R2
0x1616	0x460A    MOV	R2, R1
; buf end address is: 4 (R1)
0x1618	0xB2C1    UXTB	R1, R0
; slave_address end address is: 0 (R0)
0x161A	0x4804    LDR	R0, [PC, #16]
; END_mode end address is: 12 (R3)
0x161C	0xF7FFFBFA  BL	_I2Cx_Write+0
0x1620	0xB001    ADD	SP, SP, #4
;__Lib_I2C_12.c, 588 :: 		
L_end_I2C2_Write:
0x1622	0xF8DDE000  LDR	LR, [SP, #0]
0x1626	0xB001    ADD	SP, SP, #4
0x1628	0x4770    BX	LR
0x162A	0xBF00    NOP
0x162C	0x58004000  	I2C2_CR1+0
; end of _I2C2_Write
_Delay_10ms:
;__Lib_Delays.c, 57 :: 		void Delay_10ms() {
;__Lib_Delays.c, 58 :: 		Delay_ms(10);
0x1750	0xF24D47BF  MOVW	R7, #54463
0x1754	0xF2C00701  MOVT	R7, #1
L_Delay_10ms22:
0x1758	0x1E7F    SUBS	R7, R7, #1
0x175A	0xD1FD    BNE	L_Delay_10ms22
0x175C	0xBF00    NOP
0x175E	0xBF00    NOP
0x1760	0xBF00    NOP
0x1762	0xBF00    NOP
0x1764	0xBF00    NOP
;__Lib_Delays.c, 59 :: 		}
L_end_Delay_10ms:
0x1766	0x4770    BX	LR
; end of _Delay_10ms
__irgrid2_driver_hal_i2cRead:
;__hal_stm32.c, 106 :: 		static int hal_i2cRead(uint8_t slaveAddress, uint8_t *pBuf, uint16_t nBytes, uint8_t endMode)
; endMode start address is: 12 (R3)
; nBytes start address is: 8 (R2)
; pBuf start address is: 4 (R1)
; slaveAddress start address is: 0 (R0)
0x172C	0xB082    SUB	SP, SP, #8
0x172E	0xF8CDE000  STR	LR, [SP, #0]
; endMode end address is: 12 (R3)
; nBytes end address is: 8 (R2)
; pBuf end address is: 4 (R1)
; slaveAddress end address is: 0 (R0)
; slaveAddress start address is: 0 (R0)
; pBuf start address is: 4 (R1)
; nBytes start address is: 8 (R2)
; endMode start address is: 12 (R3)
;__hal_stm32.c, 108 :: 		int res = 0;
0x1732	0xF2400400  MOVW	R4, #0
0x1736	0xF8AD4004  STRH	R4, [SP, #4]
;__hal_stm32.c, 110 :: 		fp_i2cRead(slaveAddress, ptr, nBytes, endMode);
; endMode end address is: 12 (R3)
; nBytes end address is: 8 (R2)
; pBuf end address is: 4 (R1)
; slaveAddress end address is: 0 (R0)
0x173A	0x4C04    LDR	R4, [PC, #16]
0x173C	0x6824    LDR	R4, [R4, #0]
0x173E	0x47A0    BLX	R4
;__hal_stm32.c, 111 :: 		return res;
0x1740	0xF9BD0004  LDRSH	R0, [SP, #4]
;__hal_stm32.c, 112 :: 		}
L_end_hal_i2cRead:
0x1744	0xF8DDE000  LDR	LR, [SP, #0]
0x1748	0xB002    ADD	SP, SP, #8
0x174A	0x4770    BX	LR
0x174C	0x37702000  	__irgrid2_driver_fp_i2cRead+0
; end of __irgrid2_driver_hal_i2cRead
_I2C1_Read:
;__Lib_I2C_12.c, 552 :: 		
; END_mode start address is: 12 (R3)
; count start address is: 8 (R2)
; buf start address is: 4 (R1)
; slave_address start address is: 0 (R0)
0x1394	0xB081    SUB	SP, SP, #4
0x1396	0xF8CDE000  STR	LR, [SP, #0]
; END_mode end address is: 12 (R3)
; count end address is: 8 (R2)
; buf end address is: 4 (R1)
; slave_address end address is: 0 (R0)
; slave_address start address is: 0 (R0)
; buf start address is: 4 (R1)
; count start address is: 8 (R2)
; END_mode start address is: 12 (R3)
;__Lib_I2C_12.c, 553 :: 		
0x139A	0xB408    PUSH	(R3)
; count end address is: 8 (R2)
0x139C	0x4613    MOV	R3, R2
0x139E	0x460A    MOV	R2, R1
; buf end address is: 4 (R1)
0x13A0	0xB2C1    UXTB	R1, R0
; slave_address end address is: 0 (R0)
0x13A2	0x4804    LDR	R0, [PC, #16]
; END_mode end address is: 12 (R3)
0x13A4	0xF7FFFB08  BL	_I2Cx_Read+0
0x13A8	0xB001    ADD	SP, SP, #4
;__Lib_I2C_12.c, 554 :: 		
L_end_I2C1_Read:
0x13AA	0xF8DDE000  LDR	LR, [SP, #0]
0x13AE	0xB001    ADD	SP, SP, #4
0x13B0	0x4770    BX	LR
0x13B2	0xBF00    NOP
0x13B4	0x54004000  	I2C1_CR1+0
; end of _I2C1_Read
_I2Cx_Read:
;__Lib_I2C_12.c, 319 :: 		
; count start address is: 12 (R3)
; buf start address is: 8 (R2)
; slave_address start address is: 4 (R1)
; I2C_BASE start address is: 0 (R0)
0x09B8	0xB082    SUB	SP, SP, #8
0x09BA	0xF8CDE000  STR	LR, [SP, #0]
0x09BE	0xB2CF    UXTB	R7, R1
0x09C0	0x4601    MOV	R1, R0
0x09C2	0x4698    MOV	R8, R3
; count end address is: 12 (R3)
; buf end address is: 8 (R2)
; slave_address end address is: 4 (R1)
; I2C_BASE end address is: 0 (R0)
; I2C_BASE start address is: 4 (R1)
; slave_address start address is: 28 (R7)
; buf start address is: 8 (R2)
; count start address is: 32 (R8)
; END_mode start address is: 12 (R3)
0x09C4	0x9B02    LDR	R3, [SP, #8]
;__Lib_I2C_12.c, 321 :: 		
; i start address is: 24 (R6)
0x09C6	0xF04F0600  MOV	R6, #0
;__Lib_I2C_12.c, 322 :: 		
; timeout start address is: 20 (R5)
0x09CA	0xF04F0500  MOV	R5, #0
;__Lib_I2C_12.c, 325 :: 		
0x09CE	0x4CC4    LDR	R4, [PC, #784]
0x09D0	0x42A1    CMP	R1, R4
0x09D2	0xD107    BNE	L_I2Cx_Read40
; timeout end address is: 20 (R5)
;__Lib_I2C_12.c, 326 :: 		
0x09D4	0x4CC3    LDR	R4, [PC, #780]
; timeout start address is: 36 (R9)
0x09D6	0xF8D49000  LDR	R9, [R4, #0]
;__Lib_I2C_12.c, 327 :: 		
0x09DA	0x4CC3    LDR	R4, [PC, #780]
0x09DC	0x6825    LDR	R5, [R4, #0]
0x09DE	0x4CC3    LDR	R4, [PC, #780]
0x09E0	0x6025    STR	R5, [R4, #0]
;__Lib_I2C_12.c, 328 :: 		
; timeout end address is: 36 (R9)
0x09E2	0xE00B    B	L_I2Cx_Read41
L_I2Cx_Read40:
;__Lib_I2C_12.c, 329 :: 		
; timeout start address is: 20 (R5)
0x09E4	0x4CC2    LDR	R4, [PC, #776]
0x09E6	0x42A1    CMP	R1, R4
0x09E8	0xD107    BNE	L__I2Cx_Read130
; timeout end address is: 20 (R5)
;__Lib_I2C_12.c, 330 :: 		
0x09EA	0x4CC2    LDR	R4, [PC, #776]
; timeout start address is: 0 (R0)
0x09EC	0x6820    LDR	R0, [R4, #0]
;__Lib_I2C_12.c, 331 :: 		
0x09EE	0x4CC2    LDR	R4, [PC, #776]
0x09F0	0x6825    LDR	R5, [R4, #0]
0x09F2	0x4CBE    LDR	R4, [PC, #760]
0x09F4	0x6025    STR	R5, [R4, #0]
; timeout end address is: 0 (R0)
0x09F6	0x4681    MOV	R9, R0
;__Lib_I2C_12.c, 332 :: 		
0x09F8	0xE000    B	L_I2Cx_Read42
L__I2Cx_Read130:
;__Lib_I2C_12.c, 329 :: 		
0x09FA	0x46A9    MOV	R9, R5
;__Lib_I2C_12.c, 332 :: 		
L_I2Cx_Read42:
; timeout start address is: 36 (R9)
; timeout end address is: 36 (R9)
L_I2Cx_Read41:
;__Lib_I2C_12.c, 334 :: 		
; timeout start address is: 36 (R9)
0x09FC	0x4CBF    LDR	R4, [PC, #764]
0x09FE	0xF8C49000  STR	R9, [R4, #0]
;__Lib_I2C_12.c, 336 :: 		
0x0A02	0xE1F4    B	L_I2Cx_Read43
; count end address is: 32 (R8)
;__Lib_I2C_12.c, 337 :: 		
L_I2Cx_Read45:
;__Lib_I2C_12.c, 338 :: 		
0x0A04	0xF2010510  ADDW	R5, R1, #16
0x0A08	0x007C    LSLS	R4, R7, #1
0x0A0A	0xB2A4    UXTH	R4, R4
; slave_address end address is: 28 (R7)
0x0A0C	0xF0440401  ORR	R4, R4, #1
0x0A10	0xB2A4    UXTH	R4, R4
0x0A12	0x602C    STR	R4, [R5, #0]
; timeout end address is: 36 (R9)
; buf end address is: 8 (R2)
; i end address is: 24 (R6)
; END_mode end address is: 12 (R3)
; I2C_BASE end address is: 4 (R1)
0x0A14	0x9601    STR	R6, [SP, #4]
0x0A16	0x4616    MOV	R6, R2
0x0A18	0x464F    MOV	R7, R9
0x0A1A	0x9A01    LDR	R2, [SP, #4]
;__Lib_I2C_12.c, 339 :: 		
L_I2Cx_Read46:
; timeout start address is: 28 (R7)
; i start address is: 8 (R2)
; END_mode start address is: 12 (R3)
; buf start address is: 24 (R6)
; I2C_BASE start address is: 4 (R1)
0x0A1C	0xF2010414  ADDW	R4, R1, #20
0x0A20	0x6825    LDR	R5, [R4, #0]
0x0A22	0xF3C50440  UBFX	R4, R5, #1, #1
0x0A26	0xB964    CBNZ	R4, L_I2Cx_Read47
;__Lib_I2C_12.c, 340 :: 		
0x0A28	0x4CB4    LDR	R4, [PC, #720]
0x0A2A	0x6824    LDR	R4, [R4, #0]
0x0A2C	0xB144    CBZ	R4, L__I2Cx_Read131
;__Lib_I2C_12.c, 341 :: 		
0x0A2E	0xB927    CBNZ	R7, L_I2Cx_Read49
; i end address is: 8 (R2)
; END_mode end address is: 12 (R3)
; buf end address is: 24 (R6)
; I2C_BASE end address is: 4 (R1)
; timeout end address is: 28 (R7)
;__Lib_I2C_12.c, 342 :: 		
0x0A30	0x2003    MOVS	R0, #3
0x0A32	0x4CAE    LDR	R4, [PC, #696]
0x0A34	0x6824    LDR	R4, [R4, #0]
0x0A36	0x47A0    BLX	R4
;__Lib_I2C_12.c, 343 :: 		
0x0A38	0xE1E2    B	L_end_I2Cx_Read
;__Lib_I2C_12.c, 344 :: 		
L_I2Cx_Read49:
;__Lib_I2C_12.c, 345 :: 		
; timeout start address is: 28 (R7)
; I2C_BASE start address is: 4 (R1)
; buf start address is: 24 (R6)
; END_mode start address is: 12 (R3)
; i start address is: 8 (R2)
0x0A3A	0x1E78    SUBS	R0, R7, #1
; timeout end address is: 28 (R7)
; timeout start address is: 0 (R0)
; timeout end address is: 0 (R0)
0x0A3C	0x4607    MOV	R7, R0
;__Lib_I2C_12.c, 346 :: 		
0x0A3E	0xE7FF    B	L_I2Cx_Read48
L__I2Cx_Read131:
;__Lib_I2C_12.c, 340 :: 		
;__Lib_I2C_12.c, 346 :: 		
L_I2Cx_Read48:
;__Lib_I2C_12.c, 347 :: 		
; timeout start address is: 28 (R7)
; timeout end address is: 28 (R7)
0x0A40	0xE7EC    B	L_I2Cx_Read46
L_I2Cx_Read47:
;__Lib_I2C_12.c, 348 :: 		
0x0A42	0x2500    MOVS	R5, #0
0x0A44	0x680C    LDR	R4, [R1, #0]
0x0A46	0xF365248A  BFI	R4, R5, #10, #1
0x0A4A	0x600C    STR	R4, [R1, #0]
;__Lib_I2C_12.c, 349 :: 		
0x0A4C	0xF2010414  ADDW	R4, R1, #20
0x0A50	0x6820    LDR	R0, [R4, #0]
; temp start address is: 0 (R0)
;__Lib_I2C_12.c, 350 :: 		
0x0A52	0xBF00    NOP
;__Lib_I2C_12.c, 351 :: 		
0x0A54	0xF2010418  ADDW	R4, R1, #24
0x0A58	0x6824    LDR	R4, [R4, #0]
0x0A5A	0x0424    LSLS	R4, R4, #16
0x0A5C	0xEA400404  ORR	R4, R0, R4, LSL #0
0x0A60	0x4620    MOV	R0, R4
; temp end address is: 0 (R0)
;__Lib_I2C_12.c, 352 :: 		
0x0A62	0x2B01    CMP	R3, #1
0x0A64	0xD105    BNE	L_I2Cx_Read50
;__Lib_I2C_12.c, 353 :: 		
0x0A66	0x2501    MOVS	R5, #1
0x0A68	0x680C    LDR	R4, [R1, #0]
0x0A6A	0xF3652449  BFI	R4, R5, #9, #1
0x0A6E	0x600C    STR	R4, [R1, #0]
0x0A70	0xE004    B	L_I2Cx_Read51
L_I2Cx_Read50:
;__Lib_I2C_12.c, 355 :: 		
0x0A72	0x2501    MOVS	R5, #1
0x0A74	0x680C    LDR	R4, [R1, #0]
0x0A76	0xF3652408  BFI	R4, R5, #8, #1
0x0A7A	0x600C    STR	R4, [R1, #0]
;__Lib_I2C_12.c, 356 :: 		
L_I2Cx_Read51:
;__Lib_I2C_12.c, 358 :: 		
0x0A7C	0x4C9F    LDR	R4, [PC, #636]
; timeout start address is: 20 (R5)
0x0A7E	0x6825    LDR	R5, [R4, #0]
; i end address is: 8 (R2)
; END_mode end address is: 12 (R3)
; buf end address is: 24 (R6)
; I2C_BASE end address is: 4 (R1)
; timeout end address is: 20 (R5)
0x0A80	0x4691    MOV	R9, R2
0x0A82	0x4698    MOV	R8, R3
0x0A84	0x4637    MOV	R7, R6
0x0A86	0x460E    MOV	R6, R1
;__Lib_I2C_12.c, 359 :: 		
L_I2Cx_Read52:
; timeout start address is: 20 (R5)
; I2C_BASE start address is: 24 (R6)
; buf start address is: 28 (R7)
; END_mode start address is: 32 (R8)
; i start address is: 36 (R9)
0x0A88	0x499D    LDR	R1, [PC, #628]
0x0A8A	0x4630    MOV	R0, R6
0x0A8C	0xF7FFFDF4  BL	_ChekXForEvent+0
0x0A90	0xB968    CBNZ	R0, L_I2Cx_Read53
;__Lib_I2C_12.c, 360 :: 		
0x0A92	0x4C9A    LDR	R4, [PC, #616]
0x0A94	0x6824    LDR	R4, [R4, #0]
0x0A96	0xB14C    CBZ	R4, L__I2Cx_Read132
;__Lib_I2C_12.c, 361 :: 		
0x0A98	0xB925    CBNZ	R5, L_I2Cx_Read55
; I2C_BASE end address is: 24 (R6)
; buf end address is: 28 (R7)
; END_mode end address is: 32 (R8)
; i end address is: 36 (R9)
; timeout end address is: 20 (R5)
;__Lib_I2C_12.c, 362 :: 		
0x0A9A	0x2003    MOVS	R0, #3
0x0A9C	0x4C93    LDR	R4, [PC, #588]
0x0A9E	0x6824    LDR	R4, [R4, #0]
0x0AA0	0x47A0    BLX	R4
;__Lib_I2C_12.c, 363 :: 		
0x0AA2	0xE1AD    B	L_end_I2Cx_Read
;__Lib_I2C_12.c, 364 :: 		
L_I2Cx_Read55:
;__Lib_I2C_12.c, 365 :: 		
; timeout start address is: 20 (R5)
; i start address is: 36 (R9)
; END_mode start address is: 32 (R8)
; buf start address is: 28 (R7)
; I2C_BASE start address is: 24 (R6)
0x0AA4	0x1E6C    SUBS	R4, R5, #1
; timeout end address is: 20 (R5)
; timeout start address is: 0 (R0)
0x0AA6	0x4620    MOV	R0, R4
; timeout end address is: 0 (R0)
0x0AA8	0x4605    MOV	R5, R0
;__Lib_I2C_12.c, 366 :: 		
0x0AAA	0xE7FF    B	L_I2Cx_Read54
L__I2Cx_Read132:
;__Lib_I2C_12.c, 360 :: 		
;__Lib_I2C_12.c, 366 :: 		
L_I2Cx_Read54:
;__Lib_I2C_12.c, 367 :: 		
; timeout start address is: 20 (R5)
; timeout end address is: 20 (R5)
0x0AAC	0xE7EC    B	L_I2Cx_Read52
L_I2Cx_Read53:
;__Lib_I2C_12.c, 368 :: 		
0x0AAE	0xEB070509  ADD	R5, R7, R9, LSL #0
; buf end address is: 28 (R7)
; i end address is: 36 (R9)
0x0AB2	0xF2060410  ADDW	R4, R6, #16
0x0AB6	0x6824    LDR	R4, [R4, #0]
0x0AB8	0x702C    STRB	R4, [R5, #0]
;__Lib_I2C_12.c, 369 :: 		
0x0ABA	0xF1B80F01  CMP	R8, #1
0x0ABE	0xD113    BNE	L_I2Cx_Read56
; END_mode end address is: 32 (R8)
;__Lib_I2C_12.c, 370 :: 		
0x0AC0	0x4C8E    LDR	R4, [PC, #568]
; timeout start address is: 4 (R1)
0x0AC2	0x6821    LDR	R1, [R4, #0]
; I2C_BASE end address is: 24 (R6)
; timeout end address is: 4 (R1)
0x0AC4	0x4630    MOV	R0, R6
;__Lib_I2C_12.c, 371 :: 		
L_I2Cx_Read57:
; timeout start address is: 4 (R1)
; I2C_BASE start address is: 0 (R0)
0x0AC6	0x6805    LDR	R5, [R0, #0]
0x0AC8	0xF3C52440  UBFX	R4, R5, #9, #1
0x0ACC	0xB95C    CBNZ	R4, L_I2Cx_Read58
;__Lib_I2C_12.c, 372 :: 		
0x0ACE	0x4C8B    LDR	R4, [PC, #556]
0x0AD0	0x6824    LDR	R4, [R4, #0]
0x0AD2	0xB13C    CBZ	R4, L__I2Cx_Read133
;__Lib_I2C_12.c, 373 :: 		
0x0AD4	0xB921    CBNZ	R1, L_I2Cx_Read60
; I2C_BASE end address is: 0 (R0)
; timeout end address is: 4 (R1)
;__Lib_I2C_12.c, 374 :: 		
0x0AD6	0x2003    MOVS	R0, #3
0x0AD8	0x4C84    LDR	R4, [PC, #528]
0x0ADA	0x6824    LDR	R4, [R4, #0]
0x0ADC	0x47A0    BLX	R4
;__Lib_I2C_12.c, 375 :: 		
0x0ADE	0xE18F    B	L_end_I2Cx_Read
;__Lib_I2C_12.c, 376 :: 		
L_I2Cx_Read60:
;__Lib_I2C_12.c, 377 :: 		
; timeout start address is: 4 (R1)
; I2C_BASE start address is: 0 (R0)
0x0AE0	0x1E49    SUBS	R1, R1, #1
; timeout end address is: 4 (R1)
;__Lib_I2C_12.c, 378 :: 		
0x0AE2	0xE7FF    B	L_I2Cx_Read59
L__I2Cx_Read133:
;__Lib_I2C_12.c, 372 :: 		
;__Lib_I2C_12.c, 378 :: 		
L_I2Cx_Read59:
;__Lib_I2C_12.c, 379 :: 		
; timeout start address is: 4 (R1)
; I2C_BASE end address is: 0 (R0)
; timeout end address is: 4 (R1)
0x0AE4	0xE7EF    B	L_I2Cx_Read57
L_I2Cx_Read58:
;__Lib_I2C_12.c, 380 :: 		
0x0AE6	0xE012    B	L_I2Cx_Read61
L_I2Cx_Read56:
;__Lib_I2C_12.c, 382 :: 		
; I2C_BASE start address is: 24 (R6)
0x0AE8	0x4C84    LDR	R4, [PC, #528]
; timeout start address is: 4 (R1)
0x0AEA	0x6821    LDR	R1, [R4, #0]
; I2C_BASE end address is: 24 (R6)
; timeout end address is: 4 (R1)
0x0AEC	0x4630    MOV	R0, R6
;__Lib_I2C_12.c, 383 :: 		
L_I2Cx_Read62:
; timeout start address is: 4 (R1)
; I2C_BASE start address is: 0 (R0)
0x0AEE	0x6805    LDR	R5, [R0, #0]
0x0AF0	0xF3C52400  UBFX	R4, R5, #8, #1
0x0AF4	0xB95C    CBNZ	R4, L_I2Cx_Read63
;__Lib_I2C_12.c, 384 :: 		
0x0AF6	0x4C81    LDR	R4, [PC, #516]
0x0AF8	0x6824    LDR	R4, [R4, #0]
0x0AFA	0xB13C    CBZ	R4, L__I2Cx_Read134
;__Lib_I2C_12.c, 385 :: 		
0x0AFC	0xB921    CBNZ	R1, L_I2Cx_Read65
; I2C_BASE end address is: 0 (R0)
; timeout end address is: 4 (R1)
;__Lib_I2C_12.c, 386 :: 		
0x0AFE	0x2003    MOVS	R0, #3
0x0B00	0x4C7A    LDR	R4, [PC, #488]
0x0B02	0x6824    LDR	R4, [R4, #0]
0x0B04	0x47A0    BLX	R4
;__Lib_I2C_12.c, 387 :: 		
0x0B06	0xE17B    B	L_end_I2Cx_Read
;__Lib_I2C_12.c, 388 :: 		
L_I2Cx_Read65:
;__Lib_I2C_12.c, 389 :: 		
; timeout start address is: 4 (R1)
; I2C_BASE start address is: 0 (R0)
0x0B08	0x1E49    SUBS	R1, R1, #1
; timeout end address is: 4 (R1)
;__Lib_I2C_12.c, 390 :: 		
0x0B0A	0xE7FF    B	L_I2Cx_Read64
L__I2Cx_Read134:
;__Lib_I2C_12.c, 384 :: 		
;__Lib_I2C_12.c, 390 :: 		
L_I2Cx_Read64:
;__Lib_I2C_12.c, 391 :: 		
; timeout start address is: 4 (R1)
; I2C_BASE end address is: 0 (R0)
; timeout end address is: 4 (R1)
0x0B0C	0xE7EF    B	L_I2Cx_Read62
L_I2Cx_Read63:
;__Lib_I2C_12.c, 392 :: 		
L_I2Cx_Read61:
;__Lib_I2C_12.c, 393 :: 		
0x0B0E	0xE177    B	L_I2Cx_Read44
;__Lib_I2C_12.c, 395 :: 		
L_I2Cx_Read66:
;__Lib_I2C_12.c, 396 :: 		
; I2C_BASE start address is: 4 (R1)
; END_mode start address is: 12 (R3)
; i start address is: 24 (R6)
; buf start address is: 8 (R2)
; timeout start address is: 36 (R9)
; slave_address start address is: 28 (R7)
0x0B10	0x2501    MOVS	R5, #1
0x0B12	0x680C    LDR	R4, [R1, #0]
0x0B14	0xF365248A  BFI	R4, R5, #10, #1
0x0B18	0x600C    STR	R4, [R1, #0]
;__Lib_I2C_12.c, 397 :: 		
0x0B1A	0x2501    MOVS	R5, #1
0x0B1C	0x680C    LDR	R4, [R1, #0]
0x0B1E	0xF36524CB  BFI	R4, R5, #11, #1
0x0B22	0x600C    STR	R4, [R1, #0]
;__Lib_I2C_12.c, 398 :: 		
0x0B24	0xF2010510  ADDW	R5, R1, #16
0x0B28	0x007C    LSLS	R4, R7, #1
0x0B2A	0xB2A4    UXTH	R4, R4
; slave_address end address is: 28 (R7)
0x0B2C	0xF0440401  ORR	R4, R4, #1
0x0B30	0xB2A4    UXTH	R4, R4
0x0B32	0x602C    STR	R4, [R5, #0]
; timeout end address is: 36 (R9)
; buf end address is: 8 (R2)
; i end address is: 24 (R6)
; END_mode end address is: 12 (R3)
; I2C_BASE end address is: 4 (R1)
0x0B34	0x464F    MOV	R7, R9
;__Lib_I2C_12.c, 399 :: 		
L_I2Cx_Read67:
; timeout start address is: 28 (R7)
; i start address is: 24 (R6)
; END_mode start address is: 12 (R3)
; buf start address is: 8 (R2)
; I2C_BASE start address is: 4 (R1)
0x0B36	0xF2010414  ADDW	R4, R1, #20
0x0B3A	0x6825    LDR	R5, [R4, #0]
0x0B3C	0xF3C50440  UBFX	R4, R5, #1, #1
0x0B40	0xB964    CBNZ	R4, L_I2Cx_Read68
;__Lib_I2C_12.c, 400 :: 		
0x0B42	0x4C6E    LDR	R4, [PC, #440]
0x0B44	0x6824    LDR	R4, [R4, #0]
0x0B46	0xB144    CBZ	R4, L__I2Cx_Read135
;__Lib_I2C_12.c, 401 :: 		
0x0B48	0xB927    CBNZ	R7, L_I2Cx_Read70
; buf end address is: 8 (R2)
; i end address is: 24 (R6)
; END_mode end address is: 12 (R3)
; I2C_BASE end address is: 4 (R1)
; timeout end address is: 28 (R7)
;__Lib_I2C_12.c, 402 :: 		
0x0B4A	0x2003    MOVS	R0, #3
0x0B4C	0x4C67    LDR	R4, [PC, #412]
0x0B4E	0x6824    LDR	R4, [R4, #0]
0x0B50	0x47A0    BLX	R4
;__Lib_I2C_12.c, 403 :: 		
0x0B52	0xE155    B	L_end_I2Cx_Read
;__Lib_I2C_12.c, 404 :: 		
L_I2Cx_Read70:
;__Lib_I2C_12.c, 405 :: 		
; timeout start address is: 28 (R7)
; I2C_BASE start address is: 4 (R1)
; END_mode start address is: 12 (R3)
; i start address is: 24 (R6)
; buf start address is: 8 (R2)
0x0B54	0x1E78    SUBS	R0, R7, #1
; timeout end address is: 28 (R7)
; timeout start address is: 0 (R0)
; timeout end address is: 0 (R0)
0x0B56	0x4607    MOV	R7, R0
;__Lib_I2C_12.c, 406 :: 		
0x0B58	0xE7FF    B	L_I2Cx_Read69
L__I2Cx_Read135:
;__Lib_I2C_12.c, 400 :: 		
;__Lib_I2C_12.c, 406 :: 		
L_I2Cx_Read69:
;__Lib_I2C_12.c, 407 :: 		
; timeout start address is: 28 (R7)
; timeout end address is: 28 (R7)
0x0B5A	0xE7EC    B	L_I2Cx_Read67
L_I2Cx_Read68:
;__Lib_I2C_12.c, 408 :: 		
0x0B5C	0xF2010414  ADDW	R4, R1, #20
0x0B60	0x6820    LDR	R0, [R4, #0]
; temp start address is: 0 (R0)
;__Lib_I2C_12.c, 409 :: 		
0x0B62	0xBF00    NOP
;__Lib_I2C_12.c, 410 :: 		
0x0B64	0xF2010418  ADDW	R4, R1, #24
0x0B68	0x6824    LDR	R4, [R4, #0]
0x0B6A	0x0424    LSLS	R4, R4, #16
0x0B6C	0x4320    ORRS	R0, R4
; temp end address is: 0 (R0)
;__Lib_I2C_12.c, 411 :: 		
0x0B6E	0x2500    MOVS	R5, #0
0x0B70	0x680C    LDR	R4, [R1, #0]
0x0B72	0xF365248A  BFI	R4, R5, #10, #1
0x0B76	0x600C    STR	R4, [R1, #0]
;__Lib_I2C_12.c, 413 :: 		
0x0B78	0x4C60    LDR	R4, [PC, #384]
; timeout start address is: 28 (R7)
0x0B7A	0x6827    LDR	R7, [R4, #0]
; buf end address is: 8 (R2)
; i end address is: 24 (R6)
; END_mode end address is: 12 (R3)
; I2C_BASE end address is: 4 (R1)
; timeout end address is: 28 (R7)
;__Lib_I2C_12.c, 414 :: 		
L_I2Cx_Read71:
; timeout start address is: 28 (R7)
; I2C_BASE start address is: 4 (R1)
; buf start address is: 8 (R2)
; END_mode start address is: 12 (R3)
; i start address is: 24 (R6)
0x0B7C	0xF2010414  ADDW	R4, R1, #20
0x0B80	0x6825    LDR	R5, [R4, #0]
0x0B82	0xF3C50480  UBFX	R4, R5, #2, #1
0x0B86	0xB964    CBNZ	R4, L_I2Cx_Read72
;__Lib_I2C_12.c, 415 :: 		
0x0B88	0x4C5C    LDR	R4, [PC, #368]
0x0B8A	0x6824    LDR	R4, [R4, #0]
0x0B8C	0xB144    CBZ	R4, L__I2Cx_Read136
;__Lib_I2C_12.c, 416 :: 		
0x0B8E	0xB927    CBNZ	R7, L_I2Cx_Read74
; buf end address is: 8 (R2)
; i end address is: 24 (R6)
; END_mode end address is: 12 (R3)
; I2C_BASE end address is: 4 (R1)
; timeout end address is: 28 (R7)
;__Lib_I2C_12.c, 417 :: 		
0x0B90	0x2003    MOVS	R0, #3
0x0B92	0x4C56    LDR	R4, [PC, #344]
0x0B94	0x6824    LDR	R4, [R4, #0]
0x0B96	0x47A0    BLX	R4
;__Lib_I2C_12.c, 418 :: 		
0x0B98	0xE132    B	L_end_I2Cx_Read
;__Lib_I2C_12.c, 419 :: 		
L_I2Cx_Read74:
;__Lib_I2C_12.c, 420 :: 		
; timeout start address is: 28 (R7)
; I2C_BASE start address is: 4 (R1)
; END_mode start address is: 12 (R3)
; i start address is: 24 (R6)
; buf start address is: 8 (R2)
0x0B9A	0x1E78    SUBS	R0, R7, #1
; timeout end address is: 28 (R7)
; timeout start address is: 0 (R0)
; timeout end address is: 0 (R0)
0x0B9C	0x4607    MOV	R7, R0
;__Lib_I2C_12.c, 421 :: 		
0x0B9E	0xE7FF    B	L_I2Cx_Read73
L__I2Cx_Read136:
;__Lib_I2C_12.c, 415 :: 		
;__Lib_I2C_12.c, 421 :: 		
L_I2Cx_Read73:
;__Lib_I2C_12.c, 422 :: 		
; timeout start address is: 28 (R7)
; timeout end address is: 28 (R7)
0x0BA0	0xE7EC    B	L_I2Cx_Read71
L_I2Cx_Read72:
;__Lib_I2C_12.c, 423 :: 		
0x0BA2	0x2B01    CMP	R3, #1
0x0BA4	0xD105    BNE	L_I2Cx_Read75
;__Lib_I2C_12.c, 424 :: 		
0x0BA6	0x2501    MOVS	R5, #1
0x0BA8	0x680C    LDR	R4, [R1, #0]
0x0BAA	0xF3652449  BFI	R4, R5, #9, #1
0x0BAE	0x600C    STR	R4, [R1, #0]
0x0BB0	0xE004    B	L_I2Cx_Read76
L_I2Cx_Read75:
;__Lib_I2C_12.c, 426 :: 		
0x0BB2	0x2501    MOVS	R5, #1
0x0BB4	0x680C    LDR	R4, [R1, #0]
0x0BB6	0xF3652408  BFI	R4, R5, #8, #1
0x0BBA	0x600C    STR	R4, [R1, #0]
;__Lib_I2C_12.c, 427 :: 		
L_I2Cx_Read76:
;__Lib_I2C_12.c, 428 :: 		
0x0BBC	0x1995    ADDS	R5, R2, R6
0x0BBE	0xF2010410  ADDW	R4, R1, #16
0x0BC2	0x6824    LDR	R4, [R4, #0]
0x0BC4	0x702C    STRB	R4, [R5, #0]
0x0BC6	0x1C74    ADDS	R4, R6, #1
; i end address is: 24 (R6)
;__Lib_I2C_12.c, 429 :: 		
0x0BC8	0x1915    ADDS	R5, R2, R4
; buf end address is: 8 (R2)
0x0BCA	0xF2010410  ADDW	R4, R1, #16
0x0BCE	0x6824    LDR	R4, [R4, #0]
0x0BD0	0x702C    STRB	R4, [R5, #0]
;__Lib_I2C_12.c, 430 :: 		
0x0BD2	0x2B01    CMP	R3, #1
0x0BD4	0xD114    BNE	L_I2Cx_Read77
; END_mode end address is: 12 (R3)
;__Lib_I2C_12.c, 431 :: 		
0x0BD6	0x4C49    LDR	R4, [PC, #292]
; timeout start address is: 8 (R2)
0x0BD8	0x6822    LDR	R2, [R4, #0]
; timeout end address is: 8 (R2)
; I2C_BASE end address is: 4 (R1)
;__Lib_I2C_12.c, 432 :: 		
L_I2Cx_Read78:
; timeout start address is: 8 (R2)
; I2C_BASE start address is: 4 (R1)
0x0BDA	0x680D    LDR	R5, [R1, #0]
0x0BDC	0xF3C52440  UBFX	R4, R5, #9, #1
0x0BE0	0xB964    CBNZ	R4, L_I2Cx_Read79
;__Lib_I2C_12.c, 433 :: 		
0x0BE2	0x4C46    LDR	R4, [PC, #280]
0x0BE4	0x6824    LDR	R4, [R4, #0]
0x0BE6	0xB144    CBZ	R4, L__I2Cx_Read137
;__Lib_I2C_12.c, 434 :: 		
0x0BE8	0xB922    CBNZ	R2, L_I2Cx_Read81
; timeout end address is: 8 (R2)
; I2C_BASE end address is: 4 (R1)
;__Lib_I2C_12.c, 435 :: 		
0x0BEA	0x2003    MOVS	R0, #3
0x0BEC	0x4C3F    LDR	R4, [PC, #252]
0x0BEE	0x6824    LDR	R4, [R4, #0]
0x0BF0	0x47A0    BLX	R4
;__Lib_I2C_12.c, 436 :: 		
0x0BF2	0xE105    B	L_end_I2Cx_Read
;__Lib_I2C_12.c, 437 :: 		
L_I2Cx_Read81:
;__Lib_I2C_12.c, 438 :: 		
; I2C_BASE start address is: 4 (R1)
; timeout start address is: 8 (R2)
0x0BF4	0x1E50    SUBS	R0, R2, #1
; timeout end address is: 8 (R2)
; timeout start address is: 0 (R0)
; timeout end address is: 0 (R0)
0x0BF6	0x4602    MOV	R2, R0
;__Lib_I2C_12.c, 439 :: 		
0x0BF8	0xE7FF    B	L_I2Cx_Read80
L__I2Cx_Read137:
;__Lib_I2C_12.c, 433 :: 		
;__Lib_I2C_12.c, 439 :: 		
L_I2Cx_Read80:
;__Lib_I2C_12.c, 440 :: 		
; timeout start address is: 8 (R2)
; timeout end address is: 8 (R2)
0x0BFA	0xE7EE    B	L_I2Cx_Read78
L_I2Cx_Read79:
;__Lib_I2C_12.c, 441 :: 		
0x0BFC	0x4608    MOV	R0, R1
0x0BFE	0xE013    B	L_I2Cx_Read82
L_I2Cx_Read77:
;__Lib_I2C_12.c, 443 :: 		
0x0C00	0x4C3E    LDR	R4, [PC, #248]
; timeout start address is: 8 (R2)
0x0C02	0x6822    LDR	R2, [R4, #0]
; timeout end address is: 8 (R2)
; I2C_BASE end address is: 4 (R1)
;__Lib_I2C_12.c, 444 :: 		
L_I2Cx_Read83:
; timeout start address is: 8 (R2)
; I2C_BASE start address is: 4 (R1)
0x0C04	0x680D    LDR	R5, [R1, #0]
0x0C06	0xF3C52400  UBFX	R4, R5, #8, #1
0x0C0A	0xB964    CBNZ	R4, L_I2Cx_Read84
;__Lib_I2C_12.c, 445 :: 		
0x0C0C	0x4C3B    LDR	R4, [PC, #236]
0x0C0E	0x6824    LDR	R4, [R4, #0]
0x0C10	0xB144    CBZ	R4, L__I2Cx_Read138
;__Lib_I2C_12.c, 446 :: 		
0x0C12	0xB922    CBNZ	R2, L_I2Cx_Read86
; timeout end address is: 8 (R2)
; I2C_BASE end address is: 4 (R1)
;__Lib_I2C_12.c, 447 :: 		
0x0C14	0x2003    MOVS	R0, #3
0x0C16	0x4C35    LDR	R4, [PC, #212]
0x0C18	0x6824    LDR	R4, [R4, #0]
0x0C1A	0x47A0    BLX	R4
;__Lib_I2C_12.c, 448 :: 		
0x0C1C	0xE0F0    B	L_end_I2Cx_Read
;__Lib_I2C_12.c, 449 :: 		
L_I2Cx_Read86:
;__Lib_I2C_12.c, 450 :: 		
; I2C_BASE start address is: 4 (R1)
; timeout start address is: 8 (R2)
0x0C1E	0x1E50    SUBS	R0, R2, #1
; timeout end address is: 8 (R2)
; timeout start address is: 0 (R0)
; timeout end address is: 0 (R0)
0x0C20	0x4602    MOV	R2, R0
;__Lib_I2C_12.c, 451 :: 		
0x0C22	0xE7FF    B	L_I2Cx_Read85
L__I2Cx_Read138:
;__Lib_I2C_12.c, 445 :: 		
;__Lib_I2C_12.c, 451 :: 		
L_I2Cx_Read85:
;__Lib_I2C_12.c, 452 :: 		
; timeout start address is: 8 (R2)
; timeout end address is: 8 (R2)
0x0C24	0xE7EE    B	L_I2Cx_Read83
L_I2Cx_Read84:
;__Lib_I2C_12.c, 453 :: 		
0x0C26	0x4608    MOV	R0, R1
L_I2Cx_Read82:
; I2C_BASE end address is: 4 (R1)
;__Lib_I2C_12.c, 455 :: 		
; I2C_BASE start address is: 0 (R0)
0x0C28	0x2500    MOVS	R5, #0
0x0C2A	0x6804    LDR	R4, [R0, #0]
0x0C2C	0xF36524CB  BFI	R4, R5, #11, #1
0x0C30	0x6004    STR	R4, [R0, #0]
; I2C_BASE end address is: 0 (R0)
;__Lib_I2C_12.c, 457 :: 		
0x0C32	0xE0E5    B	L_I2Cx_Read44
;__Lib_I2C_12.c, 459 :: 		
L_I2Cx_Read87:
;__Lib_I2C_12.c, 460 :: 		
; I2C_BASE start address is: 4 (R1)
; END_mode start address is: 12 (R3)
; buf start address is: 8 (R2)
; timeout start address is: 36 (R9)
; count start address is: 32 (R8)
; slave_address start address is: 28 (R7)
0x0C34	0x2501    MOVS	R5, #1
0x0C36	0x680C    LDR	R4, [R1, #0]
0x0C38	0xF365248A  BFI	R4, R5, #10, #1
0x0C3C	0x600C    STR	R4, [R1, #0]
;__Lib_I2C_12.c, 461 :: 		
0x0C3E	0xF2010510  ADDW	R5, R1, #16
0x0C42	0x007C    LSLS	R4, R7, #1
0x0C44	0xB2A4    UXTH	R4, R4
; slave_address end address is: 28 (R7)
0x0C46	0xF0440401  ORR	R4, R4, #1
0x0C4A	0xB2A4    UXTH	R4, R4
0x0C4C	0x602C    STR	R4, [R5, #0]
; count end address is: 32 (R8)
; timeout end address is: 36 (R9)
; buf end address is: 8 (R2)
; END_mode end address is: 12 (R3)
; I2C_BASE end address is: 4 (R1)
0x0C4E	0x4646    MOV	R6, R8
0x0C50	0x46C8    MOV	R8, R9
0x0C52	0x4689    MOV	R9, R1
0x0C54	0x4617    MOV	R7, R2
0x0C56	0x461D    MOV	R5, R3
;__Lib_I2C_12.c, 462 :: 		
L_I2Cx_Read88:
; timeout start address is: 32 (R8)
; END_mode start address is: 20 (R5)
; count start address is: 24 (R6)
; buf start address is: 28 (R7)
; I2C_BASE start address is: 36 (R9)
0x0C58	0x492A    LDR	R1, [PC, #168]
0x0C5A	0x4648    MOV	R0, R9
0x0C5C	0xF7FFFD0C  BL	_ChekXForEvent+0
0x0C60	0xB978    CBNZ	R0, L_I2Cx_Read89
;__Lib_I2C_12.c, 463 :: 		
0x0C62	0x4C26    LDR	R4, [PC, #152]
0x0C64	0x6824    LDR	R4, [R4, #0]
0x0C66	0xB15C    CBZ	R4, L__I2Cx_Read139
;__Lib_I2C_12.c, 464 :: 		
0x0C68	0xF1B80F00  CMP	R8, #0
0x0C6C	0xD104    BNE	L_I2Cx_Read91
; END_mode end address is: 20 (R5)
; count end address is: 24 (R6)
; I2C_BASE end address is: 36 (R9)
; timeout end address is: 32 (R8)
; buf end address is: 28 (R7)
;__Lib_I2C_12.c, 465 :: 		
0x0C6E	0x2003    MOVS	R0, #3
0x0C70	0x4C1E    LDR	R4, [PC, #120]
0x0C72	0x6824    LDR	R4, [R4, #0]
0x0C74	0x47A0    BLX	R4
;__Lib_I2C_12.c, 466 :: 		
0x0C76	0xE0C3    B	L_end_I2Cx_Read
;__Lib_I2C_12.c, 467 :: 		
L_I2Cx_Read91:
;__Lib_I2C_12.c, 468 :: 		
; buf start address is: 28 (R7)
; timeout start address is: 32 (R8)
; I2C_BASE start address is: 36 (R9)
; count start address is: 24 (R6)
; END_mode start address is: 20 (R5)
0x0C78	0xF1A80001  SUB	R0, R8, #1
; timeout end address is: 32 (R8)
; timeout start address is: 0 (R0)
; timeout end address is: 0 (R0)
0x0C7C	0x4680    MOV	R8, R0
;__Lib_I2C_12.c, 469 :: 		
0x0C7E	0xE7FF    B	L_I2Cx_Read90
L__I2Cx_Read139:
;__Lib_I2C_12.c, 463 :: 		
;__Lib_I2C_12.c, 469 :: 		
L_I2Cx_Read90:
;__Lib_I2C_12.c, 470 :: 		
; timeout start address is: 32 (R8)
; timeout end address is: 32 (R8)
0x0C80	0xE7EA    B	L_I2Cx_Read88
L_I2Cx_Read89:
;__Lib_I2C_12.c, 471 :: 		
; i start address is: 4 (R1)
0x0C82	0x2100    MOVS	R1, #0
; END_mode end address is: 20 (R5)
; count end address is: 24 (R6)
; I2C_BASE end address is: 36 (R9)
; i end address is: 4 (R1)
; buf end address is: 28 (R7)
0x0C84	0x46A8    MOV	R8, R5
0x0C86	0x464A    MOV	R2, R9
0x0C88	0x46B1    MOV	R9, R6
0x0C8A	0x463B    MOV	R3, R7
;__Lib_I2C_12.c, 472 :: 		
L_I2Cx_Read92:
; i start address is: 4 (R1)
; I2C_BASE start address is: 8 (R2)
; buf start address is: 12 (R3)
; count start address is: 36 (R9)
; END_mode start address is: 32 (R8)
0x0C8C	0xF1A90403  SUB	R4, R9, #3
0x0C90	0x42A1    CMP	R1, R4
0x0C92	0xD222    BCS	L_I2Cx_Read93
;__Lib_I2C_12.c, 473 :: 		
0x0C94	0x4C19    LDR	R4, [PC, #100]
; timeout start address is: 20 (R5)
0x0C96	0x6825    LDR	R5, [R4, #0]
; buf end address is: 12 (R3)
; count end address is: 36 (R9)
; i end address is: 4 (R1)
; I2C_BASE end address is: 8 (R2)
; END_mode end address is: 32 (R8)
; timeout end address is: 20 (R5)
0x0C98	0x468A    MOV	R10, R1
0x0C9A	0x4617    MOV	R7, R2
0x0C9C	0x461E    MOV	R6, R3
;__Lib_I2C_12.c, 474 :: 		
L_I2Cx_Read94:
; timeout start address is: 20 (R5)
; END_mode start address is: 32 (R8)
; count start address is: 36 (R9)
; buf start address is: 24 (R6)
; I2C_BASE start address is: 28 (R7)
; i start address is: 40 (R10)
0x0C9E	0x4918    LDR	R1, [PC, #96]
0x0CA0	0x4638    MOV	R0, R7
0x0CA2	0xF7FFFCE9  BL	_ChekXForEvent+0
0x0CA6	0xB960    CBNZ	R0, L_I2Cx_Read95
;__Lib_I2C_12.c, 475 :: 		
0x0CA8	0x4C14    LDR	R4, [PC, #80]
0x0CAA	0x6824    LDR	R4, [R4, #0]
0x0CAC	0xB144    CBZ	R4, L__I2Cx_Read140
;__Lib_I2C_12.c, 476 :: 		
0x0CAE	0xB925    CBNZ	R5, L_I2Cx_Read97
; count end address is: 36 (R9)
; I2C_BASE end address is: 28 (R7)
; i end address is: 40 (R10)
; buf end address is: 24 (R6)
; END_mode end address is: 32 (R8)
; timeout end address is: 20 (R5)
;__Lib_I2C_12.c, 477 :: 		
0x0CB0	0x2003    MOVS	R0, #3
0x0CB2	0x4C0E    LDR	R4, [PC, #56]
0x0CB4	0x6824    LDR	R4, [R4, #0]
0x0CB6	0x47A0    BLX	R4
;__Lib_I2C_12.c, 478 :: 		
0x0CB8	0xE0A2    B	L_end_I2Cx_Read
;__Lib_I2C_12.c, 479 :: 		
L_I2Cx_Read97:
;__Lib_I2C_12.c, 480 :: 		
; timeout start address is: 20 (R5)
; END_mode start address is: 32 (R8)
; buf start address is: 24 (R6)
; i start address is: 40 (R10)
; I2C_BASE start address is: 28 (R7)
; count start address is: 36 (R9)
0x0CBA	0x1E68    SUBS	R0, R5, #1
; timeout end address is: 20 (R5)
; timeout start address is: 0 (R0)
; timeout end address is: 0 (R0)
0x0CBC	0x4605    MOV	R5, R0
;__Lib_I2C_12.c, 481 :: 		
0x0CBE	0xE7FF    B	L_I2Cx_Read96
L__I2Cx_Read140:
;__Lib_I2C_12.c, 475 :: 		
;__Lib_I2C_12.c, 481 :: 		
L_I2Cx_Read96:
;__Lib_I2C_12.c, 482 :: 		
; timeout start address is: 20 (R5)
; timeout end address is: 20 (R5)
0x0CC0	0xE7ED    B	L_I2Cx_Read94
L_I2Cx_Read95:
;__Lib_I2C_12.c, 483 :: 		
0x0CC2	0xEB06050A  ADD	R5, R6, R10, LSL #0
0x0CC6	0xF2070410  ADDW	R4, R7, #16
0x0CCA	0x6824    LDR	R4, [R4, #0]
0x0CCC	0x702C    STRB	R4, [R5, #0]
0x0CCE	0xF10A0401  ADD	R4, R10, #1
; i end address is: 40 (R10)
; i start address is: 4 (R1)
0x0CD2	0x4621    MOV	R1, R4
;__Lib_I2C_12.c, 484 :: 		
; count end address is: 36 (R9)
; I2C_BASE end address is: 28 (R7)
; buf end address is: 24 (R6)
0x0CD4	0x4633    MOV	R3, R6
0x0CD6	0x463A    MOV	R2, R7
0x0CD8	0xE7D8    B	L_I2Cx_Read92
L_I2Cx_Read93:
;__Lib_I2C_12.c, 485 :: 		
; I2C_BASE start address is: 8 (R2)
; buf start address is: 12 (R3)
0x0CDA	0x4C08    LDR	R4, [PC, #32]
0x0CDC	0xF000B814  B	#40
0x0CE0	0x54004000  	I2C1_CR1+0
0x0CE4	0x00842000  	__Lib_I2C_12__I2C1_TIMEOUT+0
0x0CE8	0x37802000  	_I2C1_Timeout_Ptr+0
0x0CEC	0x377C2000  	_I2Cx_Timeout_Ptr+0
0x0CF0	0x58004000  	I2C2_CR1+0
0x0CF4	0x00882000  	__Lib_I2C_12__I2C2_TIMEOUT+0
0x0CF8	0x37842000  	_I2C2_Timeout_Ptr+0
0x0CFC	0x008C2000  	__Lib_I2C_12__I2Cx_TIMEOUT+0
0x0D00	0x00400003  	#196672
0x0D04	0x00020003  	#196610
; timeout start address is: 28 (R7)
0x0D08	0x6827    LDR	R7, [R4, #0]
; buf end address is: 12 (R3)
; i end address is: 4 (R1)
; I2C_BASE end address is: 8 (R2)
; timeout end address is: 28 (R7)
; END_mode end address is: 32 (R8)
0x0D0A	0x9301    STR	R3, [SP, #4]
0x0D0C	0x460B    MOV	R3, R1
0x0D0E	0x4616    MOV	R6, R2
0x0D10	0x4642    MOV	R2, R8
0x0D12	0x9901    LDR	R1, [SP, #4]
;__Lib_I2C_12.c, 486 :: 		
L_I2Cx_Read98:
; timeout start address is: 28 (R7)
; END_mode start address is: 8 (R2)
; buf start address is: 4 (R1)
; I2C_BASE start address is: 24 (R6)
; i start address is: 12 (R3)
0x0D14	0xF2060414  ADDW	R4, R6, #20
0x0D18	0x6825    LDR	R5, [R4, #0]
0x0D1A	0xF3C50480  UBFX	R4, R5, #2, #1
0x0D1E	0xB964    CBNZ	R4, L_I2Cx_Read99
;__Lib_I2C_12.c, 487 :: 		
0x0D20	0x4C39    LDR	R4, [PC, #228]
0x0D22	0x6824    LDR	R4, [R4, #0]
0x0D24	0xB144    CBZ	R4, L__I2Cx_Read141
;__Lib_I2C_12.c, 488 :: 		
0x0D26	0xB927    CBNZ	R7, L_I2Cx_Read101
; END_mode end address is: 8 (R2)
; i end address is: 12 (R3)
; buf end address is: 4 (R1)
; timeout end address is: 28 (R7)
; I2C_BASE end address is: 24 (R6)
;__Lib_I2C_12.c, 489 :: 		
0x0D28	0x2003    MOVS	R0, #3
0x0D2A	0x4C38    LDR	R4, [PC, #224]
0x0D2C	0x6824    LDR	R4, [R4, #0]
0x0D2E	0x47A0    BLX	R4
;__Lib_I2C_12.c, 490 :: 		
0x0D30	0xE066    B	L_end_I2Cx_Read
;__Lib_I2C_12.c, 491 :: 		
L_I2Cx_Read101:
;__Lib_I2C_12.c, 492 :: 		
; I2C_BASE start address is: 24 (R6)
; timeout start address is: 28 (R7)
; buf start address is: 4 (R1)
; i start address is: 12 (R3)
; END_mode start address is: 8 (R2)
0x0D32	0x1E78    SUBS	R0, R7, #1
; timeout end address is: 28 (R7)
; timeout start address is: 0 (R0)
; timeout end address is: 0 (R0)
0x0D34	0x4607    MOV	R7, R0
;__Lib_I2C_12.c, 493 :: 		
0x0D36	0xE7FF    B	L_I2Cx_Read100
L__I2Cx_Read141:
;__Lib_I2C_12.c, 487 :: 		
;__Lib_I2C_12.c, 493 :: 		
L_I2Cx_Read100:
;__Lib_I2C_12.c, 494 :: 		
; timeout start address is: 28 (R7)
; timeout end address is: 28 (R7)
0x0D38	0xE7EC    B	L_I2Cx_Read98
L_I2Cx_Read99:
;__Lib_I2C_12.c, 495 :: 		
0x0D3A	0x2500    MOVS	R5, #0
0x0D3C	0x6834    LDR	R4, [R6, #0]
0x0D3E	0xF365248A  BFI	R4, R5, #10, #1
0x0D42	0x6034    STR	R4, [R6, #0]
;__Lib_I2C_12.c, 496 :: 		
0x0D44	0x18CD    ADDS	R5, R1, R3
0x0D46	0xF2060410  ADDW	R4, R6, #16
0x0D4A	0x6824    LDR	R4, [R4, #0]
0x0D4C	0x702C    STRB	R4, [R5, #0]
0x0D4E	0x1C58    ADDS	R0, R3, #1
; i end address is: 12 (R3)
; i start address is: 0 (R0)
;__Lib_I2C_12.c, 498 :: 		
0x0D50	0x4C2D    LDR	R4, [PC, #180]
; timeout start address is: 12 (R3)
0x0D52	0x6823    LDR	R3, [R4, #0]
; END_mode end address is: 8 (R2)
; timeout end address is: 12 (R3)
; i end address is: 0 (R0)
; buf end address is: 4 (R1)
; I2C_BASE end address is: 24 (R6)
0x0D54	0x4617    MOV	R7, R2
0x0D56	0x4602    MOV	R2, R0
;__Lib_I2C_12.c, 499 :: 		
L_I2Cx_Read102:
; timeout start address is: 12 (R3)
; i start address is: 8 (R2)
; I2C_BASE start address is: 24 (R6)
; buf start address is: 4 (R1)
; END_mode start address is: 28 (R7)
0x0D58	0xF2060414  ADDW	R4, R6, #20
0x0D5C	0x6825    LDR	R5, [R4, #0]
0x0D5E	0xF3C50480  UBFX	R4, R5, #2, #1
0x0D62	0xB964    CBNZ	R4, L_I2Cx_Read103
;__Lib_I2C_12.c, 500 :: 		
0x0D64	0x4C28    LDR	R4, [PC, #160]
0x0D66	0x6824    LDR	R4, [R4, #0]
0x0D68	0xB144    CBZ	R4, L__I2Cx_Read142
;__Lib_I2C_12.c, 501 :: 		
0x0D6A	0xB923    CBNZ	R3, L_I2Cx_Read105
; END_mode end address is: 28 (R7)
; timeout end address is: 12 (R3)
; buf end address is: 4 (R1)
; i end address is: 8 (R2)
; I2C_BASE end address is: 24 (R6)
;__Lib_I2C_12.c, 502 :: 		
0x0D6C	0x2003    MOVS	R0, #3
0x0D6E	0x4C27    LDR	R4, [PC, #156]
0x0D70	0x6824    LDR	R4, [R4, #0]
0x0D72	0x47A0    BLX	R4
;__Lib_I2C_12.c, 503 :: 		
0x0D74	0xE044    B	L_end_I2Cx_Read
;__Lib_I2C_12.c, 504 :: 		
L_I2Cx_Read105:
;__Lib_I2C_12.c, 505 :: 		
; I2C_BASE start address is: 24 (R6)
; i start address is: 8 (R2)
; buf start address is: 4 (R1)
; timeout start address is: 12 (R3)
; END_mode start address is: 28 (R7)
0x0D76	0x1E58    SUBS	R0, R3, #1
; timeout end address is: 12 (R3)
; timeout start address is: 0 (R0)
; timeout end address is: 0 (R0)
0x0D78	0x4603    MOV	R3, R0
;__Lib_I2C_12.c, 506 :: 		
0x0D7A	0xE7FF    B	L_I2Cx_Read104
L__I2Cx_Read142:
;__Lib_I2C_12.c, 500 :: 		
;__Lib_I2C_12.c, 506 :: 		
L_I2Cx_Read104:
;__Lib_I2C_12.c, 507 :: 		
; timeout start address is: 12 (R3)
; timeout end address is: 12 (R3)
0x0D7C	0xE7EC    B	L_I2Cx_Read102
L_I2Cx_Read103:
;__Lib_I2C_12.c, 508 :: 		
0x0D7E	0x2F01    CMP	R7, #1
0x0D80	0xD107    BNE	L_I2Cx_Read106
; END_mode end address is: 28 (R7)
;__Lib_I2C_12.c, 509 :: 		
0x0D82	0x2501    MOVS	R5, #1
0x0D84	0x6834    LDR	R4, [R6, #0]
0x0D86	0xF3652449  BFI	R4, R5, #9, #1
0x0D8A	0x6034    STR	R4, [R6, #0]
0x0D8C	0x4610    MOV	R0, R2
0x0D8E	0x4632    MOV	R2, R6
0x0D90	0xE021    B	L_I2Cx_Read107
L_I2Cx_Read106:
;__Lib_I2C_12.c, 511 :: 		
0x0D92	0x2501    MOVS	R5, #1
0x0D94	0x6834    LDR	R4, [R6, #0]
0x0D96	0xF3652408  BFI	R4, R5, #8, #1
0x0D9A	0x6034    STR	R4, [R6, #0]
;__Lib_I2C_12.c, 513 :: 		
0x0D9C	0x4C1A    LDR	R4, [PC, #104]
; timeout start address is: 32 (R8)
0x0D9E	0xF8D48000  LDR	R8, [R4, #0]
; timeout end address is: 32 (R8)
; buf end address is: 4 (R1)
; i end address is: 8 (R2)
; I2C_BASE end address is: 24 (R6)
0x0DA2	0x4617    MOV	R7, R2
0x0DA4	0x460D    MOV	R5, R1
;__Lib_I2C_12.c, 514 :: 		
L_I2Cx_Read108:
; timeout start address is: 32 (R8)
; buf start address is: 20 (R5)
; I2C_BASE start address is: 24 (R6)
; i start address is: 28 (R7)
0x0DA6	0x491A    LDR	R1, [PC, #104]
0x0DA8	0x4630    MOV	R0, R6
0x0DAA	0xF7FFFC65  BL	_ChekXForEvent+0
0x0DAE	0xB978    CBNZ	R0, L_I2Cx_Read109
;__Lib_I2C_12.c, 515 :: 		
0x0DB0	0x4C15    LDR	R4, [PC, #84]
0x0DB2	0x6824    LDR	R4, [R4, #0]
0x0DB4	0xB15C    CBZ	R4, L__I2Cx_Read143
;__Lib_I2C_12.c, 516 :: 		
0x0DB6	0xF1B80F00  CMP	R8, #0
0x0DBA	0xD104    BNE	L_I2Cx_Read111
; buf end address is: 20 (R5)
; i end address is: 28 (R7)
; timeout end address is: 32 (R8)
; I2C_BASE end address is: 24 (R6)
;__Lib_I2C_12.c, 517 :: 		
0x0DBC	0x2003    MOVS	R0, #3
0x0DBE	0x4C13    LDR	R4, [PC, #76]
0x0DC0	0x6824    LDR	R4, [R4, #0]
0x0DC2	0x47A0    BLX	R4
;__Lib_I2C_12.c, 518 :: 		
0x0DC4	0xE01C    B	L_end_I2Cx_Read
;__Lib_I2C_12.c, 519 :: 		
L_I2Cx_Read111:
;__Lib_I2C_12.c, 520 :: 		
; I2C_BASE start address is: 24 (R6)
; timeout start address is: 32 (R8)
; i start address is: 28 (R7)
; buf start address is: 20 (R5)
0x0DC6	0xF1A80001  SUB	R0, R8, #1
; timeout end address is: 32 (R8)
; timeout start address is: 0 (R0)
; timeout end address is: 0 (R0)
0x0DCA	0x4680    MOV	R8, R0
;__Lib_I2C_12.c, 521 :: 		
0x0DCC	0xE7FF    B	L_I2Cx_Read110
L__I2Cx_Read143:
;__Lib_I2C_12.c, 515 :: 		
;__Lib_I2C_12.c, 521 :: 		
L_I2Cx_Read110:
;__Lib_I2C_12.c, 522 :: 		
; timeout start address is: 32 (R8)
; timeout end address is: 32 (R8)
0x0DCE	0xE7EA    B	L_I2Cx_Read108
L_I2Cx_Read109:
;__Lib_I2C_12.c, 523 :: 		
0x0DD0	0x4629    MOV	R1, R5
; i end address is: 28 (R7)
; I2C_BASE end address is: 24 (R6)
0x0DD2	0x4632    MOV	R2, R6
0x0DD4	0x4638    MOV	R0, R7
L_I2Cx_Read107:
; buf end address is: 20 (R5)
;__Lib_I2C_12.c, 524 :: 		
; i start address is: 0 (R0)
; I2C_BASE start address is: 8 (R2)
; buf start address is: 4 (R1)
0x0DD6	0x180D    ADDS	R5, R1, R0
0x0DD8	0xF2020410  ADDW	R4, R2, #16
0x0DDC	0x6824    LDR	R4, [R4, #0]
0x0DDE	0x702C    STRB	R4, [R5, #0]
0x0DE0	0x1C44    ADDS	R4, R0, #1
; i end address is: 0 (R0)
;__Lib_I2C_12.c, 525 :: 		
0x0DE2	0x190D    ADDS	R5, R1, R4
; buf end address is: 4 (R1)
0x0DE4	0xF2020410  ADDW	R4, R2, #16
; I2C_BASE end address is: 8 (R2)
0x0DE8	0x6824    LDR	R4, [R4, #0]
0x0DEA	0x702C    STRB	R4, [R5, #0]
;__Lib_I2C_12.c, 526 :: 		
0x0DEC	0xE008    B	L_I2Cx_Read44
;__Lib_I2C_12.c, 528 :: 		
L_I2Cx_Read43:
; I2C_BASE start address is: 4 (R1)
; END_mode start address is: 12 (R3)
; i start address is: 24 (R6)
; buf start address is: 8 (R2)
; timeout start address is: 36 (R9)
; count start address is: 32 (R8)
; slave_address start address is: 28 (R7)
0x0DEE	0xF1B80F01  CMP	R8, #1
0x0DF2	0xF43FAE07  BEQ	L_I2Cx_Read45
0x0DF6	0xF1B80F02  CMP	R8, #2
0x0DFA	0xF43FAE89  BEQ	L_I2Cx_Read66
; i end address is: 24 (R6)
0x0DFE	0xE719    B	L_I2Cx_Read87
; slave_address end address is: 28 (R7)
; count end address is: 32 (R8)
; timeout end address is: 36 (R9)
; buf end address is: 8 (R2)
; END_mode end address is: 12 (R3)
; I2C_BASE end address is: 4 (R1)
L_I2Cx_Read44:
;__Lib_I2C_12.c, 529 :: 		
L_end_I2Cx_Read:
0x0E00	0xF8DDE000  LDR	LR, [SP, #0]
0x0E04	0xB002    ADD	SP, SP, #8
0x0E06	0x4770    BX	LR
0x0E08	0x008C2000  	__Lib_I2C_12__I2Cx_TIMEOUT+0
0x0E0C	0x377C2000  	_I2Cx_Timeout_Ptr+0
0x0E10	0x00010003  	#196609
; end of _I2Cx_Read
_I2C2_Read:
;__Lib_I2C_12.c, 582 :: 		
; END_mode start address is: 12 (R3)
; count start address is: 8 (R2)
; buf start address is: 4 (R1)
; slave_address start address is: 0 (R0)
0x1370	0xB081    SUB	SP, SP, #4
0x1372	0xF8CDE000  STR	LR, [SP, #0]
; END_mode end address is: 12 (R3)
; count end address is: 8 (R2)
; buf end address is: 4 (R1)
; slave_address end address is: 0 (R0)
; slave_address start address is: 0 (R0)
; buf start address is: 4 (R1)
; count start address is: 8 (R2)
; END_mode start address is: 12 (R3)
;__Lib_I2C_12.c, 583 :: 		
0x1376	0xB408    PUSH	(R3)
; count end address is: 8 (R2)
0x1378	0x4613    MOV	R3, R2
0x137A	0x460A    MOV	R2, R1
; buf end address is: 4 (R1)
0x137C	0xB2C1    UXTB	R1, R0
; slave_address end address is: 0 (R0)
0x137E	0x4804    LDR	R0, [PC, #16]
; END_mode end address is: 12 (R3)
0x1380	0xF7FFFB1A  BL	_I2Cx_Read+0
0x1384	0xB001    ADD	SP, SP, #4
;__Lib_I2C_12.c, 584 :: 		
L_end_I2C2_Read:
0x1386	0xF8DDE000  LDR	LR, [SP, #0]
0x138A	0xB001    ADD	SP, SP, #4
0x138C	0x4770    BX	LR
0x138E	0xBF00    NOP
0x1390	0x58004000  	I2C2_CR1+0
; end of _I2C2_Read
_irgrid2_ExtractParameters:
;__irgrid2_driver.c, 977 :: 		int irgrid2_ExtractParameters(uint16_t *eeData, paramsMLX90640 *mlx90640)
0x4018	0xB084    SUB	SP, SP, #16
0x401A	0xF8CDE000  STR	LR, [SP, #0]
0x401E	0x9002    STR	R0, [SP, #8]
0x4020	0x9103    STR	R1, [SP, #12]
;__irgrid2_driver.c, 979 :: 		int error = CheckEEPROMValid(eeData);
0x4022	0x9802    LDR	R0, [SP, #8]
0x4024	0xF7FEF86A  BL	__irgrid2_driver_CheckEEPROMValid+0
0x4028	0xF8AD0004  STRH	R0, [SP, #4]
;__irgrid2_driver.c, 981 :: 		if(error == 0)
0x402C	0xBBC8    CBNZ	R0, L_irgrid2_ExtractParameters158
;__irgrid2_driver.c, 983 :: 		ExtractVDDParameters(eeData, mlx90640);
0x402E	0x9903    LDR	R1, [SP, #12]
0x4030	0x9802    LDR	R0, [SP, #8]
0x4032	0xF7FEF83F  BL	__irgrid2_driver_ExtractVDDParameters+0
;__irgrid2_driver.c, 984 :: 		ExtractPTATParameters(eeData, mlx90640);
0x4036	0x9903    LDR	R1, [SP, #12]
0x4038	0x9802    LDR	R0, [SP, #8]
0x403A	0xF7FDFFBB  BL	__irgrid2_driver_ExtractPTATParameters+0
;__irgrid2_driver.c, 985 :: 		ExtractGainParameters(eeData, mlx90640);
0x403E	0x9903    LDR	R1, [SP, #12]
0x4040	0x9802    LDR	R0, [SP, #8]
0x4042	0xF7FEFA35  BL	__irgrid2_driver_ExtractGainParameters+0
;__irgrid2_driver.c, 986 :: 		ExtractTgcParameters(eeData, mlx90640);
0x4046	0x9903    LDR	R1, [SP, #12]
0x4048	0x9802    LDR	R0, [SP, #8]
0x404A	0xF7FEF991  BL	__irgrid2_driver_ExtractTgcParameters+0
;__irgrid2_driver.c, 987 :: 		ExtractResolutionParameters(eeData, mlx90640);
0x404E	0x9903    LDR	R1, [SP, #12]
0x4050	0x9802    LDR	R0, [SP, #8]
0x4052	0xF7FEF9B9  BL	__irgrid2_driver_ExtractResolutionParameters+0
;__irgrid2_driver.c, 988 :: 		ExtractKsTaParameters(eeData, mlx90640);
0x4056	0x9903    LDR	R1, [SP, #12]
0x4058	0x9802    LDR	R0, [SP, #8]
0x405A	0xF7FEFD9F  BL	__irgrid2_driver_ExtractKsTaParameters+0
;__irgrid2_driver.c, 989 :: 		ExtractKsToParameters(eeData, mlx90640);
0x405E	0x9903    LDR	R1, [SP, #12]
0x4060	0x9802    LDR	R0, [SP, #8]
0x4062	0xF7FEFDC9  BL	__irgrid2_driver_ExtractKsToParameters+0
;__irgrid2_driver.c, 990 :: 		ExtractAlphaParameters(eeData, mlx90640);
0x4066	0x9903    LDR	R1, [SP, #12]
0x4068	0x9802    LDR	R0, [SP, #8]
0x406A	0xF7FEFA33  BL	__irgrid2_driver_ExtractAlphaParameters+0
;__irgrid2_driver.c, 991 :: 		ExtractOffsetParameters(eeData, mlx90640);
0x406E	0x9903    LDR	R1, [SP, #12]
0x4070	0x9802    LDR	R0, [SP, #8]
0x4072	0xF7FEFC21  BL	__irgrid2_driver_ExtractOffsetParameters+0
;__irgrid2_driver.c, 992 :: 		ExtractKtaPixelParameters(eeData, mlx90640);
0x4076	0x9903    LDR	R1, [SP, #12]
0x4078	0x9802    LDR	R0, [SP, #8]
0x407A	0xF7FEF84D  BL	__irgrid2_driver_ExtractKtaPixelParameters+0
;__irgrid2_driver.c, 993 :: 		ExtractKvPixelParameters(eeData, mlx90640);
0x407E	0x9903    LDR	R1, [SP, #12]
0x4080	0x9802    LDR	R0, [SP, #8]
0x4082	0xF7FDFEC7  BL	__irgrid2_driver_ExtractKvPixelParameters+0
;__irgrid2_driver.c, 994 :: 		ExtractCPParameters(eeData, mlx90640);
0x4086	0x9903    LDR	R1, [SP, #12]
0x4088	0x9802    LDR	R0, [SP, #8]
0x408A	0xF7FEFE87  BL	__irgrid2_driver_ExtractCPParameters+0
;__irgrid2_driver.c, 995 :: 		ExtractCILCParameters(eeData, mlx90640);
0x408E	0x9903    LDR	R1, [SP, #12]
0x4090	0x9802    LDR	R0, [SP, #8]
0x4092	0xF7FFF8B1  BL	__irgrid2_driver_ExtractCILCParameters+0
;__irgrid2_driver.c, 996 :: 		error = ExtractDeviatingPixels(eeData, mlx90640);
0x4096	0x9903    LDR	R1, [SP, #12]
0x4098	0x9802    LDR	R0, [SP, #8]
0x409A	0xF7FFF987  BL	__irgrid2_driver_ExtractDeviatingPixels+0
0x409E	0xF8AD0004  STRH	R0, [SP, #4]
;__irgrid2_driver.c, 997 :: 		}
L_irgrid2_ExtractParameters158:
;__irgrid2_driver.c, 998 :: 		return error;
0x40A2	0xF9BD0004  LDRSH	R0, [SP, #4]
;__irgrid2_driver.c, 999 :: 		}
L_end_irgrid2_ExtractParameters:
0x40A6	0xF8DDE000  LDR	LR, [SP, #0]
0x40AA	0xB004    ADD	SP, SP, #16
0x40AC	0x4770    BX	LR
; end of _irgrid2_ExtractParameters
__irgrid2_driver_CheckEEPROMValid:
;__irgrid2_driver.c, 266 :: 		static int CheckEEPROMValid(uint16_t *eeData)
; eeData start address is: 0 (R0)
; eeData end address is: 0 (R0)
; eeData start address is: 0 (R0)
;__irgrid2_driver.c, 269 :: 		deviceSelect = eeData[10] & 0x0040;
0x20FC	0xF2000114  ADDW	R1, R0, #20
; eeData end address is: 0 (R0)
0x2100	0x8809    LDRH	R1, [R1, #0]
0x2102	0xF0010140  AND	R1, R1, #64
;__irgrid2_driver.c, 270 :: 		if(deviceSelect == 0)
0x2106	0xB209    SXTH	R1, R1
0x2108	0xB911    CBNZ	R1, L___irgrid2_driver_CheckEEPROMValid25
;__irgrid2_driver.c, 272 :: 		return 0;
0x210A	0x2000    MOVS	R0, #0
0x210C	0xB200    SXTH	R0, R0
0x210E	0xE002    B	L_end_CheckEEPROMValid
;__irgrid2_driver.c, 273 :: 		}
L___irgrid2_driver_CheckEEPROMValid25:
;__irgrid2_driver.c, 274 :: 		return -7;
0x2110	0xF64F70F9  MOVW	R0, #65529
0x2114	0xB200    SXTH	R0, R0
;__irgrid2_driver.c, 275 :: 		}
L_end_CheckEEPROMValid:
0x2116	0x4770    BX	LR
; end of __irgrid2_driver_CheckEEPROMValid
__irgrid2_driver_ExtractVDDParameters:
;__irgrid2_driver.c, 276 :: 		static void ExtractVDDParameters(uint16_t *eeData, paramsMLX90640 *mlx90640)
; mlx90640 start address is: 4 (R1)
; eeData start address is: 0 (R0)
; mlx90640 end address is: 4 (R1)
; eeData end address is: 0 (R0)
; eeData start address is: 0 (R0)
; mlx90640 start address is: 4 (R1)
;__irgrid2_driver.c, 283 :: 		kVdd = (eeData[51] & 0xFF00) >> 8;
0x20B4	0xF2000266  ADDW	R2, R0, #102
0x20B8	0x8812    LDRH	R2, [R2, #0]
0x20BA	0xF402427F  AND	R2, R2, #65280
0x20BE	0xB292    UXTH	R2, R2
0x20C0	0x0A12    LSRS	R2, R2, #8
; kVdd start address is: 12 (R3)
0x20C2	0xB213    SXTH	R3, R2
;__irgrid2_driver.c, 284 :: 		if(kVdd > 127)
0x20C4	0xB212    SXTH	R2, R2
0x20C6	0x2A7F    CMP	R2, #127
0x20C8	0xDD04    BLE	L___irgrid2_driver_ExtractVDDParameters209
;__irgrid2_driver.c, 286 :: 		kVdd = kVdd - 256;
0x20CA	0xF5A37280  SUB	R2, R3, #256
0x20CE	0xB213    SXTH	R3, R2
; kVdd end address is: 12 (R3)
0x20D0	0xB21A    SXTH	R2, R3
;__irgrid2_driver.c, 287 :: 		}
0x20D2	0xE000    B	L___irgrid2_driver_ExtractVDDParameters26
L___irgrid2_driver_ExtractVDDParameters209:
;__irgrid2_driver.c, 284 :: 		if(kVdd > 127)
0x20D4	0xB21A    SXTH	R2, R3
;__irgrid2_driver.c, 287 :: 		}
L___irgrid2_driver_ExtractVDDParameters26:
;__irgrid2_driver.c, 288 :: 		kVdd = 32 * kVdd;
; kVdd start address is: 8 (R2)
0x20D6	0x0153    LSLS	R3, R2, #5
; kVdd end address is: 8 (R2)
;__irgrid2_driver.c, 289 :: 		vdd25 = eeData[51] & 0x00FF;
0x20D8	0xF2000266  ADDW	R2, R0, #102
; eeData end address is: 0 (R0)
0x20DC	0x8812    LDRH	R2, [R2, #0]
0x20DE	0xF00202FF  AND	R2, R2, #255
;__irgrid2_driver.c, 290 :: 		vdd25 = ((vdd25 - 256) << 5) - 8192;
0x20E2	0xB212    SXTH	R2, R2
0x20E4	0xF5A27280  SUB	R2, R2, #256
0x20E8	0xB212    SXTH	R2, R2
0x20EA	0x0152    LSLS	R2, R2, #5
0x20EC	0xB212    SXTH	R2, R2
0x20EE	0xF5A25200  SUB	R2, R2, #8192
; vdd25 start address is: 0 (R0)
0x20F2	0xB210    SXTH	R0, R2
;__irgrid2_driver.c, 292 :: 		mlx90640->kVdd = kVdd;
0x20F4	0x800B    STRH	R3, [R1, #0]
;__irgrid2_driver.c, 293 :: 		mlx90640->vdd25 = vdd25;
0x20F6	0x1C8A    ADDS	R2, R1, #2
; mlx90640 end address is: 4 (R1)
0x20F8	0x8010    STRH	R0, [R2, #0]
; vdd25 end address is: 0 (R0)
;__irgrid2_driver.c, 294 :: 		}
L_end_ExtractVDDParameters:
0x20FA	0x4770    BX	LR
; end of __irgrid2_driver_ExtractVDDParameters
__irgrid2_driver_ExtractPTATParameters:
;__irgrid2_driver.c, 296 :: 		static void ExtractPTATParameters(uint16_t *eeData, paramsMLX90640 *mlx90640)
; eeData start address is: 0 (R0)
0x1FB4	0xB087    SUB	SP, SP, #28
0x1FB6	0xF8CDE000  STR	LR, [SP, #0]
0x1FBA	0x4681    MOV	R9, R0
0x1FBC	0x9104    STR	R1, [SP, #16]
; eeData end address is: 0 (R0)
; eeData start address is: 36 (R9)
;__irgrid2_driver.c, 303 :: 		KvPTAT = (eeData[50] & 0xFC00) >> 10;
0x1FBE	0xF1090264  ADD	R2, R9, #100
0x1FC2	0x8812    LDRH	R2, [R2, #0]
0x1FC4	0xF402427C  AND	R2, R2, #64512
0x1FC8	0xB292    UXTH	R2, R2
0x1FCA	0x0A92    LSRS	R2, R2, #10
0x1FCC	0xB292    UXTH	R2, R2
0x1FCE	0xB290    UXTH	R0, R2
0x1FD0	0xF7FFFBDE  BL	__UnsignedIntegralToFloat+0
0x1FD4	0x9001    STR	R0, [SP, #4]
;__irgrid2_driver.c, 304 :: 		if(KvPTAT > 31)
0x1FD6	0x4A34    LDR	R2, [PC, #208]
0x1FD8	0xF7FFFCC4  BL	__Compare_FP+0
0x1FDC	0xF2400000  MOVW	R0, #0
0x1FE0	0xDD00    BLE	L___irgrid2_driver_ExtractPTATParameters270
0x1FE2	0x2001    MOVS	R0, #1
L___irgrid2_driver_ExtractPTATParameters270:
0x1FE4	0xB128    CBZ	R0, L___irgrid2_driver_ExtractPTATParameters27
;__irgrid2_driver.c, 306 :: 		KvPTAT = KvPTAT - 64;
0x1FE6	0x9801    LDR	R0, [SP, #4]
0x1FE8	0xF04F4285  MOV	R2, #1115684864
0x1FEC	0xF7FFFC38  BL	__Sub_FP+0
0x1FF0	0x9001    STR	R0, [SP, #4]
;__irgrid2_driver.c, 307 :: 		}
L___irgrid2_driver_ExtractPTATParameters27:
;__irgrid2_driver.c, 308 :: 		KvPTAT = KvPTAT/4096;
0x1FF2	0x9801    LDR	R0, [SP, #4]
0x1FF4	0xF04F428B  MOV	R2, #1166016512
0x1FF8	0xF7FFFBE0  BL	__Div_FP+0
0x1FFC	0x9001    STR	R0, [SP, #4]
;__irgrid2_driver.c, 310 :: 		KtPTAT = eeData[50] & 0x03FF;
0x1FFE	0xF1090264  ADD	R2, R9, #100
0x2002	0x8813    LDRH	R3, [R2, #0]
0x2004	0xF24032FF  MOVW	R2, #1023
0x2008	0xEA030202  AND	R2, R3, R2, LSL #0
0x200C	0xB292    UXTH	R2, R2
0x200E	0xB290    UXTH	R0, R2
0x2010	0xF7FFFBBE  BL	__UnsignedIntegralToFloat+0
0x2014	0x9002    STR	R0, [SP, #8]
;__irgrid2_driver.c, 311 :: 		if(KtPTAT > 511)
0x2016	0x4A25    LDR	R2, [PC, #148]
0x2018	0xF7FFFCA4  BL	__Compare_FP+0
0x201C	0xF2400000  MOVW	R0, #0
0x2020	0xDD00    BLE	L___irgrid2_driver_ExtractPTATParameters271
0x2022	0x2001    MOVS	R0, #1
L___irgrid2_driver_ExtractPTATParameters271:
0x2024	0xB128    CBZ	R0, L___irgrid2_driver_ExtractPTATParameters28
;__irgrid2_driver.c, 313 :: 		KtPTAT = KtPTAT - 1024;
0x2026	0x9802    LDR	R0, [SP, #8]
0x2028	0xF04F4289  MOV	R2, #1149239296
0x202C	0xF7FFFC18  BL	__Sub_FP+0
0x2030	0x9002    STR	R0, [SP, #8]
;__irgrid2_driver.c, 314 :: 		}
L___irgrid2_driver_ExtractPTATParameters28:
;__irgrid2_driver.c, 315 :: 		KtPTAT = KtPTAT/8;
0x2032	0x9802    LDR	R0, [SP, #8]
0x2034	0xF04F4282  MOV	R2, #1090519040
0x2038	0xF7FFFBC0  BL	__Div_FP+0
0x203C	0x9002    STR	R0, [SP, #8]
;__irgrid2_driver.c, 317 :: 		vPTAT25 = eeData[49];
0x203E	0xF1090262  ADD	R2, R9, #98
0x2042	0x8812    LDRH	R2, [R2, #0]
0x2044	0xF8AD200C  STRH	R2, [SP, #12]
;__irgrid2_driver.c, 319 :: 		alphaPTAT = (eeData[16] & 0xF000) / _pow(2, (double)14) + 8.0f;
0x2048	0xF1090220  ADD	R2, R9, #32
; eeData end address is: 36 (R9)
0x204C	0x8812    LDRH	R2, [R2, #0]
0x204E	0xF4024270  AND	R2, R2, #61440
0x2052	0xF8AD2018  STRH	R2, [SP, #24]
0x2056	0x4916    LDR	R1, [PC, #88]
0x2058	0xF04F4080  MOV	R0, #1073741824
0x205C	0xF7FFFAE8  BL	__irgrid2_driver__pow+0
0x2060	0xF8BD2018  LDRH	R2, [SP, #24]
0x2064	0x9006    STR	R0, [SP, #24]
0x2066	0xB290    UXTH	R0, R2
0x2068	0xF7FFFB92  BL	__UnsignedIntegralToFloat+0
0x206C	0x9A06    LDR	R2, [SP, #24]
0x206E	0xF7FFFBA5  BL	__Div_FP+0
0x2072	0xF04F4282  MOV	R2, #1090519040
0x2076	0xF7FEFA7F  BL	__Add_FP+0
; alphaPTAT start address is: 0 (R0)
;__irgrid2_driver.c, 321 :: 		mlx90640->KvPTAT = KvPTAT;
0x207A	0x9A04    LDR	R2, [SP, #16]
0x207C	0x1D13    ADDS	R3, R2, #4
0x207E	0x9A01    LDR	R2, [SP, #4]
0x2080	0x601A    STR	R2, [R3, #0]
;__irgrid2_driver.c, 322 :: 		mlx90640->KtPTAT = KtPTAT;
0x2082	0x9A04    LDR	R2, [SP, #16]
0x2084	0xF2020308  ADDW	R3, R2, #8
0x2088	0x9A02    LDR	R2, [SP, #8]
0x208A	0x601A    STR	R2, [R3, #0]
;__irgrid2_driver.c, 323 :: 		mlx90640->vPTAT25 = vPTAT25;
0x208C	0x9A04    LDR	R2, [SP, #16]
0x208E	0xF202030C  ADDW	R3, R2, #12
0x2092	0xF9BD200C  LDRSH	R2, [SP, #12]
0x2096	0x801A    STRH	R2, [R3, #0]
;__irgrid2_driver.c, 324 :: 		mlx90640->alphaPTAT = alphaPTAT;
0x2098	0x9A04    LDR	R2, [SP, #16]
0x209A	0x3210    ADDS	R2, #16
0x209C	0x6010    STR	R0, [R2, #0]
; alphaPTAT end address is: 0 (R0)
;__irgrid2_driver.c, 325 :: 		}
L_end_ExtractPTATParameters:
0x209E	0xF8DDE000  LDR	LR, [SP, #0]
0x20A2	0xB007    ADD	SP, SP, #28
0x20A4	0x4770    BX	LR
0x20A6	0xBF00    NOP
0x20A8	0x000041F8  	#1106771968
0x20AC	0x800043FF  	#1140817920
0x20B0	0x00004160  	#1096810496
; end of __irgrid2_driver_ExtractPTATParameters
__UnsignedIntegralToFloat:
;__Lib_MathDouble.c, 262 :: 		
0x1790	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 264 :: 		
0x1792	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 265 :: 		
0x1794	0xBF08    IT	EQ
;__Lib_MathDouble.c, 267 :: 		
0x1796	0xE00F    BEQ	__me_lab_end
;__Lib_MathDouble.c, 269 :: 		
0x1798	0xB502    PUSH	(R1, R14)
;__Lib_MathDouble.c, 271 :: 		
0x179A	0xF04F029E  MOV	R2, #158
;__Lib_MathDouble.c, 272 :: 		
0x179E	0xD402    BMI	__me_label_cont
;__Lib_MathDouble.c, 274 :: 		
__me_loop:
0x17A0	0x1E52    SUBS	R2, R2, #1
;__Lib_MathDouble.c, 275 :: 		
0x17A2	0x0040    LSLS	R0, R0, #1
;__Lib_MathDouble.c, 277 :: 		
0x17A4	0xD5FC    BPL	__me_loop
;__Lib_MathDouble.c, 279 :: 		
__me_label_cont:
0x17A6	0x3080    ADDS	R0, #128
;__Lib_MathDouble.c, 280 :: 		
0x17A8	0xBF2C    ITE	CS
;__Lib_MathDouble.c, 281 :: 		
0x17AA	0x1C52    ADDCS	R2, R2, #1
;__Lib_MathDouble.c, 282 :: 		
0x17AC	0x0040    LSLCC	R0, R0, #1
;__Lib_MathDouble.c, 284 :: 		
0x17AE	0x0A40    LSRS	R0, R0, #9
;__Lib_MathDouble.c, 285 :: 		
0x17B0	0xEA4050C2  ORR	R0, R0, R2, LSL #23
;__Lib_MathDouble.c, 287 :: 		
0x17B4	0xE8BD4002  POP	(R1, R14)
;__Lib_MathDouble.c, 288 :: 		
__me_lab_end:
;__Lib_MathDouble.c, 290 :: 		
L_end__UnsignedIntegralToFloat:
0x17B8	0xB001    ADD	SP, SP, #4
0x17BA	0x4770    BX	LR
; end of __UnsignedIntegralToFloat
__Compare_FP:
;__Lib_MathDouble.c, 839 :: 		
0x1964	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 841 :: 		
0x1966	0xB510    PUSH	(R4, R14)
;__Lib_MathDouble.c, 843 :: 		
0x1968	0x4290    CMP	R0, R2
;__Lib_MathDouble.c, 844 :: 		
0x196A	0xBF08    IT	EQ
;__Lib_MathDouble.c, 846 :: 		
0x196C	0xE02A    BEQ	__me_lab_end
;__Lib_MathDouble.c, 848 :: 		
0x196E	0xEA400402  ORR	R4, R0, R2, LSL #0
;__Lib_MathDouble.c, 849 :: 		
0x1972	0xEA4F0444  LSL	R4, R4, #1
;__Lib_MathDouble.c, 850 :: 		
0x1976	0x2C00    CMP	R4, #0
;__Lib_MathDouble.c, 851 :: 		
0x1978	0xBF08    IT	EQ
;__Lib_MathDouble.c, 853 :: 		
0x197A	0xE023    BEQ	__me_lab_end
;__Lib_MathDouble.c, 855 :: 		
0x197C	0x0044    LSLS	R4, R0, #1
;__Lib_MathDouble.c, 856 :: 		
0x197E	0xD104    BNE	__me_ct2_
;__Lib_MathDouble.c, 858 :: 		
0x1980	0x4294    CMP	R4, R2
;__Lib_MathDouble.c, 859 :: 		
0x1982	0xD401    BMI	__me_labop2_pos
;__Lib_MathDouble.c, 860 :: 		
0x1984	0x1CA4    ADDS	R4, R4, #2
;__Lib_MathDouble.c, 861 :: 		
0x1986	0x2C01    CMP	R4, #1
;__Lib_MathDouble.c, 862 :: 		
__me_labop2_pos:
;__Lib_MathDouble.c, 864 :: 		
0x1988	0xE01C    B	__me_lab_end
;__Lib_MathDouble.c, 866 :: 		
__me_ct2_:
0x198A	0xEA4F0440  LSL	R4, R0, #1
;__Lib_MathDouble.c, 867 :: 		
0x198E	0xEA4F6414  LSR	R4, R4, #24
;__Lib_MathDouble.c, 868 :: 		
0x1992	0x2CFF    CMP	R4, #255
;__Lib_MathDouble.c, 869 :: 		
0x1994	0xD10A    BNE	__me_ct1_
;__Lib_MathDouble.c, 870 :: 		
0x1996	0xEA4F0442  LSL	R4, R2, #1
;__Lib_MathDouble.c, 871 :: 		
0x199A	0xEA4F6414  LSR	R4, R4, #24
;__Lib_MathDouble.c, 872 :: 		
0x199E	0x2CFF    CMP	R4, #255
;__Lib_MathDouble.c, 873 :: 		
0x19A0	0xD104    BNE	__me_ct1_
;__Lib_MathDouble.c, 875 :: 		
0x19A2	0xEA4F74D2  LSR	R4, R2, #31
;__Lib_MathDouble.c, 876 :: 		
0x19A6	0xEBB434D0  SUBS	R4, R4, R0, LSR #31
;__Lib_MathDouble.c, 878 :: 		
0x19AA	0xE00B    B	__me_lab_end
;__Lib_MathDouble.c, 880 :: 		
__me_ct1_:
0x19AC	0x2A00    CMP	R2, #0
;__Lib_MathDouble.c, 881 :: 		
0x19AE	0xD406    BMI	__me_op2_m
;__Lib_MathDouble.c, 883 :: 		
0x19B0	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 884 :: 		
0x19B2	0xDC02    BGT	__me_labop1_pos
;__Lib_MathDouble.c, 885 :: 		
0x19B4	0x2400    MOVS	R4, #0
;__Lib_MathDouble.c, 886 :: 		
0x19B6	0x2C01    CMP	R4, #1
;__Lib_MathDouble.c, 888 :: 		
0x19B8	0xE004    B	__me_lab_end
;__Lib_MathDouble.c, 889 :: 		
__me_labop1_pos:
;__Lib_MathDouble.c, 890 :: 		
0x19BA	0x4290    CMP	R0, R2
;__Lib_MathDouble.c, 892 :: 		
0x19BC	0xE002    B	__me_lab_end
;__Lib_MathDouble.c, 893 :: 		
__me_op2_m:
0x19BE	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 894 :: 		
0x19C0	0xBF48    IT	MI
;__Lib_MathDouble.c, 895 :: 		
0x19C2	0x4282    CMPMI	R2, R0
;__Lib_MathDouble.c, 896 :: 		
__me_lab_end:
;__Lib_MathDouble.c, 897 :: 		
0x19C4	0xE8BD4010  POP	(R4, R14)
;__Lib_MathDouble.c, 899 :: 		
L_end__Compare_FP:
0x19C8	0xB001    ADD	SP, SP, #4
0x19CA	0x4770    BX	LR
; end of __Compare_FP
__Sub_FP:
;__Lib_MathDouble.c, 539 :: 		
0x1860	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 541 :: 		
0x1862	0xF0824200  EOR	R2, R2, #-2147483648
;__Lib_MathDouble.c, 542 :: 		
0x1866	0xE92D41FA  PUSH	(R1, R3, R4, R5, R6, R7, R8, R14)
;__Lib_MathDouble.c, 544 :: 		
0x186A	0xEA4F2402  LSL	R4, R2, #8
;__Lib_MathDouble.c, 545 :: 		
0x186E	0xEA4F0542  LSL	R5, R2, #1
;__Lib_MathDouble.c, 546 :: 		
0x1872	0x0E2D    LSRS	R5, R5, #24
;__Lib_MathDouble.c, 547 :: 		
0x1874	0xD104    BNE	__me_lab1
;__Lib_MathDouble.c, 549 :: 		
0x1876	0x2C00    CMP	R4, #0
;__Lib_MathDouble.c, 550 :: 		
0x1878	0xBF18    IT	NE
;__Lib_MathDouble.c, 551 :: 		
0x187A	0xF04F0000  MOVNE	R0, #0
;__Lib_MathDouble.c, 553 :: 		
0x187E	0xE06C    B	__me_lab_end
;__Lib_MathDouble.c, 555 :: 		
__me_lab1:
0x1880	0xF0444400  ORR	R4, R4, #-2147483648
;__Lib_MathDouble.c, 557 :: 		
0x1884	0x2DFF    CMP	R5, #255
;__Lib_MathDouble.c, 559 :: 		
0x1886	0xD05F    BEQ	__me_ovfl1
;__Lib_MathDouble.c, 561 :: 		
0x1888	0xEA4F0494  LSR	R4, R4, #2
;__Lib_MathDouble.c, 562 :: 		
0x188C	0x2A00    CMP	R2, #0
;__Lib_MathDouble.c, 563 :: 		
0x188E	0xBF48    IT	MI
;__Lib_MathDouble.c, 564 :: 		
0x1890	0x4264    RSBMI	R4, R4, #0
;__Lib_MathDouble.c, 566 :: 		
0x1892	0xEA4F2100  LSL	R1, R0, #8
;__Lib_MathDouble.c, 567 :: 		
0x1896	0xEA4F0340  LSL	R3, R0, #1
;__Lib_MathDouble.c, 568 :: 		
0x189A	0x0E1B    LSRS	R3, R3, #24
;__Lib_MathDouble.c, 569 :: 		
0x189C	0xD105    BNE	__me_lab2
;__Lib_MathDouble.c, 571 :: 		
0x189E	0x2900    CMP	R1, #0
;__Lib_MathDouble.c, 572 :: 		
0x18A0	0xBF14    ITE	NE
;__Lib_MathDouble.c, 573 :: 		
0x18A2	0xF04F0000  MOVNE	R0, #0
;__Lib_MathDouble.c, 574 :: 		
0x18A6	0x4610    MOVEQ	R0, R2
;__Lib_MathDouble.c, 576 :: 		
0x18A8	0xE057    B	__me_lab_end
;__Lib_MathDouble.c, 578 :: 		
__me_lab2:
0x18AA	0xF0414100  ORR	R1, R1, #-2147483648
;__Lib_MathDouble.c, 580 :: 		
0x18AE	0x2BFF    CMP	R3, #255
;__Lib_MathDouble.c, 581 :: 		
0x18B0	0xD04B    BEQ	__me_ovfl0
;__Lib_MathDouble.c, 583 :: 		
0x18B2	0xEA4F0191  LSR	R1, R1, #2
;__Lib_MathDouble.c, 584 :: 		
0x18B6	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 585 :: 		
0x18B8	0xBF48    IT	MI
;__Lib_MathDouble.c, 586 :: 		
0x18BA	0x4249    RSBMI	R1, R1, #0
;__Lib_MathDouble.c, 588 :: 		
0x18BC	0x1B5E    SUBS	R6, R3, R5
;__Lib_MathDouble.c, 589 :: 		
0x18BE	0xBF41    ITTTT	MI
;__Lib_MathDouble.c, 590 :: 		
0x18C0	0x460F    MOVMI	R7, R1
;__Lib_MathDouble.c, 591 :: 		
0x18C2	0x4621    MOVMI	R1, R4
;__Lib_MathDouble.c, 592 :: 		
0x18C4	0x463C    MOVMI	R4, R7
;__Lib_MathDouble.c, 593 :: 		
0x18C6	0x4276    RSBMI	R6, R6, #0
;__Lib_MathDouble.c, 594 :: 		
0x18C8	0xBF48    IT	MI
;__Lib_MathDouble.c, 595 :: 		
0x18CA	0x462B    MOVMI	R3, R5
;__Lib_MathDouble.c, 597 :: 		
0x18CC	0x2E19    CMP	R6, #25
;__Lib_MathDouble.c, 598 :: 		
0x18CE	0xBF47    ITTEE	MI
;__Lib_MathDouble.c, 599 :: 		
0x18D0	0xFA44F706  ASRMI	R7, R4, R6
;__Lib_MathDouble.c, 600 :: 		
0x18D4	0x19C9    ADDMI	R1, R1, R7
;__Lib_MathDouble.c, 601 :: 		
0x18D6	0xF04F0800  MOVPL	R8, #0
;__Lib_MathDouble.c, 602 :: 		
0x18DA	0xE003    BPL	__me_skip_sticky
;__Lib_MathDouble.c, 603 :: 		
0x18DC	0xF1C6071C  RSB	R7, R6, #28
;__Lib_MathDouble.c, 604 :: 		
0x18E0	0xFA04F807  LSL	R8, R4, R7
;__Lib_MathDouble.c, 606 :: 		
__me_skip_sticky:
;__Lib_MathDouble.c, 607 :: 		
0x18E4	0x2900    CMP	R1, #0
;__Lib_MathDouble.c, 608 :: 		
0x18E6	0xBF04    ITT	EQ
;__Lib_MathDouble.c, 609 :: 		
0x18E8	0xF04F0000  MOVEQ	R0, #0
;__Lib_MathDouble.c, 611 :: 		
0x18EC	0xE035    BEQ	__me_lab_end
;__Lib_MathDouble.c, 612 :: 		
0x18EE	0xBF46    ITTE	MI
;__Lib_MathDouble.c, 613 :: 		
0x18F0	0x4249    RSBMI	R1, R1, #0
;__Lib_MathDouble.c, 614 :: 		
0x18F2	0xF04F0701  MOVMI	R7, #1
;__Lib_MathDouble.c, 615 :: 		
0x18F6	0xF04F0700  MOVPL	R7, #0
;__Lib_MathDouble.c, 617 :: 		
__me_loop:
0x18FA	0xF1A30301  SUB	R3, R3, #1
;__Lib_MathDouble.c, 618 :: 		
0x18FE	0x0049    LSLS	R1, R1, #1
;__Lib_MathDouble.c, 619 :: 		
0x1900	0xD5FB    BPL	__me_loop
;__Lib_MathDouble.c, 621 :: 		
0x1902	0xF0110480  ANDS	R4, R1, #128
;__Lib_MathDouble.c, 622 :: 		
0x1906	0xD00D    BEQ	__me_no_round
;__Lib_MathDouble.c, 623 :: 		
0x1908	0xF0010520  AND	R5, R1, #32
;__Lib_MathDouble.c, 624 :: 		
0x190C	0xEA480805  ORR	R8, R8, R5, LSL #0
;__Lib_MathDouble.c, 625 :: 		
0x1910	0x3180    ADDS	R1, #128
;__Lib_MathDouble.c, 626 :: 		
0x1912	0xBF28    IT	CS
;__Lib_MathDouble.c, 627 :: 		
0x1914	0x1C5B    ADDCS	R3, R3, #1
;__Lib_MathDouble.c, 628 :: 		
0x1916	0xF0010440  AND	R4, R1, #64
;__Lib_MathDouble.c, 629 :: 		
0x191A	0xEA580804  ORRS	R8, R8, R4, LSL #0
;__Lib_MathDouble.c, 630 :: 		
0x191E	0xBF08    IT	EQ
;__Lib_MathDouble.c, 631 :: 		
0x1920	0xF4217180  BICEQ	R1, R1, #256
;__Lib_MathDouble.c, 633 :: 		
__me_no_round:
;__Lib_MathDouble.c, 634 :: 		
0x1924	0x1C9B    ADDS	R3, R3, #2
;__Lib_MathDouble.c, 635 :: 		
0x1926	0xBFDC    ITT	LE
;__Lib_MathDouble.c, 636 :: 		
0x1928	0xF04F0000  MOVLE	R0, #0
;__Lib_MathDouble.c, 638 :: 		
0x192C	0xE015    BLE	__me_lab_end
;__Lib_MathDouble.c, 639 :: 		
0x192E	0x2BFF    CMP	R3, #255
;__Lib_MathDouble.c, 640 :: 		
0x1930	0xD20D    BCS	__me_ovfl
;__Lib_MathDouble.c, 642 :: 		
0x1932	0xF02101FF  BIC	R1, R1, #255
;__Lib_MathDouble.c, 643 :: 		
0x1936	0xEA4F0141  LSL	R1, R1, #1
;__Lib_MathDouble.c, 645 :: 		
0x193A	0xEA4F2051  LSR	R0, R1, #9
;__Lib_MathDouble.c, 646 :: 		
0x193E	0xEA4050C3  ORR	R0, R0, R3, LSL #23
;__Lib_MathDouble.c, 647 :: 		
0x1942	0xEA4070C7  ORR	R0, R0, R7, LSL #31
;__Lib_MathDouble.c, 650 :: 		
0x1946	0xE008    B	__me_lab_end
;__Lib_MathDouble.c, 652 :: 		
__me_ovfl1:
0x1948	0x4610    MOV	R0, R2
;__Lib_MathDouble.c, 653 :: 		
__me_ovfl0:
0x194A	0xEA4F77D0  LSR	R7, R0, #31
;__Lib_MathDouble.c, 654 :: 		
__me_ovfl:
0x194E	0xEA4F77C7  LSL	R7, R7, #31
;__Lib_MathDouble.c, 655 :: 		
0x1952	0x20FF    MOVS	R0, #255
;__Lib_MathDouble.c, 656 :: 		
0x1954	0xEA4F50C0  LSL	R0, R0, #23
;__Lib_MathDouble.c, 657 :: 		
0x1958	0x4338    ORRS	R0, R7
;__Lib_MathDouble.c, 658 :: 		
__me_lab_end:
;__Lib_MathDouble.c, 659 :: 		
0x195A	0xE8BD41FA  POP	(R1, R3, R4, R5, R6, R7, R8, R14)
;__Lib_MathDouble.c, 661 :: 		
L_end__Sub_FP:
0x195E	0xB001    ADD	SP, SP, #4
0x1960	0x4770    BX	LR
; end of __Sub_FP
__Div_FP:
;__Lib_MathDouble.c, 743 :: 		
0x17BC	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 745 :: 		
0x17BE	0xB5FA    PUSH	(R1, R3, R4, R5, R6, R7, R14)
;__Lib_MathDouble.c, 746 :: 		
0x17C0	0xEA900602  EORS	R6, R0, R2, LSL #0
;__Lib_MathDouble.c, 747 :: 		
0x17C4	0xBF4C    ITE	MI
;__Lib_MathDouble.c, 748 :: 		
0x17C6	0xF04F4600  MOVMI	R6, #-2147483648
;__Lib_MathDouble.c, 749 :: 		
0x17CA	0xF04F0600  MOVPL	R6, #0
;__Lib_MathDouble.c, 751 :: 		
0x17CE	0x0201    LSLS	R1, R0, #8
;__Lib_MathDouble.c, 752 :: 		
0x17D0	0x0043    LSLS	R3, R0, #1
;__Lib_MathDouble.c, 753 :: 		
0x17D2	0x0E1B    LSRS	R3, R3, #24
;__Lib_MathDouble.c, 754 :: 		
0x17D4	0xBF12    ITEE	NE
;__Lib_MathDouble.c, 755 :: 		
0x17D6	0xF0414100  ORRNE	R1, R1, #-2147483648
;__Lib_MathDouble.c, 757 :: 		
0x17DA	0xF04F0000  MOVEQ	R0, #0
;__Lib_MathDouble.c, 759 :: 		
0x17DE	0xE03B    BEQ	__me_lab_end
;__Lib_MathDouble.c, 761 :: 		
0x17E0	0x2BFF    CMP	R3, #255
;__Lib_MathDouble.c, 762 :: 		
0x17E2	0xD035    BEQ	__me_ovfl
;__Lib_MathDouble.c, 764 :: 		
0x17E4	0xEA5F2402  LSLS	R4, R2, #8
;__Lib_MathDouble.c, 765 :: 		
0x17E8	0xEA5F0542  LSLS	R5, R2, #1
;__Lib_MathDouble.c, 766 :: 		
0x17EC	0xEA5F6515  LSRS	R5, R5, #24
;__Lib_MathDouble.c, 767 :: 		
0x17F0	0xBF11    ITEEE	NE
;__Lib_MathDouble.c, 769 :: 		
0x17F2	0xF0444400  ORRNE	R4, R4, #-2147483648
;__Lib_MathDouble.c, 770 :: 		
0x17F6	0xF04F40FF  MOVEQ	R0, #2139095040
;__Lib_MathDouble.c, 771 :: 		
0x17FA	0x4330    ORREQ	R0, R6
;__Lib_MathDouble.c, 773 :: 		
0x17FC	0xE02C    BEQ	__me_lab_end
;__Lib_MathDouble.c, 775 :: 		
0x17FE	0x2DFF    CMP	R5, #255
;__Lib_MathDouble.c, 776 :: 		
0x1800	0xD026    BEQ	__me_ovfl
;__Lib_MathDouble.c, 778 :: 		
0x1802	0x1B5B    SUBS	R3, R3, R5
;__Lib_MathDouble.c, 781 :: 		
0x1804	0x2000    MOVS	R0, #0
;__Lib_MathDouble.c, 782 :: 		
0x1806	0x2720    MOVS	R7, #32
;__Lib_MathDouble.c, 783 :: 		
0x1808	0x0864    LSRS	R4, R4, #1
;__Lib_MathDouble.c, 784 :: 		
0x180A	0x0849    LSRS	R1, R1, #1
;__Lib_MathDouble.c, 786 :: 		
__me_fdiv_:
;__Lib_MathDouble.c, 788 :: 		
0x180C	0x42A1    CMP	R1, R4
;__Lib_MathDouble.c, 790 :: 		
0x180E	0xEB400000  ADC	R0, R0, R0, LSL #0
;__Lib_MathDouble.c, 791 :: 		
0x1812	0xBF28    IT	CS
;__Lib_MathDouble.c, 792 :: 		
0x1814	0x1B09    SUBCS	R1, R1, R4
;__Lib_MathDouble.c, 793 :: 		
0x1816	0x1E7F    SUBS	R7, R7, #1
;__Lib_MathDouble.c, 794 :: 		
0x1818	0xD004    BEQ	__me_flb1_
;__Lib_MathDouble.c, 795 :: 		
0x181A	0x2900    CMP	R1, #0
;__Lib_MathDouble.c, 796 :: 		
0x181C	0xBF18    IT	NE
;__Lib_MathDouble.c, 797 :: 		
0x181E	0x0049    LSLNE	R1, R1, #1
;__Lib_MathDouble.c, 798 :: 		
0x1820	0xD1F4    BNE	__me_fdiv_
;__Lib_MathDouble.c, 800 :: 		
0x1822	0x40B8    LSLS	R0, R7
;__Lib_MathDouble.c, 802 :: 		
__me_flb1_:
0x1824	0xF0104F00  TST	R0, #-2147483648
;__Lib_MathDouble.c, 803 :: 		
0x1828	0xBF04    ITT	EQ
;__Lib_MathDouble.c, 804 :: 		
0x182A	0x0040    LSLEQ	R0, R0, #1
;__Lib_MathDouble.c, 805 :: 		
0x182C	0xF1B30301  SUBSEQ	R3, R3, #1
;__Lib_MathDouble.c, 807 :: 		
0x1830	0x3080    ADDS	R0, #128
;__Lib_MathDouble.c, 808 :: 		
0x1832	0xBF2C    ITE	CS
;__Lib_MathDouble.c, 809 :: 		
0x1834	0x1C5B    ADDCS	R3, R3, #1
;__Lib_MathDouble.c, 810 :: 		
0x1836	0x0040    LSLCC	R0, R0, #1
;__Lib_MathDouble.c, 812 :: 		
__me_flb2_:
0x1838	0x337F    ADDS	R3, #127
;__Lib_MathDouble.c, 813 :: 		
0x183A	0xBFDC    ITT	LE
;__Lib_MathDouble.c, 814 :: 		
0x183C	0xF04F0000  MOVLE	R0, #0
;__Lib_MathDouble.c, 816 :: 		
0x1840	0xE00A    BLE	__me_lab_end
;__Lib_MathDouble.c, 818 :: 		
0x1842	0x2BFF    CMP	R3, #255
;__Lib_MathDouble.c, 819 :: 		
0x1844	0xD204    BCS	__me_ovfl
;__Lib_MathDouble.c, 821 :: 		
0x1846	0x0A40    LSRS	R0, R0, #9
;__Lib_MathDouble.c, 822 :: 		
0x1848	0xEA4050C3  ORR	R0, R0, R3, LSL #23
;__Lib_MathDouble.c, 823 :: 		
0x184C	0x4330    ORRS	R0, R6
;__Lib_MathDouble.c, 826 :: 		
0x184E	0xE003    B	__me_lab_end
;__Lib_MathDouble.c, 828 :: 		
__me_ovfl:
0x1850	0x27FF    MOVS	R7, #255
;__Lib_MathDouble.c, 829 :: 		
0x1852	0x05FF    LSLS	R7, R7, #23
;__Lib_MathDouble.c, 830 :: 		
0x1854	0xEA560007  ORRS	R0, R6, R7, LSL #0
;__Lib_MathDouble.c, 831 :: 		
__me_lab_end:
;__Lib_MathDouble.c, 832 :: 		
0x1858	0xE8BD40FA  POP	(R1, R3, R4, R5, R6, R7, R14)
;__Lib_MathDouble.c, 834 :: 		
L_end__Div_FP:
0x185C	0xB001    ADD	SP, SP, #4
0x185E	0x4770    BX	LR
; end of __Div_FP
__irgrid2_driver__pow:
;__irgrid2_driver.c, 239 :: 		static double _pow(double x, double y) {
; x start address is: 0 (R0)
0x1630	0xB084    SUB	SP, SP, #16
0x1632	0xF8CDE000  STR	LR, [SP, #0]
0x1636	0x9103    STR	R1, [SP, #12]
0x1638	0x4601    MOV	R1, R0
; x end address is: 0 (R0)
; x start address is: 4 (R1)
;__irgrid2_driver.c, 240 :: 		unsigned char sign = 0;
0x163A	0x2200    MOVS	R2, #0
0x163C	0xF88D2008  STRB	R2, [SP, #8]
;__irgrid2_driver.c, 244 :: 		if(y == 0.0)
0x1640	0x9A03    LDR	R2, [SP, #12]
0x1642	0xF04F0000  MOV	R0, #0
0x1646	0xF000F98D  BL	__Compare_FP+0
0x164A	0xF2400000  MOVW	R0, #0
0x164E	0xD100    BNE	L___irgrid2_driver__pow263
0x1650	0x2001    MOVS	R0, #1
L___irgrid2_driver__pow263:
0x1652	0xB110    CBZ	R0, L___irgrid2_driver__pow20
; x end address is: 4 (R1)
;__irgrid2_driver.c, 245 :: 		return 1.0;
0x1654	0xF04F507E  MOV	R0, #1065353216
0x1658	0xE03F    B	L_end__pow
L___irgrid2_driver__pow20:
;__irgrid2_driver.c, 246 :: 		if(x == 0.0)
; x start address is: 4 (R1)
0x165A	0xF04F0000  MOV	R0, #0
0x165E	0x460A    MOV	R2, R1
0x1660	0xF000F980  BL	__Compare_FP+0
0x1664	0xF2400000  MOVW	R0, #0
0x1668	0xD100    BNE	L___irgrid2_driver__pow264
0x166A	0x2001    MOVS	R0, #1
L___irgrid2_driver__pow264:
0x166C	0xB110    CBZ	R0, L___irgrid2_driver__pow21
; x end address is: 4 (R1)
;__irgrid2_driver.c, 247 :: 		return 0.0;
0x166E	0xF04F0000  MOV	R0, #0
0x1672	0xE032    B	L_end__pow
L___irgrid2_driver__pow21:
;__irgrid2_driver.c, 248 :: 		if(x < 0.0) {
; x start address is: 4 (R1)
0x1674	0xF04F0000  MOV	R0, #0
0x1678	0x460A    MOV	R2, R1
0x167A	0xF000F973  BL	__Compare_FP+0
0x167E	0xF2400000  MOVW	R0, #0
0x1682	0xDD00    BLE	L___irgrid2_driver__pow265
0x1684	0x2001    MOVS	R0, #1
L___irgrid2_driver__pow265:
0x1686	0xB1C8    CBZ	R0, L___irgrid2_driver__pow208
;__irgrid2_driver.c, 249 :: 		yi = (long)y;
0x1688	0x9101    STR	R1, [SP, #4]
0x168A	0x9803    LDR	R0, [SP, #12]
0x168C	0xF7FFFED0  BL	__FloatToSignedIntegral+0
; yi start address is: 12 (R3)
0x1690	0x4603    MOV	R3, R0
;__irgrid2_driver.c, 250 :: 		if((double)yi != y)
0x1692	0xF7FFFEEF  BL	__SignedIntegralToFloat+0
0x1696	0x9901    LDR	R1, [SP, #4]
0x1698	0x9A03    LDR	R2, [SP, #12]
0x169A	0xF000F963  BL	__Compare_FP+0
0x169E	0xF2400000  MOVW	R0, #0
0x16A2	0xD000    BEQ	L___irgrid2_driver__pow266
0x16A4	0x2001    MOVS	R0, #1
L___irgrid2_driver__pow266:
0x16A6	0xB110    CBZ	R0, L___irgrid2_driver__pow23
; x end address is: 4 (R1)
; yi end address is: 12 (R3)
;__irgrid2_driver.c, 251 :: 		return 0.0;
0x16A8	0xF04F0000  MOV	R0, #0
0x16AC	0xE015    B	L_end__pow
L___irgrid2_driver__pow23:
;__irgrid2_driver.c, 252 :: 		sign = yi & 1;
; yi start address is: 12 (R3)
; x start address is: 4 (R1)
0x16AE	0xF0030201  AND	R2, R3, #1
; yi end address is: 12 (R3)
0x16B2	0xF88D2008  STRB	R2, [SP, #8]
;__irgrid2_driver.c, 253 :: 		x = -x;
0x16B6	0xF0814000  EOR	R0, R1, #-2147483648
; x end address is: 4 (R1)
; x start address is: 0 (R0)
; x end address is: 0 (R0)
;__irgrid2_driver.c, 254 :: 		}
0x16BA	0xE000    B	L___irgrid2_driver__pow22
L___irgrid2_driver__pow208:
;__irgrid2_driver.c, 248 :: 		if(x < 0.0) {
0x16BC	0x4608    MOV	R0, R1
;__irgrid2_driver.c, 254 :: 		}
L___irgrid2_driver__pow22:
;__irgrid2_driver.c, 255 :: 		x = _log(x);
; x start address is: 0 (R0)
; x end address is: 0 (R0)
0x16BE	0xF7FFFE7B  BL	__irgrid2_driver__log+0
;__irgrid2_driver.c, 256 :: 		x = x*y;
0x16C2	0x9A03    LDR	R2, [SP, #12]
0x16C4	0xF7FFF82C  BL	__Mul_FP+0
;__irgrid2_driver.c, 257 :: 		x = _exp(x);
0x16C8	0xF7FFFEF4  BL	__irgrid2_driver__exp+0
; x start address is: 0 (R0)
;__irgrid2_driver.c, 259 :: 		if(sign)
0x16CC	0xF89D2008  LDRB	R2, [SP, #8]
0x16D0	0xB11A    CBZ	R2, L___irgrid2_driver__pow24
;__irgrid2_driver.c, 260 :: 		return -x;
0x16D2	0xF0804200  EOR	R2, R0, #-2147483648
; x end address is: 0 (R0)
0x16D6	0x4610    MOV	R0, R2
0x16D8	0xE7FF    B	L_end__pow
L___irgrid2_driver__pow24:
;__irgrid2_driver.c, 261 :: 		return x;
; x start address is: 0 (R0)
; x end address is: 0 (R0)
;__irgrid2_driver.c, 262 :: 		}
L_end__pow:
0x16DA	0xF8DDE000  LDR	LR, [SP, #0]
0x16DE	0xB004    ADD	SP, SP, #16
0x16E0	0x4770    BX	LR
; end of __irgrid2_driver__pow
__FloatToSignedIntegral:
;__Lib_MathDouble.c, 4 :: 		
0x1430	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 6 :: 		
0x1432	0xB506    PUSH	(R1, R2, R14)
;__Lib_MathDouble.c, 8 :: 		
0x1434	0xEA4F0240  LSL	R2, R0, #1
;__Lib_MathDouble.c, 9 :: 		
0x1438	0xEA4F6212  LSR	R2, R2, #24
;__Lib_MathDouble.c, 11 :: 		
0x143C	0x3A7F    SUBS	R2, #127
;__Lib_MathDouble.c, 12 :: 		
0x143E	0xBF44    ITT	MI
;__Lib_MathDouble.c, 13 :: 		
0x1440	0xF04F0000  MOVMI	R0, #0
;__Lib_MathDouble.c, 15 :: 		
0x1444	0xE011    BMI	__me_lab_end
;__Lib_MathDouble.c, 17 :: 		
0x1446	0xF1D2021F  RSBS	R2, R2, #31
;__Lib_MathDouble.c, 18 :: 		
0x144A	0xD909    BLS	__me_ovfl
;__Lib_MathDouble.c, 20 :: 		
0x144C	0xEA4F2100  LSL	R1, R0, #8
;__Lib_MathDouble.c, 21 :: 		
0x1450	0xF0414100  ORR	R1, R1, #-2147483648
;__Lib_MathDouble.c, 23 :: 		
0x1454	0x40D1    LSRS	R1, R2
;__Lib_MathDouble.c, 25 :: 		
0x1456	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 26 :: 		
0x1458	0xBF4C    ITE	MI
;__Lib_MathDouble.c, 27 :: 		
0x145A	0x4248    RSBMI	R0, R1, #0
;__Lib_MathDouble.c, 28 :: 		
0x145C	0x4608    MOVPL	R0, R1
;__Lib_MathDouble.c, 31 :: 		
0x145E	0xE004    B	__me_lab_end
;__Lib_MathDouble.c, 33 :: 		
__me_ovfl:
0x1460	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 34 :: 		
0x1462	0xF04F4000  MOV	R0, #-2147483648
;__Lib_MathDouble.c, 35 :: 		
0x1466	0xBF58    IT	PL
;__Lib_MathDouble.c, 36 :: 		
0x1468	0x1E40    SUBPL	R0, R0, #1
;__Lib_MathDouble.c, 37 :: 		
__me_lab_end:
;__Lib_MathDouble.c, 38 :: 		
0x146A	0xE8BD4006  POP	(R1, R2, R14)
;__Lib_MathDouble.c, 40 :: 		
L_end__FloatToSignedIntegral:
0x146E	0xB001    ADD	SP, SP, #4
0x1470	0x4770    BX	LR
; end of __FloatToSignedIntegral
__SignedIntegralToFloat:
;__Lib_MathDouble.c, 186 :: 		
0x1474	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 188 :: 		
0x1476	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 189 :: 		
0x1478	0xBF08    IT	EQ
;__Lib_MathDouble.c, 191 :: 		
0x147A	0xE019    BEQ	__me_lab_end
;__Lib_MathDouble.c, 193 :: 		
0x147C	0xB506    PUSH	(R1, R2, R14)
;__Lib_MathDouble.c, 195 :: 		
0x147E	0xBF54    ITE	PL
;__Lib_MathDouble.c, 196 :: 		
0x1480	0x4601    MOVPL	R1, R0
;__Lib_MathDouble.c, 197 :: 		
0x1482	0xF1D00100  RSBSMI	R1, R0, #0
;__Lib_MathDouble.c, 199 :: 		
0x1486	0xF04F029E  MOV	R2, #158
;__Lib_MathDouble.c, 201 :: 		
0x148A	0xD402    BMI	__me_lab1
;__Lib_MathDouble.c, 202 :: 		
__me_loop:
0x148C	0x1E52    SUBS	R2, R2, #1
;__Lib_MathDouble.c, 203 :: 		
0x148E	0x0049    LSLS	R1, R1, #1
;__Lib_MathDouble.c, 204 :: 		
0x1490	0xD5FC    BPL	__me_loop
;__Lib_MathDouble.c, 206 :: 		
__me_lab1:
0x1492	0x3180    ADDS	R1, #128
;__Lib_MathDouble.c, 207 :: 		
0x1494	0xBF2C    ITE	CS
;__Lib_MathDouble.c, 208 :: 		
0x1496	0x1C52    ADDCS	R2, R2, #1
;__Lib_MathDouble.c, 209 :: 		
0x1498	0x0049    LSLCC	R1, R1, #1
;__Lib_MathDouble.c, 211 :: 		
0x149A	0xEA4F2151  LSR	R1, R1, #9
;__Lib_MathDouble.c, 212 :: 		
0x149E	0xEA4151C2  ORR	R1, R1, R2, LSL #23
;__Lib_MathDouble.c, 213 :: 		
0x14A2	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 214 :: 		
0x14A4	0xBF4C    ITE	MI
;__Lib_MathDouble.c, 215 :: 		
0x14A6	0xF0414000  ORRMI	R0, R1, #-2147483648
;__Lib_MathDouble.c, 216 :: 		
0x14AA	0x4608    MOVPL	R0, R1
;__Lib_MathDouble.c, 218 :: 		
0x14AC	0xE8BD4006  POP	(R1, R2, R14)
;__Lib_MathDouble.c, 219 :: 		
__me_lab_end:
;__Lib_MathDouble.c, 221 :: 		
L_end__SignedIntegralToFloat:
0x14B0	0xB001    ADD	SP, SP, #4
0x14B2	0x4770    BX	LR
; end of __SignedIntegralToFloat
__irgrid2_driver__log:
;__irgrid2_driver.c, 213 :: 		static double _log(double x) {
; x start address is: 0 (R0)
0x13B8	0xB082    SUB	SP, SP, #8
0x13BA	0xF8CDE000  STR	LR, [SP, #0]
0x13BE	0x4603    MOV	R3, R0
; x end address is: 0 (R0)
; x start address is: 12 (R3)
;__irgrid2_driver.c, 229 :: 		if(x <= 0.0)
0x13C0	0xF04F0000  MOV	R0, #0
0x13C4	0x461A    MOV	R2, R3
0x13C6	0xF000FACD  BL	__Compare_FP+0
0x13CA	0xF2400000  MOVW	R0, #0
0x13CE	0xDB00    BLT	L___irgrid2_driver__log261
0x13D0	0x2001    MOVS	R0, #1
L___irgrid2_driver__log261:
0x13D2	0xB110    CBZ	R0, L___irgrid2_driver__log19
; x end address is: 12 (R3)
;__irgrid2_driver.c, 230 :: 		return 0.0;
0x13D4	0xF04F0000  MOV	R0, #0
0x13D8	0xE021    B	L_end__log
L___irgrid2_driver__log19:
;__irgrid2_driver.c, 231 :: 		x = _frexp(x, &exp) * 2.0 - 1.0;
; x start address is: 12 (R3)
0x13DA	0xA901    ADD	R1, SP, #4
0x13DC	0x4618    MOV	R0, R3
; x end address is: 12 (R3)
0x13DE	0xF7FFFAD7  BL	__irgrid2_driver__frexp+0
0x13E2	0xF04F4280  MOV	R2, #1073741824
0x13E6	0xF7FFF99B  BL	__Mul_FP+0
0x13EA	0xF04F527E  MOV	R2, #1065353216
0x13EE	0xF000FA37  BL	__Sub_FP+0
;__irgrid2_driver.c, 232 :: 		exp--;
0x13F2	0xF9BD1004  LDRSH	R1, [SP, #4]
0x13F6	0x1E49    SUBS	R1, R1, #1
0x13F8	0xF8AD1004  STRH	R1, [SP, #4]
;__irgrid2_driver.c, 233 :: 		x = _eval_poly(x, coeff, sizeof coeff/sizeof coeff[0] - 1);
0x13FC	0xF2400208  MOVW	R2, #8
0x1400	0xB212    SXTH	R2, R2
0x1402	0x4909    LDR	R1, [PC, #36]
0x1404	0xF7FFF968  BL	__irgrid2_driver__eval_poly+0
; x start address is: 32 (R8)
0x1408	0x4680    MOV	R8, R0
;__irgrid2_driver.c, 234 :: 		return x + 0.69314718055995 * exp;
0x140A	0xF9BD0004  LDRSH	R0, [SP, #4]
0x140E	0xF000F831  BL	__SignedIntegralToFloat+0
0x1412	0x4A06    LDR	R2, [PC, #24]
0x1414	0xF7FFF984  BL	__Mul_FP+0
0x1418	0x4642    MOV	R2, R8
0x141A	0xF7FFF8AD  BL	__Add_FP+0
; x end address is: 32 (R8)
;__irgrid2_driver.c, 236 :: 		}
L_end__log:
0x141E	0xF8DDE000  LDR	LR, [SP, #0]
0x1422	0xB002    ADD	SP, SP, #8
0x1424	0x4770    BX	LR
0x1426	0xBF00    NOP
0x1428	0x52C80000  	__irgrid2_driver__log_coeff_L0+0
0x142C	0x72183F31  	#1060205080
; end of __irgrid2_driver__log
__irgrid2_driver__frexp:
;__irgrid2_driver.c, 81 :: 		static double _frexp(double value, int * eptr)
; eptr start address is: 4 (R1)
; value start address is: 0 (R0)
0x0990	0xB081    SUB	SP, SP, #4
; eptr end address is: 4 (R1)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
; eptr start address is: 4 (R1)
;__irgrid2_driver.c, 86 :: 		uv.fl = value;
0x0992	0x9000    STR	R0, [SP, #0]
; value end address is: 0 (R0)
;__irgrid2_driver.c, 87 :: 		bb = uv.flt.exp - EXCESS;
0x0994	0xF8BD2002  LDRH	R2, [SP, #2]
0x0998	0xF3C212C7  UBFX	R2, R2, #7, #8
0x099C	0x3A7E    SUBS	R2, #126
; bb start address is: 0 (R0)
0x099E	0xB210    SXTH	R0, R2
;__irgrid2_driver.c, 88 :: 		*eptr = bb;
0x09A0	0x8008    STRH	R0, [R1, #0]
; eptr end address is: 4 (R1)
; bb end address is: 0 (R0)
;__irgrid2_driver.c, 89 :: 		uv.flt.exp = EXCESS;
0x09A2	0x237E    MOVS	R3, #126
0x09A4	0xF8BD2002  LDRH	R2, [SP, #2]
0x09A8	0xF36312CE  BFI	R2, R3, #7, #8
0x09AC	0xF8AD2002  STRH	R2, [SP, #2]
;__irgrid2_driver.c, 90 :: 		return uv.fl;
0x09B0	0x9800    LDR	R0, [SP, #0]
;__irgrid2_driver.c, 91 :: 		}
L_end__frexp:
0x09B2	0xB001    ADD	SP, SP, #4
0x09B4	0x4770    BX	LR
; end of __irgrid2_driver__frexp
__Mul_FP:
;__Lib_MathDouble.c, 666 :: 		
0x0720	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 668 :: 		
0x0722	0xB5FA    PUSH	(R1, R3, R4, R5, R6, R7, R14)
;__Lib_MathDouble.c, 670 :: 		
0x0724	0xEA900602  EORS	R6, R0, R2, LSL #0
;__Lib_MathDouble.c, 671 :: 		
0x0728	0xBF4C    ITE	MI
;__Lib_MathDouble.c, 672 :: 		
0x072A	0xF04F4600  MOVMI	R6, #-2147483648
;__Lib_MathDouble.c, 673 :: 		
0x072E	0xF04F0600  MOVPL	R6, #0
;__Lib_MathDouble.c, 675 :: 		
0x0732	0xEA4F2100  LSL	R1, R0, #8
;__Lib_MathDouble.c, 676 :: 		
0x0736	0xEA4F0340  LSL	R3, R0, #1
;__Lib_MathDouble.c, 677 :: 		
0x073A	0x0E1B    LSRS	R3, R3, #24
;__Lib_MathDouble.c, 678 :: 		
0x073C	0xBF12    ITEE	NE
;__Lib_MathDouble.c, 679 :: 		
0x073E	0xF0414100  ORRNE	R1, R1, #-2147483648
;__Lib_MathDouble.c, 681 :: 		
0x0742	0xF04F0000  MOVEQ	R0, #0
;__Lib_MathDouble.c, 683 :: 		
0x0746	0xE02C    BEQ	__me_lab_end
;__Lib_MathDouble.c, 685 :: 		
0x0748	0x2BFF    CMP	R3, #255
;__Lib_MathDouble.c, 686 :: 		
0x074A	0xD026    BEQ	__me_ovfl
;__Lib_MathDouble.c, 688 :: 		
0x074C	0xEA4F2402  LSL	R4, R2, #8
;__Lib_MathDouble.c, 689 :: 		
0x0750	0xEA4F0542  LSL	R5, R2, #1
;__Lib_MathDouble.c, 690 :: 		
0x0754	0x0E2D    LSRS	R5, R5, #24
;__Lib_MathDouble.c, 691 :: 		
0x0756	0xBF12    ITEE	NE
;__Lib_MathDouble.c, 692 :: 		
0x0758	0xF0444400  ORRNE	R4, R4, #-2147483648
;__Lib_MathDouble.c, 694 :: 		
0x075C	0xF04F0000  MOVEQ	R0, #0
;__Lib_MathDouble.c, 696 :: 		
0x0760	0xE01F    BEQ	__me_lab_end
;__Lib_MathDouble.c, 698 :: 		
0x0762	0x2DFF    CMP	R5, #255
;__Lib_MathDouble.c, 699 :: 		
0x0764	0xD019    BEQ	__me_ovfl
;__Lib_MathDouble.c, 701 :: 		
0x0766	0x195B    ADDS	R3, R3, R5
;__Lib_MathDouble.c, 703 :: 		
0x0768	0xFBA15404  UMULL	R5, R4, R1, R4
;__Lib_MathDouble.c, 705 :: 		
0x076C	0x2C00    CMP	R4, #0
;__Lib_MathDouble.c, 706 :: 		
0x076E	0xBF5C    ITT	PL
;__Lib_MathDouble.c, 707 :: 		
0x0770	0x0064    LSLPL	R4, R4, #1
;__Lib_MathDouble.c, 708 :: 		
0x0772	0x1E5B    SUBPL	R3, R3, #1
;__Lib_MathDouble.c, 710 :: 		
0x0774	0x3480    ADDS	R4, #128
;__Lib_MathDouble.c, 711 :: 		
0x0776	0xBF24    ITT	CS
;__Lib_MathDouble.c, 712 :: 		
0x0778	0x1C5B    ADDCS	R3, R3, #1
;__Lib_MathDouble.c, 713 :: 		
0x077A	0x0864    LSRCS	R4, R4, #1
;__Lib_MathDouble.c, 715 :: 		
0x077C	0x3B7E    SUBS	R3, #126
;__Lib_MathDouble.c, 716 :: 		
0x077E	0xBFDC    ITT	LE
;__Lib_MathDouble.c, 717 :: 		
0x0780	0xF04F0000  MOVLE	R0, #0
;__Lib_MathDouble.c, 719 :: 		
0x0784	0xE00D    BLE	__me_lab_end
;__Lib_MathDouble.c, 721 :: 		
0x0786	0x2BFF    CMP	R3, #255
;__Lib_MathDouble.c, 722 :: 		
0x0788	0xD207    BCS	__me_ovfl
;__Lib_MathDouble.c, 724 :: 		
0x078A	0xEA4F2014  LSR	R0, R4, #8
;__Lib_MathDouble.c, 725 :: 		
0x078E	0xF4300000  BICS	R0, R0, #8388608
;__Lib_MathDouble.c, 726 :: 		
0x0792	0xEA4050C3  ORR	R0, R0, R3, LSL #23
;__Lib_MathDouble.c, 727 :: 		
0x0796	0x4330    ORRS	R0, R6
;__Lib_MathDouble.c, 730 :: 		
0x0798	0xE003    B	__me_lab_end
;__Lib_MathDouble.c, 732 :: 		
__me_ovfl:
0x079A	0x27FF    MOVS	R7, #255
;__Lib_MathDouble.c, 733 :: 		
0x079C	0x05FF    LSLS	R7, R7, #23
;__Lib_MathDouble.c, 734 :: 		
0x079E	0xEA460007  ORR	R0, R6, R7, LSL #0
;__Lib_MathDouble.c, 735 :: 		
__me_lab_end:
;__Lib_MathDouble.c, 736 :: 		
0x07A2	0xE8BD40FA  POP	(R1, R3, R4, R5, R6, R7, R14)
;__Lib_MathDouble.c, 738 :: 		
L_end__Mul_FP:
0x07A6	0xB001    ADD	SP, SP, #4
0x07A8	0x4770    BX	LR
; end of __Mul_FP
__irgrid2_driver__eval_poly:
;__irgrid2_driver.c, 157 :: 		static static double _eval_poly(double x, const double code * d, int n)
; n start address is: 8 (R2)
; d start address is: 4 (R1)
; x start address is: 0 (R0)
0x06D8	0xB081    SUB	SP, SP, #4
0x06DA	0xF8CDE000  STR	LR, [SP, #0]
; n end address is: 8 (R2)
; d end address is: 4 (R1)
; x end address is: 0 (R0)
; x start address is: 0 (R0)
; d start address is: 4 (R1)
; n start address is: 8 (R2)
;__irgrid2_driver.c, 161 :: 		res = d[n];
0x06DE	0x0093    LSLS	R3, R2, #2
0x06E0	0x18CB    ADDS	R3, R1, R3
0x06E2	0x681B    LDR	R3, [R3, #0]
; res start address is: 16 (R4)
0x06E4	0x461C    MOV	R4, R3
; x end address is: 0 (R0)
; d end address is: 4 (R1)
; n end address is: 8 (R2)
; res end address is: 16 (R4)
0x06E6	0x4682    MOV	R10, R0
0x06E8	0x4620    MOV	R0, R4
0x06EA	0x4689    MOV	R9, R1
0x06EC	0xFA0FF882  SXTH	R8, R2
;__irgrid2_driver.c, 162 :: 		while(n)
L___irgrid2_driver__eval_poly11:
; res start address is: 0 (R0)
; x start address is: 40 (R10)
; d start address is: 36 (R9)
; n start address is: 32 (R8)
; d start address is: 36 (R9)
; d end address is: 36 (R9)
; x start address is: 40 (R10)
; x end address is: 40 (R10)
0x06F0	0xF1B80F00  CMP	R8, #0
0x06F4	0xD010    BEQ	L___irgrid2_driver__eval_poly12
; d end address is: 36 (R9)
; x end address is: 40 (R10)
;__irgrid2_driver.c, 164 :: 		res = x * res + d[--n];
; x start address is: 40 (R10)
; d start address is: 36 (R9)
0x06F6	0x4652    MOV	R2, R10
0x06F8	0xF000F812  BL	__Mul_FP+0
; res end address is: 0 (R0)
0x06FC	0xF1A80301  SUB	R3, R8, #1
0x0700	0xB21B    SXTH	R3, R3
; n end address is: 32 (R8)
; n start address is: 44 (R11)
0x0702	0xFA0FFB83  SXTH	R11, R3
0x0706	0x009B    LSLS	R3, R3, #2
0x0708	0xEB090303  ADD	R3, R9, R3, LSL #0
0x070C	0x681A    LDR	R2, [R3, #0]
0x070E	0xF7FFFF33  BL	__Add_FP+0
; res start address is: 0 (R0)
;__irgrid2_driver.c, 165 :: 		}
; d end address is: 36 (R9)
; x end address is: 40 (R10)
; n end address is: 44 (R11)
0x0712	0xFA0FF88B  SXTH	R8, R11
0x0716	0xE7EB    B	L___irgrid2_driver__eval_poly11
L___irgrid2_driver__eval_poly12:
;__irgrid2_driver.c, 166 :: 		return res;
; res end address is: 0 (R0)
;__irgrid2_driver.c, 167 :: 		}
L_end__eval_poly:
0x0718	0xF8DDE000  LDR	LR, [SP, #0]
0x071C	0xB001    ADD	SP, SP, #4
0x071E	0x4770    BX	LR
; end of __irgrid2_driver__eval_poly
__Add_FP:
;__Lib_MathDouble.c, 413 :: 		
0x0578	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 415 :: 		
0x057A	0xE92D41FA  PUSH	(R1, R3, R4, R5, R6, R7, R8, R14)
;__Lib_MathDouble.c, 417 :: 		
0x057E	0xEA4F2402  LSL	R4, R2, #8
;__Lib_MathDouble.c, 418 :: 		
0x0582	0xEA4F0542  LSL	R5, R2, #1
;__Lib_MathDouble.c, 419 :: 		
0x0586	0x0E2D    LSRS	R5, R5, #24
;__Lib_MathDouble.c, 420 :: 		
0x0588	0xD104    BNE	__me_lab1
;__Lib_MathDouble.c, 422 :: 		
0x058A	0x2C00    CMP	R4, #0
;__Lib_MathDouble.c, 423 :: 		
0x058C	0xBF18    IT	NE
;__Lib_MathDouble.c, 424 :: 		
0x058E	0xF04F0000  MOVNE	R0, #0
;__Lib_MathDouble.c, 426 :: 		
0x0592	0xE06C    B	__me_lab_end
;__Lib_MathDouble.c, 428 :: 		
__me_lab1:
0x0594	0xF0444400  ORR	R4, R4, #-2147483648
;__Lib_MathDouble.c, 430 :: 		
0x0598	0x2DFF    CMP	R5, #255
;__Lib_MathDouble.c, 432 :: 		
0x059A	0xD05F    BEQ	__me_ovfl1
;__Lib_MathDouble.c, 434 :: 		
0x059C	0xEA4F0494  LSR	R4, R4, #2
;__Lib_MathDouble.c, 435 :: 		
0x05A0	0x2A00    CMP	R2, #0
;__Lib_MathDouble.c, 436 :: 		
0x05A2	0xBF48    IT	MI
;__Lib_MathDouble.c, 437 :: 		
0x05A4	0x4264    RSBMI	R4, R4, #0
;__Lib_MathDouble.c, 439 :: 		
0x05A6	0xEA4F2100  LSL	R1, R0, #8
;__Lib_MathDouble.c, 440 :: 		
0x05AA	0xEA4F0340  LSL	R3, R0, #1
;__Lib_MathDouble.c, 441 :: 		
0x05AE	0x0E1B    LSRS	R3, R3, #24
;__Lib_MathDouble.c, 442 :: 		
0x05B0	0xD105    BNE	__me_lab2
;__Lib_MathDouble.c, 444 :: 		
0x05B2	0x2900    CMP	R1, #0
;__Lib_MathDouble.c, 445 :: 		
0x05B4	0xBF14    ITE	NE
;__Lib_MathDouble.c, 446 :: 		
0x05B6	0xF04F0000  MOVNE	R0, #0
;__Lib_MathDouble.c, 447 :: 		
0x05BA	0x4610    MOVEQ	R0, R2
;__Lib_MathDouble.c, 449 :: 		
0x05BC	0xE057    B	__me_lab_end
;__Lib_MathDouble.c, 451 :: 		
__me_lab2:
0x05BE	0xF0414100  ORR	R1, R1, #-2147483648
;__Lib_MathDouble.c, 453 :: 		
0x05C2	0x2BFF    CMP	R3, #255
;__Lib_MathDouble.c, 454 :: 		
0x05C4	0xD04B    BEQ	__me_ovfl0
;__Lib_MathDouble.c, 456 :: 		
0x05C6	0xEA4F0191  LSR	R1, R1, #2
;__Lib_MathDouble.c, 457 :: 		
0x05CA	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 458 :: 		
0x05CC	0xBF48    IT	MI
;__Lib_MathDouble.c, 459 :: 		
0x05CE	0x4249    RSBMI	R1, R1, #0
;__Lib_MathDouble.c, 461 :: 		
0x05D0	0x1B5E    SUBS	R6, R3, R5
;__Lib_MathDouble.c, 462 :: 		
0x05D2	0xBF41    ITTTT	MI
;__Lib_MathDouble.c, 463 :: 		
0x05D4	0x460F    MOVMI	R7, R1
;__Lib_MathDouble.c, 464 :: 		
0x05D6	0x4621    MOVMI	R1, R4
;__Lib_MathDouble.c, 465 :: 		
0x05D8	0x463C    MOVMI	R4, R7
;__Lib_MathDouble.c, 466 :: 		
0x05DA	0x4276    RSBMI	R6, R6, #0
;__Lib_MathDouble.c, 467 :: 		
0x05DC	0xBF48    IT	MI
;__Lib_MathDouble.c, 468 :: 		
0x05DE	0x462B    MOVMI	R3, R5
;__Lib_MathDouble.c, 470 :: 		
0x05E0	0x2E19    CMP	R6, #25
;__Lib_MathDouble.c, 471 :: 		
0x05E2	0xBF47    ITTEE	MI
;__Lib_MathDouble.c, 472 :: 		
0x05E4	0xFA44F706  ASRMI	R7, R4, R6
;__Lib_MathDouble.c, 473 :: 		
0x05E8	0x19C9    ADDMI	R1, R1, R7
;__Lib_MathDouble.c, 474 :: 		
0x05EA	0xF04F0800  MOVPL	R8, #0
;__Lib_MathDouble.c, 475 :: 		
0x05EE	0xE003    BPL	__me_skip_sticky
;__Lib_MathDouble.c, 476 :: 		
0x05F0	0xF1C6071C  RSB	R7, R6, #28
;__Lib_MathDouble.c, 477 :: 		
0x05F4	0xFA04F807  LSL	R8, R4, R7
;__Lib_MathDouble.c, 479 :: 		
__me_skip_sticky:
;__Lib_MathDouble.c, 480 :: 		
0x05F8	0x2900    CMP	R1, #0
;__Lib_MathDouble.c, 481 :: 		
0x05FA	0xBF04    ITT	EQ
;__Lib_MathDouble.c, 482 :: 		
0x05FC	0xF04F0000  MOVEQ	R0, #0
;__Lib_MathDouble.c, 484 :: 		
0x0600	0xE035    BEQ	__me_lab_end
;__Lib_MathDouble.c, 485 :: 		
0x0602	0xBF46    ITTE	MI
;__Lib_MathDouble.c, 486 :: 		
0x0604	0x4249    RSBMI	R1, R1, #0
;__Lib_MathDouble.c, 487 :: 		
0x0606	0xF04F0701  MOVMI	R7, #1
;__Lib_MathDouble.c, 488 :: 		
0x060A	0xF04F0700  MOVPL	R7, #0
;__Lib_MathDouble.c, 490 :: 		
__me_loop:
0x060E	0xF1A30301  SUB	R3, R3, #1
;__Lib_MathDouble.c, 491 :: 		
0x0612	0x0049    LSLS	R1, R1, #1
;__Lib_MathDouble.c, 492 :: 		
0x0614	0xD5FB    BPL	__me_loop
;__Lib_MathDouble.c, 494 :: 		
0x0616	0xF0110480  ANDS	R4, R1, #128
;__Lib_MathDouble.c, 495 :: 		
0x061A	0xD00D    BEQ	__me_no_round
;__Lib_MathDouble.c, 496 :: 		
0x061C	0xF0010520  AND	R5, R1, #32
;__Lib_MathDouble.c, 497 :: 		
0x0620	0xEA480805  ORR	R8, R8, R5, LSL #0
;__Lib_MathDouble.c, 498 :: 		
0x0624	0x3180    ADDS	R1, #128
;__Lib_MathDouble.c, 499 :: 		
0x0626	0xBF28    IT	CS
;__Lib_MathDouble.c, 500 :: 		
0x0628	0x1C5B    ADDCS	R3, R3, #1
;__Lib_MathDouble.c, 501 :: 		
0x062A	0xF0010440  AND	R4, R1, #64
;__Lib_MathDouble.c, 502 :: 		
0x062E	0xEA580804  ORRS	R8, R8, R4, LSL #0
;__Lib_MathDouble.c, 503 :: 		
0x0632	0xBF08    IT	EQ
;__Lib_MathDouble.c, 504 :: 		
0x0634	0xF4217180  BICEQ	R1, R1, #256
;__Lib_MathDouble.c, 506 :: 		
__me_no_round:
;__Lib_MathDouble.c, 507 :: 		
0x0638	0x1C9B    ADDS	R3, R3, #2
;__Lib_MathDouble.c, 508 :: 		
0x063A	0xBFDC    ITT	LE
;__Lib_MathDouble.c, 509 :: 		
0x063C	0xF04F0000  MOVLE	R0, #0
;__Lib_MathDouble.c, 511 :: 		
0x0640	0xE015    BLE	__me_lab_end
;__Lib_MathDouble.c, 512 :: 		
0x0642	0x2BFF    CMP	R3, #255
;__Lib_MathDouble.c, 513 :: 		
0x0644	0xD20D    BCS	__me_ovfl
;__Lib_MathDouble.c, 515 :: 		
0x0646	0xF02101FF  BIC	R1, R1, #255
;__Lib_MathDouble.c, 516 :: 		
0x064A	0xEA4F0141  LSL	R1, R1, #1
;__Lib_MathDouble.c, 518 :: 		
0x064E	0xEA4F2051  LSR	R0, R1, #9
;__Lib_MathDouble.c, 519 :: 		
0x0652	0xEA4050C3  ORR	R0, R0, R3, LSL #23
;__Lib_MathDouble.c, 520 :: 		
0x0656	0xEA4070C7  ORR	R0, R0, R7, LSL #31
;__Lib_MathDouble.c, 523 :: 		
0x065A	0xE008    B	__me_lab_end
;__Lib_MathDouble.c, 525 :: 		
__me_ovfl1:
0x065C	0x4610    MOV	R0, R2
;__Lib_MathDouble.c, 526 :: 		
__me_ovfl0:
0x065E	0xEA4F77D0  LSR	R7, R0, #31
;__Lib_MathDouble.c, 527 :: 		
__me_ovfl:
0x0662	0xEA4F77C7  LSL	R7, R7, #31
;__Lib_MathDouble.c, 528 :: 		
0x0666	0x20FF    MOVS	R0, #255
;__Lib_MathDouble.c, 529 :: 		
0x0668	0xEA4F50C0  LSL	R0, R0, #23
;__Lib_MathDouble.c, 530 :: 		
0x066C	0x4338    ORRS	R0, R7
;__Lib_MathDouble.c, 531 :: 		
__me_lab_end:
;__Lib_MathDouble.c, 532 :: 		
0x066E	0xE8BD41FA  POP	(R1, R3, R4, R5, R6, R7, R8, R14)
;__Lib_MathDouble.c, 534 :: 		
L_end__Add_FP:
0x0672	0xB001    ADD	SP, SP, #4
0x0674	0x4770    BX	LR
; end of __Add_FP
__irgrid2_driver__exp:
;__irgrid2_driver.c, 170 :: 		static double _exp(double x)
; x start address is: 0 (R0)
0x14B4	0xB084    SUB	SP, SP, #16
0x14B6	0xF8CDE000  STR	LR, [SP, #0]
0x14BA	0x4602    MOV	R2, R0
; x end address is: 0 (R0)
; x start address is: 8 (R2)
;__irgrid2_driver.c, 190 :: 		if(x == 0.0)
0x14BC	0xF04F0000  MOV	R0, #0
0x14C0	0x9201    STR	R2, [SP, #4]
0x14C2	0xF000FA4F  BL	__Compare_FP+0
0x14C6	0xF2400000  MOVW	R0, #0
0x14CA	0xD100    BNE	L___irgrid2_driver__exp255
0x14CC	0x2001    MOVS	R0, #1
L___irgrid2_driver__exp255:
0x14CE	0x9A01    LDR	R2, [SP, #4]
0x14D0	0xB110    CBZ	R0, L___irgrid2_driver__exp13
; x end address is: 8 (R2)
;__irgrid2_driver.c, 191 :: 		return 1.0;
0x14D2	0xF04F507E  MOV	R0, #1065353216
0x14D6	0xE060    B	L_end__exp
L___irgrid2_driver__exp13:
;__irgrid2_driver.c, 192 :: 		if (x > EXP_MAX)    //too big?
; x start address is: 8 (R2)
0x14D8	0x4832    LDR	R0, [PC, #200]
0x14DA	0x9201    STR	R2, [SP, #4]
0x14DC	0xF000FA42  BL	__Compare_FP+0
0x14E0	0xF2400000  MOVW	R0, #0
0x14E4	0xDA00    BGE	L___irgrid2_driver__exp256
0x14E6	0x2001    MOVS	R0, #1
L___irgrid2_driver__exp256:
0x14E8	0x9A01    LDR	R2, [SP, #4]
0x14EA	0xB108    CBZ	R0, L___irgrid2_driver__exp14
; x end address is: 8 (R2)
;__irgrid2_driver.c, 193 :: 		return DBL_MAX;
0x14EC	0x482E    LDR	R0, [PC, #184]
0x14EE	0xE054    B	L_end__exp
L___irgrid2_driver__exp14:
;__irgrid2_driver.c, 194 :: 		if (x < EXP_MIN)    //too small?
; x start address is: 8 (R2)
0x14F0	0x482E    LDR	R0, [PC, #184]
0x14F2	0x9201    STR	R2, [SP, #4]
0x14F4	0xF000FA36  BL	__Compare_FP+0
0x14F8	0xF2400000  MOVW	R0, #0
0x14FC	0xDD00    BLE	L___irgrid2_driver__exp257
0x14FE	0x2001    MOVS	R0, #1
L___irgrid2_driver__exp257:
0x1500	0x9A01    LDR	R2, [SP, #4]
0x1502	0xB110    CBZ	R0, L___irgrid2_driver__exp15
; x end address is: 8 (R2)
;__irgrid2_driver.c, 195 :: 		return 0.0;
0x1504	0xF04F0000  MOV	R0, #0
0x1508	0xE047    B	L_end__exp
L___irgrid2_driver__exp15:
;__irgrid2_driver.c, 196 :: 		sign = x < 0.0;
; x start address is: 8 (R2)
0x150A	0xF04F0000  MOV	R0, #0
0x150E	0x9201    STR	R2, [SP, #4]
0x1510	0xF000FA28  BL	__Compare_FP+0
0x1514	0xF2400000  MOVW	R0, #0
0x1518	0xDD00    BLE	L___irgrid2_driver__exp258
0x151A	0x2001    MOVS	R0, #1
L___irgrid2_driver__exp258:
0x151C	0x9A01    LDR	R2, [SP, #4]
; sign start address is: 48 (R12)
0x151E	0xFA5FFC80  UXTB	R12, R0
;__irgrid2_driver.c, 197 :: 		if(sign)
0x1522	0xB2C1    UXTB	R1, R0
0x1524	0xB121    CBZ	R1, L___irgrid2_driver__exp207
;__irgrid2_driver.c, 198 :: 		x = -x;
0x1526	0xF0824100  EOR	R1, R2, #-2147483648
; x end address is: 8 (R2)
; x start address is: 0 (R0)
0x152A	0x4608    MOV	R0, R1
; x end address is: 0 (R0)
0x152C	0x4601    MOV	R1, R0
0x152E	0xE000    B	L___irgrid2_driver__exp16
L___irgrid2_driver__exp207:
;__irgrid2_driver.c, 197 :: 		if(sign)
0x1530	0x4611    MOV	R1, R2
;__irgrid2_driver.c, 198 :: 		x = -x;
L___irgrid2_driver__exp16:
;__irgrid2_driver.c, 199 :: 		x *= 1.4426950409;            // convert to log2 //
; x start address is: 4 (R1)
0x1532	0x481F    LDR	R0, [PC, #124]
0x1534	0x460A    MOV	R2, R1
0x1536	0xF7FFF8F3  BL	__Mul_FP+0
; x end address is: 4 (R1)
; x start address is: 36 (R9)
0x153A	0x4681    MOV	R9, R0
;__irgrid2_driver.c, 200 :: 		exp = (int)_floor(x);
0x153C	0xF7FFF9D2  BL	__irgrid2_driver__floor+0
0x1540	0xF7FFFF76  BL	__FloatToSignedIntegral+0
0x1544	0xB200    SXTH	R0, R0
0x1546	0xF8AD0008  STRH	R0, [SP, #8]
;__irgrid2_driver.c, 201 :: 		x -= (double)exp;
0x154A	0xF7FFFF93  BL	__SignedIntegralToFloat+0
0x154E	0x9003    STR	R0, [SP, #12]
0x1550	0x9A03    LDR	R2, [SP, #12]
0x1552	0x4648    MOV	R0, R9
0x1554	0xF000F984  BL	__Sub_FP+0
; x end address is: 36 (R9)
;__irgrid2_driver.c, 202 :: 		x = _ldexp(_eval_poly(x, coeff, sizeof coeff/sizeof coeff[0] - 1), exp);
0x1558	0xF2400209  MOVW	R2, #9
0x155C	0xB212    SXTH	R2, R2
0x155E	0x4915    LDR	R1, [PC, #84]
0x1560	0xF7FFF8BA  BL	__irgrid2_driver__eval_poly+0
0x1564	0xF9BD1008  LDRSH	R1, [SP, #8]
0x1568	0xF7FFF986  BL	__irgrid2_driver__ldexp+0
; x start address is: 4 (R1)
0x156C	0x4601    MOV	R1, R0
;__irgrid2_driver.c, 203 :: 		if(sign) {
0x156E	0xF1BC0F00  CMP	R12, #0
0x1572	0xD011    BEQ	L___irgrid2_driver__exp17
; sign end address is: 48 (R12)
;__irgrid2_driver.c, 204 :: 		if (x == DBL_MAX)
0x1574	0x480C    LDR	R0, [PC, #48]
0x1576	0x460A    MOV	R2, R1
0x1578	0xF000F9F4  BL	__Compare_FP+0
0x157C	0xF2400000  MOVW	R0, #0
0x1580	0xD100    BNE	L___irgrid2_driver__exp259
0x1582	0x2001    MOVS	R0, #1
L___irgrid2_driver__exp259:
0x1584	0xB110    CBZ	R0, L___irgrid2_driver__exp18
; x end address is: 4 (R1)
;__irgrid2_driver.c, 205 :: 		return 0.0;
0x1586	0xF04F0000  MOV	R0, #0
0x158A	0xE006    B	L_end__exp
L___irgrid2_driver__exp18:
;__irgrid2_driver.c, 206 :: 		return 1.0/x;
; x start address is: 4 (R1)
0x158C	0xF04F507E  MOV	R0, #1065353216
0x1590	0x460A    MOV	R2, R1
0x1592	0xF000F913  BL	__Div_FP+0
; x end address is: 4 (R1)
0x1596	0xE000    B	L_end__exp
;__irgrid2_driver.c, 207 :: 		}
L___irgrid2_driver__exp17:
;__irgrid2_driver.c, 208 :: 		return x;
; x start address is: 4 (R1)
0x1598	0x4608    MOV	R0, R1
; x end address is: 4 (R1)
;__irgrid2_driver.c, 209 :: 		}
L_end__exp:
0x159A	0xF8DDE000  LDR	LR, [SP, #0]
0x159E	0xB004    ADD	SP, SP, #16
0x15A0	0x4770    BX	LR
0x15A2	0xBF00    NOP
0x15A4	0xD4FE42B2  	#1119016190
0x15A8	0xFFFF7F7F  	#2139095039
0x15AC	0xAC50C2AE  	#-1028740016
0x15B0	0xAA3B3FB8  	#1069066811
0x15B4	0x52A00000  	__irgrid2_driver__exp_coeff_L0+0
; end of __irgrid2_driver__exp
__irgrid2_driver__floor:
;__irgrid2_driver.c, 126 :: 		static double _floor(double x)
0x08E4	0xB082    SUB	SP, SP, #8
0x08E6	0xF8CDE000  STR	LR, [SP, #0]
0x08EA	0x9001    STR	R0, [SP, #4]
;__irgrid2_driver.c, 131 :: 		expon = ((*(unsigned long *)&x >> 23) & 255);
0x08EC	0xA901    ADD	R1, SP, #4
0x08EE	0x6809    LDR	R1, [R1, #0]
0x08F0	0x0DC9    LSRS	R1, R1, #23
0x08F2	0xF00101FF  AND	R1, R1, #255
;__irgrid2_driver.c, 132 :: 		expon = expon- 127;
0x08F6	0xB209    SXTH	R1, R1
0x08F8	0x397F    SUBS	R1, #127
0x08FA	0xB209    SXTH	R1, R1
; expon start address is: 0 (R0)
0x08FC	0xB208    SXTH	R0, R1
;__irgrid2_driver.c, 133 :: 		if(expon < 0)
0x08FE	0x2900    CMP	R1, #0
0x0900	0xDA0E    BGE	L___irgrid2_driver__floor6
; expon end address is: 0 (R0)
;__irgrid2_driver.c, 135 :: 		if (x < 0.0)
0x0902	0x9A01    LDR	R2, [SP, #4]
0x0904	0xF04F0000  MOV	R0, #0
0x0908	0xF001F82C  BL	__Compare_FP+0
0x090C	0xF2400000  MOVW	R0, #0
0x0910	0xDD00    BLE	L___irgrid2_driver__floor251
0x0912	0x2001    MOVS	R0, #1
L___irgrid2_driver__floor251:
0x0914	0xB108    CBZ	R0, L___irgrid2_driver__floor7
;__irgrid2_driver.c, 137 :: 		return -1.0;
0x0916	0x4811    LDR	R0, [PC, #68]
0x0918	0xE01C    B	L_end__floor
;__irgrid2_driver.c, 138 :: 		}
L___irgrid2_driver__floor7:
;__irgrid2_driver.c, 141 :: 		return  0.0;
0x091A	0xF04F0000  MOV	R0, #0
0x091E	0xE019    B	L_end__floor
;__irgrid2_driver.c, 143 :: 		}
L___irgrid2_driver__floor6:
;__irgrid2_driver.c, 144 :: 		if((unsigned)expon > sizeof(double) * CHAR_BIT - 8)
; expon start address is: 0 (R0)
0x0920	0xB281    UXTH	R1, R0
; expon end address is: 0 (R0)
0x0922	0x2918    CMP	R1, #24
0x0924	0xD901    BLS	L___irgrid2_driver__floor9
;__irgrid2_driver.c, 146 :: 		return x;           /* already an integer */
0x0926	0x9801    LDR	R0, [SP, #4]
0x0928	0xE014    B	L_end__floor
;__irgrid2_driver.c, 147 :: 		}
L___irgrid2_driver__floor9:
;__irgrid2_driver.c, 148 :: 		i = _FRNDINT(x);
0x092A	0x9801    LDR	R0, [SP, #4]
0x092C	0xF000FD80  BL	__FloatToSignedIntegral+0
0x0930	0xF000FDA0  BL	__SignedIntegralToFloat+0
; i start address is: 4 (R1)
0x0934	0x4601    MOV	R1, R0
;__irgrid2_driver.c, 149 :: 		if(i > x)
0x0936	0x9A01    LDR	R2, [SP, #4]
0x0938	0xF001F814  BL	__Compare_FP+0
0x093C	0xF2400000  MOVW	R0, #0
0x0940	0xDD00    BLE	L___irgrid2_driver__floor252
0x0942	0x2001    MOVS	R0, #1
L___irgrid2_driver__floor252:
0x0944	0xB128    CBZ	R0, L___irgrid2_driver__floor10
;__irgrid2_driver.c, 151 :: 		return i - 1.0;
0x0946	0x4608    MOV	R0, R1
0x0948	0xF04F527E  MOV	R2, #1065353216
0x094C	0xF000FF88  BL	__Sub_FP+0
; i end address is: 4 (R1)
0x0950	0xE000    B	L_end__floor
;__irgrid2_driver.c, 152 :: 		}
L___irgrid2_driver__floor10:
;__irgrid2_driver.c, 153 :: 		return i;
; i start address is: 4 (R1)
0x0952	0x4608    MOV	R0, R1
; i end address is: 4 (R1)
;__irgrid2_driver.c, 154 :: 		}
L_end__floor:
0x0954	0xF8DDE000  LDR	LR, [SP, #0]
0x0958	0xB002    ADD	SP, SP, #8
0x095A	0x4770    BX	LR
0x095C	0x0000BF80  	#-1082130432
; end of __irgrid2_driver__floor
__irgrid2_driver__ldexp:
;__irgrid2_driver.c, 94 :: 		static double _ldexp(double value, int newexp)
; newexp start address is: 4 (R1)
; value start address is: 0 (R0)
0x0878	0xB083    SUB	SP, SP, #12
0x087A	0xF8CDE000  STR	LR, [SP, #0]
0x087E	0xF8AD1004  STRH	R1, [SP, #4]
0x0882	0x4601    MOV	R1, R0
0x0884	0xF9BD0004  LDRSH	R0, [SP, #4]
; newexp end address is: 4 (R1)
; value end address is: 0 (R0)
; value start address is: 4 (R1)
; newexp start address is: 0 (R0)
;__irgrid2_driver.c, 98 :: 		uv.fl = value;
0x0888	0x9102    STR	R1, [SP, #8]
;__irgrid2_driver.c, 99 :: 		newexp += uv.flt.exp;
0x088A	0xF8BD200A  LDRH	R2, [SP, #10]
0x088E	0xF3C212C7  UBFX	R2, R2, #7, #8
0x0892	0x1882    ADDS	R2, R0, R2
0x0894	0xB210    SXTH	R0, R2
;__irgrid2_driver.c, 100 :: 		if (newexp < 0)
0x0896	0xB212    SXTH	R2, R2
0x0898	0x2A00    CMP	R2, #0
0x089A	0xDA02    BGE	L___irgrid2_driver__ldexp0
; value end address is: 4 (R1)
; newexp end address is: 0 (R0)
;__irgrid2_driver.c, 102 :: 		return 0.0;
0x089C	0xF04F0000  MOV	R0, #0
0x08A0	0xE019    B	L_end__ldexp
;__irgrid2_driver.c, 103 :: 		}
L___irgrid2_driver__ldexp0:
;__irgrid2_driver.c, 106 :: 		if (newexp > MAX_EXPONENT)
; newexp start address is: 0 (R0)
; value start address is: 4 (R1)
0x08A2	0xF1B00FFF  CMP	R0, #255
0x08A6	0xDD0E    BLE	L___irgrid2_driver__ldexp2
; newexp end address is: 0 (R0)
;__irgrid2_driver.c, 108 :: 		if (value < 0.0)
0x08A8	0xF04F0000  MOV	R0, #0
0x08AC	0x460A    MOV	R2, R1
0x08AE	0xF001F859  BL	__Compare_FP+0
0x08B2	0xF2400000  MOVW	R0, #0
0x08B6	0xDD00    BLE	L___irgrid2_driver__ldexp249
0x08B8	0x2001    MOVS	R0, #1
L___irgrid2_driver__ldexp249:
; value end address is: 4 (R1)
0x08BA	0xB110    CBZ	R0, L___irgrid2_driver__ldexp3
;__irgrid2_driver.c, 110 :: 		return -DBL_MAX;
0x08BC	0xF46F0000  MVN	R0, #8388608
0x08C0	0xE009    B	L_end__ldexp
;__irgrid2_driver.c, 111 :: 		}
L___irgrid2_driver__ldexp3:
;__irgrid2_driver.c, 114 :: 		return DBL_MAX;
0x08C2	0x4807    LDR	R0, [PC, #28]
0x08C4	0xE007    B	L_end__ldexp
;__irgrid2_driver.c, 116 :: 		}
L___irgrid2_driver__ldexp2:
;__irgrid2_driver.c, 119 :: 		uv.flt.exp = newexp;
; newexp start address is: 0 (R0)
0x08C6	0xB283    UXTH	R3, R0
; newexp end address is: 0 (R0)
0x08C8	0xF8BD200A  LDRH	R2, [SP, #10]
0x08CC	0xF36312CE  BFI	R2, R3, #7, #8
0x08D0	0xF8AD200A  STRH	R2, [SP, #10]
;__irgrid2_driver.c, 122 :: 		return uv.fl;
0x08D4	0x9802    LDR	R0, [SP, #8]
;__irgrid2_driver.c, 123 :: 		}
L_end__ldexp:
0x08D6	0xF8DDE000  LDR	LR, [SP, #0]
0x08DA	0xB003    ADD	SP, SP, #12
0x08DC	0x4770    BX	LR
0x08DE	0xBF00    NOP
0x08E0	0xFFFF7F7F  	#2139095039
; end of __irgrid2_driver__ldexp
__irgrid2_driver_ExtractGainParameters:
;__irgrid2_driver.c, 327 :: 		static void ExtractGainParameters(uint16_t *eeData, paramsMLX90640 *mlx90640)
; mlx90640 start address is: 4 (R1)
; eeData start address is: 0 (R0)
; mlx90640 end address is: 4 (R1)
; eeData end address is: 0 (R0)
; eeData start address is: 0 (R0)
; mlx90640 start address is: 4 (R1)
;__irgrid2_driver.c, 331 :: 		gainEE = eeData[48];
0x24B0	0xF2000260  ADDW	R2, R0, #96
; eeData end address is: 0 (R0)
0x24B4	0x8812    LDRH	R2, [R2, #0]
; gainEE start address is: 0 (R0)
0x24B6	0xB210    SXTH	R0, R2
;__irgrid2_driver.c, 332 :: 		if(gainEE > 32767)
0x24B8	0xB213    SXTH	R3, R2
0x24BA	0xF64772FF  MOVW	R2, #32767
0x24BE	0x4293    CMP	R3, R2
0x24C0	0xDD03    BLE	L___irgrid2_driver_ExtractGainParameters210
;__irgrid2_driver.c, 334 :: 		gainEE = gainEE -65536;
0x24C2	0xF5A03280  SUB	R2, R0, #65536
0x24C6	0xB210    SXTH	R0, R2
; gainEE end address is: 0 (R0)
;__irgrid2_driver.c, 335 :: 		}
0x24C8	0xE7FF    B	L___irgrid2_driver_ExtractGainParameters29
L___irgrid2_driver_ExtractGainParameters210:
;__irgrid2_driver.c, 332 :: 		if(gainEE > 32767)
;__irgrid2_driver.c, 335 :: 		}
L___irgrid2_driver_ExtractGainParameters29:
;__irgrid2_driver.c, 336 :: 		mlx90640->gainEE = gainEE;
; gainEE start address is: 0 (R0)
0x24CA	0xF2010214  ADDW	R2, R1, #20
; mlx90640 end address is: 4 (R1)
0x24CE	0x8010    STRH	R0, [R2, #0]
; gainEE end address is: 0 (R0)
;__irgrid2_driver.c, 337 :: 		}
L_end_ExtractGainParameters:
0x24D0	0x4770    BX	LR
; end of __irgrid2_driver_ExtractGainParameters
__irgrid2_driver_ExtractTgcParameters:
;__irgrid2_driver.c, 339 :: 		static void ExtractTgcParameters(uint16_t *eeData, paramsMLX90640 *mlx90640)
; mlx90640 start address is: 4 (R1)
; eeData start address is: 0 (R0)
0x2370	0xB081    SUB	SP, SP, #4
0x2372	0xF8CDE000  STR	LR, [SP, #0]
0x2376	0x4689    MOV	R9, R1
; mlx90640 end address is: 4 (R1)
; eeData end address is: 0 (R0)
; eeData start address is: 0 (R0)
; mlx90640 start address is: 36 (R9)
;__irgrid2_driver.c, 342 :: 		tgc = eeData[60] & 0x00FF;
0x2378	0xF2000278  ADDW	R2, R0, #120
; eeData end address is: 0 (R0)
0x237C	0x8812    LDRH	R2, [R2, #0]
0x237E	0xF00202FF  AND	R2, R2, #255
0x2382	0xB292    UXTH	R2, R2
0x2384	0xB290    UXTH	R0, R2
0x2386	0xF7FFFA03  BL	__UnsignedIntegralToFloat+0
; tgc start address is: 4 (R1)
0x238A	0x4601    MOV	R1, R0
;__irgrid2_driver.c, 343 :: 		if(tgc > 127)
0x238C	0x4A0D    LDR	R2, [PC, #52]
0x238E	0xF7FFFAE9  BL	__Compare_FP+0
0x2392	0xF2400000  MOVW	R0, #0
0x2396	0xDD00    BLE	L___irgrid2_driver_ExtractTgcParameters274
0x2398	0x2001    MOVS	R0, #1
L___irgrid2_driver_ExtractTgcParameters274:
0x239A	0xB138    CBZ	R0, L___irgrid2_driver_ExtractTgcParameters211
;__irgrid2_driver.c, 345 :: 		tgc = tgc - 256;
0x239C	0x4608    MOV	R0, R1
0x239E	0xF04F4287  MOV	R2, #1132462080
0x23A2	0xF7FFFA5D  BL	__Sub_FP+0
0x23A6	0x4601    MOV	R1, R0
; tgc end address is: 4 (R1)
0x23A8	0x4608    MOV	R0, R1
;__irgrid2_driver.c, 346 :: 		}
0x23AA	0xE000    B	L___irgrid2_driver_ExtractTgcParameters30
L___irgrid2_driver_ExtractTgcParameters211:
;__irgrid2_driver.c, 343 :: 		if(tgc > 127)
0x23AC	0x4608    MOV	R0, R1
;__irgrid2_driver.c, 346 :: 		}
L___irgrid2_driver_ExtractTgcParameters30:
;__irgrid2_driver.c, 347 :: 		tgc = tgc / 32.0f;
; tgc start address is: 0 (R0)
0x23AE	0xF04F4284  MOV	R2, #1107296256
0x23B2	0xF7FFFA03  BL	__Div_FP+0
; tgc end address is: 0 (R0)
;__irgrid2_driver.c, 349 :: 		mlx90640->tgc = tgc;
0x23B6	0xF1090218  ADD	R2, R9, #24
; mlx90640 end address is: 36 (R9)
0x23BA	0x6010    STR	R0, [R2, #0]
;__irgrid2_driver.c, 350 :: 		}
L_end_ExtractTgcParameters:
0x23BC	0xF8DDE000  LDR	LR, [SP, #0]
0x23C0	0xB001    ADD	SP, SP, #4
0x23C2	0x4770    BX	LR
0x23C4	0x000042FE  	#1123942400
; end of __irgrid2_driver_ExtractTgcParameters
__irgrid2_driver_ExtractResolutionParameters:
;__irgrid2_driver.c, 352 :: 		static void ExtractResolutionParameters(uint16_t *eeData, paramsMLX90640 *mlx90640)
; mlx90640 start address is: 4 (R1)
; eeData start address is: 0 (R0)
; mlx90640 end address is: 4 (R1)
; eeData end address is: 0 (R0)
; eeData start address is: 0 (R0)
; mlx90640 start address is: 4 (R1)
;__irgrid2_driver.c, 355 :: 		resolutionEE = (eeData[56] & 0x3000) >> 12;
0x23C8	0xF2000270  ADDW	R2, R0, #112
; eeData end address is: 0 (R0)
0x23CC	0x8812    LDRH	R2, [R2, #0]
0x23CE	0xF4025240  AND	R2, R2, #12288
0x23D2	0xB292    UXTH	R2, R2
0x23D4	0x0B12    LSRS	R2, R2, #12
;__irgrid2_driver.c, 357 :: 		mlx90640->resolutionEE = resolutionEE;
0x23D6	0xF2010324  ADDW	R3, R1, #36
; mlx90640 end address is: 4 (R1)
0x23DA	0xB2D2    UXTB	R2, R2
0x23DC	0x701A    STRB	R2, [R3, #0]
;__irgrid2_driver.c, 358 :: 		}
L_end_ExtractResolutionParameters:
0x23DE	0x4770    BX	LR
; end of __irgrid2_driver_ExtractResolutionParameters
__irgrid2_driver_ExtractKsTaParameters:
;__irgrid2_driver.c, 360 :: 		static void ExtractKsTaParameters(uint16_t *eeData, paramsMLX90640 *mlx90640)
; mlx90640 start address is: 4 (R1)
; eeData start address is: 0 (R0)
0x2B9C	0xB081    SUB	SP, SP, #4
0x2B9E	0xF8CDE000  STR	LR, [SP, #0]
0x2BA2	0x4689    MOV	R9, R1
; mlx90640 end address is: 4 (R1)
; eeData end address is: 0 (R0)
; eeData start address is: 0 (R0)
; mlx90640 start address is: 36 (R9)
;__irgrid2_driver.c, 363 :: 		KsTa = (eeData[60] & 0xFF00) >> 8;
0x2BA4	0xF2000278  ADDW	R2, R0, #120
; eeData end address is: 0 (R0)
0x2BA8	0x8812    LDRH	R2, [R2, #0]
0x2BAA	0xF402427F  AND	R2, R2, #65280
0x2BAE	0xB292    UXTH	R2, R2
0x2BB0	0x0A12    LSRS	R2, R2, #8
0x2BB2	0xB292    UXTH	R2, R2
0x2BB4	0xB290    UXTH	R0, R2
0x2BB6	0xF7FEFDEB  BL	__UnsignedIntegralToFloat+0
; KsTa start address is: 4 (R1)
0x2BBA	0x4601    MOV	R1, R0
;__irgrid2_driver.c, 364 :: 		if(KsTa > 127)
0x2BBC	0x4A0D    LDR	R2, [PC, #52]
0x2BBE	0xF7FEFED1  BL	__Compare_FP+0
0x2BC2	0xF2400000  MOVW	R0, #0
0x2BC6	0xDD00    BLE	L___irgrid2_driver_ExtractKsTaParameters277
0x2BC8	0x2001    MOVS	R0, #1
L___irgrid2_driver_ExtractKsTaParameters277:
0x2BCA	0xB138    CBZ	R0, L___irgrid2_driver_ExtractKsTaParameters212
;__irgrid2_driver.c, 366 :: 		KsTa = KsTa -256;
0x2BCC	0x4608    MOV	R0, R1
0x2BCE	0xF04F4287  MOV	R2, #1132462080
0x2BD2	0xF7FEFE45  BL	__Sub_FP+0
0x2BD6	0x4601    MOV	R1, R0
; KsTa end address is: 4 (R1)
0x2BD8	0x4608    MOV	R0, R1
;__irgrid2_driver.c, 367 :: 		}
0x2BDA	0xE000    B	L___irgrid2_driver_ExtractKsTaParameters31
L___irgrid2_driver_ExtractKsTaParameters212:
;__irgrid2_driver.c, 364 :: 		if(KsTa > 127)
0x2BDC	0x4608    MOV	R0, R1
;__irgrid2_driver.c, 367 :: 		}
L___irgrid2_driver_ExtractKsTaParameters31:
;__irgrid2_driver.c, 368 :: 		KsTa = KsTa / 8192.0f;
; KsTa start address is: 0 (R0)
0x2BDE	0xF04F428C  MOV	R2, #1174405120
0x2BE2	0xF7FEFDEB  BL	__Div_FP+0
; KsTa end address is: 0 (R0)
;__irgrid2_driver.c, 370 :: 		mlx90640->KsTa = KsTa;
0x2BE6	0xF1090228  ADD	R2, R9, #40
; mlx90640 end address is: 36 (R9)
0x2BEA	0x6010    STR	R0, [R2, #0]
;__irgrid2_driver.c, 371 :: 		}
L_end_ExtractKsTaParameters:
0x2BEC	0xF8DDE000  LDR	LR, [SP, #0]
0x2BF0	0xB001    ADD	SP, SP, #4
0x2BF2	0x4770    BX	LR
0x2BF4	0x000042FE  	#1123942400
; end of __irgrid2_driver_ExtractKsTaParameters
__irgrid2_driver_ExtractKsToParameters:
;__irgrid2_driver.c, 373 :: 		static void ExtractKsToParameters(uint16_t *eeData, paramsMLX90640 *mlx90640)
; mlx90640 start address is: 4 (R1)
; eeData start address is: 0 (R0)
0x2BF8	0xB085    SUB	SP, SP, #20
0x2BFA	0xF8CDE000  STR	LR, [SP, #0]
0x2BFE	0x4607    MOV	R7, R0
0x2C00	0x460E    MOV	R6, R1
; mlx90640 end address is: 4 (R1)
; eeData end address is: 0 (R0)
; eeData start address is: 28 (R7)
; mlx90640 start address is: 24 (R6)
;__irgrid2_driver.c, 379 :: 		step = ((eeData[63] & 0x3000) >> 12) * 10;
0x2C02	0xF207027E  ADDW	R2, R7, #126
0x2C06	0x8812    LDRH	R2, [R2, #0]
0x2C08	0xF4025240  AND	R2, R2, #12288
0x2C0C	0xB292    UXTH	R2, R2
0x2C0E	0x0B13    LSRS	R3, R2, #12
0x2C10	0xB29B    UXTH	R3, R3
0x2C12	0x220A    MOVS	R2, #10
0x2C14	0x435A    MULS	R2, R3, R2
; step start address is: 0 (R0)
0x2C16	0xB250    SXTB	R0, R2
;__irgrid2_driver.c, 381 :: 		mlx90640->ct[0] = -40;
0x2C18	0xF206033C  ADDW	R3, R6, #60
0x2C1C	0xF64F72D8  MOVW	R2, #65496
0x2C20	0xB212    SXTH	R2, R2
0x2C22	0x801A    STRH	R2, [R3, #0]
;__irgrid2_driver.c, 382 :: 		mlx90640->ct[1] = 0;
0x2C24	0xF206023C  ADDW	R2, R6, #60
0x2C28	0x1C93    ADDS	R3, R2, #2
0x2C2A	0x2200    MOVS	R2, #0
0x2C2C	0xB212    SXTH	R2, R2
0x2C2E	0x801A    STRH	R2, [R3, #0]
;__irgrid2_driver.c, 383 :: 		mlx90640->ct[2] = (eeData[63] & 0x00F0) >> 4;
0x2C30	0xF206023C  ADDW	R2, R6, #60
0x2C34	0x1D13    ADDS	R3, R2, #4
0x2C36	0xF207027E  ADDW	R2, R7, #126
0x2C3A	0x8812    LDRH	R2, [R2, #0]
0x2C3C	0xF00202F0  AND	R2, R2, #240
0x2C40	0xB292    UXTH	R2, R2
0x2C42	0x0912    LSRS	R2, R2, #4
0x2C44	0x801A    STRH	R2, [R3, #0]
;__irgrid2_driver.c, 384 :: 		mlx90640->ct[3] = (eeData[63] & 0x0F00) >> 8;
0x2C46	0xF206023C  ADDW	R2, R6, #60
0x2C4A	0x1D93    ADDS	R3, R2, #6
0x2C4C	0xF207027E  ADDW	R2, R7, #126
0x2C50	0x8812    LDRH	R2, [R2, #0]
0x2C52	0xF4026270  AND	R2, R2, #3840
0x2C56	0xB292    UXTH	R2, R2
0x2C58	0x0A12    LSRS	R2, R2, #8
0x2C5A	0x801A    STRH	R2, [R3, #0]
;__irgrid2_driver.c, 386 :: 		mlx90640->ct[2] = mlx90640->ct[2]*step;
0x2C5C	0xF206023C  ADDW	R2, R6, #60
0x2C60	0x1D13    ADDS	R3, R2, #4
0x2C62	0x1D12    ADDS	R2, R2, #4
0x2C64	0xF9B22000  LDRSH	R2, [R2, #0]
0x2C68	0x4342    MULS	R2, R0, R2
0x2C6A	0x801A    STRH	R2, [R3, #0]
;__irgrid2_driver.c, 387 :: 		mlx90640->ct[3] = mlx90640->ct[2] + mlx90640->ct[3]*step;
0x2C6C	0xF206053C  ADDW	R5, R6, #60
0x2C70	0x1DAC    ADDS	R4, R5, #6
0x2C72	0x1D2A    ADDS	R2, R5, #4
0x2C74	0xF9B23000  LDRSH	R3, [R2, #0]
0x2C78	0x1DAA    ADDS	R2, R5, #6
0x2C7A	0xF9B22000  LDRSH	R2, [R2, #0]
0x2C7E	0x4342    MULS	R2, R0, R2
0x2C80	0xB212    SXTH	R2, R2
; step end address is: 0 (R0)
0x2C82	0x189A    ADDS	R2, R3, R2
0x2C84	0x8022    STRH	R2, [R4, #0]
;__irgrid2_driver.c, 389 :: 		KsToScale = 15;
; KsToScale start address is: 0 (R0)
0x2C86	0x200F    MOVS	R0, #15
0x2C88	0xB200    SXTH	R0, R0
;__irgrid2_driver.c, 390 :: 		KsToScale = 1 << KsToScale;
0x2C8A	0x2201    MOVS	R2, #1
0x2C8C	0xB212    SXTH	R2, R2
0x2C8E	0x4082    LSLS	R2, R0
; KsToScale end address is: 0 (R0)
; KsToScale start address is: 36 (R9)
0x2C90	0xFA0FF982  SXTH	R9, R2
;__irgrid2_driver.c, 392 :: 		mlx90640->ksTo[0] = eeData[61] & 0x00FF;
0x2C94	0xF206022C  ADDW	R2, R6, #44
0x2C98	0x9202    STR	R2, [SP, #8]
0x2C9A	0xF207027A  ADDW	R2, R7, #122
0x2C9E	0x8812    LDRH	R2, [R2, #0]
0x2CA0	0xF00202FF  AND	R2, R2, #255
0x2CA4	0xB292    UXTH	R2, R2
0x2CA6	0xB290    UXTH	R0, R2
0x2CA8	0xF7FEFD72  BL	__UnsignedIntegralToFloat+0
0x2CAC	0x9A02    LDR	R2, [SP, #8]
0x2CAE	0x6010    STR	R0, [R2, #0]
;__irgrid2_driver.c, 393 :: 		mlx90640->ksTo[1] = (eeData[61] & 0xFF00) >> 8;
0x2CB0	0xF206022C  ADDW	R2, R6, #44
0x2CB4	0x1D12    ADDS	R2, R2, #4
0x2CB6	0x9202    STR	R2, [SP, #8]
0x2CB8	0xF207027A  ADDW	R2, R7, #122
0x2CBC	0x8812    LDRH	R2, [R2, #0]
0x2CBE	0xF402427F  AND	R2, R2, #65280
0x2CC2	0xB292    UXTH	R2, R2
0x2CC4	0x0A12    LSRS	R2, R2, #8
0x2CC6	0xB292    UXTH	R2, R2
0x2CC8	0xB290    UXTH	R0, R2
0x2CCA	0xF7FEFD61  BL	__UnsignedIntegralToFloat+0
0x2CCE	0x9A02    LDR	R2, [SP, #8]
0x2CD0	0x6010    STR	R0, [R2, #0]
;__irgrid2_driver.c, 394 :: 		mlx90640->ksTo[2] = eeData[62] & 0x00FF;
0x2CD2	0xF206022C  ADDW	R2, R6, #44
0x2CD6	0x3208    ADDS	R2, #8
0x2CD8	0x9202    STR	R2, [SP, #8]
0x2CDA	0xF207027C  ADDW	R2, R7, #124
0x2CDE	0x8812    LDRH	R2, [R2, #0]
0x2CE0	0xF00202FF  AND	R2, R2, #255
0x2CE4	0xB292    UXTH	R2, R2
0x2CE6	0xB290    UXTH	R0, R2
0x2CE8	0xF7FEFD52  BL	__UnsignedIntegralToFloat+0
0x2CEC	0x9A02    LDR	R2, [SP, #8]
0x2CEE	0x6010    STR	R0, [R2, #0]
;__irgrid2_driver.c, 395 :: 		mlx90640->ksTo[3] = (eeData[62] & 0xFF00) >> 8;
0x2CF0	0xF206022C  ADDW	R2, R6, #44
0x2CF4	0x320C    ADDS	R2, #12
0x2CF6	0x9202    STR	R2, [SP, #8]
0x2CF8	0xF207027C  ADDW	R2, R7, #124
; eeData end address is: 28 (R7)
0x2CFC	0x8812    LDRH	R2, [R2, #0]
0x2CFE	0xF402427F  AND	R2, R2, #65280
0x2D02	0xB292    UXTH	R2, R2
0x2D04	0x0A12    LSRS	R2, R2, #8
0x2D06	0xB292    UXTH	R2, R2
0x2D08	0xB290    UXTH	R0, R2
0x2D0A	0xF7FEFD41  BL	__UnsignedIntegralToFloat+0
0x2D0E	0x9A02    LDR	R2, [SP, #8]
0x2D10	0x6010    STR	R0, [R2, #0]
;__irgrid2_driver.c, 398 :: 		for( i = 0; i < 4; i++)
; i start address is: 40 (R10)
0x2D12	0xF2400A00  MOVW	R10, #0
0x2D16	0xFA0FFA8A  SXTH	R10, R10
; mlx90640 end address is: 24 (R6)
; i end address is: 40 (R10)
0x2D1A	0x46B3    MOV	R11, R6
L___irgrid2_driver_ExtractKsToParameters32:
; i start address is: 40 (R10)
; mlx90640 start address is: 44 (R11)
; KsToScale start address is: 36 (R9)
; KsToScale end address is: 36 (R9)
; mlx90640 start address is: 44 (R11)
; mlx90640 end address is: 44 (R11)
0x2D1C	0xF1BA0F04  CMP	R10, #4
0x2D20	0xDA35    BGE	L___irgrid2_driver_ExtractKsToParameters33
; KsToScale end address is: 36 (R9)
; mlx90640 end address is: 44 (R11)
;__irgrid2_driver.c, 400 :: 		if(mlx90640->ksTo[i] > 127)
; mlx90640 start address is: 44 (R11)
; KsToScale start address is: 36 (R9)
0x2D22	0xF10B032C  ADD	R3, R11, #44
0x2D26	0xEA4F028A  LSL	R2, R10, #2
0x2D2A	0x189A    ADDS	R2, R3, R2
0x2D2C	0x6812    LDR	R2, [R2, #0]
0x2D2E	0x481A    LDR	R0, [PC, #104]
0x2D30	0xF7FEFE18  BL	__Compare_FP+0
0x2D34	0xF2400000  MOVW	R0, #0
0x2D38	0xDA00    BGE	L___irgrid2_driver_ExtractKsToParameters279
0x2D3A	0x2001    MOVS	R0, #1
L___irgrid2_driver_ExtractKsToParameters279:
0x2D3C	0xB160    CBZ	R0, L___irgrid2_driver_ExtractKsToParameters35
;__irgrid2_driver.c, 402 :: 		mlx90640->ksTo[i] = mlx90640->ksTo[i] -256;
0x2D3E	0xF10B032C  ADD	R3, R11, #44
0x2D42	0xEA4F028A  LSL	R2, R10, #2
0x2D46	0x189A    ADDS	R2, R3, R2
0x2D48	0x9202    STR	R2, [SP, #8]
0x2D4A	0x6810    LDR	R0, [R2, #0]
0x2D4C	0xF04F4287  MOV	R2, #1132462080
0x2D50	0xF7FEFD86  BL	__Sub_FP+0
0x2D54	0x9A02    LDR	R2, [SP, #8]
0x2D56	0x6010    STR	R0, [R2, #0]
;__irgrid2_driver.c, 403 :: 		}
L___irgrid2_driver_ExtractKsToParameters35:
;__irgrid2_driver.c, 404 :: 		mlx90640->ksTo[i] = mlx90640->ksTo[i] / KsToScale;
0x2D58	0xF10B032C  ADD	R3, R11, #44
0x2D5C	0xEA4F028A  LSL	R2, R10, #2
0x2D60	0x189A    ADDS	R2, R3, R2
0x2D62	0x9204    STR	R2, [SP, #16]
0x2D64	0x6812    LDR	R2, [R2, #0]
0x2D66	0x9203    STR	R2, [SP, #12]
0x2D68	0xFA0FF089  SXTH	R0, R9
0x2D6C	0xF7FEFB82  BL	__SignedIntegralToFloat+0
0x2D70	0x9002    STR	R0, [SP, #8]
0x2D72	0x9803    LDR	R0, [SP, #12]
0x2D74	0x9101    STR	R1, [SP, #4]
0x2D76	0x9902    LDR	R1, [SP, #8]
0x2D78	0x460A    MOV	R2, R1
0x2D7A	0xF7FEFD1F  BL	__Div_FP+0
0x2D7E	0x9901    LDR	R1, [SP, #4]
0x2D80	0x9A04    LDR	R2, [SP, #16]
0x2D82	0x6010    STR	R0, [R2, #0]
;__irgrid2_driver.c, 398 :: 		for( i = 0; i < 4; i++)
0x2D84	0xF10A0A01  ADD	R10, R10, #1
0x2D88	0xFA0FFA8A  SXTH	R10, R10
;__irgrid2_driver.c, 405 :: 		}
; KsToScale end address is: 36 (R9)
; mlx90640 end address is: 44 (R11)
; i end address is: 40 (R10)
0x2D8C	0xE7C6    B	L___irgrid2_driver_ExtractKsToParameters32
L___irgrid2_driver_ExtractKsToParameters33:
;__irgrid2_driver.c, 406 :: 		}
L_end_ExtractKsToParameters:
0x2D8E	0xF8DDE000  LDR	LR, [SP, #0]
0x2D92	0xB005    ADD	SP, SP, #20
0x2D94	0x4770    BX	LR
0x2D96	0xBF00    NOP
0x2D98	0x000042FE  	#1123942400
; end of __irgrid2_driver_ExtractKsToParameters
__irgrid2_driver_ExtractAlphaParameters:
;__irgrid2_driver.c, 408 :: 		static void ExtractAlphaParameters(uint16_t *eeData, paramsMLX90640 *mlx90640)
; eeData start address is: 0 (R0)
0x24D4	0xB0AC    SUB	SP, SP, #176
0x24D6	0xF8CDE000  STR	LR, [SP, #0]
0x24DA	0x9121    STR	R1, [SP, #132]
; eeData end address is: 0 (R0)
; eeData start address is: 0 (R0)
;__irgrid2_driver.c, 412 :: 		int p = 0;
;__irgrid2_driver.c, 423 :: 		accRemScale = eeData[32] & 0x000F;
0x24DC	0xF2000240  ADDW	R2, R0, #64
0x24E0	0x8812    LDRH	R2, [R2, #0]
0x24E2	0xF002020F  AND	R2, R2, #15
0x24E6	0xF88D207D  STRB	R2, [SP, #125]
;__irgrid2_driver.c, 424 :: 		accColumnScale = (eeData[32] & 0x00F0) >> 4;
0x24EA	0xF2000240  ADDW	R2, R0, #64
0x24EE	0x8812    LDRH	R2, [R2, #0]
0x24F0	0xF00202F0  AND	R2, R2, #240
0x24F4	0xB292    UXTH	R2, R2
0x24F6	0x0912    LSRS	R2, R2, #4
0x24F8	0xF88D207C  STRB	R2, [SP, #124]
;__irgrid2_driver.c, 425 :: 		accRowScale = (eeData[32] & 0x0F00) >> 8;
0x24FC	0xF2000240  ADDW	R2, R0, #64
0x2500	0x8812    LDRH	R2, [R2, #0]
0x2502	0xF4026270  AND	R2, R2, #3840
0x2506	0xB292    UXTH	R2, R2
0x2508	0x0A12    LSRS	R2, R2, #8
0x250A	0xF88D207B  STRB	R2, [SP, #123]
;__irgrid2_driver.c, 426 :: 		alphaScale = ((eeData[32] & 0xF000) >> 12) + 30;
0x250E	0xF2000240  ADDW	R2, R0, #64
0x2512	0x8812    LDRH	R2, [R2, #0]
0x2514	0xF4024270  AND	R2, R2, #61440
0x2518	0xB292    UXTH	R2, R2
0x251A	0x0B12    LSRS	R2, R2, #12
0x251C	0xB292    UXTH	R2, R2
0x251E	0x321E    ADDS	R2, #30
0x2520	0xF88D207A  STRB	R2, [SP, #122]
;__irgrid2_driver.c, 427 :: 		alphaRef = eeData[33];
0x2524	0xF2000242  ADDW	R2, R0, #66
0x2528	0x8812    LDRH	R2, [R2, #0]
0x252A	0xF8AD2078  STRH	R2, [SP, #120]
;__irgrid2_driver.c, 429 :: 		for(i = 0; i < 6; i++)
0x252E	0x2200    MOVS	R2, #0
0x2530	0xB212    SXTH	R2, R2
0x2532	0xF8AD207E  STRH	R2, [SP, #126]
; eeData end address is: 0 (R0)
0x2536	0x4681    MOV	R9, R0
L___irgrid2_driver_ExtractAlphaParameters36:
; eeData start address is: 36 (R9)
0x2538	0xF9BD207E  LDRSH	R2, [SP, #126]
0x253C	0x2A06    CMP	R2, #6
0x253E	0xDA52    BGE	L___irgrid2_driver_ExtractAlphaParameters37
;__irgrid2_driver.c, 431 :: 		p = i * 4;
0x2540	0xF9BD207E  LDRSH	R2, [SP, #126]
0x2544	0x0092    LSLS	R2, R2, #2
0x2546	0xB212    SXTH	R2, R2
0x2548	0xF8AD2088  STRH	R2, [SP, #136]
;__irgrid2_driver.c, 432 :: 		accRow[p + 0] = (eeData[34 + i] & 0x000F);
0x254C	0xAC02    ADD	R4, SP, #8
0x254E	0x0052    LSLS	R2, R2, #1
0x2550	0x18A3    ADDS	R3, R4, R2
0x2552	0xF9BD207E  LDRSH	R2, [SP, #126]
0x2556	0x3222    ADDS	R2, #34
0x2558	0xB212    SXTH	R2, R2
0x255A	0x0052    LSLS	R2, R2, #1
0x255C	0xEB090202  ADD	R2, R9, R2, LSL #0
0x2560	0x8812    LDRH	R2, [R2, #0]
0x2562	0xF002020F  AND	R2, R2, #15
0x2566	0x801A    STRH	R2, [R3, #0]
;__irgrid2_driver.c, 433 :: 		accRow[p + 1] = (eeData[34 + i] & 0x00F0) >> 4;
0x2568	0xF9BD2088  LDRSH	R2, [SP, #136]
0x256C	0x1C52    ADDS	R2, R2, #1
0x256E	0xB212    SXTH	R2, R2
0x2570	0x0052    LSLS	R2, R2, #1
0x2572	0x18A3    ADDS	R3, R4, R2
0x2574	0xF9BD207E  LDRSH	R2, [SP, #126]
0x2578	0x3222    ADDS	R2, #34
0x257A	0xB212    SXTH	R2, R2
0x257C	0x0052    LSLS	R2, R2, #1
0x257E	0xEB090202  ADD	R2, R9, R2, LSL #0
0x2582	0x8812    LDRH	R2, [R2, #0]
0x2584	0xF00202F0  AND	R2, R2, #240
0x2588	0xB292    UXTH	R2, R2
0x258A	0x0912    LSRS	R2, R2, #4
0x258C	0x801A    STRH	R2, [R3, #0]
;__irgrid2_driver.c, 434 :: 		accRow[p + 2] = (eeData[34 + i] & 0x0F00) >> 8;
0x258E	0xF9BD2088  LDRSH	R2, [SP, #136]
0x2592	0x1C92    ADDS	R2, R2, #2
0x2594	0xB212    SXTH	R2, R2
0x2596	0x0052    LSLS	R2, R2, #1
0x2598	0x18A3    ADDS	R3, R4, R2
0x259A	0xF9BD207E  LDRSH	R2, [SP, #126]
0x259E	0x3222    ADDS	R2, #34
0x25A0	0xB212    SXTH	R2, R2
0x25A2	0x0052    LSLS	R2, R2, #1
0x25A4	0xEB090202  ADD	R2, R9, R2, LSL #0
0x25A8	0x8812    LDRH	R2, [R2, #0]
0x25AA	0xF4026270  AND	R2, R2, #3840
0x25AE	0xB292    UXTH	R2, R2
0x25B0	0x0A12    LSRS	R2, R2, #8
0x25B2	0x801A    STRH	R2, [R3, #0]
;__irgrid2_driver.c, 435 :: 		accRow[p + 3] = (eeData[34 + i] & 0xF000) >> 12;
0x25B4	0xF9BD2088  LDRSH	R2, [SP, #136]
0x25B8	0x1CD2    ADDS	R2, R2, #3
0x25BA	0xB212    SXTH	R2, R2
0x25BC	0x0052    LSLS	R2, R2, #1
0x25BE	0x18A3    ADDS	R3, R4, R2
0x25C0	0xF9BD207E  LDRSH	R2, [SP, #126]
0x25C4	0x3222    ADDS	R2, #34
0x25C6	0xB212    SXTH	R2, R2
0x25C8	0x0052    LSLS	R2, R2, #1
0x25CA	0xEB090202  ADD	R2, R9, R2, LSL #0
0x25CE	0x8812    LDRH	R2, [R2, #0]
0x25D0	0xF4024270  AND	R2, R2, #61440
0x25D4	0xB292    UXTH	R2, R2
0x25D6	0x0B12    LSRS	R2, R2, #12
0x25D8	0x801A    STRH	R2, [R3, #0]
;__irgrid2_driver.c, 429 :: 		for(i = 0; i < 6; i++)
0x25DA	0xF9BD207E  LDRSH	R2, [SP, #126]
0x25DE	0x1C52    ADDS	R2, R2, #1
0x25E0	0xF8AD207E  STRH	R2, [SP, #126]
;__irgrid2_driver.c, 436 :: 		}
0x25E4	0xE7A8    B	L___irgrid2_driver_ExtractAlphaParameters36
L___irgrid2_driver_ExtractAlphaParameters37:
;__irgrid2_driver.c, 438 :: 		for( i = 0; i < 24; i++)
0x25E6	0x2200    MOVS	R2, #0
0x25E8	0xB212    SXTH	R2, R2
0x25EA	0xF8AD207E  STRH	R2, [SP, #126]
; eeData end address is: 36 (R9)
L___irgrid2_driver_ExtractAlphaParameters39:
; eeData start address is: 36 (R9)
0x25EE	0xF9BD207E  LDRSH	R2, [SP, #126]
0x25F2	0x2A18    CMP	R2, #24
0x25F4	0xDA17    BGE	L___irgrid2_driver_ExtractAlphaParameters40
;__irgrid2_driver.c, 440 :: 		if (accRow[i] > 7)
0x25F6	0xAB02    ADD	R3, SP, #8
0x25F8	0xF9BD207E  LDRSH	R2, [SP, #126]
0x25FC	0x0052    LSLS	R2, R2, #1
0x25FE	0x189A    ADDS	R2, R3, R2
0x2600	0xF9B22000  LDRSH	R2, [R2, #0]
0x2604	0x2A07    CMP	R2, #7
0x2606	0xDD08    BLE	L___irgrid2_driver_ExtractAlphaParameters42
;__irgrid2_driver.c, 442 :: 		accRow[i] = accRow[i] - 16;
0x2608	0xAB02    ADD	R3, SP, #8
0x260A	0xF9BD207E  LDRSH	R2, [SP, #126]
0x260E	0x0052    LSLS	R2, R2, #1
0x2610	0x189B    ADDS	R3, R3, R2
0x2612	0xF9B32000  LDRSH	R2, [R3, #0]
0x2616	0x3A10    SUBS	R2, #16
0x2618	0x801A    STRH	R2, [R3, #0]
;__irgrid2_driver.c, 443 :: 		}
L___irgrid2_driver_ExtractAlphaParameters42:
;__irgrid2_driver.c, 438 :: 		for( i = 0; i < 24; i++)
0x261A	0xF9BD207E  LDRSH	R2, [SP, #126]
0x261E	0x1C52    ADDS	R2, R2, #1
0x2620	0xF8AD207E  STRH	R2, [SP, #126]
;__irgrid2_driver.c, 444 :: 		}
0x2624	0xE7E3    B	L___irgrid2_driver_ExtractAlphaParameters39
L___irgrid2_driver_ExtractAlphaParameters40:
;__irgrid2_driver.c, 446 :: 		for( i = 0; i < 8; i++)
0x2626	0x2200    MOVS	R2, #0
0x2628	0xB212    SXTH	R2, R2
0x262A	0xF8AD207E  STRH	R2, [SP, #126]
; eeData end address is: 36 (R9)
L___irgrid2_driver_ExtractAlphaParameters43:
; eeData start address is: 36 (R9)
0x262E	0xF9BD207E  LDRSH	R2, [SP, #126]
0x2632	0x2A08    CMP	R2, #8
0x2634	0xDA52    BGE	L___irgrid2_driver_ExtractAlphaParameters44
;__irgrid2_driver.c, 448 :: 		p = i * 4;
0x2636	0xF9BD207E  LDRSH	R2, [SP, #126]
0x263A	0x0092    LSLS	R2, R2, #2
0x263C	0xB212    SXTH	R2, R2
0x263E	0xF8AD2088  STRH	R2, [SP, #136]
;__irgrid2_driver.c, 449 :: 		accColumn[p + 0] = (eeData[40 + i] & 0x000F);
0x2642	0xAC0E    ADD	R4, SP, #56
0x2644	0x0052    LSLS	R2, R2, #1
0x2646	0x18A3    ADDS	R3, R4, R2
0x2648	0xF9BD207E  LDRSH	R2, [SP, #126]
0x264C	0x3228    ADDS	R2, #40
0x264E	0xB212    SXTH	R2, R2
0x2650	0x0052    LSLS	R2, R2, #1
0x2652	0xEB090202  ADD	R2, R9, R2, LSL #0
0x2656	0x8812    LDRH	R2, [R2, #0]
0x2658	0xF002020F  AND	R2, R2, #15
0x265C	0x801A    STRH	R2, [R3, #0]
;__irgrid2_driver.c, 450 :: 		accColumn[p + 1] = (eeData[40 + i] & 0x00F0) >> 4;
0x265E	0xF9BD2088  LDRSH	R2, [SP, #136]
0x2662	0x1C52    ADDS	R2, R2, #1
0x2664	0xB212    SXTH	R2, R2
0x2666	0x0052    LSLS	R2, R2, #1
0x2668	0x18A3    ADDS	R3, R4, R2
0x266A	0xF9BD207E  LDRSH	R2, [SP, #126]
0x266E	0x3228    ADDS	R2, #40
0x2670	0xB212    SXTH	R2, R2
0x2672	0x0052    LSLS	R2, R2, #1
0x2674	0xEB090202  ADD	R2, R9, R2, LSL #0
0x2678	0x8812    LDRH	R2, [R2, #0]
0x267A	0xF00202F0  AND	R2, R2, #240
0x267E	0xB292    UXTH	R2, R2
0x2680	0x0912    LSRS	R2, R2, #4
0x2682	0x801A    STRH	R2, [R3, #0]
;__irgrid2_driver.c, 451 :: 		accColumn[p + 2] = (eeData[40 + i] & 0x0F00) >> 8;
0x2684	0xF9BD2088  LDRSH	R2, [SP, #136]
0x2688	0x1C92    ADDS	R2, R2, #2
0x268A	0xB212    SXTH	R2, R2
0x268C	0x0052    LSLS	R2, R2, #1
0x268E	0x18A3    ADDS	R3, R4, R2
0x2690	0xF9BD207E  LDRSH	R2, [SP, #126]
0x2694	0x3228    ADDS	R2, #40
0x2696	0xB212    SXTH	R2, R2
0x2698	0x0052    LSLS	R2, R2, #1
0x269A	0xEB090202  ADD	R2, R9, R2, LSL #0
0x269E	0x8812    LDRH	R2, [R2, #0]
0x26A0	0xF4026270  AND	R2, R2, #3840
0x26A4	0xB292    UXTH	R2, R2
0x26A6	0x0A12    LSRS	R2, R2, #8
0x26A8	0x801A    STRH	R2, [R3, #0]
;__irgrid2_driver.c, 452 :: 		accColumn[p + 3] = (eeData[40 + i] & 0xF000) >> 12;
0x26AA	0xF9BD2088  LDRSH	R2, [SP, #136]
0x26AE	0x1CD2    ADDS	R2, R2, #3
0x26B0	0xB212    SXTH	R2, R2
0x26B2	0x0052    LSLS	R2, R2, #1
0x26B4	0x18A3    ADDS	R3, R4, R2
0x26B6	0xF9BD207E  LDRSH	R2, [SP, #126]
0x26BA	0x3228    ADDS	R2, #40
0x26BC	0xB212    SXTH	R2, R2
0x26BE	0x0052    LSLS	R2, R2, #1
0x26C0	0xEB090202  ADD	R2, R9, R2, LSL #0
0x26C4	0x8812    LDRH	R2, [R2, #0]
0x26C6	0xF4024270  AND	R2, R2, #61440
0x26CA	0xB292    UXTH	R2, R2
0x26CC	0x0B12    LSRS	R2, R2, #12
0x26CE	0x801A    STRH	R2, [R3, #0]
;__irgrid2_driver.c, 446 :: 		for( i = 0; i < 8; i++)
0x26D0	0xF9BD207E  LDRSH	R2, [SP, #126]
0x26D4	0x1C52    ADDS	R2, R2, #1
0x26D6	0xF8AD207E  STRH	R2, [SP, #126]
;__irgrid2_driver.c, 453 :: 		}
0x26DA	0xE7A8    B	L___irgrid2_driver_ExtractAlphaParameters43
L___irgrid2_driver_ExtractAlphaParameters44:
;__irgrid2_driver.c, 455 :: 		for( i = 0; i < 32; i ++)
0x26DC	0x2200    MOVS	R2, #0
0x26DE	0xB212    SXTH	R2, R2
0x26E0	0xF8AD207E  STRH	R2, [SP, #126]
; eeData end address is: 36 (R9)
0x26E4	0x4648    MOV	R0, R9
L___irgrid2_driver_ExtractAlphaParameters46:
; eeData start address is: 0 (R0)
0x26E6	0xF9BD207E  LDRSH	R2, [SP, #126]
0x26EA	0x2A20    CMP	R2, #32
0x26EC	0xDA17    BGE	L___irgrid2_driver_ExtractAlphaParameters47
;__irgrid2_driver.c, 457 :: 		if (accColumn[i] > 7)
0x26EE	0xAB0E    ADD	R3, SP, #56
0x26F0	0xF9BD207E  LDRSH	R2, [SP, #126]
0x26F4	0x0052    LSLS	R2, R2, #1
0x26F6	0x189A    ADDS	R2, R3, R2
0x26F8	0xF9B22000  LDRSH	R2, [R2, #0]
0x26FC	0x2A07    CMP	R2, #7
0x26FE	0xDD08    BLE	L___irgrid2_driver_ExtractAlphaParameters49
;__irgrid2_driver.c, 459 :: 		accColumn[i] = accColumn[i] - 16;
0x2700	0xAB0E    ADD	R3, SP, #56
0x2702	0xF9BD207E  LDRSH	R2, [SP, #126]
0x2706	0x0052    LSLS	R2, R2, #1
0x2708	0x189B    ADDS	R3, R3, R2
0x270A	0xF9B32000  LDRSH	R2, [R3, #0]
0x270E	0x3A10    SUBS	R2, #16
0x2710	0x801A    STRH	R2, [R3, #0]
;__irgrid2_driver.c, 460 :: 		}
L___irgrid2_driver_ExtractAlphaParameters49:
;__irgrid2_driver.c, 455 :: 		for( i = 0; i < 32; i ++)
0x2712	0xF9BD207E  LDRSH	R2, [SP, #126]
0x2716	0x1C52    ADDS	R2, R2, #1
0x2718	0xF8AD207E  STRH	R2, [SP, #126]
;__irgrid2_driver.c, 461 :: 		}
0x271C	0xE7E3    B	L___irgrid2_driver_ExtractAlphaParameters46
L___irgrid2_driver_ExtractAlphaParameters47:
;__irgrid2_driver.c, 463 :: 		for( i = 0; i < 24; i++)
0x271E	0x2200    MOVS	R2, #0
0x2720	0xB212    SXTH	R2, R2
0x2722	0xF8AD207E  STRH	R2, [SP, #126]
; eeData end address is: 0 (R0)
L___irgrid2_driver_ExtractAlphaParameters50:
; eeData start address is: 0 (R0)
0x2726	0xF9BD207E  LDRSH	R2, [SP, #126]
0x272A	0x2A18    CMP	R2, #24
0x272C	0xF28080BE  BGE	L___irgrid2_driver_ExtractAlphaParameters51
;__irgrid2_driver.c, 465 :: 		for( j = 0; j < 32; j ++)
0x2730	0x2200    MOVS	R2, #0
0x2732	0xB212    SXTH	R2, R2
0x2734	0xF8AD2080  STRH	R2, [SP, #128]
; eeData end address is: 0 (R0)
0x2738	0x4601    MOV	R1, R0
L___irgrid2_driver_ExtractAlphaParameters53:
; eeData start address is: 4 (R1)
0x273A	0xF9BD2080  LDRSH	R2, [SP, #128]
0x273E	0x2A20    CMP	R2, #32
0x2740	0xF28080AD  BGE	L___irgrid2_driver_ExtractAlphaParameters54
;__irgrid2_driver.c, 467 :: 		p = 32 * i +j;
0x2744	0xF9BD207E  LDRSH	R2, [SP, #126]
0x2748	0x0153    LSLS	R3, R2, #5
0x274A	0xB21B    SXTH	R3, R3
0x274C	0xF9BD2080  LDRSH	R2, [SP, #128]
0x2750	0x189C    ADDS	R4, R3, R2
0x2752	0xB224    SXTH	R4, R4
0x2754	0xF8AD4088  STRH	R4, [SP, #136]
;__irgrid2_driver.c, 468 :: 		mlx90640->alpha[p] = (eeData[64 + p] & 0x03F0) >> 4;
0x2758	0x9A21    LDR	R2, [SP, #132]
0x275A	0xF2020344  ADDW	R3, R2, #68
0x275E	0x00A2    LSLS	R2, R4, #2
0x2760	0x189A    ADDS	R2, R3, R2
0x2762	0x922A    STR	R2, [SP, #168]
0x2764	0xF2040240  ADDW	R2, R4, #64
0x2768	0xB212    SXTH	R2, R2
0x276A	0x0052    LSLS	R2, R2, #1
0x276C	0x188A    ADDS	R2, R1, R2
0x276E	0x8812    LDRH	R2, [R2, #0]
0x2770	0xF402727C  AND	R2, R2, #1008
0x2774	0xB292    UXTH	R2, R2
0x2776	0x0912    LSRS	R2, R2, #4
0x2778	0xB292    UXTH	R2, R2
0x277A	0x9101    STR	R1, [SP, #4]
0x277C	0xB290    UXTH	R0, R2
0x277E	0xF7FFF807  BL	__UnsignedIntegralToFloat+0
0x2782	0x9901    LDR	R1, [SP, #4]
0x2784	0x9A2A    LDR	R2, [SP, #168]
0x2786	0x6010    STR	R0, [R2, #0]
;__irgrid2_driver.c, 469 :: 		if (mlx90640->alpha[p] > 31)
0x2788	0x9A21    LDR	R2, [SP, #132]
0x278A	0xF2020344  ADDW	R3, R2, #68
0x278E	0xF9BD2088  LDRSH	R2, [SP, #136]
0x2792	0x0092    LSLS	R2, R2, #2
0x2794	0x189A    ADDS	R2, R3, R2
0x2796	0x6812    LDR	R2, [R2, #0]
0x2798	0x4846    LDR	R0, [PC, #280]
0x279A	0xF7FFF8E3  BL	__Compare_FP+0
0x279E	0xF2400000  MOVW	R0, #0
0x27A2	0xDA00    BGE	L___irgrid2_driver_ExtractAlphaParameters281
0x27A4	0x2001    MOVS	R0, #1
L___irgrid2_driver_ExtractAlphaParameters281:
0x27A6	0xB180    CBZ	R0, L___irgrid2_driver_ExtractAlphaParameters56
;__irgrid2_driver.c, 471 :: 		mlx90640->alpha[p] = mlx90640->alpha[p] - 64;
0x27A8	0x9A21    LDR	R2, [SP, #132]
0x27AA	0xF2020344  ADDW	R3, R2, #68
0x27AE	0xF9BD2088  LDRSH	R2, [SP, #136]
0x27B2	0x0092    LSLS	R2, R2, #2
0x27B4	0x189A    ADDS	R2, R3, R2
0x27B6	0x922A    STR	R2, [SP, #168]
0x27B8	0x6810    LDR	R0, [R2, #0]
0x27BA	0x9101    STR	R1, [SP, #4]
0x27BC	0xF04F4285  MOV	R2, #1115684864
0x27C0	0xF7FFF84E  BL	__Sub_FP+0
0x27C4	0x9901    LDR	R1, [SP, #4]
0x27C6	0x9A2A    LDR	R2, [SP, #168]
0x27C8	0x6010    STR	R0, [R2, #0]
;__irgrid2_driver.c, 472 :: 		}
L___irgrid2_driver_ExtractAlphaParameters56:
;__irgrid2_driver.c, 473 :: 		mlx90640->alpha[p] = mlx90640->alpha[p]*(1 << accRemScale);
0x27CA	0x9A21    LDR	R2, [SP, #132]
0x27CC	0xF2020344  ADDW	R3, R2, #68
0x27D0	0xF9BD2088  LDRSH	R2, [SP, #136]
0x27D4	0x0092    LSLS	R2, R2, #2
0x27D6	0x189A    ADDS	R2, R3, R2
0x27D8	0x922B    STR	R2, [SP, #172]
0x27DA	0x6812    LDR	R2, [R2, #0]
0x27DC	0x922A    STR	R2, [SP, #168]
0x27DE	0xF89D307D  LDRB	R3, [SP, #125]
0x27E2	0x2201    MOVS	R2, #1
0x27E4	0xB212    SXTH	R2, R2
0x27E6	0x409A    LSLS	R2, R3
0x27E8	0xB212    SXTH	R2, R2
0x27EA	0x9101    STR	R1, [SP, #4]
0x27EC	0xB210    SXTH	R0, R2
0x27EE	0xF7FEFE41  BL	__SignedIntegralToFloat+0
0x27F2	0x9A2A    LDR	R2, [SP, #168]
0x27F4	0xF7FDFF94  BL	__Mul_FP+0
0x27F8	0x9A2B    LDR	R2, [SP, #172]
0x27FA	0x6010    STR	R0, [R2, #0]
;__irgrid2_driver.c, 474 :: 		mlx90640->alpha[p] = (alphaRef + (accRow[i] << accRowScale) + (accColumn[j] << accColumnScale) + mlx90640->alpha[p]);
0x27FC	0x9A21    LDR	R2, [SP, #132]
0x27FE	0xF2020344  ADDW	R3, R2, #68
0x2802	0xF9BD2088  LDRSH	R2, [SP, #136]
0x2806	0x0092    LSLS	R2, R2, #2
0x2808	0x189D    ADDS	R5, R3, R2
0x280A	0x952B    STR	R5, [SP, #172]
0x280C	0xAB02    ADD	R3, SP, #8
0x280E	0xF9BD207E  LDRSH	R2, [SP, #126]
0x2812	0x0052    LSLS	R2, R2, #1
0x2814	0x189A    ADDS	R2, R3, R2
0x2816	0xF9B23000  LDRSH	R3, [R2, #0]
0x281A	0xF89D207B  LDRB	R2, [SP, #123]
0x281E	0x4093    LSLS	R3, R2
0x2820	0xB21B    SXTH	R3, R3
0x2822	0xF9BD2078  LDRSH	R2, [SP, #120]
0x2826	0x18D4    ADDS	R4, R2, R3
0x2828	0xB224    SXTH	R4, R4
0x282A	0xAB0E    ADD	R3, SP, #56
0x282C	0xF9BD2080  LDRSH	R2, [SP, #128]
0x2830	0x0052    LSLS	R2, R2, #1
0x2832	0x189A    ADDS	R2, R3, R2
0x2834	0xF9B23000  LDRSH	R3, [R2, #0]
0x2838	0xF89D207C  LDRB	R2, [SP, #124]
0x283C	0xFA03F202  LSL	R2, R3, R2
0x2840	0xB212    SXTH	R2, R2
0x2842	0x18A3    ADDS	R3, R4, R2
0x2844	0xB21B    SXTH	R3, R3
0x2846	0x462A    MOV	R2, R5
0x2848	0x922A    STR	R2, [SP, #168]
0x284A	0xB218    SXTH	R0, R3
0x284C	0xF7FEFE12  BL	__SignedIntegralToFloat+0
0x2850	0x9A2A    LDR	R2, [SP, #168]
0x2852	0x6812    LDR	R2, [R2, #0]
0x2854	0xF7FDFE90  BL	__Add_FP+0
0x2858	0x9A2B    LDR	R2, [SP, #172]
0x285A	0x6010    STR	R0, [R2, #0]
;__irgrid2_driver.c, 475 :: 		mlx90640->alpha[p] = mlx90640->alpha[p] / _pow(2,(double)alphaScale);
0x285C	0x9A21    LDR	R2, [SP, #132]
0x285E	0xF2020344  ADDW	R3, R2, #68
0x2862	0xF9BD2088  LDRSH	R2, [SP, #136]
0x2866	0x0092    LSLS	R2, R2, #2
0x2868	0x189A    ADDS	R2, R3, R2
0x286A	0x922B    STR	R2, [SP, #172]
0x286C	0x6812    LDR	R2, [R2, #0]
0x286E	0x922A    STR	R2, [SP, #168]
0x2870	0xF89D007A  LDRB	R0, [SP, #122]
0x2874	0xF7FEFF8C  BL	__UnsignedIntegralToFloat+0
0x2878	0x4601    MOV	R1, R0
0x287A	0xF04F4080  MOV	R0, #1073741824
0x287E	0xF7FEFED7  BL	__irgrid2_driver__pow+0
0x2882	0x9023    STR	R0, [SP, #140]
0x2884	0x9A23    LDR	R2, [SP, #140]
0x2886	0x982A    LDR	R0, [SP, #168]
0x2888	0xF7FEFF98  BL	__Div_FP+0
0x288C	0x9901    LDR	R1, [SP, #4]
0x288E	0x9A2B    LDR	R2, [SP, #172]
0x2890	0x6010    STR	R0, [R2, #0]
;__irgrid2_driver.c, 465 :: 		for( j = 0; j < 32; j ++)
0x2892	0xF9BD2080  LDRSH	R2, [SP, #128]
0x2896	0x1C52    ADDS	R2, R2, #1
0x2898	0xF8AD2080  STRH	R2, [SP, #128]
;__irgrid2_driver.c, 476 :: 		}
0x289C	0xE74D    B	L___irgrid2_driver_ExtractAlphaParameters53
L___irgrid2_driver_ExtractAlphaParameters54:
;__irgrid2_driver.c, 463 :: 		for( i = 0; i < 24; i++)
0x289E	0xF9BD207E  LDRSH	R2, [SP, #126]
0x28A2	0x1C52    ADDS	R2, R2, #1
0x28A4	0xF8AD207E  STRH	R2, [SP, #126]
;__irgrid2_driver.c, 477 :: 		}
0x28A8	0x4608    MOV	R0, R1
; eeData end address is: 4 (R1)
0x28AA	0xE73C    B	L___irgrid2_driver_ExtractAlphaParameters50
L___irgrid2_driver_ExtractAlphaParameters51:
;__irgrid2_driver.c, 478 :: 		}
L_end_ExtractAlphaParameters:
0x28AC	0xF8DDE000  LDR	LR, [SP, #0]
0x28B0	0xB02C    ADD	SP, SP, #176
0x28B2	0x4770    BX	LR
0x28B4	0x000041F8  	#1106771968
; end of __irgrid2_driver_ExtractAlphaParameters
__irgrid2_driver_ExtractOffsetParameters:
;__irgrid2_driver.c, 480 :: 		static void ExtractOffsetParameters(uint16_t *eeData, paramsMLX90640 *mlx90640)
; mlx90640 start address is: 4 (R1)
; eeData start address is: 0 (R0)
0x28B8	0xB09C    SUB	SP, SP, #112
; mlx90640 end address is: 4 (R1)
; eeData end address is: 0 (R0)
; eeData start address is: 0 (R0)
; mlx90640 start address is: 4 (R1)
;__irgrid2_driver.c, 484 :: 		int p = 0;
;__irgrid2_driver.c, 493 :: 		occRemScale = (eeData[16] & 0x000F);
0x28BA	0xF2000220  ADDW	R2, R0, #32
0x28BE	0x8812    LDRH	R2, [R2, #0]
0x28C0	0xF002020F  AND	R2, R2, #15
; occRemScale start address is: 24 (R6)
0x28C4	0xB2D6    UXTB	R6, R2
;__irgrid2_driver.c, 494 :: 		occColumnScale = (eeData[16] & 0x00F0) >> 4;
0x28C6	0xF2000220  ADDW	R2, R0, #32
0x28CA	0x8812    LDRH	R2, [R2, #0]
0x28CC	0xF00202F0  AND	R2, R2, #240
0x28D0	0xB292    UXTH	R2, R2
0x28D2	0x0912    LSRS	R2, R2, #4
; occColumnScale start address is: 20 (R5)
0x28D4	0xB2D5    UXTB	R5, R2
;__irgrid2_driver.c, 495 :: 		occRowScale = (eeData[16] & 0x0F00) >> 8;
0x28D6	0xF2000220  ADDW	R2, R0, #32
0x28DA	0x8812    LDRH	R2, [R2, #0]
0x28DC	0xF4026270  AND	R2, R2, #3840
0x28E0	0xB292    UXTH	R2, R2
0x28E2	0x0A12    LSRS	R2, R2, #8
; occRowScale start address is: 16 (R4)
0x28E4	0xB2D4    UXTB	R4, R2
;__irgrid2_driver.c, 496 :: 		offsetRef = eeData[17];
0x28E6	0xF2000222  ADDW	R2, R0, #34
0x28EA	0x8812    LDRH	R2, [R2, #0]
; offsetRef start address is: 28 (R7)
0x28EC	0xB217    SXTH	R7, R2
;__irgrid2_driver.c, 497 :: 		if (offsetRef > 32767)
0x28EE	0xB213    SXTH	R3, R2
0x28F0	0xF64772FF  MOVW	R2, #32767
0x28F4	0x4293    CMP	R3, R2
0x28F6	0xDD04    BLE	L___irgrid2_driver_ExtractOffsetParameters213
;__irgrid2_driver.c, 499 :: 		offsetRef = offsetRef - 65536;
0x28F8	0xF5A73280  SUB	R2, R7, #65536
; offsetRef end address is: 28 (R7)
; offsetRef start address is: 12 (R3)
0x28FC	0xB213    SXTH	R3, R2
; offsetRef end address is: 12 (R3)
0x28FE	0xB21A    SXTH	R2, R3
;__irgrid2_driver.c, 500 :: 		}
0x2900	0xE000    B	L___irgrid2_driver_ExtractOffsetParameters57
L___irgrid2_driver_ExtractOffsetParameters213:
;__irgrid2_driver.c, 497 :: 		if (offsetRef > 32767)
0x2902	0xB23A    SXTH	R2, R7
;__irgrid2_driver.c, 500 :: 		}
L___irgrid2_driver_ExtractOffsetParameters57:
;__irgrid2_driver.c, 502 :: 		for( i = 0; i < 6; i++)
; offsetRef start address is: 8 (R2)
; i start address is: 36 (R9)
0x2904	0xF2400900  MOVW	R9, #0
0x2908	0xFA0FF989  SXTH	R9, R9
; occRowScale end address is: 16 (R4)
; offsetRef end address is: 8 (R2)
; i end address is: 36 (R9)
; occColumnScale end address is: 20 (R5)
; eeData end address is: 0 (R0)
; mlx90640 end address is: 4 (R1)
; occRemScale end address is: 24 (R6)
0x290C	0x4680    MOV	R8, R0
0x290E	0xB210    SXTH	R0, R2
0x2910	0x460F    MOV	R7, R1
0x2912	0xB2E1    UXTB	R1, R4
L___irgrid2_driver_ExtractOffsetParameters58:
; i start address is: 36 (R9)
; offsetRef start address is: 0 (R0)
; occRowScale start address is: 4 (R1)
; occColumnScale start address is: 20 (R5)
; occRemScale start address is: 24 (R6)
; mlx90640 start address is: 28 (R7)
; eeData start address is: 32 (R8)
0x2914	0xF1B90F06  CMP	R9, #6
0x2918	0xDA49    BGE	L___irgrid2_driver_ExtractOffsetParameters59
;__irgrid2_driver.c, 504 :: 		p = i * 4;
0x291A	0xEA4F0289  LSL	R2, R9, #2
0x291E	0xB212    SXTH	R2, R2
; p start address is: 40 (R10)
0x2920	0xFA0FFA82  SXTH	R10, R2
;__irgrid2_driver.c, 505 :: 		occRow[p + 0] = (eeData[18 + i] & 0x000F);
0x2924	0xAC00    ADD	R4, SP, #0
0x2926	0x0052    LSLS	R2, R2, #1
0x2928	0x18A3    ADDS	R3, R4, R2
0x292A	0xF1090212  ADD	R2, R9, #18
0x292E	0xB212    SXTH	R2, R2
0x2930	0x0052    LSLS	R2, R2, #1
0x2932	0xEB080202  ADD	R2, R8, R2, LSL #0
0x2936	0x8812    LDRH	R2, [R2, #0]
0x2938	0xF002020F  AND	R2, R2, #15
0x293C	0x801A    STRH	R2, [R3, #0]
;__irgrid2_driver.c, 506 :: 		occRow[p + 1] = (eeData[18 + i] & 0x00F0) >> 4;
0x293E	0xF10A0201  ADD	R2, R10, #1
0x2942	0xB212    SXTH	R2, R2
0x2944	0x0052    LSLS	R2, R2, #1
0x2946	0x18A3    ADDS	R3, R4, R2
0x2948	0xF1090212  ADD	R2, R9, #18
0x294C	0xB212    SXTH	R2, R2
0x294E	0x0052    LSLS	R2, R2, #1
0x2950	0xEB080202  ADD	R2, R8, R2, LSL #0
0x2954	0x8812    LDRH	R2, [R2, #0]
0x2956	0xF00202F0  AND	R2, R2, #240
0x295A	0xB292    UXTH	R2, R2
0x295C	0x0912    LSRS	R2, R2, #4
0x295E	0x801A    STRH	R2, [R3, #0]
;__irgrid2_driver.c, 507 :: 		occRow[p + 2] = (eeData[18 + i] & 0x0F00) >> 8;
0x2960	0xF10A0202  ADD	R2, R10, #2
0x2964	0xB212    SXTH	R2, R2
0x2966	0x0052    LSLS	R2, R2, #1
0x2968	0x18A3    ADDS	R3, R4, R2
0x296A	0xF1090212  ADD	R2, R9, #18
0x296E	0xB212    SXTH	R2, R2
0x2970	0x0052    LSLS	R2, R2, #1
0x2972	0xEB080202  ADD	R2, R8, R2, LSL #0
0x2976	0x8812    LDRH	R2, [R2, #0]
0x2978	0xF4026270  AND	R2, R2, #3840
0x297C	0xB292    UXTH	R2, R2
0x297E	0x0A12    LSRS	R2, R2, #8
0x2980	0x801A    STRH	R2, [R3, #0]
;__irgrid2_driver.c, 508 :: 		occRow[p + 3] = (eeData[18 + i] & 0xF000) >> 12;
0x2982	0xF10A0203  ADD	R2, R10, #3
0x2986	0xB212    SXTH	R2, R2
; p end address is: 40 (R10)
0x2988	0x0052    LSLS	R2, R2, #1
0x298A	0x18A3    ADDS	R3, R4, R2
0x298C	0xF1090212  ADD	R2, R9, #18
0x2990	0xB212    SXTH	R2, R2
0x2992	0x0052    LSLS	R2, R2, #1
0x2994	0xEB080202  ADD	R2, R8, R2, LSL #0
0x2998	0x8812    LDRH	R2, [R2, #0]
0x299A	0xF4024270  AND	R2, R2, #61440
0x299E	0xB292    UXTH	R2, R2
0x29A0	0x0B12    LSRS	R2, R2, #12
0x29A2	0x801A    STRH	R2, [R3, #0]
;__irgrid2_driver.c, 502 :: 		for( i = 0; i < 6; i++)
0x29A4	0xF1090901  ADD	R9, R9, #1
0x29A8	0xFA0FF989  SXTH	R9, R9
;__irgrid2_driver.c, 509 :: 		}
; i end address is: 36 (R9)
0x29AC	0xE7B2    B	L___irgrid2_driver_ExtractOffsetParameters58
L___irgrid2_driver_ExtractOffsetParameters59:
;__irgrid2_driver.c, 511 :: 		for( i = 0; i < 24; i++)
; i start address is: 16 (R4)
0x29AE	0x2400    MOVS	R4, #0
0x29B0	0xB224    SXTH	R4, R4
; i end address is: 16 (R4)
; offsetRef end address is: 0 (R0)
; occRowScale end address is: 4 (R1)
; mlx90640 end address is: 28 (R7)
; eeData end address is: 32 (R8)
; occColumnScale end address is: 20 (R5)
; occRemScale end address is: 24 (R6)
L___irgrid2_driver_ExtractOffsetParameters61:
; i start address is: 16 (R4)
; eeData start address is: 32 (R8)
; mlx90640 start address is: 28 (R7)
; occRemScale start address is: 24 (R6)
; occColumnScale start address is: 20 (R5)
; occRowScale start address is: 4 (R1)
; offsetRef start address is: 0 (R0)
0x29B2	0x2C18    CMP	R4, #24
0x29B4	0xDA10    BGE	L___irgrid2_driver_ExtractOffsetParameters62
;__irgrid2_driver.c, 513 :: 		if (occRow[i] > 7)
0x29B6	0xAB00    ADD	R3, SP, #0
0x29B8	0x0062    LSLS	R2, R4, #1
0x29BA	0x189A    ADDS	R2, R3, R2
0x29BC	0xF9B22000  LDRSH	R2, [R2, #0]
0x29C0	0x2A07    CMP	R2, #7
0x29C2	0xDD06    BLE	L___irgrid2_driver_ExtractOffsetParameters64
;__irgrid2_driver.c, 515 :: 		occRow[i] = occRow[i] - 16;
0x29C4	0xAB00    ADD	R3, SP, #0
0x29C6	0x0062    LSLS	R2, R4, #1
0x29C8	0x189B    ADDS	R3, R3, R2
0x29CA	0xF9B32000  LDRSH	R2, [R3, #0]
0x29CE	0x3A10    SUBS	R2, #16
0x29D0	0x801A    STRH	R2, [R3, #0]
;__irgrid2_driver.c, 516 :: 		}
L___irgrid2_driver_ExtractOffsetParameters64:
;__irgrid2_driver.c, 511 :: 		for( i = 0; i < 24; i++)
0x29D2	0x1C64    ADDS	R4, R4, #1
0x29D4	0xB224    SXTH	R4, R4
;__irgrid2_driver.c, 517 :: 		}
; i end address is: 16 (R4)
0x29D6	0xE7EC    B	L___irgrid2_driver_ExtractOffsetParameters61
L___irgrid2_driver_ExtractOffsetParameters62:
;__irgrid2_driver.c, 519 :: 		for( i = 0; i < 8; i++)
; i start address is: 36 (R9)
0x29D8	0xF2400900  MOVW	R9, #0
0x29DC	0xFA0FF989  SXTH	R9, R9
; offsetRef end address is: 0 (R0)
; occRowScale end address is: 4 (R1)
; mlx90640 end address is: 28 (R7)
; eeData end address is: 32 (R8)
; i end address is: 36 (R9)
; occColumnScale end address is: 20 (R5)
; occRemScale end address is: 24 (R6)
L___irgrid2_driver_ExtractOffsetParameters65:
; i start address is: 36 (R9)
; offsetRef start address is: 0 (R0)
; occRowScale start address is: 4 (R1)
; occColumnScale start address is: 20 (R5)
; occRemScale start address is: 24 (R6)
; mlx90640 start address is: 28 (R7)
; eeData start address is: 32 (R8)
0x29E0	0xF1B90F08  CMP	R9, #8
0x29E4	0xDA49    BGE	L___irgrid2_driver_ExtractOffsetParameters66
;__irgrid2_driver.c, 521 :: 		p = i * 4;
0x29E6	0xEA4F0289  LSL	R2, R9, #2
0x29EA	0xB212    SXTH	R2, R2
; p start address is: 40 (R10)
0x29EC	0xFA0FFA82  SXTH	R10, R2
;__irgrid2_driver.c, 522 :: 		occColumn[p + 0] = (eeData[24 + i] & 0x000F);
0x29F0	0xAC0C    ADD	R4, SP, #48
0x29F2	0x0052    LSLS	R2, R2, #1
0x29F4	0x18A3    ADDS	R3, R4, R2
0x29F6	0xF1090218  ADD	R2, R9, #24
0x29FA	0xB212    SXTH	R2, R2
0x29FC	0x0052    LSLS	R2, R2, #1
0x29FE	0xEB080202  ADD	R2, R8, R2, LSL #0
0x2A02	0x8812    LDRH	R2, [R2, #0]
0x2A04	0xF002020F  AND	R2, R2, #15
0x2A08	0x801A    STRH	R2, [R3, #0]
;__irgrid2_driver.c, 523 :: 		occColumn[p + 1] = (eeData[24 + i] & 0x00F0) >> 4;
0x2A0A	0xF10A0201  ADD	R2, R10, #1
0x2A0E	0xB212    SXTH	R2, R2
0x2A10	0x0052    LSLS	R2, R2, #1
0x2A12	0x18A3    ADDS	R3, R4, R2
0x2A14	0xF1090218  ADD	R2, R9, #24
0x2A18	0xB212    SXTH	R2, R2
0x2A1A	0x0052    LSLS	R2, R2, #1
0x2A1C	0xEB080202  ADD	R2, R8, R2, LSL #0
0x2A20	0x8812    LDRH	R2, [R2, #0]
0x2A22	0xF00202F0  AND	R2, R2, #240
0x2A26	0xB292    UXTH	R2, R2
0x2A28	0x0912    LSRS	R2, R2, #4
0x2A2A	0x801A    STRH	R2, [R3, #0]
;__irgrid2_driver.c, 524 :: 		occColumn[p + 2] = (eeData[24 + i] & 0x0F00) >> 8;
0x2A2C	0xF10A0202  ADD	R2, R10, #2
0x2A30	0xB212    SXTH	R2, R2
0x2A32	0x0052    LSLS	R2, R2, #1
0x2A34	0x18A3    ADDS	R3, R4, R2
0x2A36	0xF1090218  ADD	R2, R9, #24
0x2A3A	0xB212    SXTH	R2, R2
0x2A3C	0x0052    LSLS	R2, R2, #1
0x2A3E	0xEB080202  ADD	R2, R8, R2, LSL #0
0x2A42	0x8812    LDRH	R2, [R2, #0]
0x2A44	0xF4026270  AND	R2, R2, #3840
0x2A48	0xB292    UXTH	R2, R2
0x2A4A	0x0A12    LSRS	R2, R2, #8
0x2A4C	0x801A    STRH	R2, [R3, #0]
;__irgrid2_driver.c, 525 :: 		occColumn[p + 3] = (eeData[24 + i] & 0xF000) >> 12;
0x2A4E	0xF10A0203  ADD	R2, R10, #3
0x2A52	0xB212    SXTH	R2, R2
; p end address is: 40 (R10)
0x2A54	0x0052    LSLS	R2, R2, #1
0x2A56	0x18A3    ADDS	R3, R4, R2
0x2A58	0xF1090218  ADD	R2, R9, #24
0x2A5C	0xB212    SXTH	R2, R2
0x2A5E	0x0052    LSLS	R2, R2, #1
0x2A60	0xEB080202  ADD	R2, R8, R2, LSL #0
0x2A64	0x8812    LDRH	R2, [R2, #0]
0x2A66	0xF4024270  AND	R2, R2, #61440
0x2A6A	0xB292    UXTH	R2, R2
0x2A6C	0x0B12    LSRS	R2, R2, #12
0x2A6E	0x801A    STRH	R2, [R3, #0]
;__irgrid2_driver.c, 519 :: 		for( i = 0; i < 8; i++)
0x2A70	0xF1090901  ADD	R9, R9, #1
0x2A74	0xFA0FF989  SXTH	R9, R9
;__irgrid2_driver.c, 526 :: 		}
; i end address is: 36 (R9)
0x2A78	0xE7B2    B	L___irgrid2_driver_ExtractOffsetParameters65
L___irgrid2_driver_ExtractOffsetParameters66:
;__irgrid2_driver.c, 528 :: 		for( i = 0; i < 32; i ++)
; i start address is: 8 (R2)
0x2A7A	0x2200    MOVS	R2, #0
0x2A7C	0xB212    SXTH	R2, R2
; offsetRef end address is: 0 (R0)
; occRowScale end address is: 4 (R1)
; mlx90640 end address is: 28 (R7)
; eeData end address is: 32 (R8)
; i end address is: 8 (R2)
; occColumnScale end address is: 20 (R5)
; occRemScale end address is: 24 (R6)
0x2A7E	0xB2F4    UXTB	R4, R6
0x2A80	0xB2CE    UXTB	R6, R1
0x2A82	0x4639    MOV	R1, R7
0x2A84	0xB207    SXTH	R7, R0
0x2A86	0x4640    MOV	R0, R8
0x2A88	0xFA0FF882  SXTH	R8, R2
L___irgrid2_driver_ExtractOffsetParameters68:
; i start address is: 32 (R8)
; eeData start address is: 0 (R0)
; mlx90640 start address is: 4 (R1)
; occRemScale start address is: 16 (R4)
; occColumnScale start address is: 20 (R5)
; occRowScale start address is: 24 (R6)
; offsetRef start address is: 28 (R7)
0x2A8C	0xF1B80F20  CMP	R8, #32
0x2A90	0xDA14    BGE	L___irgrid2_driver_ExtractOffsetParameters69
;__irgrid2_driver.c, 530 :: 		if (occColumn[i] > 7)
0x2A92	0xAB0C    ADD	R3, SP, #48
0x2A94	0xEA4F0248  LSL	R2, R8, #1
0x2A98	0x189A    ADDS	R2, R3, R2
0x2A9A	0xF9B22000  LDRSH	R2, [R2, #0]
0x2A9E	0x2A07    CMP	R2, #7
0x2AA0	0xDD07    BLE	L___irgrid2_driver_ExtractOffsetParameters71
;__irgrid2_driver.c, 532 :: 		occColumn[i] = occColumn[i] - 16;
0x2AA2	0xAB0C    ADD	R3, SP, #48
0x2AA4	0xEA4F0248  LSL	R2, R8, #1
0x2AA8	0x189B    ADDS	R3, R3, R2
0x2AAA	0xF9B32000  LDRSH	R2, [R3, #0]
0x2AAE	0x3A10    SUBS	R2, #16
0x2AB0	0x801A    STRH	R2, [R3, #0]
;__irgrid2_driver.c, 533 :: 		}
L___irgrid2_driver_ExtractOffsetParameters71:
;__irgrid2_driver.c, 528 :: 		for( i = 0; i < 32; i ++)
0x2AB2	0xF1080801  ADD	R8, R8, #1
0x2AB6	0xFA0FF888  SXTH	R8, R8
;__irgrid2_driver.c, 534 :: 		}
; i end address is: 32 (R8)
0x2ABA	0xE7E7    B	L___irgrid2_driver_ExtractOffsetParameters68
L___irgrid2_driver_ExtractOffsetParameters69:
;__irgrid2_driver.c, 536 :: 		for( i = 0; i < 24; i++)
; i start address is: 40 (R10)
0x2ABC	0xF2400A00  MOVW	R10, #0
0x2AC0	0xFA0FFA8A  SXTH	R10, R10
; occRemScale end address is: 16 (R4)
; occColumnScale end address is: 20 (R5)
; occRowScale end address is: 24 (R6)
; offsetRef end address is: 28 (R7)
; eeData end address is: 0 (R0)
; mlx90640 end address is: 4 (R1)
; i end address is: 40 (R10)
0x2AC4	0xFA5FF886  UXTB	R8, R6
0x2AC8	0xB2E6    UXTB	R6, R4
0x2ACA	0xFA0FF987  SXTH	R9, R7
0x2ACE	0xB2EF    UXTB	R7, R5
L___irgrid2_driver_ExtractOffsetParameters72:
; i start address is: 40 (R10)
; offsetRef start address is: 36 (R9)
; occRowScale start address is: 32 (R8)
; occColumnScale start address is: 28 (R7)
; occRemScale start address is: 24 (R6)
; mlx90640 start address is: 4 (R1)
; eeData start address is: 0 (R0)
0x2AD0	0xF1BA0F18  CMP	R10, #24
0x2AD4	0xDA60    BGE	L___irgrid2_driver_ExtractOffsetParameters73
;__irgrid2_driver.c, 538 :: 		for( j = 0; j < 32; j ++)
; j start address is: 44 (R11)
0x2AD6	0xF2400B00  MOVW	R11, #0
0x2ADA	0xFA0FFB8B  SXTH	R11, R11
; eeData end address is: 0 (R0)
; mlx90640 end address is: 4 (R1)
; occRemScale end address is: 24 (R6)
; occColumnScale end address is: 28 (R7)
; occRowScale end address is: 32 (R8)
; offsetRef end address is: 36 (R9)
; j end address is: 44 (R11)
; i end address is: 40 (R10)
L___irgrid2_driver_ExtractOffsetParameters75:
; j start address is: 44 (R11)
; eeData start address is: 0 (R0)
; mlx90640 start address is: 4 (R1)
; occRemScale start address is: 24 (R6)
; occColumnScale start address is: 28 (R7)
; occRowScale start address is: 32 (R8)
; offsetRef start address is: 36 (R9)
; i start address is: 40 (R10)
0x2ADE	0xF1BB0F20  CMP	R11, #32
0x2AE2	0xDA54    BGE	L___irgrid2_driver_ExtractOffsetParameters76
;__irgrid2_driver.c, 540 :: 		p = 32 * i +j;
0x2AE4	0xEA4F124A  LSL	R2, R10, #5
0x2AE8	0xB212    SXTH	R2, R2
0x2AEA	0xEB02040B  ADD	R4, R2, R11, LSL #0
0x2AEE	0xB224    SXTH	R4, R4
; p start address is: 20 (R5)
0x2AF0	0xB225    SXTH	R5, R4
;__irgrid2_driver.c, 541 :: 		mlx90640->offset[p] = (eeData[64 + p] & 0xFC00) >> 10;
0x2AF2	0xF6014344  ADDW	R3, R1, #3140
0x2AF6	0x0062    LSLS	R2, R4, #1
0x2AF8	0x189B    ADDS	R3, R3, R2
0x2AFA	0xF2040240  ADDW	R2, R4, #64
0x2AFE	0xB212    SXTH	R2, R2
0x2B00	0x0052    LSLS	R2, R2, #1
0x2B02	0x1882    ADDS	R2, R0, R2
0x2B04	0x8812    LDRH	R2, [R2, #0]
0x2B06	0xF402427C  AND	R2, R2, #64512
0x2B0A	0xB292    UXTH	R2, R2
0x2B0C	0x0A92    LSRS	R2, R2, #10
0x2B0E	0x801A    STRH	R2, [R3, #0]
;__irgrid2_driver.c, 542 :: 		if (mlx90640->offset[p] > 31)
0x2B10	0xF6014344  ADDW	R3, R1, #3140
0x2B14	0x006A    LSLS	R2, R5, #1
0x2B16	0x189A    ADDS	R2, R3, R2
0x2B18	0xF9B22000  LDRSH	R2, [R2, #0]
0x2B1C	0x2A1F    CMP	R2, #31
0x2B1E	0xDD07    BLE	L___irgrid2_driver_ExtractOffsetParameters78
;__irgrid2_driver.c, 544 :: 		mlx90640->offset[p] = mlx90640->offset[p] - 64;
0x2B20	0xF6014344  ADDW	R3, R1, #3140
0x2B24	0x006A    LSLS	R2, R5, #1
0x2B26	0x189B    ADDS	R3, R3, R2
0x2B28	0xF9B32000  LDRSH	R2, [R3, #0]
0x2B2C	0x3A40    SUBS	R2, #64
0x2B2E	0x801A    STRH	R2, [R3, #0]
;__irgrid2_driver.c, 545 :: 		}
L___irgrid2_driver_ExtractOffsetParameters78:
;__irgrid2_driver.c, 546 :: 		mlx90640->offset[p] = mlx90640->offset[p]*(1 << occRemScale);
0x2B30	0xF6014344  ADDW	R3, R1, #3140
0x2B34	0x006A    LSLS	R2, R5, #1
0x2B36	0x189C    ADDS	R4, R3, R2
0x2B38	0xF9B43000  LDRSH	R3, [R4, #0]
0x2B3C	0x2201    MOVS	R2, #1
0x2B3E	0xB212    SXTH	R2, R2
0x2B40	0x40B2    LSLS	R2, R6
0x2B42	0xB212    SXTH	R2, R2
0x2B44	0x435A    MULS	R2, R3, R2
0x2B46	0x8022    STRH	R2, [R4, #0]
;__irgrid2_driver.c, 547 :: 		mlx90640->offset[p] = (offsetRef + (occRow[i] << occRowScale) + (occColumn[j] << occColumnScale) + mlx90640->offset[p]);
0x2B48	0xF6014344  ADDW	R3, R1, #3140
0x2B4C	0x006A    LSLS	R2, R5, #1
; p end address is: 20 (R5)
0x2B4E	0x189D    ADDS	R5, R3, R2
0x2B50	0xAB00    ADD	R3, SP, #0
0x2B52	0xEA4F024A  LSL	R2, R10, #1
0x2B56	0x189A    ADDS	R2, R3, R2
0x2B58	0xF9B22000  LDRSH	R2, [R2, #0]
0x2B5C	0xFA02F208  LSL	R2, R2, R8
0x2B60	0xB212    SXTH	R2, R2
0x2B62	0xEB090402  ADD	R4, R9, R2, LSL #0
0x2B66	0xB224    SXTH	R4, R4
0x2B68	0xAB0C    ADD	R3, SP, #48
0x2B6A	0xEA4F024B  LSL	R2, R11, #1
0x2B6E	0x189A    ADDS	R2, R3, R2
0x2B70	0xF9B22000  LDRSH	R2, [R2, #0]
0x2B74	0x40BA    LSLS	R2, R7
0x2B76	0xB212    SXTH	R2, R2
0x2B78	0x18A3    ADDS	R3, R4, R2
0x2B7A	0xB21B    SXTH	R3, R3
0x2B7C	0xF9B52000  LDRSH	R2, [R5, #0]
0x2B80	0x189A    ADDS	R2, R3, R2
0x2B82	0x802A    STRH	R2, [R5, #0]
;__irgrid2_driver.c, 538 :: 		for( j = 0; j < 32; j ++)
0x2B84	0xF10B0B01  ADD	R11, R11, #1
0x2B88	0xFA0FFB8B  SXTH	R11, R11
;__irgrid2_driver.c, 548 :: 		}
; j end address is: 44 (R11)
0x2B8C	0xE7A7    B	L___irgrid2_driver_ExtractOffsetParameters75
L___irgrid2_driver_ExtractOffsetParameters76:
;__irgrid2_driver.c, 536 :: 		for( i = 0; i < 24; i++)
0x2B8E	0xF10A0A01  ADD	R10, R10, #1
0x2B92	0xFA0FFA8A  SXTH	R10, R10
;__irgrid2_driver.c, 549 :: 		}
; eeData end address is: 0 (R0)
; mlx90640 end address is: 4 (R1)
; occRemScale end address is: 24 (R6)
; occColumnScale end address is: 28 (R7)
; occRowScale end address is: 32 (R8)
; offsetRef end address is: 36 (R9)
; i end address is: 40 (R10)
0x2B96	0xE79B    B	L___irgrid2_driver_ExtractOffsetParameters72
L___irgrid2_driver_ExtractOffsetParameters73:
;__irgrid2_driver.c, 550 :: 		}
L_end_ExtractOffsetParameters:
0x2B98	0xB01C    ADD	SP, SP, #112
0x2B9A	0x4770    BX	LR
; end of __irgrid2_driver_ExtractOffsetParameters
__irgrid2_driver_ExtractKtaPixelParameters:
;__irgrid2_driver.c, 552 :: 		static void ExtractKtaPixelParameters(uint16_t *eeData, paramsMLX90640 *mlx90640)
0x2118	0xB08E    SUB	SP, SP, #56
0x211A	0xF8CDE000  STR	LR, [SP, #0]
0x211E	0x9004    STR	R0, [SP, #16]
0x2120	0x9105    STR	R1, [SP, #20]
;__irgrid2_driver.c, 554 :: 		int p = 0;
;__irgrid2_driver.c, 567 :: 		KtaRoCo = (eeData[54] & 0xFF00) >> 8;
0x2122	0x9A04    LDR	R2, [SP, #16]
0x2124	0x326C    ADDS	R2, #108
0x2126	0x8812    LDRH	R2, [R2, #0]
0x2128	0xF402427F  AND	R2, R2, #65280
0x212C	0xB292    UXTH	R2, R2
0x212E	0x0A12    LSRS	R2, R2, #8
; KtaRoCo start address is: 12 (R3)
0x2130	0xB253    SXTB	R3, R2
;__irgrid2_driver.c, 568 :: 		if (KtaRoCo > 127)
0x2132	0xB252    SXTB	R2, R2
0x2134	0x2A7F    CMP	R2, #127
0x2136	0xDD03    BLE	L___irgrid2_driver_ExtractKtaPixelParameters214
;__irgrid2_driver.c, 570 :: 		KtaRoCo = KtaRoCo - 256;
0x2138	0xF5A37280  SUB	R2, R3, #256
; KtaRoCo end address is: 12 (R3)
; KtaRoCo start address is: 0 (R0)
0x213C	0xB250    SXTB	R0, R2
; KtaRoCo end address is: 0 (R0)
;__irgrid2_driver.c, 571 :: 		}
0x213E	0xE000    B	L___irgrid2_driver_ExtractKtaPixelParameters79
L___irgrid2_driver_ExtractKtaPixelParameters214:
;__irgrid2_driver.c, 568 :: 		if (KtaRoCo > 127)
0x2140	0xB258    SXTB	R0, R3
;__irgrid2_driver.c, 571 :: 		}
L___irgrid2_driver_ExtractKtaPixelParameters79:
;__irgrid2_driver.c, 572 :: 		KtaRC[0] = KtaRoCo;
; KtaRoCo start address is: 0 (R0)
0x2142	0xAA01    ADD	R2, SP, #4
0x2144	0x7010    STRB	R0, [R2, #0]
; KtaRoCo end address is: 0 (R0)
;__irgrid2_driver.c, 574 :: 		KtaReCo = (eeData[54] & 0x00FF);
0x2146	0x9A04    LDR	R2, [SP, #16]
0x2148	0x326C    ADDS	R2, #108
0x214A	0x8812    LDRH	R2, [R2, #0]
0x214C	0xF00202FF  AND	R2, R2, #255
; KtaReCo start address is: 12 (R3)
0x2150	0xB253    SXTB	R3, R2
;__irgrid2_driver.c, 575 :: 		if (KtaReCo > 127)
0x2152	0xB252    SXTB	R2, R2
0x2154	0x2A7F    CMP	R2, #127
0x2156	0xDD03    BLE	L___irgrid2_driver_ExtractKtaPixelParameters215
;__irgrid2_driver.c, 577 :: 		KtaReCo = KtaReCo - 256;
0x2158	0xF5A37280  SUB	R2, R3, #256
; KtaReCo end address is: 12 (R3)
; KtaReCo start address is: 0 (R0)
0x215C	0xB250    SXTB	R0, R2
; KtaReCo end address is: 0 (R0)
;__irgrid2_driver.c, 578 :: 		}
0x215E	0xE000    B	L___irgrid2_driver_ExtractKtaPixelParameters80
L___irgrid2_driver_ExtractKtaPixelParameters215:
;__irgrid2_driver.c, 575 :: 		if (KtaReCo > 127)
0x2160	0xB258    SXTB	R0, R3
;__irgrid2_driver.c, 578 :: 		}
L___irgrid2_driver_ExtractKtaPixelParameters80:
;__irgrid2_driver.c, 579 :: 		KtaRC[2] = KtaReCo;
; KtaReCo start address is: 0 (R0)
0x2162	0xAA01    ADD	R2, SP, #4
0x2164	0x1C92    ADDS	R2, R2, #2
0x2166	0x7010    STRB	R0, [R2, #0]
; KtaReCo end address is: 0 (R0)
;__irgrid2_driver.c, 581 :: 		KtaRoCe = (eeData[55] & 0xFF00) >> 8;
0x2168	0x9A04    LDR	R2, [SP, #16]
0x216A	0x326E    ADDS	R2, #110
0x216C	0x8812    LDRH	R2, [R2, #0]
0x216E	0xF402427F  AND	R2, R2, #65280
0x2172	0xB292    UXTH	R2, R2
0x2174	0x0A12    LSRS	R2, R2, #8
; KtaRoCe start address is: 12 (R3)
0x2176	0xB253    SXTB	R3, R2
;__irgrid2_driver.c, 582 :: 		if (KtaRoCe > 127)
0x2178	0xB252    SXTB	R2, R2
0x217A	0x2A7F    CMP	R2, #127
0x217C	0xDD03    BLE	L___irgrid2_driver_ExtractKtaPixelParameters216
;__irgrid2_driver.c, 584 :: 		KtaRoCe = KtaRoCe - 256;
0x217E	0xF5A37280  SUB	R2, R3, #256
; KtaRoCe end address is: 12 (R3)
; KtaRoCe start address is: 0 (R0)
0x2182	0xB250    SXTB	R0, R2
; KtaRoCe end address is: 0 (R0)
;__irgrid2_driver.c, 585 :: 		}
0x2184	0xE000    B	L___irgrid2_driver_ExtractKtaPixelParameters81
L___irgrid2_driver_ExtractKtaPixelParameters216:
;__irgrid2_driver.c, 582 :: 		if (KtaRoCe > 127)
0x2186	0xB258    SXTB	R0, R3
;__irgrid2_driver.c, 585 :: 		}
L___irgrid2_driver_ExtractKtaPixelParameters81:
;__irgrid2_driver.c, 586 :: 		KtaRC[1] = KtaRoCe;
; KtaRoCe start address is: 0 (R0)
0x2188	0xAA01    ADD	R2, SP, #4
0x218A	0x1C52    ADDS	R2, R2, #1
0x218C	0x7010    STRB	R0, [R2, #0]
; KtaRoCe end address is: 0 (R0)
;__irgrid2_driver.c, 588 :: 		KtaReCe = (eeData[55] & 0x00FF);
0x218E	0x9A04    LDR	R2, [SP, #16]
0x2190	0x326E    ADDS	R2, #110
0x2192	0x8812    LDRH	R2, [R2, #0]
0x2194	0xF00202FF  AND	R2, R2, #255
; KtaReCe start address is: 12 (R3)
0x2198	0xB253    SXTB	R3, R2
;__irgrid2_driver.c, 589 :: 		if (KtaReCe > 127)
0x219A	0xB252    SXTB	R2, R2
0x219C	0x2A7F    CMP	R2, #127
0x219E	0xDD03    BLE	L___irgrid2_driver_ExtractKtaPixelParameters217
;__irgrid2_driver.c, 591 :: 		KtaReCe = KtaReCe - 256;
0x21A0	0xF5A37280  SUB	R2, R3, #256
; KtaReCe end address is: 12 (R3)
; KtaReCe start address is: 0 (R0)
0x21A4	0xB250    SXTB	R0, R2
; KtaReCe end address is: 0 (R0)
;__irgrid2_driver.c, 592 :: 		}
0x21A6	0xE000    B	L___irgrid2_driver_ExtractKtaPixelParameters82
L___irgrid2_driver_ExtractKtaPixelParameters217:
;__irgrid2_driver.c, 589 :: 		if (KtaReCe > 127)
0x21A8	0xB258    SXTB	R0, R3
;__irgrid2_driver.c, 592 :: 		}
L___irgrid2_driver_ExtractKtaPixelParameters82:
;__irgrid2_driver.c, 593 :: 		KtaRC[3] = KtaReCe;
; KtaReCe start address is: 0 (R0)
0x21AA	0xAA01    ADD	R2, SP, #4
0x21AC	0x1CD2    ADDS	R2, R2, #3
0x21AE	0x7010    STRB	R0, [R2, #0]
; KtaReCe end address is: 0 (R0)
;__irgrid2_driver.c, 595 :: 		ktaScale1 = ((eeData[56] & 0x00F0) >> 4) + 8;
0x21B0	0x9A04    LDR	R2, [SP, #16]
0x21B2	0x3270    ADDS	R2, #112
0x21B4	0x8812    LDRH	R2, [R2, #0]
0x21B6	0xF00202F0  AND	R2, R2, #240
0x21BA	0xB292    UXTH	R2, R2
0x21BC	0x0912    LSRS	R2, R2, #4
0x21BE	0xB292    UXTH	R2, R2
0x21C0	0x3208    ADDS	R2, #8
0x21C2	0xF88D2008  STRB	R2, [SP, #8]
;__irgrid2_driver.c, 596 :: 		ktaScale2 = (eeData[56] & 0x000F);
0x21C6	0x9A04    LDR	R2, [SP, #16]
0x21C8	0x3270    ADDS	R2, #112
0x21CA	0x8812    LDRH	R2, [R2, #0]
0x21CC	0xF002020F  AND	R2, R2, #15
0x21D0	0xF88D2009  STRB	R2, [SP, #9]
;__irgrid2_driver.c, 598 :: 		for(i = 0; i < 24; i++)
0x21D4	0x2200    MOVS	R2, #0
0x21D6	0xB212    SXTH	R2, R2
0x21D8	0xF8AD200A  STRH	R2, [SP, #10]
L___irgrid2_driver_ExtractKtaPixelParameters83:
0x21DC	0xF9BD200A  LDRSH	R2, [SP, #10]
0x21E0	0x2A18    CMP	R2, #24
0x21E2	0xF28080BF  BGE	L___irgrid2_driver_ExtractKtaPixelParameters84
;__irgrid2_driver.c, 600 :: 		for( j = 0; j < 32; j ++)
0x21E6	0x2200    MOVS	R2, #0
0x21E8	0xB212    SXTH	R2, R2
0x21EA	0xF8AD200C  STRH	R2, [SP, #12]
L___irgrid2_driver_ExtractKtaPixelParameters86:
0x21EE	0xF9BD200C  LDRSH	R2, [SP, #12]
0x21F2	0x2A20    CMP	R2, #32
0x21F4	0xF28080B0  BGE	L___irgrid2_driver_ExtractKtaPixelParameters87
;__irgrid2_driver.c, 602 :: 		p = 32 * i +j;
0x21F8	0xF9BD200A  LDRSH	R2, [SP, #10]
0x21FC	0x0153    LSLS	R3, R2, #5
0x21FE	0xB21B    SXTH	R3, R3
0x2200	0xF9BD200C  LDRSH	R2, [SP, #12]
0x2204	0x189D    ADDS	R5, R3, R2
0x2206	0xB22D    SXTH	R5, R5
0x2208	0xF8AD5018  STRH	R5, [SP, #24]
;__irgrid2_driver.c, 603 :: 		split = 2*(p/32 - (p/64)*2) + p%2;
0x220C	0x2220    MOVS	R2, #32
0x220E	0xB212    SXTH	R2, R2
0x2210	0xFB95F3F2  SDIV	R3, R5, R2
0x2214	0xB21B    SXTH	R3, R3
0x2216	0x2240    MOVS	R2, #64
0x2218	0xB212    SXTH	R2, R2
0x221A	0xFB95F2F2  SDIV	R2, R5, R2
0x221E	0xB212    SXTH	R2, R2
0x2220	0x0052    LSLS	R2, R2, #1
0x2222	0xB212    SXTH	R2, R2
0x2224	0x1A9A    SUB	R2, R3, R2
0x2226	0xB212    SXTH	R2, R2
0x2228	0x0054    LSLS	R4, R2, #1
0x222A	0xB224    SXTH	R4, R4
0x222C	0x2302    MOVS	R3, #2
0x222E	0xB21B    SXTH	R3, R3
0x2230	0xFB95F2F3  SDIV	R2, R5, R3
0x2234	0xFB035212  MLS	R2, R3, R2, R5
0x2238	0xB212    SXTH	R2, R2
0x223A	0x18A2    ADDS	R2, R4, R2
; split start address is: 36 (R9)
0x223C	0xFA5FF982  UXTB	R9, R2
;__irgrid2_driver.c, 604 :: 		mlx90640->kta[p] = (eeData[64 + p] & 0x000E) >> 1;
0x2240	0x9B05    LDR	R3, [SP, #20]
0x2242	0xF2412244  MOVW	R2, #4676
0x2246	0x189B    ADDS	R3, R3, R2
0x2248	0x00AA    LSLS	R2, R5, #2
0x224A	0x189A    ADDS	R2, R3, R2
0x224C	0x920C    STR	R2, [SP, #48]
0x224E	0xF2050240  ADDW	R2, R5, #64
0x2252	0xB212    SXTH	R2, R2
0x2254	0x0053    LSLS	R3, R2, #1
0x2256	0x9A04    LDR	R2, [SP, #16]
0x2258	0x18D2    ADDS	R2, R2, R3
0x225A	0x8812    LDRH	R2, [R2, #0]
0x225C	0xF002020E  AND	R2, R2, #14
0x2260	0xB292    UXTH	R2, R2
0x2262	0x0852    LSRS	R2, R2, #1
0x2264	0xB292    UXTH	R2, R2
0x2266	0xB290    UXTH	R0, R2
0x2268	0xF7FFFA92  BL	__UnsignedIntegralToFloat+0
0x226C	0x9A0C    LDR	R2, [SP, #48]
0x226E	0x6010    STR	R0, [R2, #0]
;__irgrid2_driver.c, 605 :: 		if (mlx90640->kta[p] > 3)
0x2270	0x9B05    LDR	R3, [SP, #20]
0x2272	0xF2412244  MOVW	R2, #4676
0x2276	0x189B    ADDS	R3, R3, R2
0x2278	0xF9BD2018  LDRSH	R2, [SP, #24]
0x227C	0x0092    LSLS	R2, R2, #2
0x227E	0x189A    ADDS	R2, R3, R2
0x2280	0x6812    LDR	R2, [R2, #0]
0x2282	0x483A    LDR	R0, [PC, #232]
0x2284	0xF7FFFB6E  BL	__Compare_FP+0
0x2288	0xF2400000  MOVW	R0, #0
0x228C	0xDA00    BGE	L___irgrid2_driver_ExtractKtaPixelParameters284
0x228E	0x2001    MOVS	R0, #1
L___irgrid2_driver_ExtractKtaPixelParameters284:
0x2290	0xB178    CBZ	R0, L___irgrid2_driver_ExtractKtaPixelParameters89
;__irgrid2_driver.c, 607 :: 		mlx90640->kta[p] = mlx90640->kta[p] - 8;
0x2292	0x9B05    LDR	R3, [SP, #20]
0x2294	0xF2412244  MOVW	R2, #4676
0x2298	0x189B    ADDS	R3, R3, R2
0x229A	0xF9BD2018  LDRSH	R2, [SP, #24]
0x229E	0x0092    LSLS	R2, R2, #2
0x22A0	0x189A    ADDS	R2, R3, R2
0x22A2	0x920C    STR	R2, [SP, #48]
0x22A4	0x6810    LDR	R0, [R2, #0]
0x22A6	0xF04F4282  MOV	R2, #1090519040
0x22AA	0xF7FFFAD9  BL	__Sub_FP+0
0x22AE	0x9A0C    LDR	R2, [SP, #48]
0x22B0	0x6010    STR	R0, [R2, #0]
;__irgrid2_driver.c, 608 :: 		}
L___irgrid2_driver_ExtractKtaPixelParameters89:
;__irgrid2_driver.c, 609 :: 		mlx90640->kta[p] = mlx90640->kta[p] * (1 << ktaScale2);
0x22B2	0x9B05    LDR	R3, [SP, #20]
0x22B4	0xF2412244  MOVW	R2, #4676
0x22B8	0x189B    ADDS	R3, R3, R2
0x22BA	0xF9BD2018  LDRSH	R2, [SP, #24]
0x22BE	0x0092    LSLS	R2, R2, #2
0x22C0	0x189A    ADDS	R2, R3, R2
0x22C2	0x920D    STR	R2, [SP, #52]
0x22C4	0x6812    LDR	R2, [R2, #0]
0x22C6	0x920C    STR	R2, [SP, #48]
0x22C8	0xF89D3009  LDRB	R3, [SP, #9]
0x22CC	0x2201    MOVS	R2, #1
0x22CE	0xB212    SXTH	R2, R2
0x22D0	0x409A    LSLS	R2, R3
0x22D2	0xB212    SXTH	R2, R2
0x22D4	0xB210    SXTH	R0, R2
0x22D6	0xF7FFF8CD  BL	__SignedIntegralToFloat+0
0x22DA	0x9A0C    LDR	R2, [SP, #48]
0x22DC	0xF7FEFA20  BL	__Mul_FP+0
0x22E0	0x9A0D    LDR	R2, [SP, #52]
0x22E2	0x6010    STR	R0, [R2, #0]
;__irgrid2_driver.c, 610 :: 		mlx90640->kta[p] = KtaRC[split] + mlx90640->kta[p];
0x22E4	0x9B05    LDR	R3, [SP, #20]
0x22E6	0xF2412244  MOVW	R2, #4676
0x22EA	0x189B    ADDS	R3, R3, R2
0x22EC	0xF9BD2018  LDRSH	R2, [SP, #24]
0x22F0	0x0092    LSLS	R2, R2, #2
0x22F2	0x189C    ADDS	R4, R3, R2
0x22F4	0x940D    STR	R4, [SP, #52]
0x22F6	0xAA01    ADD	R2, SP, #4
0x22F8	0xEB020209  ADD	R2, R2, R9, LSL #0
; split end address is: 36 (R9)
0x22FC	0xF9923000  LDRSB	R3, [R2, #0]
0x2300	0x4622    MOV	R2, R4
0x2302	0x920C    STR	R2, [SP, #48]
0x2304	0xB258    SXTB	R0, R3
0x2306	0xF7FFF8B5  BL	__SignedIntegralToFloat+0
0x230A	0x9A0C    LDR	R2, [SP, #48]
0x230C	0x6812    LDR	R2, [R2, #0]
0x230E	0xF7FEF933  BL	__Add_FP+0
0x2312	0x9A0D    LDR	R2, [SP, #52]
0x2314	0x6010    STR	R0, [R2, #0]
;__irgrid2_driver.c, 611 :: 		mlx90640->kta[p] = mlx90640->kta[p] / _pow(2,(double)ktaScale1);
0x2316	0x9B05    LDR	R3, [SP, #20]
0x2318	0xF2412244  MOVW	R2, #4676
0x231C	0x189B    ADDS	R3, R3, R2
0x231E	0xF9BD2018  LDRSH	R2, [SP, #24]
0x2322	0x0092    LSLS	R2, R2, #2
0x2324	0x189A    ADDS	R2, R3, R2
0x2326	0x920D    STR	R2, [SP, #52]
0x2328	0x6812    LDR	R2, [R2, #0]
0x232A	0x920C    STR	R2, [SP, #48]
0x232C	0xF89D0008  LDRB	R0, [SP, #8]
0x2330	0xF7FFFA2E  BL	__UnsignedIntegralToFloat+0
0x2334	0x4601    MOV	R1, R0
0x2336	0xF04F4080  MOV	R0, #1073741824
0x233A	0xF7FFF979  BL	__irgrid2_driver__pow+0
0x233E	0x9007    STR	R0, [SP, #28]
0x2340	0x9A07    LDR	R2, [SP, #28]
0x2342	0x980C    LDR	R0, [SP, #48]
0x2344	0xF7FFFA3A  BL	__Div_FP+0
0x2348	0x9A0D    LDR	R2, [SP, #52]
0x234A	0x6010    STR	R0, [R2, #0]
;__irgrid2_driver.c, 600 :: 		for( j = 0; j < 32; j ++)
0x234C	0xF9BD200C  LDRSH	R2, [SP, #12]
0x2350	0x1C52    ADDS	R2, R2, #1
0x2352	0xF8AD200C  STRH	R2, [SP, #12]
;__irgrid2_driver.c, 612 :: 		}
0x2356	0xE74A    B	L___irgrid2_driver_ExtractKtaPixelParameters86
L___irgrid2_driver_ExtractKtaPixelParameters87:
;__irgrid2_driver.c, 598 :: 		for(i = 0; i < 24; i++)
0x2358	0xF9BD200A  LDRSH	R2, [SP, #10]
0x235C	0x1C52    ADDS	R2, R2, #1
0x235E	0xF8AD200A  STRH	R2, [SP, #10]
;__irgrid2_driver.c, 613 :: 		}
0x2362	0xE73B    B	L___irgrid2_driver_ExtractKtaPixelParameters83
L___irgrid2_driver_ExtractKtaPixelParameters84:
;__irgrid2_driver.c, 614 :: 		}
L_end_ExtractKtaPixelParameters:
0x2364	0xF8DDE000  LDR	LR, [SP, #0]
0x2368	0xB00E    ADD	SP, SP, #56
0x236A	0x4770    BX	LR
0x236C	0x00004040  	#1077936128
; end of __irgrid2_driver_ExtractKtaPixelParameters
__irgrid2_driver_ExtractKvPixelParameters:
;__irgrid2_driver.c, 616 :: 		static void ExtractKvPixelParameters(uint16_t *eeData, paramsMLX90640 *mlx90640)
; eeData start address is: 0 (R0)
0x1E14	0xB08C    SUB	SP, SP, #48
0x1E16	0xF8CDE000  STR	LR, [SP, #0]
0x1E1A	0x9104    STR	R1, [SP, #16]
; eeData end address is: 0 (R0)
; eeData start address is: 0 (R0)
;__irgrid2_driver.c, 618 :: 		int p = 0;
;__irgrid2_driver.c, 630 :: 		KvRoCo = (eeData[52] & 0xF000) >> 12;
0x1E1C	0xF2000268  ADDW	R2, R0, #104
0x1E20	0x8812    LDRH	R2, [R2, #0]
0x1E22	0xF4024270  AND	R2, R2, #61440
0x1E26	0xB292    UXTH	R2, R2
0x1E28	0x0B12    LSRS	R2, R2, #12
; KvRoCo start address is: 12 (R3)
0x1E2A	0xB253    SXTB	R3, R2
;__irgrid2_driver.c, 631 :: 		if (KvRoCo > 7)
0x1E2C	0xB252    SXTB	R2, R2
0x1E2E	0x2A07    CMP	R2, #7
0x1E30	0xDD03    BLE	L___irgrid2_driver_ExtractKvPixelParameters218
;__irgrid2_driver.c, 633 :: 		KvRoCo = KvRoCo - 16;
0x1E32	0xF2A30210  SUBW	R2, R3, #16
; KvRoCo end address is: 12 (R3)
; KvRoCo start address is: 4 (R1)
0x1E36	0xB251    SXTB	R1, R2
; KvRoCo end address is: 4 (R1)
;__irgrid2_driver.c, 634 :: 		}
0x1E38	0xE000    B	L___irgrid2_driver_ExtractKvPixelParameters90
L___irgrid2_driver_ExtractKvPixelParameters218:
;__irgrid2_driver.c, 631 :: 		if (KvRoCo > 7)
0x1E3A	0xB259    SXTB	R1, R3
;__irgrid2_driver.c, 634 :: 		}
L___irgrid2_driver_ExtractKvPixelParameters90:
;__irgrid2_driver.c, 635 :: 		KvT[0] = KvRoCo;
; KvRoCo start address is: 4 (R1)
0x1E3C	0xAA01    ADD	R2, SP, #4
0x1E3E	0x7011    STRB	R1, [R2, #0]
; KvRoCo end address is: 4 (R1)
;__irgrid2_driver.c, 637 :: 		KvReCo = (eeData[52] & 0x0F00) >> 8;
0x1E40	0xF2000268  ADDW	R2, R0, #104
0x1E44	0x8812    LDRH	R2, [R2, #0]
0x1E46	0xF4026270  AND	R2, R2, #3840
0x1E4A	0xB292    UXTH	R2, R2
0x1E4C	0x0A12    LSRS	R2, R2, #8
; KvReCo start address is: 12 (R3)
0x1E4E	0xB253    SXTB	R3, R2
;__irgrid2_driver.c, 638 :: 		if (KvReCo > 7)
0x1E50	0xB252    SXTB	R2, R2
0x1E52	0x2A07    CMP	R2, #7
0x1E54	0xDD03    BLE	L___irgrid2_driver_ExtractKvPixelParameters219
;__irgrid2_driver.c, 640 :: 		KvReCo = KvReCo - 16;
0x1E56	0xF2A30210  SUBW	R2, R3, #16
; KvReCo end address is: 12 (R3)
; KvReCo start address is: 4 (R1)
0x1E5A	0xB251    SXTB	R1, R2
; KvReCo end address is: 4 (R1)
;__irgrid2_driver.c, 641 :: 		}
0x1E5C	0xE000    B	L___irgrid2_driver_ExtractKvPixelParameters91
L___irgrid2_driver_ExtractKvPixelParameters219:
;__irgrid2_driver.c, 638 :: 		if (KvReCo > 7)
0x1E5E	0xB259    SXTB	R1, R3
;__irgrid2_driver.c, 641 :: 		}
L___irgrid2_driver_ExtractKvPixelParameters91:
;__irgrid2_driver.c, 642 :: 		KvT[2] = KvReCo;
; KvReCo start address is: 4 (R1)
0x1E60	0xAA01    ADD	R2, SP, #4
0x1E62	0x1C92    ADDS	R2, R2, #2
0x1E64	0x7011    STRB	R1, [R2, #0]
; KvReCo end address is: 4 (R1)
;__irgrid2_driver.c, 644 :: 		KvRoCe = (eeData[52] & 0x00F0) >> 4;
0x1E66	0xF2000268  ADDW	R2, R0, #104
0x1E6A	0x8812    LDRH	R2, [R2, #0]
0x1E6C	0xF00202F0  AND	R2, R2, #240
0x1E70	0xB292    UXTH	R2, R2
0x1E72	0x0912    LSRS	R2, R2, #4
; KvRoCe start address is: 12 (R3)
0x1E74	0xB253    SXTB	R3, R2
;__irgrid2_driver.c, 645 :: 		if (KvRoCe > 7)
0x1E76	0xB252    SXTB	R2, R2
0x1E78	0x2A07    CMP	R2, #7
0x1E7A	0xDD03    BLE	L___irgrid2_driver_ExtractKvPixelParameters220
;__irgrid2_driver.c, 647 :: 		KvRoCe = KvRoCe - 16;
0x1E7C	0xF2A30210  SUBW	R2, R3, #16
; KvRoCe end address is: 12 (R3)
; KvRoCe start address is: 4 (R1)
0x1E80	0xB251    SXTB	R1, R2
; KvRoCe end address is: 4 (R1)
;__irgrid2_driver.c, 648 :: 		}
0x1E82	0xE000    B	L___irgrid2_driver_ExtractKvPixelParameters92
L___irgrid2_driver_ExtractKvPixelParameters220:
;__irgrid2_driver.c, 645 :: 		if (KvRoCe > 7)
0x1E84	0xB259    SXTB	R1, R3
;__irgrid2_driver.c, 648 :: 		}
L___irgrid2_driver_ExtractKvPixelParameters92:
;__irgrid2_driver.c, 649 :: 		KvT[1] = KvRoCe;
; KvRoCe start address is: 4 (R1)
0x1E86	0xAA01    ADD	R2, SP, #4
0x1E88	0x1C52    ADDS	R2, R2, #1
0x1E8A	0x7011    STRB	R1, [R2, #0]
; KvRoCe end address is: 4 (R1)
;__irgrid2_driver.c, 651 :: 		KvReCe = (eeData[52] & 0x000F);
0x1E8C	0xF2000268  ADDW	R2, R0, #104
0x1E90	0x8812    LDRH	R2, [R2, #0]
0x1E92	0xF002020F  AND	R2, R2, #15
; KvReCe start address is: 12 (R3)
0x1E96	0xB253    SXTB	R3, R2
;__irgrid2_driver.c, 652 :: 		if (KvReCe > 7)
0x1E98	0xB252    SXTB	R2, R2
0x1E9A	0x2A07    CMP	R2, #7
0x1E9C	0xDD03    BLE	L___irgrid2_driver_ExtractKvPixelParameters221
;__irgrid2_driver.c, 654 :: 		KvReCe = KvReCe - 16;
0x1E9E	0xF2A30210  SUBW	R2, R3, #16
; KvReCe end address is: 12 (R3)
; KvReCe start address is: 4 (R1)
0x1EA2	0xB251    SXTB	R1, R2
; KvReCe end address is: 4 (R1)
;__irgrid2_driver.c, 655 :: 		}
0x1EA4	0xE000    B	L___irgrid2_driver_ExtractKvPixelParameters93
L___irgrid2_driver_ExtractKvPixelParameters221:
;__irgrid2_driver.c, 652 :: 		if (KvReCe > 7)
0x1EA6	0xB259    SXTB	R1, R3
;__irgrid2_driver.c, 655 :: 		}
L___irgrid2_driver_ExtractKvPixelParameters93:
;__irgrid2_driver.c, 656 :: 		KvT[3] = KvReCe;
; KvReCe start address is: 4 (R1)
0x1EA8	0xAA01    ADD	R2, SP, #4
0x1EAA	0x1CD2    ADDS	R2, R2, #3
0x1EAC	0x7011    STRB	R1, [R2, #0]
; KvReCe end address is: 4 (R1)
;__irgrid2_driver.c, 658 :: 		kvScale = (eeData[56] & 0x0F00) >> 8;
0x1EAE	0xF2000270  ADDW	R2, R0, #112
; eeData end address is: 0 (R0)
0x1EB2	0x8812    LDRH	R2, [R2, #0]
0x1EB4	0xF4026270  AND	R2, R2, #3840
0x1EB8	0xB292    UXTH	R2, R2
0x1EBA	0x0A12    LSRS	R2, R2, #8
0x1EBC	0xF88D2008  STRB	R2, [SP, #8]
;__irgrid2_driver.c, 661 :: 		for(i = 0; i < 24; i++)
0x1EC0	0x2200    MOVS	R2, #0
0x1EC2	0xB212    SXTH	R2, R2
0x1EC4	0xF8AD200A  STRH	R2, [SP, #10]
L___irgrid2_driver_ExtractKvPixelParameters94:
0x1EC8	0xF9BD200A  LDRSH	R2, [SP, #10]
0x1ECC	0x2A18    CMP	R2, #24
0x1ECE	0xDA5F    BGE	L___irgrid2_driver_ExtractKvPixelParameters95
;__irgrid2_driver.c, 663 :: 		for(j = 0; j < 32; j ++)
0x1ED0	0x2200    MOVS	R2, #0
0x1ED2	0xB212    SXTH	R2, R2
0x1ED4	0xF8AD200C  STRH	R2, [SP, #12]
L___irgrid2_driver_ExtractKvPixelParameters97:
0x1ED8	0xF9BD200C  LDRSH	R2, [SP, #12]
0x1EDC	0x2A20    CMP	R2, #32
0x1EDE	0xDA51    BGE	L___irgrid2_driver_ExtractKvPixelParameters98
;__irgrid2_driver.c, 665 :: 		p = 32 * i +j;
0x1EE0	0xF9BD200A  LDRSH	R2, [SP, #10]
0x1EE4	0x0153    LSLS	R3, R2, #5
0x1EE6	0xB21B    SXTH	R3, R3
0x1EE8	0xF9BD200C  LDRSH	R2, [SP, #12]
0x1EEC	0x189D    ADDS	R5, R3, R2
0x1EEE	0xB22D    SXTH	R5, R5
; p start address is: 24 (R6)
0x1EF0	0xB22E    SXTH	R6, R5
;__irgrid2_driver.c, 666 :: 		split = 2*(p/32 - (p/64)*2) + p%2;
0x1EF2	0x2220    MOVS	R2, #32
0x1EF4	0xB212    SXTH	R2, R2
0x1EF6	0xFB95F3F2  SDIV	R3, R5, R2
0x1EFA	0xB21B    SXTH	R3, R3
0x1EFC	0x2240    MOVS	R2, #64
0x1EFE	0xB212    SXTH	R2, R2
0x1F00	0xFB95F2F2  SDIV	R2, R5, R2
0x1F04	0xB212    SXTH	R2, R2
0x1F06	0x0052    LSLS	R2, R2, #1
0x1F08	0xB212    SXTH	R2, R2
0x1F0A	0x1A9A    SUB	R2, R3, R2
0x1F0C	0xB212    SXTH	R2, R2
0x1F0E	0x0054    LSLS	R4, R2, #1
0x1F10	0xB224    SXTH	R4, R4
0x1F12	0x2302    MOVS	R3, #2
0x1F14	0xB21B    SXTH	R3, R3
0x1F16	0xFB95F2F3  SDIV	R2, R5, R3
0x1F1A	0xFB035212  MLS	R2, R3, R2, R5
0x1F1E	0xB212    SXTH	R2, R2
0x1F20	0x18A4    ADDS	R4, R4, R2
0x1F22	0xB224    SXTH	R4, R4
;__irgrid2_driver.c, 667 :: 		mlx90640->kv[p] = KvT[split];
0x1F24	0x9B04    LDR	R3, [SP, #16]
0x1F26	0xF6416244  MOVW	R2, #7748
0x1F2A	0x189B    ADDS	R3, R3, R2
0x1F2C	0x00AA    LSLS	R2, R5, #2
0x1F2E	0x189A    ADDS	R2, R3, R2
0x1F30	0x920A    STR	R2, [SP, #40]
0x1F32	0xAB01    ADD	R3, SP, #4
0x1F34	0xB2E2    UXTB	R2, R4
0x1F36	0x189A    ADDS	R2, R3, R2
0x1F38	0xF9922000  LDRSB	R2, [R2, #0]
0x1F3C	0xB250    SXTB	R0, R2
0x1F3E	0xF7FFFA99  BL	__SignedIntegralToFloat+0
0x1F42	0x9A0A    LDR	R2, [SP, #40]
0x1F44	0x6010    STR	R0, [R2, #0]
;__irgrid2_driver.c, 668 :: 		mlx90640->kv[p] = mlx90640->kv[p] / _pow(2,(double)kvScale);
0x1F46	0x9B04    LDR	R3, [SP, #16]
0x1F48	0xF6416244  MOVW	R2, #7748
0x1F4C	0x189B    ADDS	R3, R3, R2
0x1F4E	0x00B2    LSLS	R2, R6, #2
; p end address is: 24 (R6)
0x1F50	0x189A    ADDS	R2, R3, R2
0x1F52	0x920B    STR	R2, [SP, #44]
0x1F54	0x6812    LDR	R2, [R2, #0]
0x1F56	0x920A    STR	R2, [SP, #40]
0x1F58	0xF89D0008  LDRB	R0, [SP, #8]
0x1F5C	0xF7FFFC18  BL	__UnsignedIntegralToFloat+0
0x1F60	0x4601    MOV	R1, R0
0x1F62	0xF04F4080  MOV	R0, #1073741824
0x1F66	0xF7FFFB63  BL	__irgrid2_driver__pow+0
0x1F6A	0x9005    STR	R0, [SP, #20]
0x1F6C	0x9A05    LDR	R2, [SP, #20]
0x1F6E	0x980A    LDR	R0, [SP, #40]
0x1F70	0xF7FFFC24  BL	__Div_FP+0
0x1F74	0x9A0B    LDR	R2, [SP, #44]
0x1F76	0x6010    STR	R0, [R2, #0]
;__irgrid2_driver.c, 663 :: 		for(j = 0; j < 32; j ++)
0x1F78	0xF9BD200C  LDRSH	R2, [SP, #12]
0x1F7C	0x1C52    ADDS	R2, R2, #1
0x1F7E	0xF8AD200C  STRH	R2, [SP, #12]
;__irgrid2_driver.c, 669 :: 		}
0x1F82	0xE7A9    B	L___irgrid2_driver_ExtractKvPixelParameters97
L___irgrid2_driver_ExtractKvPixelParameters98:
;__irgrid2_driver.c, 661 :: 		for(i = 0; i < 24; i++)
0x1F84	0xF9BD200A  LDRSH	R2, [SP, #10]
0x1F88	0x1C52    ADDS	R2, R2, #1
0x1F8A	0xF8AD200A  STRH	R2, [SP, #10]
;__irgrid2_driver.c, 670 :: 		}
0x1F8E	0xE79B    B	L___irgrid2_driver_ExtractKvPixelParameters94
L___irgrid2_driver_ExtractKvPixelParameters95:
;__irgrid2_driver.c, 671 :: 		}
L_end_ExtractKvPixelParameters:
0x1F90	0xF8DDE000  LDR	LR, [SP, #0]
0x1F94	0xB00C    ADD	SP, SP, #48
0x1F96	0x4770    BX	LR
; end of __irgrid2_driver_ExtractKvPixelParameters
__irgrid2_driver_ExtractCPParameters:
;__irgrid2_driver.c, 673 :: 		static void ExtractCPParameters(uint16_t *eeData, paramsMLX90640 *mlx90640)
0x2D9C	0xB08D    SUB	SP, SP, #52
0x2D9E	0xF8CDE000  STR	LR, [SP, #0]
0x2DA2	0x9006    STR	R0, [SP, #24]
0x2DA4	0x9107    STR	R1, [SP, #28]
;__irgrid2_driver.c, 683 :: 		alphaScale = ((eeData[32] & 0xF000) >> 12) + 27;
0x2DA6	0x9A06    LDR	R2, [SP, #24]
0x2DA8	0x3240    ADDS	R2, #64
0x2DAA	0x8812    LDRH	R2, [R2, #0]
0x2DAC	0xF4024270  AND	R2, R2, #61440
0x2DB0	0xB292    UXTH	R2, R2
0x2DB2	0x0B12    LSRS	R2, R2, #12
0x2DB4	0xB292    UXTH	R2, R2
0x2DB6	0x321B    ADDS	R2, #27
; alphaScale start address is: 36 (R9)
0x2DB8	0xFA5FF982  UXTB	R9, R2
;__irgrid2_driver.c, 685 :: 		offsetSP[0] = (eeData[58] & 0x03FF);
0x2DBC	0xAC03    ADD	R4, SP, #12
0x2DBE	0x9A06    LDR	R2, [SP, #24]
0x2DC0	0x3274    ADDS	R2, #116
0x2DC2	0x8813    LDRH	R3, [R2, #0]
0x2DC4	0xF24032FF  MOVW	R2, #1023
0x2DC8	0xEA030202  AND	R2, R3, R2, LSL #0
0x2DCC	0x8022    STRH	R2, [R4, #0]
;__irgrid2_driver.c, 686 :: 		if (offsetSP[0] > 511)
0x2DCE	0xF9B43000  LDRSH	R3, [R4, #0]
0x2DD2	0xF24012FF  MOVW	R2, #511
0x2DD6	0x4293    CMP	R3, R2
0x2DD8	0xDD05    BLE	L___irgrid2_driver_ExtractCPParameters100
;__irgrid2_driver.c, 688 :: 		offsetSP[0] = offsetSP[0] - 1024;
0x2DDA	0xAB03    ADD	R3, SP, #12
0x2DDC	0xF9B32000  LDRSH	R2, [R3, #0]
0x2DE0	0xF5A26280  SUB	R2, R2, #1024
0x2DE4	0x801A    STRH	R2, [R3, #0]
;__irgrid2_driver.c, 689 :: 		}
L___irgrid2_driver_ExtractCPParameters100:
;__irgrid2_driver.c, 691 :: 		offsetSP[1] = (eeData[58] & 0xFC00) >> 10;
0x2DE6	0xAC03    ADD	R4, SP, #12
0x2DE8	0x1CA3    ADDS	R3, R4, #2
0x2DEA	0x9A06    LDR	R2, [SP, #24]
0x2DEC	0x3274    ADDS	R2, #116
0x2DEE	0x8812    LDRH	R2, [R2, #0]
0x2DF0	0xF402427C  AND	R2, R2, #64512
0x2DF4	0xB292    UXTH	R2, R2
0x2DF6	0x0A92    LSRS	R2, R2, #10
0x2DF8	0x801A    STRH	R2, [R3, #0]
;__irgrid2_driver.c, 692 :: 		if (offsetSP[1] > 31)
0x2DFA	0x1CA2    ADDS	R2, R4, #2
0x2DFC	0xF9B22000  LDRSH	R2, [R2, #0]
0x2E00	0x2A1F    CMP	R2, #31
0x2E02	0xDD06    BLE	L___irgrid2_driver_ExtractCPParameters101
;__irgrid2_driver.c, 694 :: 		offsetSP[1] = offsetSP[1] - 64;
0x2E04	0xAA03    ADD	R2, SP, #12
0x2E06	0x1C93    ADDS	R3, R2, #2
0x2E08	0x1C92    ADDS	R2, R2, #2
0x2E0A	0xF9B22000  LDRSH	R2, [R2, #0]
0x2E0E	0x3A40    SUBS	R2, #64
0x2E10	0x801A    STRH	R2, [R3, #0]
;__irgrid2_driver.c, 695 :: 		}
L___irgrid2_driver_ExtractCPParameters101:
;__irgrid2_driver.c, 696 :: 		offsetSP[1] = offsetSP[1] + offsetSP[0];
0x2E12	0xAD03    ADD	R5, SP, #12
0x2E14	0x1CAC    ADDS	R4, R5, #2
0x2E16	0x1CAA    ADDS	R2, R5, #2
0x2E18	0xF9B23000  LDRSH	R3, [R2, #0]
0x2E1C	0xF9B52000  LDRSH	R2, [R5, #0]
0x2E20	0x189A    ADDS	R2, R3, R2
0x2E22	0x8022    STRH	R2, [R4, #0]
;__irgrid2_driver.c, 698 :: 		alphaSP[0] = (eeData[57] & 0x03FF);
0x2E24	0xAA01    ADD	R2, SP, #4
0x2E26	0x920C    STR	R2, [SP, #48]
0x2E28	0x920B    STR	R2, [SP, #44]
0x2E2A	0x9A06    LDR	R2, [SP, #24]
0x2E2C	0x3272    ADDS	R2, #114
0x2E2E	0x8813    LDRH	R3, [R2, #0]
0x2E30	0xF24032FF  MOVW	R2, #1023
0x2E34	0xEA030202  AND	R2, R3, R2, LSL #0
0x2E38	0xB292    UXTH	R2, R2
0x2E3A	0xB290    UXTH	R0, R2
0x2E3C	0xF7FEFCA8  BL	__UnsignedIntegralToFloat+0
0x2E40	0x9A0B    LDR	R2, [SP, #44]
0x2E42	0x6010    STR	R0, [R2, #0]
;__irgrid2_driver.c, 699 :: 		if (alphaSP[0] > 511)
0x2E44	0x9A0C    LDR	R2, [SP, #48]
0x2E46	0x6812    LDR	R2, [R2, #0]
0x2E48	0x4877    LDR	R0, [PC, #476]
0x2E4A	0xF7FEFD8B  BL	__Compare_FP+0
0x2E4E	0xF2400000  MOVW	R0, #0
0x2E52	0xDA00    BGE	L___irgrid2_driver_ExtractCPParameters287
0x2E54	0x2001    MOVS	R0, #1
L___irgrid2_driver_ExtractCPParameters287:
0x2E56	0xB148    CBZ	R0, L___irgrid2_driver_ExtractCPParameters102
;__irgrid2_driver.c, 701 :: 		alphaSP[0] = alphaSP[0] - 1024;
0x2E58	0xAB01    ADD	R3, SP, #4
0x2E5A	0x461A    MOV	R2, R3
0x2E5C	0x920B    STR	R2, [SP, #44]
0x2E5E	0x6818    LDR	R0, [R3, #0]
0x2E60	0xF04F4289  MOV	R2, #1149239296
0x2E64	0xF7FEFCFC  BL	__Sub_FP+0
0x2E68	0x9A0B    LDR	R2, [SP, #44]
0x2E6A	0x6010    STR	R0, [R2, #0]
;__irgrid2_driver.c, 702 :: 		}
L___irgrid2_driver_ExtractCPParameters102:
;__irgrid2_driver.c, 703 :: 		alphaSP[0] = alphaSP[0] /  _pow(2,(double)alphaScale);
0x2E6C	0xAB01    ADD	R3, SP, #4
0x2E6E	0x461A    MOV	R2, R3
0x2E70	0x920C    STR	R2, [SP, #48]
0x2E72	0x681A    LDR	R2, [R3, #0]
0x2E74	0x920B    STR	R2, [SP, #44]
0x2E76	0xFA5FF089  UXTB	R0, R9
0x2E7A	0xF7FEFC89  BL	__UnsignedIntegralToFloat+0
; alphaScale end address is: 36 (R9)
0x2E7E	0x4601    MOV	R1, R0
0x2E80	0xF04F4080  MOV	R0, #1073741824
0x2E84	0xF7FEFBD4  BL	__irgrid2_driver__pow+0
0x2E88	0x9008    STR	R0, [SP, #32]
0x2E8A	0x9A08    LDR	R2, [SP, #32]
0x2E8C	0x980B    LDR	R0, [SP, #44]
0x2E8E	0xF7FEFC95  BL	__Div_FP+0
0x2E92	0x9A0C    LDR	R2, [SP, #48]
0x2E94	0x6010    STR	R0, [R2, #0]
;__irgrid2_driver.c, 705 :: 		alphaSP[1] = (eeData[57] & 0xFC00) >> 10;
0x2E96	0xAA01    ADD	R2, SP, #4
0x2E98	0x920C    STR	R2, [SP, #48]
0x2E9A	0x1D12    ADDS	R2, R2, #4
0x2E9C	0x920B    STR	R2, [SP, #44]
0x2E9E	0x9A06    LDR	R2, [SP, #24]
0x2EA0	0x3272    ADDS	R2, #114
0x2EA2	0x8812    LDRH	R2, [R2, #0]
0x2EA4	0xF402427C  AND	R2, R2, #64512
0x2EA8	0xB292    UXTH	R2, R2
0x2EAA	0x0A92    LSRS	R2, R2, #10
0x2EAC	0xB292    UXTH	R2, R2
0x2EAE	0xB290    UXTH	R0, R2
0x2EB0	0xF7FEFC6E  BL	__UnsignedIntegralToFloat+0
0x2EB4	0x9A0B    LDR	R2, [SP, #44]
0x2EB6	0x6010    STR	R0, [R2, #0]
;__irgrid2_driver.c, 706 :: 		if (alphaSP[1] > 31)
0x2EB8	0x9A0C    LDR	R2, [SP, #48]
0x2EBA	0x1D12    ADDS	R2, R2, #4
0x2EBC	0x6812    LDR	R2, [R2, #0]
0x2EBE	0x485B    LDR	R0, [PC, #364]
0x2EC0	0xF7FEFD50  BL	__Compare_FP+0
0x2EC4	0xF2400000  MOVW	R0, #0
0x2EC8	0xDA00    BGE	L___irgrid2_driver_ExtractCPParameters288
0x2ECA	0x2001    MOVS	R0, #1
L___irgrid2_driver_ExtractCPParameters288:
0x2ECC	0xB150    CBZ	R0, L___irgrid2_driver_ExtractCPParameters103
;__irgrid2_driver.c, 708 :: 		alphaSP[1] = alphaSP[1] - 64;
0x2ECE	0xAB01    ADD	R3, SP, #4
0x2ED0	0x1D1A    ADDS	R2, R3, #4
0x2ED2	0x920B    STR	R2, [SP, #44]
0x2ED4	0x1D1A    ADDS	R2, R3, #4
0x2ED6	0x6810    LDR	R0, [R2, #0]
0x2ED8	0xF04F4285  MOV	R2, #1115684864
0x2EDC	0xF7FEFCC0  BL	__Sub_FP+0
0x2EE0	0x9A0B    LDR	R2, [SP, #44]
0x2EE2	0x6010    STR	R0, [R2, #0]
;__irgrid2_driver.c, 709 :: 		}
L___irgrid2_driver_ExtractCPParameters103:
;__irgrid2_driver.c, 710 :: 		alphaSP[1] = (1 + alphaSP[1]/128) * alphaSP[0];
0x2EE4	0xAB01    ADD	R3, SP, #4
0x2EE6	0x930C    STR	R3, [SP, #48]
0x2EE8	0x1D1A    ADDS	R2, R3, #4
0x2EEA	0x920B    STR	R2, [SP, #44]
0x2EEC	0x1D1A    ADDS	R2, R3, #4
0x2EEE	0x6810    LDR	R0, [R2, #0]
0x2EF0	0xF04F4286  MOV	R2, #1124073472
0x2EF4	0xF7FEFC62  BL	__Div_FP+0
0x2EF8	0xF04F527E  MOV	R2, #1065353216
0x2EFC	0xF7FDFB3C  BL	__Add_FP+0
0x2F00	0x9A0C    LDR	R2, [SP, #48]
0x2F02	0x6812    LDR	R2, [R2, #0]
0x2F04	0xF7FDFC0C  BL	__Mul_FP+0
0x2F08	0x9A0B    LDR	R2, [SP, #44]
0x2F0A	0x6010    STR	R0, [R2, #0]
;__irgrid2_driver.c, 712 :: 		cpKta = (eeData[59] & 0x00FF);
0x2F0C	0x9A06    LDR	R2, [SP, #24]
0x2F0E	0x3276    ADDS	R2, #118
0x2F10	0x8812    LDRH	R2, [R2, #0]
0x2F12	0xF00202FF  AND	R2, R2, #255
0x2F16	0xB292    UXTH	R2, R2
0x2F18	0xB290    UXTH	R0, R2
0x2F1A	0xF7FEFC39  BL	__UnsignedIntegralToFloat+0
0x2F1E	0x9005    STR	R0, [SP, #20]
;__irgrid2_driver.c, 713 :: 		if (cpKta > 127)
0x2F20	0x4A43    LDR	R2, [PC, #268]
0x2F22	0xF7FEFD1F  BL	__Compare_FP+0
0x2F26	0xF2400000  MOVW	R0, #0
0x2F2A	0xDD00    BLE	L___irgrid2_driver_ExtractCPParameters289
0x2F2C	0x2001    MOVS	R0, #1
L___irgrid2_driver_ExtractCPParameters289:
0x2F2E	0xB128    CBZ	R0, L___irgrid2_driver_ExtractCPParameters104
;__irgrid2_driver.c, 715 :: 		cpKta = cpKta - 256;
0x2F30	0x9805    LDR	R0, [SP, #20]
0x2F32	0xF04F4287  MOV	R2, #1132462080
0x2F36	0xF7FEFC93  BL	__Sub_FP+0
0x2F3A	0x9005    STR	R0, [SP, #20]
;__irgrid2_driver.c, 716 :: 		}
L___irgrid2_driver_ExtractCPParameters104:
;__irgrid2_driver.c, 717 :: 		ktaScale1 = ((eeData[56] & 0x00F0) >> 4) + 8;
0x2F3C	0x9A06    LDR	R2, [SP, #24]
0x2F3E	0x3270    ADDS	R2, #112
0x2F40	0x8812    LDRH	R2, [R2, #0]
0x2F42	0xF00202F0  AND	R2, R2, #240
0x2F46	0xB292    UXTH	R2, R2
0x2F48	0x0912    LSRS	R2, R2, #4
0x2F4A	0xB292    UXTH	R2, R2
0x2F4C	0xF2020308  ADDW	R3, R2, #8
0x2F50	0xB29B    UXTH	R3, R3
;__irgrid2_driver.c, 718 :: 		mlx90640->cpKta = cpKta / _pow(2,(double)ktaScale1);
0x2F52	0x9A07    LDR	R2, [SP, #28]
0x2F54	0x3220    ADDS	R2, #32
0x2F56	0x920B    STR	R2, [SP, #44]
0x2F58	0xB2D8    UXTB	R0, R3
0x2F5A	0xF7FEFC19  BL	__UnsignedIntegralToFloat+0
0x2F5E	0x4601    MOV	R1, R0
0x2F60	0xF04F4080  MOV	R0, #1073741824
0x2F64	0xF7FEFB64  BL	__irgrid2_driver__pow+0
0x2F68	0x9008    STR	R0, [SP, #32]
0x2F6A	0x9A08    LDR	R2, [SP, #32]
0x2F6C	0x9805    LDR	R0, [SP, #20]
0x2F6E	0xF7FEFC25  BL	__Div_FP+0
0x2F72	0x9A0B    LDR	R2, [SP, #44]
0x2F74	0x6010    STR	R0, [R2, #0]
;__irgrid2_driver.c, 720 :: 		cpKv = (eeData[59] & 0xFF00) >> 8;
0x2F76	0x9A06    LDR	R2, [SP, #24]
0x2F78	0x3276    ADDS	R2, #118
0x2F7A	0x8812    LDRH	R2, [R2, #0]
0x2F7C	0xF402427F  AND	R2, R2, #65280
0x2F80	0xB292    UXTH	R2, R2
0x2F82	0x0A12    LSRS	R2, R2, #8
0x2F84	0xB292    UXTH	R2, R2
0x2F86	0xB290    UXTH	R0, R2
0x2F88	0xF7FEFC02  BL	__UnsignedIntegralToFloat+0
0x2F8C	0x9004    STR	R0, [SP, #16]
;__irgrid2_driver.c, 721 :: 		if (cpKv > 127)
0x2F8E	0x4A28    LDR	R2, [PC, #160]
0x2F90	0xF7FEFCE8  BL	__Compare_FP+0
0x2F94	0xF2400000  MOVW	R0, #0
0x2F98	0xDD00    BLE	L___irgrid2_driver_ExtractCPParameters290
0x2F9A	0x2001    MOVS	R0, #1
L___irgrid2_driver_ExtractCPParameters290:
0x2F9C	0xB128    CBZ	R0, L___irgrid2_driver_ExtractCPParameters105
;__irgrid2_driver.c, 723 :: 		cpKv = cpKv - 256;
0x2F9E	0x9804    LDR	R0, [SP, #16]
0x2FA0	0xF04F4287  MOV	R2, #1132462080
0x2FA4	0xF7FEFC5C  BL	__Sub_FP+0
0x2FA8	0x9004    STR	R0, [SP, #16]
;__irgrid2_driver.c, 724 :: 		}
L___irgrid2_driver_ExtractCPParameters105:
;__irgrid2_driver.c, 725 :: 		kvScale = (eeData[56] & 0x0F00) >> 8;
0x2FAA	0x9A06    LDR	R2, [SP, #24]
0x2FAC	0x3270    ADDS	R2, #112
0x2FAE	0x8812    LDRH	R2, [R2, #0]
0x2FB0	0xF4026270  AND	R2, R2, #3840
0x2FB4	0xB292    UXTH	R2, R2
0x2FB6	0x0A13    LSRS	R3, R2, #8
0x2FB8	0xB29B    UXTH	R3, R3
;__irgrid2_driver.c, 726 :: 		mlx90640->cpKv = cpKv / _pow(2,(double)kvScale);
0x2FBA	0x9A07    LDR	R2, [SP, #28]
0x2FBC	0x321C    ADDS	R2, #28
0x2FBE	0x920B    STR	R2, [SP, #44]
0x2FC0	0xB2D8    UXTB	R0, R3
0x2FC2	0xF7FEFBE5  BL	__UnsignedIntegralToFloat+0
0x2FC6	0x4601    MOV	R1, R0
0x2FC8	0xF04F4080  MOV	R0, #1073741824
0x2FCC	0xF7FEFB30  BL	__irgrid2_driver__pow+0
0x2FD0	0x9008    STR	R0, [SP, #32]
0x2FD2	0x9A08    LDR	R2, [SP, #32]
0x2FD4	0x9804    LDR	R0, [SP, #16]
0x2FD6	0xF7FEFBF1  BL	__Div_FP+0
0x2FDA	0x9A0B    LDR	R2, [SP, #44]
0x2FDC	0x6010    STR	R0, [R2, #0]
;__irgrid2_driver.c, 728 :: 		mlx90640->cpAlpha[0] = alphaSP[0];
0x2FDE	0x9B07    LDR	R3, [SP, #28]
0x2FE0	0xF6422244  MOVW	R2, #10820
0x2FE4	0x189B    ADDS	R3, R3, R2
0x2FE6	0xAC01    ADD	R4, SP, #4
0x2FE8	0x6822    LDR	R2, [R4, #0]
0x2FEA	0x601A    STR	R2, [R3, #0]
;__irgrid2_driver.c, 729 :: 		mlx90640->cpAlpha[1] = alphaSP[1];
0x2FEC	0x9B07    LDR	R3, [SP, #28]
0x2FEE	0xF6422244  MOVW	R2, #10820
0x2FF2	0x189A    ADDS	R2, R3, R2
0x2FF4	0x1D13    ADDS	R3, R2, #4
0x2FF6	0x1D22    ADDS	R2, R4, #4
0x2FF8	0x6812    LDR	R2, [R2, #0]
0x2FFA	0x601A    STR	R2, [R3, #0]
;__irgrid2_driver.c, 730 :: 		mlx90640->cpOffset[0] = offsetSP[0];
0x2FFC	0x9B07    LDR	R3, [SP, #28]
0x2FFE	0xF642224C  MOVW	R2, #10828
0x3002	0x189B    ADDS	R3, R3, R2
0x3004	0xAC03    ADD	R4, SP, #12
0x3006	0xF9B42000  LDRSH	R2, [R4, #0]
0x300A	0x801A    STRH	R2, [R3, #0]
;__irgrid2_driver.c, 731 :: 		mlx90640->cpOffset[1] = offsetSP[1];
0x300C	0x9B07    LDR	R3, [SP, #28]
0x300E	0xF642224C  MOVW	R2, #10828
0x3012	0x189A    ADDS	R2, R3, R2
0x3014	0x1C93    ADDS	R3, R2, #2
0x3016	0x1CA2    ADDS	R2, R4, #2
0x3018	0xF9B22000  LDRSH	R2, [R2, #0]
0x301C	0x801A    STRH	R2, [R3, #0]
;__irgrid2_driver.c, 732 :: 		}
L_end_ExtractCPParameters:
0x301E	0xF8DDE000  LDR	LR, [SP, #0]
0x3022	0xB00D    ADD	SP, SP, #52
0x3024	0x4770    BX	LR
0x3026	0xBF00    NOP
0x3028	0x800043FF  	#1140817920
0x302C	0x000041F8  	#1106771968
0x3030	0x000042FE  	#1123942400
; end of __irgrid2_driver_ExtractCPParameters
__irgrid2_driver_ExtractCILCParameters:
;__irgrid2_driver.c, 734 :: 		static void ExtractCILCParameters(uint16_t *eeData, paramsMLX90640 *mlx90640)
; mlx90640 start address is: 4 (R1)
; eeData start address is: 0 (R0)
0x31F8	0xB086    SUB	SP, SP, #24
0x31FA	0xF8CDE000  STR	LR, [SP, #0]
0x31FE	0x4682    MOV	R10, R0
0x3200	0x4689    MOV	R9, R1
; mlx90640 end address is: 4 (R1)
; eeData end address is: 0 (R0)
; eeData start address is: 40 (R10)
; mlx90640 start address is: 36 (R9)
;__irgrid2_driver.c, 739 :: 		calibrationModeEE = (eeData[10] & 0x0800) >> 4;
0x3202	0xF10A0214  ADD	R2, R10, #20
0x3206	0x8812    LDRH	R2, [R2, #0]
0x3208	0xF4026200  AND	R2, R2, #2048
0x320C	0xB292    UXTH	R2, R2
0x320E	0x0912    LSRS	R2, R2, #4
;__irgrid2_driver.c, 740 :: 		calibrationModeEE = calibrationModeEE ^ 0x80;
0x3210	0xB2D2    UXTB	R2, R2
0x3212	0xF0820280  EOR	R2, R2, #128
; calibrationModeEE start address is: 44 (R11)
0x3216	0xFA5FFB82  UXTB	R11, R2
;__irgrid2_driver.c, 742 :: 		ilChessC[0] = (eeData[53] & 0x003F);
0x321A	0xAA01    ADD	R2, SP, #4
0x321C	0x9205    STR	R2, [SP, #20]
0x321E	0x9204    STR	R2, [SP, #16]
0x3220	0xF10A026A  ADD	R2, R10, #106
0x3224	0x8812    LDRH	R2, [R2, #0]
0x3226	0xF002023F  AND	R2, R2, #63
0x322A	0xB292    UXTH	R2, R2
0x322C	0xB290    UXTH	R0, R2
0x322E	0xF7FEFAAF  BL	__UnsignedIntegralToFloat+0
0x3232	0x9A04    LDR	R2, [SP, #16]
0x3234	0x6010    STR	R0, [R2, #0]
;__irgrid2_driver.c, 743 :: 		if (ilChessC[0] > 31)
0x3236	0x9A05    LDR	R2, [SP, #20]
0x3238	0x6812    LDR	R2, [R2, #0]
0x323A	0x4853    LDR	R0, [PC, #332]
0x323C	0xF7FEFB92  BL	__Compare_FP+0
0x3240	0xF2400000  MOVW	R0, #0
0x3244	0xDA00    BGE	L___irgrid2_driver_ExtractCILCParameters292
0x3246	0x2001    MOVS	R0, #1
L___irgrid2_driver_ExtractCILCParameters292:
0x3248	0xB148    CBZ	R0, L___irgrid2_driver_ExtractCILCParameters106
;__irgrid2_driver.c, 745 :: 		ilChessC[0] = ilChessC[0] - 64;
0x324A	0xAB01    ADD	R3, SP, #4
0x324C	0x461A    MOV	R2, R3
0x324E	0x9204    STR	R2, [SP, #16]
0x3250	0x6818    LDR	R0, [R3, #0]
0x3252	0xF04F4285  MOV	R2, #1115684864
0x3256	0xF7FEFB03  BL	__Sub_FP+0
0x325A	0x9A04    LDR	R2, [SP, #16]
0x325C	0x6010    STR	R0, [R2, #0]
;__irgrid2_driver.c, 746 :: 		}
L___irgrid2_driver_ExtractCILCParameters106:
;__irgrid2_driver.c, 747 :: 		ilChessC[0] = ilChessC[0] / 16.0f;
0x325E	0xAB01    ADD	R3, SP, #4
0x3260	0x9305    STR	R3, [SP, #20]
0x3262	0x461A    MOV	R2, R3
0x3264	0x9204    STR	R2, [SP, #16]
0x3266	0x6818    LDR	R0, [R3, #0]
0x3268	0xF04F4283  MOV	R2, #1098907648
0x326C	0xF7FEFAA6  BL	__Div_FP+0
0x3270	0x9A04    LDR	R2, [SP, #16]
0x3272	0x6010    STR	R0, [R2, #0]
;__irgrid2_driver.c, 749 :: 		ilChessC[1] = (eeData[53] & 0x07C0) >> 6;
0x3274	0x9A05    LDR	R2, [SP, #20]
0x3276	0x1D12    ADDS	R2, R2, #4
0x3278	0x9204    STR	R2, [SP, #16]
0x327A	0xF10A026A  ADD	R2, R10, #106
0x327E	0x8812    LDRH	R2, [R2, #0]
0x3280	0xF40262F8  AND	R2, R2, #1984
0x3284	0xB292    UXTH	R2, R2
0x3286	0x0992    LSRS	R2, R2, #6
0x3288	0xB292    UXTH	R2, R2
0x328A	0xB290    UXTH	R0, R2
0x328C	0xF7FEFA80  BL	__UnsignedIntegralToFloat+0
0x3290	0x9A04    LDR	R2, [SP, #16]
0x3292	0x6010    STR	R0, [R2, #0]
;__irgrid2_driver.c, 750 :: 		if (ilChessC[1] > 15)
0x3294	0x9A05    LDR	R2, [SP, #20]
0x3296	0x1D12    ADDS	R2, R2, #4
0x3298	0x6812    LDR	R2, [R2, #0]
0x329A	0x483C    LDR	R0, [PC, #240]
0x329C	0xF7FEFB62  BL	__Compare_FP+0
0x32A0	0xF2400000  MOVW	R0, #0
0x32A4	0xDA00    BGE	L___irgrid2_driver_ExtractCILCParameters293
0x32A6	0x2001    MOVS	R0, #1
L___irgrid2_driver_ExtractCILCParameters293:
0x32A8	0xB150    CBZ	R0, L___irgrid2_driver_ExtractCILCParameters107
;__irgrid2_driver.c, 752 :: 		ilChessC[1] = ilChessC[1] - 32;
0x32AA	0xAB01    ADD	R3, SP, #4
0x32AC	0x1D1A    ADDS	R2, R3, #4
0x32AE	0x9204    STR	R2, [SP, #16]
0x32B0	0x1D1A    ADDS	R2, R3, #4
0x32B2	0x6810    LDR	R0, [R2, #0]
0x32B4	0xF04F4284  MOV	R2, #1107296256
0x32B8	0xF7FEFAD2  BL	__Sub_FP+0
0x32BC	0x9A04    LDR	R2, [SP, #16]
0x32BE	0x6010    STR	R0, [R2, #0]
;__irgrid2_driver.c, 753 :: 		}
L___irgrid2_driver_ExtractCILCParameters107:
;__irgrid2_driver.c, 754 :: 		ilChessC[1] = ilChessC[1] / 2.0f;
0x32C0	0xAB01    ADD	R3, SP, #4
0x32C2	0x9305    STR	R3, [SP, #20]
0x32C4	0x1D1A    ADDS	R2, R3, #4
0x32C6	0x9204    STR	R2, [SP, #16]
0x32C8	0x1D1A    ADDS	R2, R3, #4
0x32CA	0x6810    LDR	R0, [R2, #0]
0x32CC	0xF04F4280  MOV	R2, #1073741824
0x32D0	0xF7FEFA74  BL	__Div_FP+0
0x32D4	0x9A04    LDR	R2, [SP, #16]
0x32D6	0x6010    STR	R0, [R2, #0]
;__irgrid2_driver.c, 756 :: 		ilChessC[2] = (eeData[53] & 0xF800) >> 11;
0x32D8	0x9A05    LDR	R2, [SP, #20]
0x32DA	0x3208    ADDS	R2, #8
0x32DC	0x9204    STR	R2, [SP, #16]
0x32DE	0xF10A026A  ADD	R2, R10, #106
; eeData end address is: 40 (R10)
0x32E2	0x8812    LDRH	R2, [R2, #0]
0x32E4	0xF4024278  AND	R2, R2, #63488
0x32E8	0xB292    UXTH	R2, R2
0x32EA	0x0AD2    LSRS	R2, R2, #11
0x32EC	0xB292    UXTH	R2, R2
0x32EE	0xB290    UXTH	R0, R2
0x32F0	0xF7FEFA4E  BL	__UnsignedIntegralToFloat+0
0x32F4	0x9A04    LDR	R2, [SP, #16]
0x32F6	0x6010    STR	R0, [R2, #0]
;__irgrid2_driver.c, 757 :: 		if (ilChessC[2] > 15)
0x32F8	0x9A05    LDR	R2, [SP, #20]
0x32FA	0x3208    ADDS	R2, #8
0x32FC	0x6812    LDR	R2, [R2, #0]
0x32FE	0x4823    LDR	R0, [PC, #140]
0x3300	0xF7FEFB30  BL	__Compare_FP+0
0x3304	0xF2400000  MOVW	R0, #0
0x3308	0xDA00    BGE	L___irgrid2_driver_ExtractCILCParameters294
0x330A	0x2001    MOVS	R0, #1
L___irgrid2_driver_ExtractCILCParameters294:
0x330C	0xB160    CBZ	R0, L___irgrid2_driver_ExtractCILCParameters108
;__irgrid2_driver.c, 759 :: 		ilChessC[2] = ilChessC[2] - 32;
0x330E	0xAB01    ADD	R3, SP, #4
0x3310	0xF2030208  ADDW	R2, R3, #8
0x3314	0x9204    STR	R2, [SP, #16]
0x3316	0xF2030208  ADDW	R2, R3, #8
0x331A	0x6810    LDR	R0, [R2, #0]
0x331C	0xF04F4284  MOV	R2, #1107296256
0x3320	0xF7FEFA9E  BL	__Sub_FP+0
0x3324	0x9A04    LDR	R2, [SP, #16]
0x3326	0x6010    STR	R0, [R2, #0]
;__irgrid2_driver.c, 760 :: 		}
L___irgrid2_driver_ExtractCILCParameters108:
;__irgrid2_driver.c, 761 :: 		ilChessC[2] = ilChessC[2] / 8.0f;
0x3328	0xAB01    ADD	R3, SP, #4
0x332A	0x9305    STR	R3, [SP, #20]
0x332C	0xF2030208  ADDW	R2, R3, #8
0x3330	0x9204    STR	R2, [SP, #16]
0x3332	0xF2030208  ADDW	R2, R3, #8
0x3336	0x6810    LDR	R0, [R2, #0]
0x3338	0xF04F4282  MOV	R2, #1090519040
0x333C	0xF7FEFA3E  BL	__Div_FP+0
0x3340	0x9A04    LDR	R2, [SP, #16]
0x3342	0x6010    STR	R0, [R2, #0]
;__irgrid2_driver.c, 763 :: 		mlx90640->calibrationModeEE = calibrationModeEE;
0x3344	0xF1090225  ADD	R2, R9, #37
0x3348	0xF882B000  STRB	R11, [R2, #0]
; calibrationModeEE end address is: 44 (R11)
;__irgrid2_driver.c, 764 :: 		mlx90640->ilChessC[0] = ilChessC[0];
0x334C	0xF6422250  MOVW	R2, #10832
0x3350	0xEB090302  ADD	R3, R9, R2, LSL #0
0x3354	0x9C05    LDR	R4, [SP, #20]
0x3356	0x6822    LDR	R2, [R4, #0]
0x3358	0x601A    STR	R2, [R3, #0]
;__irgrid2_driver.c, 765 :: 		mlx90640->ilChessC[1] = ilChessC[1];
0x335A	0xF6422250  MOVW	R2, #10832
0x335E	0xEB090202  ADD	R2, R9, R2, LSL #0
0x3362	0x1D13    ADDS	R3, R2, #4
0x3364	0x1D22    ADDS	R2, R4, #4
0x3366	0x6812    LDR	R2, [R2, #0]
0x3368	0x601A    STR	R2, [R3, #0]
;__irgrid2_driver.c, 766 :: 		mlx90640->ilChessC[2] = ilChessC[2];
0x336A	0xF6422250  MOVW	R2, #10832
0x336E	0xEB090202  ADD	R2, R9, R2, LSL #0
; mlx90640 end address is: 36 (R9)
0x3372	0xF2020308  ADDW	R3, R2, #8
0x3376	0xF2040208  ADDW	R2, R4, #8
0x337A	0x6812    LDR	R2, [R2, #0]
0x337C	0x601A    STR	R2, [R3, #0]
;__irgrid2_driver.c, 767 :: 		}
L_end_ExtractCILCParameters:
0x337E	0xF8DDE000  LDR	LR, [SP, #0]
0x3382	0xB006    ADD	SP, SP, #24
0x3384	0x4770    BX	LR
0x3386	0xBF00    NOP
0x3388	0x000041F8  	#1106771968
0x338C	0x00004170  	#1097859072
; end of __irgrid2_driver_ExtractCILCParameters
__irgrid2_driver_ExtractDeviatingPixels:
;__irgrid2_driver.c, 790 :: 		static int ExtractDeviatingPixels(uint16_t *eeData, paramsMLX90640 *mlx90640)
; mlx90640 start address is: 4 (R1)
; eeData start address is: 0 (R0)
0x33AC	0xB082    SUB	SP, SP, #8
0x33AE	0xF8CDE000  STR	LR, [SP, #0]
; mlx90640 end address is: 4 (R1)
; eeData end address is: 0 (R0)
; eeData start address is: 0 (R0)
; mlx90640 start address is: 4 (R1)
;__irgrid2_driver.c, 792 :: 		uint16_t pixCnt = 0;
;__irgrid2_driver.c, 793 :: 		uint16_t brokenPixCnt = 0;
; brokenPixCnt start address is: 24 (R6)
0x33B2	0xF2400600  MOVW	R6, #0
;__irgrid2_driver.c, 794 :: 		uint16_t outlierPixCnt = 0;
; outlierPixCnt start address is: 8 (R2)
0x33B6	0xF2400200  MOVW	R2, #0
;__irgrid2_driver.c, 795 :: 		int warn = 0;
; warn start address is: 12 (R3)
0x33BA	0xF2400300  MOVW	R3, #0
0x33BE	0xB21B    SXTH	R3, R3
;__irgrid2_driver.c, 798 :: 		for(pixCnt = 0; pixCnt<5; pixCnt++)
; pixCnt start address is: 28 (R7)
0x33C0	0x2700    MOVS	R7, #0
; eeData end address is: 0 (R0)
; mlx90640 end address is: 4 (R1)
; outlierPixCnt end address is: 8 (R2)
; warn end address is: 12 (R3)
; pixCnt end address is: 28 (R7)
; brokenPixCnt end address is: 24 (R6)
0x33C2	0x4605    MOV	R5, R0
0x33C4	0xB290    UXTH	R0, R2
0x33C6	0x460C    MOV	R4, R1
0x33C8	0xB219    SXTH	R1, R3
L___irgrid2_driver_ExtractDeviatingPixels118:
; pixCnt start address is: 28 (R7)
; warn start address is: 4 (R1)
; outlierPixCnt start address is: 0 (R0)
; brokenPixCnt start address is: 24 (R6)
; mlx90640 start address is: 16 (R4)
; eeData start address is: 20 (R5)
0x33CA	0x2F05    CMP	R7, #5
0x33CC	0xD212    BCS	L___irgrid2_driver_ExtractDeviatingPixels119
;__irgrid2_driver.c, 800 :: 		mlx90640->brokenPixels[pixCnt] = 0xFFFF;
0x33CE	0xF642225C  MOVW	R2, #10844
0x33D2	0x18A3    ADDS	R3, R4, R2
0x33D4	0x007A    LSLS	R2, R7, #1
0x33D6	0x189B    ADDS	R3, R3, R2
0x33D8	0xF64F72FF  MOVW	R2, #65535
0x33DC	0x801A    STRH	R2, [R3, #0]
;__irgrid2_driver.c, 801 :: 		mlx90640->outlierPixels[pixCnt] = 0xFFFF;
0x33DE	0xF6422266  MOVW	R2, #10854
0x33E2	0x18A3    ADDS	R3, R4, R2
0x33E4	0x007A    LSLS	R2, R7, #1
0x33E6	0x189B    ADDS	R3, R3, R2
0x33E8	0xF64F72FF  MOVW	R2, #65535
0x33EC	0x801A    STRH	R2, [R3, #0]
;__irgrid2_driver.c, 798 :: 		for(pixCnt = 0; pixCnt<5; pixCnt++)
0x33EE	0x1C7F    ADDS	R7, R7, #1
0x33F0	0xB2BF    UXTH	R7, R7
;__irgrid2_driver.c, 802 :: 		}
; pixCnt end address is: 28 (R7)
0x33F2	0xE7EA    B	L___irgrid2_driver_ExtractDeviatingPixels118
L___irgrid2_driver_ExtractDeviatingPixels119:
;__irgrid2_driver.c, 804 :: 		pixCnt = 0;
; pixCnt start address is: 8 (R2)
0x33F4	0x2200    MOVS	R2, #0
; outlierPixCnt end address is: 0 (R0)
; mlx90640 end address is: 16 (R4)
; eeData end address is: 20 (R5)
; pixCnt end address is: 8 (R2)
; brokenPixCnt end address is: 24 (R6)
; warn end address is: 4 (R1)
0x33F6	0xB287    UXTH	R7, R0
0x33F8	0x4620    MOV	R0, R4
0x33FA	0x462C    MOV	R4, R5
0x33FC	0xB295    UXTH	R5, R2
;__irgrid2_driver.c, 805 :: 		while (pixCnt < 768 && brokenPixCnt < 5 && outlierPixCnt < 5)
L___irgrid2_driver_ExtractDeviatingPixels121:
; pixCnt start address is: 20 (R5)
; eeData start address is: 16 (R4)
; eeData start address is: 16 (R4)
; eeData end address is: 16 (R4)
; mlx90640 start address is: 0 (R0)
; brokenPixCnt start address is: 24 (R6)
; outlierPixCnt start address is: 28 (R7)
; warn start address is: 4 (R1)
0x33FE	0xF5B57F40  CMP	R5, #768
0x3402	0xD22A    BCS	L___irgrid2_driver_ExtractDeviatingPixels234
; eeData end address is: 16 (R4)
; eeData start address is: 16 (R4)
0x3404	0x2E05    CMP	R6, #5
0x3406	0xD228    BCS	L___irgrid2_driver_ExtractDeviatingPixels233
0x3408	0x2F05    CMP	R7, #5
0x340A	0xD226    BCS	L___irgrid2_driver_ExtractDeviatingPixels232
L___irgrid2_driver_ExtractDeviatingPixels231:
;__irgrid2_driver.c, 807 :: 		if(eeData[pixCnt+64] == 0)
0x340C	0xF2050240  ADDW	R2, R5, #64
0x3410	0xB292    UXTH	R2, R2
0x3412	0x0052    LSLS	R2, R2, #1
0x3414	0x18A2    ADDS	R2, R4, R2
0x3416	0x8812    LDRH	R2, [R2, #0]
0x3418	0xB942    CBNZ	R2, L___irgrid2_driver_ExtractDeviatingPixels125
;__irgrid2_driver.c, 809 :: 		mlx90640->brokenPixels[brokenPixCnt] = pixCnt;
0x341A	0xF642225C  MOVW	R2, #10844
0x341E	0x1883    ADDS	R3, R0, R2
0x3420	0x0072    LSLS	R2, R6, #1
0x3422	0x189A    ADDS	R2, R3, R2
0x3424	0x8015    STRH	R5, [R2, #0]
;__irgrid2_driver.c, 810 :: 		brokenPixCnt = brokenPixCnt + 1;
0x3426	0x1C76    ADDS	R6, R6, #1
0x3428	0xB2B6    UXTH	R6, R6
;__irgrid2_driver.c, 811 :: 		}
0x342A	0xE013    B	L___irgrid2_driver_ExtractDeviatingPixels126
L___irgrid2_driver_ExtractDeviatingPixels125:
;__irgrid2_driver.c, 812 :: 		else if((eeData[pixCnt+64] & 0x0001) != 0)
0x342C	0xF2050240  ADDW	R2, R5, #64
0x3430	0xB292    UXTH	R2, R2
0x3432	0x0052    LSLS	R2, R2, #1
0x3434	0x18A2    ADDS	R2, R4, R2
0x3436	0x8812    LDRH	R2, [R2, #0]
0x3438	0xF0020201  AND	R2, R2, #1
0x343C	0xB292    UXTH	R2, R2
0x343E	0xB14A    CBZ	R2, L___irgrid2_driver_ExtractDeviatingPixels235
;__irgrid2_driver.c, 814 :: 		mlx90640->outlierPixels[outlierPixCnt] = pixCnt;
0x3440	0xF6422266  MOVW	R2, #10854
0x3444	0x1883    ADDS	R3, R0, R2
0x3446	0x007A    LSLS	R2, R7, #1
0x3448	0x189A    ADDS	R2, R3, R2
0x344A	0x8015    STRH	R5, [R2, #0]
;__irgrid2_driver.c, 815 :: 		outlierPixCnt = outlierPixCnt + 1;
0x344C	0x1C7A    ADDS	R2, R7, #1
; outlierPixCnt end address is: 28 (R7)
; outlierPixCnt start address is: 12 (R3)
0x344E	0xB293    UXTH	R3, R2
; outlierPixCnt end address is: 12 (R3)
0x3450	0xB29F    UXTH	R7, R3
;__irgrid2_driver.c, 816 :: 		}
0x3452	0xE7FF    B	L___irgrid2_driver_ExtractDeviatingPixels127
L___irgrid2_driver_ExtractDeviatingPixels235:
;__irgrid2_driver.c, 812 :: 		else if((eeData[pixCnt+64] & 0x0001) != 0)
;__irgrid2_driver.c, 816 :: 		}
L___irgrid2_driver_ExtractDeviatingPixels127:
; outlierPixCnt start address is: 28 (R7)
; brokenPixCnt end address is: 24 (R6)
; outlierPixCnt end address is: 28 (R7)
L___irgrid2_driver_ExtractDeviatingPixels126:
;__irgrid2_driver.c, 818 :: 		pixCnt = pixCnt + 1;
; outlierPixCnt start address is: 28 (R7)
; brokenPixCnt start address is: 24 (R6)
0x3454	0x1C6D    ADDS	R5, R5, #1
0x3456	0xB2AD    UXTH	R5, R5
;__irgrid2_driver.c, 820 :: 		}
; eeData end address is: 16 (R4)
; pixCnt end address is: 20 (R5)
0x3458	0xE7D1    B	L___irgrid2_driver_ExtractDeviatingPixels121
;__irgrid2_driver.c, 805 :: 		while (pixCnt < 768 && brokenPixCnt < 5 && outlierPixCnt < 5)
L___irgrid2_driver_ExtractDeviatingPixels234:
L___irgrid2_driver_ExtractDeviatingPixels233:
L___irgrid2_driver_ExtractDeviatingPixels232:
;__irgrid2_driver.c, 822 :: 		if(brokenPixCnt > 4)
0x345A	0x2E04    CMP	R6, #4
0x345C	0xD903    BLS	L___irgrid2_driver_ExtractDeviatingPixels128
; mlx90640 end address is: 0 (R0)
; brokenPixCnt end address is: 24 (R6)
; outlierPixCnt end address is: 28 (R7)
; warn end address is: 4 (R1)
;__irgrid2_driver.c, 824 :: 		warn = -3;
; warn start address is: 0 (R0)
0x345E	0xF64F70FD  MOVW	R0, #65533
0x3462	0xB200    SXTH	R0, R0
;__irgrid2_driver.c, 825 :: 		}
; warn end address is: 0 (R0)
0x3464	0xE091    B	L___irgrid2_driver_ExtractDeviatingPixels129
L___irgrid2_driver_ExtractDeviatingPixels128:
;__irgrid2_driver.c, 826 :: 		else if(outlierPixCnt > 4)
; warn start address is: 4 (R1)
; outlierPixCnt start address is: 28 (R7)
; brokenPixCnt start address is: 24 (R6)
; mlx90640 start address is: 0 (R0)
0x3466	0x2F04    CMP	R7, #4
0x3468	0xD903    BLS	L___irgrid2_driver_ExtractDeviatingPixels130
; mlx90640 end address is: 0 (R0)
; brokenPixCnt end address is: 24 (R6)
; outlierPixCnt end address is: 28 (R7)
; warn end address is: 4 (R1)
;__irgrid2_driver.c, 828 :: 		warn = -4;
; warn start address is: 0 (R0)
0x346A	0xF64F70FC  MOVW	R0, #65532
0x346E	0xB200    SXTH	R0, R0
;__irgrid2_driver.c, 829 :: 		}
; warn end address is: 0 (R0)
0x3470	0xE08B    B	L___irgrid2_driver_ExtractDeviatingPixels131
L___irgrid2_driver_ExtractDeviatingPixels130:
;__irgrid2_driver.c, 830 :: 		else if((brokenPixCnt + outlierPixCnt) > 4)
; warn start address is: 4 (R1)
; outlierPixCnt start address is: 28 (R7)
; brokenPixCnt start address is: 24 (R6)
; mlx90640 start address is: 0 (R0)
0x3472	0x19F2    ADDS	R2, R6, R7
0x3474	0xB292    UXTH	R2, R2
0x3476	0x2A04    CMP	R2, #4
0x3478	0xD903    BLS	L___irgrid2_driver_ExtractDeviatingPixels132
; mlx90640 end address is: 0 (R0)
; brokenPixCnt end address is: 24 (R6)
; outlierPixCnt end address is: 28 (R7)
; warn end address is: 4 (R1)
;__irgrid2_driver.c, 832 :: 		warn = -5;
; warn start address is: 0 (R0)
0x347A	0xF64F70FB  MOVW	R0, #65531
0x347E	0xB200    SXTH	R0, R0
;__irgrid2_driver.c, 833 :: 		}
; warn end address is: 0 (R0)
0x3480	0xE083    B	L___irgrid2_driver_ExtractDeviatingPixels133
L___irgrid2_driver_ExtractDeviatingPixels132:
;__irgrid2_driver.c, 836 :: 		for(pixCnt=0; pixCnt<brokenPixCnt; pixCnt++)
; warn start address is: 4 (R1)
; outlierPixCnt start address is: 28 (R7)
; brokenPixCnt start address is: 24 (R6)
; pixCnt start address is: 8 (R2)
; mlx90640 start address is: 0 (R0)
0x3482	0x2200    MOVS	R2, #0
; mlx90640 end address is: 0 (R0)
; pixCnt end address is: 8 (R2)
; brokenPixCnt end address is: 24 (R6)
; outlierPixCnt end address is: 28 (R7)
; warn end address is: 4 (R1)
0x3484	0xFA1FF887  UXTH	R8, R7
0x3488	0xB2B7    UXTH	R7, R6
0x348A	0x4606    MOV	R6, R0
0x348C	0xB290    UXTH	R0, R2
L___irgrid2_driver_ExtractDeviatingPixels134:
; pixCnt start address is: 0 (R0)
; warn start address is: 4 (R1)
; outlierPixCnt start address is: 32 (R8)
; brokenPixCnt start address is: 28 (R7)
; mlx90640 start address is: 24 (R6)
0x348E	0x42B8    CMP	R0, R7
0x3490	0xD21F    BCS	L___irgrid2_driver_ExtractDeviatingPixels135
;__irgrid2_driver.c, 838 :: 		for(i=pixCnt+1; i<brokenPixCnt; i++)
0x3492	0x1C45    ADDS	R5, R0, #1
0x3494	0xB22D    SXTH	R5, R5
; i start address is: 20 (R5)
; mlx90640 end address is: 24 (R6)
; outlierPixCnt end address is: 32 (R8)
; brokenPixCnt end address is: 28 (R7)
; i end address is: 20 (R5)
; pixCnt end address is: 0 (R0)
; warn end address is: 4 (R1)
0x3496	0xFA1FF980  UXTH	R9, R0
L___irgrid2_driver_ExtractDeviatingPixels137:
; i start address is: 20 (R5)
; mlx90640 start address is: 24 (R6)
; brokenPixCnt start address is: 28 (R7)
; outlierPixCnt start address is: 32 (R8)
; warn start address is: 4 (R1)
; pixCnt start address is: 36 (R9)
0x349A	0x42BD    CMP	R5, R7
0x349C	0xD215    BCS	L___irgrid2_driver_ExtractDeviatingPixels138
; warn end address is: 4 (R1)
;__irgrid2_driver.c, 840 :: 		warn = CheckAdjacentPixels(mlx90640->brokenPixels[pixCnt],mlx90640->brokenPixels[i]);
0x349E	0xF642225C  MOVW	R2, #10844
0x34A2	0x18B4    ADDS	R4, R6, R2
0x34A4	0x006A    LSLS	R2, R5, #1
0x34A6	0x18A2    ADDS	R2, R4, R2
0x34A8	0x8812    LDRH	R2, [R2, #0]
0x34AA	0xB293    UXTH	R3, R2
0x34AC	0xEA4F0249  LSL	R2, R9, #1
0x34B0	0x18A2    ADDS	R2, R4, R2
0x34B2	0x8812    LDRH	R2, [R2, #0]
0x34B4	0xB299    UXTH	R1, R3
0x34B6	0xB290    UXTH	R0, R2
0x34B8	0xF7FEF914  BL	__irgrid2_driver_CheckAdjacentPixels+0
; warn start address is: 4 (R1)
0x34BC	0xB201    SXTH	R1, R0
;__irgrid2_driver.c, 841 :: 		if(warn != 0)
0x34BE	0xB108    CBZ	R0, L___irgrid2_driver_ExtractDeviatingPixels140
; mlx90640 end address is: 24 (R6)
; outlierPixCnt end address is: 32 (R8)
; brokenPixCnt end address is: 28 (R7)
; i end address is: 20 (R5)
; pixCnt end address is: 36 (R9)
;__irgrid2_driver.c, 843 :: 		return warn;
0x34C0	0xB208    SXTH	R0, R1
; warn end address is: 4 (R1)
0x34C2	0xE062    B	L_end_ExtractDeviatingPixels
;__irgrid2_driver.c, 844 :: 		}
L___irgrid2_driver_ExtractDeviatingPixels140:
;__irgrid2_driver.c, 838 :: 		for(i=pixCnt+1; i<brokenPixCnt; i++)
; pixCnt start address is: 36 (R9)
; warn start address is: 4 (R1)
; i start address is: 20 (R5)
; brokenPixCnt start address is: 28 (R7)
; outlierPixCnt start address is: 32 (R8)
; mlx90640 start address is: 24 (R6)
0x34C4	0x1C6D    ADDS	R5, R5, #1
0x34C6	0xB22D    SXTH	R5, R5
;__irgrid2_driver.c, 845 :: 		}
; i end address is: 20 (R5)
0x34C8	0xE7E7    B	L___irgrid2_driver_ExtractDeviatingPixels137
L___irgrid2_driver_ExtractDeviatingPixels138:
;__irgrid2_driver.c, 836 :: 		for(pixCnt=0; pixCnt<brokenPixCnt; pixCnt++)
0x34CA	0xF1090001  ADD	R0, R9, #1
0x34CE	0xB280    UXTH	R0, R0
; pixCnt end address is: 36 (R9)
; pixCnt start address is: 0 (R0)
;__irgrid2_driver.c, 846 :: 		}
; pixCnt end address is: 0 (R0)
0x34D0	0xE7DD    B	L___irgrid2_driver_ExtractDeviatingPixels134
L___irgrid2_driver_ExtractDeviatingPixels135:
;__irgrid2_driver.c, 848 :: 		for(pixCnt=0; pixCnt<outlierPixCnt; pixCnt++)
; pixCnt start address is: 0 (R0)
0x34D2	0x2000    MOVS	R0, #0
; mlx90640 end address is: 24 (R6)
; outlierPixCnt end address is: 32 (R8)
; brokenPixCnt end address is: 28 (R7)
; pixCnt end address is: 0 (R0)
; warn end address is: 4 (R1)
0x34D4	0x9601    STR	R6, [SP, #4]
0x34D6	0xFA1FF688  UXTH	R6, R8
0x34DA	0xF8DD8004  LDR	R8, [SP, #4]
L___irgrid2_driver_ExtractDeviatingPixels141:
; pixCnt start address is: 0 (R0)
; mlx90640 start address is: 32 (R8)
; brokenPixCnt start address is: 28 (R7)
; outlierPixCnt start address is: 24 (R6)
; warn start address is: 4 (R1)
0x34DE	0x42B0    CMP	R0, R6
0x34E0	0xD220    BCS	L___irgrid2_driver_ExtractDeviatingPixels142
;__irgrid2_driver.c, 850 :: 		for(i=pixCnt+1; i<outlierPixCnt; i++)
0x34E2	0x1C45    ADDS	R5, R0, #1
0x34E4	0xB22D    SXTH	R5, R5
; i start address is: 20 (R5)
; outlierPixCnt end address is: 24 (R6)
; brokenPixCnt end address is: 28 (R7)
; mlx90640 end address is: 32 (R8)
; i end address is: 20 (R5)
; pixCnt end address is: 0 (R0)
; warn end address is: 4 (R1)
0x34E6	0xFA1FF980  UXTH	R9, R0
L___irgrid2_driver_ExtractDeviatingPixels144:
; i start address is: 20 (R5)
; warn start address is: 4 (R1)
; outlierPixCnt start address is: 24 (R6)
; brokenPixCnt start address is: 28 (R7)
; mlx90640 start address is: 32 (R8)
; pixCnt start address is: 36 (R9)
0x34EA	0x42B5    CMP	R5, R6
0x34EC	0xD216    BCS	L___irgrid2_driver_ExtractDeviatingPixels145
; warn end address is: 4 (R1)
;__irgrid2_driver.c, 852 :: 		warn = CheckAdjacentPixels(mlx90640->outlierPixels[pixCnt],mlx90640->outlierPixels[i]);
0x34EE	0xF6422266  MOVW	R2, #10854
0x34F2	0xEB080402  ADD	R4, R8, R2, LSL #0
0x34F6	0x006A    LSLS	R2, R5, #1
0x34F8	0x18A2    ADDS	R2, R4, R2
0x34FA	0x8812    LDRH	R2, [R2, #0]
0x34FC	0xB293    UXTH	R3, R2
0x34FE	0xEA4F0249  LSL	R2, R9, #1
0x3502	0x18A2    ADDS	R2, R4, R2
0x3504	0x8812    LDRH	R2, [R2, #0]
0x3506	0xB299    UXTH	R1, R3
0x3508	0xB290    UXTH	R0, R2
0x350A	0xF7FEF8EB  BL	__irgrid2_driver_CheckAdjacentPixels+0
; warn start address is: 4 (R1)
0x350E	0xB201    SXTH	R1, R0
;__irgrid2_driver.c, 853 :: 		if(warn != 0)
0x3510	0xB108    CBZ	R0, L___irgrid2_driver_ExtractDeviatingPixels147
; outlierPixCnt end address is: 24 (R6)
; brokenPixCnt end address is: 28 (R7)
; mlx90640 end address is: 32 (R8)
; i end address is: 20 (R5)
; pixCnt end address is: 36 (R9)
;__irgrid2_driver.c, 855 :: 		return warn;
0x3512	0xB208    SXTH	R0, R1
; warn end address is: 4 (R1)
0x3514	0xE039    B	L_end_ExtractDeviatingPixels
;__irgrid2_driver.c, 856 :: 		}
L___irgrid2_driver_ExtractDeviatingPixels147:
;__irgrid2_driver.c, 850 :: 		for(i=pixCnt+1; i<outlierPixCnt; i++)
; pixCnt start address is: 36 (R9)
; warn start address is: 4 (R1)
; i start address is: 20 (R5)
; mlx90640 start address is: 32 (R8)
; brokenPixCnt start address is: 28 (R7)
; outlierPixCnt start address is: 24 (R6)
0x3516	0x1C6D    ADDS	R5, R5, #1
0x3518	0xB22D    SXTH	R5, R5
;__irgrid2_driver.c, 857 :: 		}
; i end address is: 20 (R5)
0x351A	0xE7E6    B	L___irgrid2_driver_ExtractDeviatingPixels144
L___irgrid2_driver_ExtractDeviatingPixels145:
;__irgrid2_driver.c, 848 :: 		for(pixCnt=0; pixCnt<outlierPixCnt; pixCnt++)
0x351C	0xF1090201  ADD	R2, R9, #1
; pixCnt end address is: 36 (R9)
; pixCnt start address is: 0 (R0)
0x3520	0xB290    UXTH	R0, R2
;__irgrid2_driver.c, 858 :: 		}
; pixCnt end address is: 0 (R0)
0x3522	0xE7DC    B	L___irgrid2_driver_ExtractDeviatingPixels141
L___irgrid2_driver_ExtractDeviatingPixels142:
;__irgrid2_driver.c, 860 :: 		for(pixCnt=0; pixCnt<brokenPixCnt; pixCnt++)
; pixCnt start address is: 36 (R9)
0x3524	0xF2400900  MOVW	R9, #0
; outlierPixCnt end address is: 24 (R6)
; brokenPixCnt end address is: 28 (R7)
; mlx90640 end address is: 32 (R8)
; warn end address is: 4 (R1)
; pixCnt end address is: 36 (R9)
0x3528	0xF8AD6004  STRH	R6, [SP, #4]
0x352C	0x4645    MOV	R5, R8
0x352E	0xB2BE    UXTH	R6, R7
0x3530	0xB208    SXTH	R0, R1
0x3532	0xF8BD7004  LDRH	R7, [SP, #4]
L___irgrid2_driver_ExtractDeviatingPixels148:
; pixCnt start address is: 36 (R9)
; warn start address is: 0 (R0)
; outlierPixCnt start address is: 28 (R7)
; brokenPixCnt start address is: 24 (R6)
; mlx90640 start address is: 20 (R5)
0x3536	0x45B1    CMP	R9, R6
0x3538	0xD227    BCS	L___irgrid2_driver_ExtractDeviatingPixels149
;__irgrid2_driver.c, 862 :: 		for(i=0; i<outlierPixCnt; i++)
; i start address is: 32 (R8)
0x353A	0xF2400800  MOVW	R8, #0
0x353E	0xFA0FF888  SXTH	R8, R8
; mlx90640 end address is: 20 (R5)
; brokenPixCnt end address is: 24 (R6)
; outlierPixCnt end address is: 28 (R7)
; i end address is: 32 (R8)
; pixCnt end address is: 36 (R9)
; warn end address is: 0 (R0)
L___irgrid2_driver_ExtractDeviatingPixels151:
; i start address is: 32 (R8)
; mlx90640 start address is: 20 (R5)
; brokenPixCnt start address is: 24 (R6)
; outlierPixCnt start address is: 28 (R7)
; warn start address is: 0 (R0)
; pixCnt start address is: 36 (R9)
0x3542	0x45B8    CMP	R8, R7
0x3544	0xD21C    BCS	L___irgrid2_driver_ExtractDeviatingPixels152
; warn end address is: 0 (R0)
;__irgrid2_driver.c, 864 :: 		warn = CheckAdjacentPixels(mlx90640->brokenPixels[pixCnt],mlx90640->outlierPixels[i]);
0x3546	0xF6422266  MOVW	R2, #10854
0x354A	0x18AB    ADDS	R3, R5, R2
0x354C	0xEA4F0248  LSL	R2, R8, #1
0x3550	0x189A    ADDS	R2, R3, R2
0x3552	0x8812    LDRH	R2, [R2, #0]
0x3554	0xB294    UXTH	R4, R2
0x3556	0xF642225C  MOVW	R2, #10844
0x355A	0x18AB    ADDS	R3, R5, R2
0x355C	0xEA4F0249  LSL	R2, R9, #1
0x3560	0x189A    ADDS	R2, R3, R2
0x3562	0x8812    LDRH	R2, [R2, #0]
0x3564	0xB2A1    UXTH	R1, R4
0x3566	0xB290    UXTH	R0, R2
0x3568	0xF7FEF8BC  BL	__irgrid2_driver_CheckAdjacentPixels+0
; warn start address is: 4 (R1)
0x356C	0xB201    SXTH	R1, R0
;__irgrid2_driver.c, 865 :: 		if(warn != 0)
0x356E	0xB108    CBZ	R0, L___irgrid2_driver_ExtractDeviatingPixels154
; mlx90640 end address is: 20 (R5)
; brokenPixCnt end address is: 24 (R6)
; outlierPixCnt end address is: 28 (R7)
; i end address is: 32 (R8)
; pixCnt end address is: 36 (R9)
;__irgrid2_driver.c, 867 :: 		return warn;
0x3570	0xB208    SXTH	R0, R1
; warn end address is: 4 (R1)
0x3572	0xE00A    B	L_end_ExtractDeviatingPixels
;__irgrid2_driver.c, 868 :: 		}
L___irgrid2_driver_ExtractDeviatingPixels154:
;__irgrid2_driver.c, 862 :: 		for(i=0; i<outlierPixCnt; i++)
; pixCnt start address is: 36 (R9)
; i start address is: 32 (R8)
; warn start address is: 4 (R1)
; outlierPixCnt start address is: 28 (R7)
; brokenPixCnt start address is: 24 (R6)
; mlx90640 start address is: 20 (R5)
0x3574	0xF1080801  ADD	R8, R8, #1
0x3578	0xFA0FF888  SXTH	R8, R8
;__irgrid2_driver.c, 869 :: 		}
; warn end address is: 4 (R1)
; i end address is: 32 (R8)
0x357C	0xB208    SXTH	R0, R1
0x357E	0xE7E0    B	L___irgrid2_driver_ExtractDeviatingPixels151
L___irgrid2_driver_ExtractDeviatingPixels152:
;__irgrid2_driver.c, 860 :: 		for(pixCnt=0; pixCnt<brokenPixCnt; pixCnt++)
; warn start address is: 0 (R0)
0x3580	0xF1090901  ADD	R9, R9, #1
0x3584	0xFA1FF989  UXTH	R9, R9
;__irgrid2_driver.c, 870 :: 		}
; mlx90640 end address is: 20 (R5)
; brokenPixCnt end address is: 24 (R6)
; outlierPixCnt end address is: 28 (R7)
; pixCnt end address is: 36 (R9)
0x3588	0xE7D5    B	L___irgrid2_driver_ExtractDeviatingPixels148
L___irgrid2_driver_ExtractDeviatingPixels149:
;__irgrid2_driver.c, 872 :: 		}
L___irgrid2_driver_ExtractDeviatingPixels133:
; warn end address is: 0 (R0)
; warn start address is: 0 (R0)
; warn end address is: 0 (R0)
L___irgrid2_driver_ExtractDeviatingPixels131:
; warn start address is: 0 (R0)
; warn end address is: 0 (R0)
L___irgrid2_driver_ExtractDeviatingPixels129:
;__irgrid2_driver.c, 873 :: 		return warn;
; warn start address is: 0 (R0)
; warn end address is: 0 (R0)
;__irgrid2_driver.c, 874 :: 		}
L_end_ExtractDeviatingPixels:
0x358A	0xF8DDE000  LDR	LR, [SP, #0]
0x358E	0xB002    ADD	SP, SP, #8
0x3590	0x4770    BX	LR
; end of __irgrid2_driver_ExtractDeviatingPixels
__irgrid2_driver_CheckAdjacentPixels:
;__irgrid2_driver.c, 769 :: 		static int CheckAdjacentPixels(uint16_t pix1, uint16_t pix2)
; pix2 start address is: 4 (R1)
; pix1 start address is: 0 (R0)
; pix2 end address is: 4 (R1)
; pix1 end address is: 0 (R0)
; pix1 start address is: 0 (R0)
; pix2 start address is: 4 (R1)
;__irgrid2_driver.c, 773 :: 		pixPosDif = pix1 - pix2;
0x16E4	0x1A42    SUB	R2, R0, R1
; pix1 end address is: 0 (R0)
; pix2 end address is: 4 (R1)
; pixPosDif start address is: 0 (R0)
0x16E6	0xB210    SXTH	R0, R2
;__irgrid2_driver.c, 774 :: 		if(pixPosDif > -34 && pixPosDif < -30)
0x16E8	0xB213    SXTH	R3, R2
0x16EA	0xF06F0221  MVN	R2, #33
0x16EE	0x4293    CMP	R3, R2
0x16F0	0xDD07    BLE	L___irgrid2_driver_CheckAdjacentPixels226
0x16F2	0xF06F021D  MVN	R2, #29
0x16F6	0x4290    CMP	R0, R2
0x16F8	0xDA03    BGE	L___irgrid2_driver_CheckAdjacentPixels225
; pixPosDif end address is: 0 (R0)
L___irgrid2_driver_CheckAdjacentPixels224:
;__irgrid2_driver.c, 776 :: 		return -6;
0x16FA	0xF64F70FA  MOVW	R0, #65530
0x16FE	0xB200    SXTH	R0, R0
0x1700	0xE013    B	L_end_CheckAdjacentPixels
;__irgrid2_driver.c, 774 :: 		if(pixPosDif > -34 && pixPosDif < -30)
L___irgrid2_driver_CheckAdjacentPixels226:
; pixPosDif start address is: 0 (R0)
L___irgrid2_driver_CheckAdjacentPixels225:
;__irgrid2_driver.c, 778 :: 		if(pixPosDif > -2 && pixPosDif < 2)
0x1702	0xF06F0201  MVN	R2, #1
0x1706	0x4290    CMP	R0, R2
0x1708	0xDD05    BLE	L___irgrid2_driver_CheckAdjacentPixels228
0x170A	0x2802    CMP	R0, #2
0x170C	0xDA03    BGE	L___irgrid2_driver_CheckAdjacentPixels227
; pixPosDif end address is: 0 (R0)
L___irgrid2_driver_CheckAdjacentPixels223:
;__irgrid2_driver.c, 780 :: 		return -6;
0x170E	0xF64F70FA  MOVW	R0, #65530
0x1712	0xB200    SXTH	R0, R0
0x1714	0xE009    B	L_end_CheckAdjacentPixels
;__irgrid2_driver.c, 778 :: 		if(pixPosDif > -2 && pixPosDif < 2)
L___irgrid2_driver_CheckAdjacentPixels228:
; pixPosDif start address is: 0 (R0)
L___irgrid2_driver_CheckAdjacentPixels227:
;__irgrid2_driver.c, 782 :: 		if(pixPosDif > 30 && pixPosDif < 34)
0x1716	0x281E    CMP	R0, #30
0x1718	0xDD05    BLE	L___irgrid2_driver_CheckAdjacentPixels230
0x171A	0x2822    CMP	R0, #34
0x171C	0xDA03    BGE	L___irgrid2_driver_CheckAdjacentPixels229
; pixPosDif end address is: 0 (R0)
L___irgrid2_driver_CheckAdjacentPixels222:
;__irgrid2_driver.c, 784 :: 		return -6;
0x171E	0xF64F70FA  MOVW	R0, #65530
0x1722	0xB200    SXTH	R0, R0
0x1724	0xE001    B	L_end_CheckAdjacentPixels
;__irgrid2_driver.c, 782 :: 		if(pixPosDif > 30 && pixPosDif < 34)
L___irgrid2_driver_CheckAdjacentPixels230:
L___irgrid2_driver_CheckAdjacentPixels229:
;__irgrid2_driver.c, 787 :: 		return 0;
0x1726	0x2000    MOVS	R0, #0
0x1728	0xB200    SXTH	R0, R0
;__irgrid2_driver.c, 788 :: 		}
L_end_CheckAdjacentPixels:
0x172A	0x4770    BX	LR
; end of __irgrid2_driver_CheckAdjacentPixels
_irgrid2_setRefreshRate:
;__irgrid2_driver.c, 1081 :: 		void irgrid2_setRefreshRate(uint8_t refreshRate)
; refreshRate start address is: 0 (R0)
0x3F54	0xB082    SUB	SP, SP, #8
0x3F56	0xF8CDE000  STR	LR, [SP, #0]
; refreshRate end address is: 0 (R0)
; refreshRate start address is: 0 (R0)
;__irgrid2_driver.c, 1086 :: 		value = (refreshRate & 0x07)<<7;
0x3F5A	0xF0000107  AND	R1, R0, #7
0x3F5E	0xB2C9    UXTB	R1, R1
; refreshRate end address is: 0 (R0)
0x3F60	0x01C9    LSLS	R1, R1, #7
0x3F62	0xF8AD1006  STRH	R1, [SP, #6]
;__irgrid2_driver.c, 1087 :: 		irgrid2_readData(0x800D, 1, &controlRegister1);
0x3F66	0xA901    ADD	R1, SP, #4
0x3F68	0x460A    MOV	R2, R1
0x3F6A	0x2101    MOVS	R1, #1
0x3F6C	0xF248000D  MOVW	R0, #32781
0x3F70	0xF7FEFA36  BL	_irgrid2_readData+0
;__irgrid2_driver.c, 1088 :: 		value = (controlRegister1 & 0xFC7F) | value;
0x3F74	0xF8BD2004  LDRH	R2, [SP, #4]
0x3F78	0xF64F417F  MOVW	R1, #64639
0x3F7C	0x400A    ANDS	R2, R1
0x3F7E	0xB292    UXTH	R2, R2
0x3F80	0xF9BD1006  LDRSH	R1, [SP, #6]
0x3F84	0xEA420101  ORR	R1, R2, R1, LSL #0
;__irgrid2_driver.c, 1089 :: 		irgrid2_writeByte(0x800D, value);
0x3F88	0xB289    UXTH	R1, R1
0x3F8A	0xF248000D  MOVW	R0, #32781
0x3F8E	0xF7FFF851  BL	_irgrid2_writeByte+0
;__irgrid2_driver.c, 1090 :: 		}
L_end_irgrid2_setRefreshRate:
0x3F92	0xF8DDE000  LDR	LR, [SP, #0]
0x3F96	0xB002    ADD	SP, SP, #8
0x3F98	0x4770    BX	LR
; end of _irgrid2_setRefreshRate
_irgrid2_writeByte:
;__irgrid2_driver.c, 910 :: 		void irgrid2_writeByte(uint16_t reg, uint16_t _data)
; _data start address is: 4 (R1)
; reg start address is: 0 (R0)
0x3034	0xB082    SUB	SP, SP, #8
0x3036	0xF8CDE000  STR	LR, [SP, #0]
; _data end address is: 4 (R1)
; reg end address is: 0 (R0)
; reg start address is: 0 (R0)
; _data start address is: 4 (R1)
;__irgrid2_driver.c, 914 :: 		writeReg[ 0 ] = (uint8_t)(reg >> 8);
0x303A	0xAC01    ADD	R4, SP, #4
0x303C	0x0A02    LSRS	R2, R0, #8
0x303E	0xB2D2    UXTB	R2, R2
0x3040	0x7022    STRB	R2, [R4, #0]
;__irgrid2_driver.c, 915 :: 		writeReg[ 1 ] = (uint8_t)(reg & 0x00FF);
0x3042	0x1C63    ADDS	R3, R4, #1
0x3044	0xF00002FF  AND	R2, R0, #255
; reg end address is: 0 (R0)
0x3048	0xB2D2    UXTB	R2, R2
0x304A	0x701A    STRB	R2, [R3, #0]
;__irgrid2_driver.c, 916 :: 		writeReg[ 2 ] = (uint8_t)(_data >> 8);
0x304C	0x1CA3    ADDS	R3, R4, #2
0x304E	0x0A0A    LSRS	R2, R1, #8
0x3050	0xB2D2    UXTB	R2, R2
0x3052	0x701A    STRB	R2, [R3, #0]
;__irgrid2_driver.c, 917 :: 		writeReg[ 3 ] = (uint8_t)(_data & 0x00FF);
0x3054	0x1CE3    ADDS	R3, R4, #3
0x3056	0xF00102FF  AND	R2, R1, #255
; _data end address is: 4 (R1)
0x305A	0xB2D2    UXTB	R2, R2
0x305C	0x701A    STRB	R2, [R3, #0]
;__irgrid2_driver.c, 919 :: 		hal_i2cStart();
0x305E	0xF7FEFDE7  BL	__irgrid2_driver_hal_i2cStart+0
;__irgrid2_driver.c, 920 :: 		hal_i2cWrite(_slaveAddress, writeReg, 4, END_MODE_STOP);
0x3062	0xAB01    ADD	R3, SP, #4
0x3064	0x4A05    LDR	R2, [PC, #20]
0x3066	0x7812    LDRB	R2, [R2, #0]
0x3068	0x4619    MOV	R1, R3
0x306A	0x2301    MOVS	R3, #1
0x306C	0xB2D0    UXTB	R0, R2
0x306E	0x2204    MOVS	R2, #4
0x3070	0xF7FEFB7A  BL	__irgrid2_driver_hal_i2cWrite+0
;__irgrid2_driver.c, 921 :: 		}
L_end_irgrid2_writeByte:
0x3074	0xF8DDE000  LDR	LR, [SP, #0]
0x3078	0xB002    ADD	SP, SP, #8
0x307A	0x4770    BX	LR
0x307C	0x0CF62000  	__irgrid2_driver__slaveAddress+0
; end of _irgrid2_writeByte
_Delay_100ms:
;__Lib_Delays.c, 53 :: 		void Delay_100ms() {
;__Lib_Delays.c, 54 :: 		Delay_ms(100);
0x3FA0	0xF644777F  MOVW	R7, #20351
0x3FA4	0xF2C00712  MOVT	R7, #18
L_Delay_100ms20:
0x3FA8	0x1E7F    SUBS	R7, R7, #1
0x3FAA	0xD1FD    BNE	L_Delay_100ms20
0x3FAC	0xBF00    NOP
0x3FAE	0xBF00    NOP
0x3FB0	0xBF00    NOP
0x3FB2	0xBF00    NOP
0x3FB4	0xBF00    NOP
;__Lib_Delays.c, 55 :: 		}
L_end_Delay_100ms:
0x3FB6	0x4770    BX	LR
; end of _Delay_100ms
_applicationTask:
;Click_IR_Grid2_STM.c, 56 :: 		void applicationTask()
0x4700	0xB081    SUB	SP, SP, #4
0x4702	0xF8CDE000  STR	LR, [SP, #0]
;Click_IR_Grid2_STM.c, 58 :: 		irgrid2_getPixelTemperature(&Ta,&pixelTemp[0]);
0x4706	0x492E    LDR	R1, [PC, #184]
0x4708	0x482E    LDR	R0, [PC, #184]
0x470A	0xF7FFFDA9  BL	_irgrid2_getPixelTemperature+0
;Click_IR_Grid2_STM.c, 60 :: 		mikrobus_logWrite("Ambient temperature:  ",_LOG_TEXT);
0x470E	0x482E    LDR	R0, [PC, #184]
0x4710	0x2101    MOVS	R1, #1
0x4712	0xF7FFFF29  BL	_mikrobus_logWrite+0
;Click_IR_Grid2_STM.c, 61 :: 		FloatToStr(Ta,demoText);
0x4716	0x482B    LDR	R0, [PC, #172]
0x4718	0x6800    LDR	R0, [R0, #0]
0x471A	0x492C    LDR	R1, [PC, #176]
0x471C	0xF7FFFDDC  BL	_FloatToStr+0
;Click_IR_Grid2_STM.c, 62 :: 		mikrobus_logWrite(demoText,_LOG_LINE);
0x4720	0x2102    MOVS	R1, #2
0x4722	0x482A    LDR	R0, [PC, #168]
0x4724	0xF7FFFF20  BL	_mikrobus_logWrite+0
;Click_IR_Grid2_STM.c, 63 :: 		mikrobus_logWrite(" ", _LOG_LINE);
0x4728	0x4829    LDR	R0, [PC, #164]
0x472A	0x2102    MOVS	R1, #2
0x472C	0xF7FFFF1C  BL	_mikrobus_logWrite+0
;Click_IR_Grid2_STM.c, 64 :: 		mikrobus_logWrite("--- Pixel temperature matrix 32x24 ---", _LOG_LINE);
0x4730	0x4828    LDR	R0, [PC, #160]
0x4732	0x2102    MOVS	R1, #2
0x4734	0xF7FFFF18  BL	_mikrobus_logWrite+0
;Click_IR_Grid2_STM.c, 66 :: 		for ( cnt = 0 ; cnt < 768 ; cnt++)
0x4738	0x2100    MOVS	R1, #0
0x473A	0x4827    LDR	R0, [PC, #156]
0x473C	0x8001    STRH	R1, [R0, #0]
L_applicationTask2:
0x473E	0x4826    LDR	R0, [PC, #152]
0x4740	0x8800    LDRH	R0, [R0, #0]
0x4742	0xF5B07F40  CMP	R0, #768
0x4746	0xD228    BCS	L_applicationTask3
;Click_IR_Grid2_STM.c, 68 :: 		FloatToStr(pixelTemp[cnt],demoText);
0x4748	0x4823    LDR	R0, [PC, #140]
0x474A	0x8800    LDRH	R0, [R0, #0]
0x474C	0x0081    LSLS	R1, R0, #2
0x474E	0x481C    LDR	R0, [PC, #112]
0x4750	0x1840    ADDS	R0, R0, R1
0x4752	0x6800    LDR	R0, [R0, #0]
0x4754	0x491D    LDR	R1, [PC, #116]
0x4756	0xF7FFFDBF  BL	_FloatToStr+0
;Click_IR_Grid2_STM.c, 69 :: 		demoText[ 5 ] = 0 ;
0x475A	0x2100    MOVS	R1, #0
0x475C	0x481F    LDR	R0, [PC, #124]
0x475E	0x7001    STRB	R1, [R0, #0]
;Click_IR_Grid2_STM.c, 70 :: 		mikrobus_logWrite(demoText, _LOG_TEXT);
0x4760	0x2101    MOVS	R1, #1
0x4762	0x481A    LDR	R0, [PC, #104]
0x4764	0xF7FFFF00  BL	_mikrobus_logWrite+0
;Click_IR_Grid2_STM.c, 71 :: 		mikrobus_logWrite("|", _LOG_TEXT);
0x4768	0x481D    LDR	R0, [PC, #116]
0x476A	0x2101    MOVS	R1, #1
0x476C	0xF7FFFEFC  BL	_mikrobus_logWrite+0
;Click_IR_Grid2_STM.c, 72 :: 		Delay_1ms();
0x4770	0xF7FFFD6A  BL	_Delay_1ms+0
;Click_IR_Grid2_STM.c, 73 :: 		if(((cnt % 32) == 0) && (cnt > 0))
0x4774	0x4818    LDR	R0, [PC, #96]
0x4776	0x8800    LDRH	R0, [R0, #0]
0x4778	0xF000001F  AND	R0, R0, #31
0x477C	0xB280    UXTH	R0, R0
0x477E	0xB938    CBNZ	R0, L__applicationTask14
0x4780	0x4815    LDR	R0, [PC, #84]
0x4782	0x8800    LDRH	R0, [R0, #0]
0x4784	0x2800    CMP	R0, #0
0x4786	0xD903    BLS	L__applicationTask13
L__applicationTask12:
;Click_IR_Grid2_STM.c, 75 :: 		mikrobus_logWrite(" ", _LOG_LINE);
0x4788	0x4816    LDR	R0, [PC, #88]
0x478A	0x2102    MOVS	R1, #2
0x478C	0xF7FFFEEC  BL	_mikrobus_logWrite+0
;Click_IR_Grid2_STM.c, 73 :: 		if(((cnt % 32) == 0) && (cnt > 0))
L__applicationTask14:
L__applicationTask13:
;Click_IR_Grid2_STM.c, 66 :: 		for ( cnt = 0 ; cnt < 768 ; cnt++)
0x4790	0x4911    LDR	R1, [PC, #68]
0x4792	0x8808    LDRH	R0, [R1, #0]
0x4794	0x1C40    ADDS	R0, R0, #1
0x4796	0x8008    STRH	R0, [R1, #0]
;Click_IR_Grid2_STM.c, 77 :: 		}
0x4798	0xE7D1    B	L_applicationTask2
L_applicationTask3:
;Click_IR_Grid2_STM.c, 78 :: 		mikrobus_logWrite(" ", _LOG_LINE);
0x479A	0x4813    LDR	R0, [PC, #76]
0x479C	0x2102    MOVS	R1, #2
0x479E	0xF7FFFEE3  BL	_mikrobus_logWrite+0
;Click_IR_Grid2_STM.c, 79 :: 		Delay_ms( 500 );
0x47A2	0xF648577F  MOVW	R7, #36223
0x47A6	0xF2C0075B  MOVT	R7, #91
L_applicationTask8:
0x47AA	0x1E7F    SUBS	R7, R7, #1
0x47AC	0xD1FD    BNE	L_applicationTask8
0x47AE	0xBF00    NOP
0x47B0	0xBF00    NOP
0x47B2	0xBF00    NOP
0x47B4	0xBF00    NOP
0x47B6	0xBF00    NOP
;Click_IR_Grid2_STM.c, 80 :: 		}
L_end_applicationTask:
0x47B8	0xF8DDE000  LDR	LR, [SP, #0]
0x47BC	0xB001    ADD	SP, SP, #4
0x47BE	0x4770    BX	LR
0x47C0	0x00902000  	_pixelTemp+0
0x47C4	0x00302000  	_Ta+0
0x47C8	0x00342000  	?lstr3_Click_IR_Grid2_STM+0
0x47CC	0x0C902000  	_demoText+0
0x47D0	0x004B2000  	?lstr4_Click_IR_Grid2_STM+0
0x47D4	0x004D2000  	?lstr5_Click_IR_Grid2_STM+0
0x47D8	0x0CF42000  	_cnt+0
0x47DC	0x0C952000  	_demoText+5
0x47E0	0x00742000  	?lstr6_Click_IR_Grid2_STM+0
0x47E4	0x00762000  	?lstr7_Click_IR_Grid2_STM+0
0x47E8	0x00782000  	?lstr8_Click_IR_Grid2_STM+0
; end of _applicationTask
_irgrid2_getPixelTemperature:
;__irgrid2_driver.c, 1001 :: 		void irgrid2_getPixelTemperature(float *Ta, float *pixelTemp)
0x4260	0xB086    SUB	SP, SP, #24
0x4262	0xF8CDE000  STR	LR, [SP, #0]
0x4266	0x9004    STR	R0, [SP, #16]
0x4268	0x9105    STR	R1, [SP, #20]
;__irgrid2_driver.c, 1004 :: 		float _Ta = 0;
;__irgrid2_driver.c, 1005 :: 		float _tr = 0;
0x426A	0xF10D0B08  ADD	R11, SP, #8
0x426E	0xF10B0A08  ADD	R10, R11, #8
0x4272	0xF8DFC058  LDR	R12, [PC, #88]
0x4276	0xF000FAB9  BL	___CC2DW+0
;__irgrid2_driver.c, 1006 :: 		float _emissivity = 0.95;
;__irgrid2_driver.c, 1010 :: 		for ( x = 0 ; x < 2 ; x++)
0x427A	0x2200    MOVS	R2, #0
0x427C	0xF8AD2004  STRH	R2, [SP, #4]
L_irgrid2_getPixelTemperature159:
0x4280	0xF8BD2004  LDRH	R2, [SP, #4]
0x4284	0x2A02    CMP	R2, #2
0x4286	0xD21A    BCS	L_irgrid2_getPixelTemperature160
;__irgrid2_driver.c, 1012 :: 		irgrid2_getFrameData(mlx90640Frame);
0x4288	0x4811    LDR	R0, [PC, #68]
0x428A	0xF7FFFE09  BL	_irgrid2_getFrameData+0
;__irgrid2_driver.c, 1013 :: 		_Ta = irgrid2_GetTa(mlx90640Frame, &mlx90640);
0x428E	0x4911    LDR	R1, [PC, #68]
0x4290	0x480F    LDR	R0, [PC, #60]
0x4292	0xF7FFF98D  BL	_irgrid2_GetTa+0
;__irgrid2_driver.c, 1014 :: 		_tr = _Ta - TA_SHIFT;
0x4296	0xF04F4282  MOV	R2, #1090519040
0x429A	0xF7FDFAE1  BL	__Sub_FP+0
0x429E	0x9002    STR	R0, [SP, #8]
;__irgrid2_driver.c, 1015 :: 		irgrid2_CalculateTo(mlx90640Frame, &mlx90640, _emissivity, _tr, pixelTemp);
0x42A0	0x9A05    LDR	R2, [SP, #20]
0x42A2	0xB404    PUSH	(R2)
0x42A4	0x4603    MOV	R3, R0
0x42A6	0x9A04    LDR	R2, [SP, #16]
0x42A8	0x490A    LDR	R1, [PC, #40]
0x42AA	0x4809    LDR	R0, [PC, #36]
0x42AC	0xF7FFFA06  BL	_irgrid2_CalculateTo+0
0x42B0	0xB001    ADD	SP, SP, #4
;__irgrid2_driver.c, 1010 :: 		for ( x = 0 ; x < 2 ; x++)
0x42B2	0xF8BD2004  LDRH	R2, [SP, #4]
0x42B6	0x1C52    ADDS	R2, R2, #1
0x42B8	0xF8AD2004  STRH	R2, [SP, #4]
;__irgrid2_driver.c, 1016 :: 		}
0x42BC	0xE7E0    B	L_irgrid2_getPixelTemperature159
L_irgrid2_getPixelTemperature160:
;__irgrid2_driver.c, 1017 :: 		*Ta = _tr;
0x42BE	0x9B02    LDR	R3, [SP, #8]
0x42C0	0x9A04    LDR	R2, [SP, #16]
0x42C2	0x6013    STR	R3, [R2, #0]
;__irgrid2_driver.c, 1018 :: 		}
L_end_irgrid2_getPixelTemperature:
0x42C4	0xF8DDE000  LDR	LR, [SP, #0]
0x42C8	0xB006    ADD	SP, SP, #24
0x42CA	0x4770    BX	LR
0x42CC	0x53080000  	?ICSirgrid2_getPixelTemperature__tr_L0+0
0x42D0	0x3E242000  	irgrid2_getPixelTemperature_mlx90640Frame_L0+0
0x42D4	0x0CFC2000  	__irgrid2_driver_mlx90640+0
; end of _irgrid2_getPixelTemperature
_irgrid2_getFrameData:
;__irgrid2_driver.c, 1030 :: 		int irgrid2_getFrameData(uint16_t *frameData)
0x3EA0	0xB084    SUB	SP, SP, #16
0x3EA2	0xF8CDE000  STR	LR, [SP, #0]
0x3EA6	0x9003    STR	R0, [SP, #12]
;__irgrid2_driver.c, 1032 :: 		uint16_t dataReady = 1;
;__irgrid2_driver.c, 1035 :: 		uint8_t cnt = 0;
0x3EA8	0x2100    MOVS	R1, #0
0x3EAA	0xF88D1008  STRB	R1, [SP, #8]
;__irgrid2_driver.c, 1037 :: 		dataReady = 0;
; dataReady start address is: 4 (R1)
0x3EAE	0x2100    MOVS	R1, #0
; dataReady end address is: 4 (R1)
;__irgrid2_driver.c, 1039 :: 		while(dataReady == 0)
L_irgrid2_getFrameData162:
; dataReady start address is: 4 (R1)
0x3EB0	0xB961    CBNZ	R1, L_irgrid2_getFrameData163
; dataReady end address is: 4 (R1)
;__irgrid2_driver.c, 1041 :: 		irgrid2_readData(0x8000, 1, &statusRegister);
0x3EB2	0xF10D0106  ADD	R1, SP, #6
0x3EB6	0x460A    MOV	R2, R1
0x3EB8	0x2101    MOVS	R1, #1
0x3EBA	0xF2480000  MOVW	R0, #32768
0x3EBE	0xF7FEFA8F  BL	_irgrid2_readData+0
;__irgrid2_driver.c, 1042 :: 		dataReady = statusRegister & 0x0008;
0x3EC2	0xF8BD1006  LDRH	R1, [SP, #6]
0x3EC6	0xF0010108  AND	R1, R1, #8
; dataReady start address is: 4 (R1)
;__irgrid2_driver.c, 1043 :: 		}
0x3ECA	0xE7F1    B	L_irgrid2_getFrameData162
L_irgrid2_getFrameData163:
;__irgrid2_driver.c, 1045 :: 		while(dataReady != 0 && cnt < 5)
0x3ECC	0xB288    UXTH	R0, R1
L_irgrid2_getFrameData164:
; dataReady end address is: 4 (R1)
; dataReady start address is: 0 (R0)
0x3ECE	0xB310    CBZ	R0, L__irgrid2_getFrameData238
; dataReady end address is: 0 (R0)
0x3ED0	0xF89D1008  LDRB	R1, [SP, #8]
0x3ED4	0x2905    CMP	R1, #5
0x3ED6	0xD21E    BCS	L__irgrid2_getFrameData237
L__irgrid2_getFrameData236:
;__irgrid2_driver.c, 1047 :: 		irgrid2_writeByte(0x8000, 0x0030);
0x3ED8	0x2130    MOVS	R1, #48
0x3EDA	0xF2480000  MOVW	R0, #32768
0x3EDE	0xF7FFF8A9  BL	_irgrid2_writeByte+0
;__irgrid2_driver.c, 1048 :: 		irgrid2_readData(0x0400, 832, frameData);
0x3EE2	0x9A03    LDR	R2, [SP, #12]
0x3EE4	0xF2403140  MOVW	R1, #832
0x3EE8	0xF2404000  MOVW	R0, #1024
0x3EEC	0xF7FEFA78  BL	_irgrid2_readData+0
;__irgrid2_driver.c, 1049 :: 		irgrid2_readData(0x8000, 1, &statusRegister);
0x3EF0	0xF10D0106  ADD	R1, SP, #6
0x3EF4	0x460A    MOV	R2, R1
0x3EF6	0x2101    MOVS	R1, #1
0x3EF8	0xF2480000  MOVW	R0, #32768
0x3EFC	0xF7FEFA70  BL	_irgrid2_readData+0
;__irgrid2_driver.c, 1050 :: 		dataReady = statusRegister & 0x0008;
0x3F00	0xF8BD1006  LDRH	R1, [SP, #6]
0x3F04	0xF0010108  AND	R1, R1, #8
; dataReady start address is: 0 (R0)
0x3F08	0xB288    UXTH	R0, R1
;__irgrid2_driver.c, 1051 :: 		cnt = cnt + 1;
0x3F0A	0xF89D1008  LDRB	R1, [SP, #8]
0x3F0E	0x1C49    ADDS	R1, R1, #1
0x3F10	0xF88D1008  STRB	R1, [SP, #8]
;__irgrid2_driver.c, 1052 :: 		}
; dataReady end address is: 0 (R0)
0x3F14	0xE7DB    B	L_irgrid2_getFrameData164
;__irgrid2_driver.c, 1045 :: 		while(dataReady != 0 && cnt < 5)
L__irgrid2_getFrameData238:
L__irgrid2_getFrameData237:
;__irgrid2_driver.c, 1054 :: 		irgrid2_readData(0x800D, 1, &controlRegister1);
0x3F16	0xA901    ADD	R1, SP, #4
0x3F18	0x460A    MOV	R2, R1
0x3F1A	0x2101    MOVS	R1, #1
0x3F1C	0xF248000D  MOVW	R0, #32781
0x3F20	0xF7FEFA5E  BL	_irgrid2_readData+0
;__irgrid2_driver.c, 1055 :: 		frameData[832] = controlRegister1;
0x3F24	0x9903    LDR	R1, [SP, #12]
0x3F26	0xF50162D0  ADD	R2, R1, #1664
0x3F2A	0xF8BD1004  LDRH	R1, [SP, #4]
0x3F2E	0x8011    STRH	R1, [R2, #0]
;__irgrid2_driver.c, 1056 :: 		frameData[833] = statusRegister & 0x0001;
0x3F30	0x9903    LDR	R1, [SP, #12]
0x3F32	0xF2016282  ADDW	R2, R1, #1666
0x3F36	0xF8BD1006  LDRH	R1, [SP, #6]
0x3F3A	0xF0010101  AND	R1, R1, #1
0x3F3E	0x8011    STRH	R1, [R2, #0]
;__irgrid2_driver.c, 1057 :: 		return frameData[833];
0x3F40	0x9903    LDR	R1, [SP, #12]
0x3F42	0xF2016182  ADDW	R1, R1, #1666
0x3F46	0x8809    LDRH	R1, [R1, #0]
0x3F48	0xB208    SXTH	R0, R1
;__irgrid2_driver.c, 1058 :: 		}
L_end_irgrid2_getFrameData:
0x3F4A	0xF8DDE000  LDR	LR, [SP, #0]
0x3F4E	0xB004    ADD	SP, SP, #16
0x3F50	0x4770    BX	LR
; end of _irgrid2_getFrameData
_irgrid2_GetTa:
;__irgrid2_driver.c, 1134 :: 		float irgrid2_GetTa(uint16_t *frameData,  paramsMLX90640 *params)
0x35B0	0xB087    SUB	SP, SP, #28
0x35B2	0xF8CDE000  STR	LR, [SP, #0]
0x35B6	0x9002    STR	R0, [SP, #8]
0x35B8	0x9103    STR	R1, [SP, #12]
;__irgrid2_driver.c, 1141 :: 		vdd = irgrid2_GetVdd(frameData, params);
0x35BA	0x9903    LDR	R1, [SP, #12]
0x35BC	0x9802    LDR	R0, [SP, #8]
0x35BE	0xF7FFFD87  BL	_irgrid2_GetVdd+0
0x35C2	0x9001    STR	R0, [SP, #4]
;__irgrid2_driver.c, 1143 :: 		ptat = frameData[800];
0x35C4	0x9A02    LDR	R2, [SP, #8]
0x35C6	0xF50262C8  ADD	R2, R2, #1600
0x35CA	0x8812    LDRH	R2, [R2, #0]
0x35CC	0xB290    UXTH	R0, R2
0x35CE	0xF7FEF8DF  BL	__UnsignedIntegralToFloat+0
; ptat start address is: 36 (R9)
0x35D2	0x4681    MOV	R9, R0
;__irgrid2_driver.c, 1144 :: 		if(ptat > 32767)
0x35D4	0x4A35    LDR	R2, [PC, #212]
0x35D6	0xF7FEF9C5  BL	__Compare_FP+0
0x35DA	0xF2400000  MOVW	R0, #0
0x35DE	0xDD00    BLE	L__irgrid2_GetTa314
0x35E0	0x2001    MOVS	R0, #1
L__irgrid2_GetTa314:
0x35E2	0xB138    CBZ	R0, L__irgrid2_GetTa239
;__irgrid2_driver.c, 1146 :: 		ptat = ptat - 65536;
0x35E4	0xF04F428F  MOV	R2, #1199570944
0x35E8	0x4648    MOV	R0, R9
0x35EA	0xF7FEF939  BL	__Sub_FP+0
; ptat end address is: 36 (R9)
; ptat start address is: 4 (R1)
0x35EE	0x4601    MOV	R1, R0
; ptat end address is: 4 (R1)
0x35F0	0x4689    MOV	R9, R1
;__irgrid2_driver.c, 1147 :: 		}
0x35F2	0xE7FF    B	L_irgrid2_GetTa168
L__irgrid2_GetTa239:
;__irgrid2_driver.c, 1144 :: 		if(ptat > 32767)
;__irgrid2_driver.c, 1147 :: 		}
L_irgrid2_GetTa168:
;__irgrid2_driver.c, 1149 :: 		ptatArt = frameData[768];
; ptat start address is: 36 (R9)
0x35F4	0x9A02    LDR	R2, [SP, #8]
0x35F6	0xF50262C0  ADD	R2, R2, #1536
0x35FA	0x8812    LDRH	R2, [R2, #0]
0x35FC	0xB290    UXTH	R0, R2
0x35FE	0xF7FEF8C7  BL	__UnsignedIntegralToFloat+0
; ptatArt start address is: 4 (R1)
0x3602	0x4601    MOV	R1, R0
;__irgrid2_driver.c, 1150 :: 		if(ptatArt > 32767)
0x3604	0x4A29    LDR	R2, [PC, #164]
0x3606	0xF7FEF9AD  BL	__Compare_FP+0
0x360A	0xF2400000  MOVW	R0, #0
0x360E	0xDD00    BLE	L__irgrid2_GetTa315
0x3610	0x2001    MOVS	R0, #1
L__irgrid2_GetTa315:
0x3612	0xB130    CBZ	R0, L__irgrid2_GetTa240
;__irgrid2_driver.c, 1152 :: 		ptatArt = ptatArt - 65536;
0x3614	0x4608    MOV	R0, R1
0x3616	0xF04F428F  MOV	R2, #1199570944
0x361A	0xF7FEF921  BL	__Sub_FP+0
; ptatArt end address is: 4 (R1)
; ptatArt start address is: 32 (R8)
0x361E	0x4680    MOV	R8, R0
; ptatArt end address is: 32 (R8)
;__irgrid2_driver.c, 1153 :: 		}
0x3620	0xE000    B	L_irgrid2_GetTa169
L__irgrid2_GetTa240:
;__irgrid2_driver.c, 1150 :: 		if(ptatArt > 32767)
0x3622	0x4688    MOV	R8, R1
;__irgrid2_driver.c, 1153 :: 		}
L_irgrid2_GetTa169:
;__irgrid2_driver.c, 1154 :: 		ptatArt = (ptat / (ptat * params->alphaPTAT + ptatArt)) * _pow(2, (double)18);
; ptatArt start address is: 32 (R8)
0x3624	0x9A03    LDR	R2, [SP, #12]
0x3626	0x3210    ADDS	R2, #16
0x3628	0x6810    LDR	R0, [R2, #0]
0x362A	0x464A    MOV	R2, R9
0x362C	0xF7FDF878  BL	__Mul_FP+0
0x3630	0x4642    MOV	R2, R8
0x3632	0xF7FCFFA1  BL	__Add_FP+0
; ptatArt end address is: 32 (R8)
0x3636	0x9004    STR	R0, [SP, #16]
0x3638	0x9A04    LDR	R2, [SP, #16]
0x363A	0x4648    MOV	R0, R9
0x363C	0xF7FEF8BE  BL	__Div_FP+0
; ptat end address is: 36 (R9)
0x3640	0x9006    STR	R0, [SP, #24]
0x3642	0x491B    LDR	R1, [PC, #108]
0x3644	0xF04F4080  MOV	R0, #1073741824
0x3648	0xF7FDFFF2  BL	__irgrid2_driver__pow+0
0x364C	0x9A06    LDR	R2, [SP, #24]
0x364E	0xF7FDF867  BL	__Mul_FP+0
; ptatArt start address is: 36 (R9)
0x3652	0x4681    MOV	R9, R0
;__irgrid2_driver.c, 1156 :: 		ta = (ptatArt / (1 + params->KvPTAT * (vdd - 3.3)) - params->vPTAT25);
0x3654	0x9A03    LDR	R2, [SP, #12]
0x3656	0x1D12    ADDS	R2, R2, #4
0x3658	0x9206    STR	R2, [SP, #24]
0x365A	0x9801    LDR	R0, [SP, #4]
0x365C	0x4A15    LDR	R2, [PC, #84]
0x365E	0xF7FEF8FF  BL	__Sub_FP+0
0x3662	0x9A06    LDR	R2, [SP, #24]
0x3664	0x6812    LDR	R2, [R2, #0]
0x3666	0xF7FDF85B  BL	__Mul_FP+0
0x366A	0xF04F527E  MOV	R2, #1065353216
0x366E	0xF7FCFF83  BL	__Add_FP+0
0x3672	0x9004    STR	R0, [SP, #16]
0x3674	0x9A04    LDR	R2, [SP, #16]
0x3676	0x4648    MOV	R0, R9
0x3678	0xF7FEF8A0  BL	__Div_FP+0
; ptatArt end address is: 36 (R9)
0x367C	0x9006    STR	R0, [SP, #24]
0x367E	0x9A03    LDR	R2, [SP, #12]
0x3680	0x320C    ADDS	R2, #12
0x3682	0x8810    LDRH	R0, [R2, #0]
0x3684	0xF7FEF884  BL	__UnsignedIntegralToFloat+0
0x3688	0x9004    STR	R0, [SP, #16]
0x368A	0x9A04    LDR	R2, [SP, #16]
0x368C	0x9806    LDR	R0, [SP, #24]
0x368E	0xF7FEF8E7  BL	__Sub_FP+0
;__irgrid2_driver.c, 1157 :: 		ta = ta / params->KtPTAT + 25;
0x3692	0x9A03    LDR	R2, [SP, #12]
0x3694	0x3208    ADDS	R2, #8
0x3696	0x6812    LDR	R2, [R2, #0]
0x3698	0xF7FEF890  BL	__Div_FP+0
0x369C	0x4A06    LDR	R2, [PC, #24]
0x369E	0xF7FCFF6B  BL	__Add_FP+0
;__irgrid2_driver.c, 1159 :: 		return ta;
0x36A2	0x4600    MOV	R0, R0
;__irgrid2_driver.c, 1160 :: 		}
L_end_irgrid2_GetTa:
0x36A4	0xF8DDE000  LDR	LR, [SP, #0]
0x36A8	0xB007    ADD	SP, SP, #28
0x36AA	0x4770    BX	LR
0x36AC	0xFE0046FF  	#1191181824
0x36B0	0x00004190  	#1099956224
0x36B4	0x33334053  	#1079194419
0x36B8	0x000041C8  	#1103626240
; end of _irgrid2_GetTa
_irgrid2_GetVdd:
;__irgrid2_driver.c, 1397 :: 		float irgrid2_GetVdd(uint16_t *frameData,  paramsMLX90640 *params)
; frameData start address is: 0 (R0)
0x30D0	0xB087    SUB	SP, SP, #28
0x30D2	0xF8CDE000  STR	LR, [SP, #0]
0x30D6	0x4681    MOV	R9, R0
0x30D8	0x9103    STR	R1, [SP, #12]
; frameData end address is: 0 (R0)
; frameData start address is: 36 (R9)
;__irgrid2_driver.c, 1404 :: 		vdd = frameData[810];
0x30DA	0xF2096254  ADDW	R2, R9, #1620
0x30DE	0x8812    LDRH	R2, [R2, #0]
0x30E0	0xB290    UXTH	R0, R2
0x30E2	0xF7FEFB55  BL	__UnsignedIntegralToFloat+0
0x30E6	0x9001    STR	R0, [SP, #4]
;__irgrid2_driver.c, 1405 :: 		if(vdd > 32767)
0x30E8	0x4A29    LDR	R2, [PC, #164]
0x30EA	0xF7FEFC3B  BL	__Compare_FP+0
0x30EE	0xF2400000  MOVW	R0, #0
0x30F2	0xDD00    BLE	L__irgrid2_GetVdd329
0x30F4	0x2001    MOVS	R0, #1
L__irgrid2_GetVdd329:
0x30F6	0xB128    CBZ	R0, L_irgrid2_GetVdd206
;__irgrid2_driver.c, 1407 :: 		vdd = vdd - 65536;
0x30F8	0x9801    LDR	R0, [SP, #4]
0x30FA	0xF04F428F  MOV	R2, #1199570944
0x30FE	0xF7FEFBAF  BL	__Sub_FP+0
0x3102	0x9001    STR	R0, [SP, #4]
;__irgrid2_driver.c, 1408 :: 		}
L_irgrid2_GetVdd206:
;__irgrid2_driver.c, 1409 :: 		resolutionRAM = (frameData[832] & 0x0C00) >> 10;
0x3104	0xF50962D0  ADD	R2, R9, #1664
; frameData end address is: 36 (R9)
0x3108	0x8812    LDRH	R2, [R2, #0]
0x310A	0xF4026240  AND	R2, R2, #3072
0x310E	0xB292    UXTH	R2, R2
0x3110	0x0A92    LSRS	R2, R2, #10
0x3112	0xF8AD2008  STRH	R2, [SP, #8]
;__irgrid2_driver.c, 1410 :: 		resolutionCorrection = _pow(2, (double)params->resolutionEE) / _pow(2, (double)resolutionRAM);
0x3116	0x9A03    LDR	R2, [SP, #12]
0x3118	0x3224    ADDS	R2, #36
0x311A	0x7812    LDRB	R2, [R2, #0]
0x311C	0xB2D0    UXTB	R0, R2
0x311E	0xF7FEFB37  BL	__UnsignedIntegralToFloat+0
0x3122	0x4601    MOV	R1, R0
0x3124	0xF04F4080  MOV	R0, #1073741824
0x3128	0xF7FEFA82  BL	__irgrid2_driver__pow+0
0x312C	0x9006    STR	R0, [SP, #24]
0x312E	0xF9BD0008  LDRSH	R0, [SP, #8]
0x3132	0xF7FEF99F  BL	__SignedIntegralToFloat+0
0x3136	0x4601    MOV	R1, R0
0x3138	0xF04F4080  MOV	R0, #1073741824
0x313C	0xF7FEFA78  BL	__irgrid2_driver__pow+0
0x3140	0x9004    STR	R0, [SP, #16]
0x3142	0x9A04    LDR	R2, [SP, #16]
0x3144	0x9806    LDR	R0, [SP, #24]
0x3146	0xF7FEFB39  BL	__Div_FP+0
;__irgrid2_driver.c, 1411 :: 		vdd = (resolutionCorrection * vdd - params->vdd25) / params->kVdd + 3.3;
0x314A	0x9A01    LDR	R2, [SP, #4]
0x314C	0xF7FDFAE8  BL	__Mul_FP+0
0x3150	0x9006    STR	R0, [SP, #24]
0x3152	0x9A03    LDR	R2, [SP, #12]
0x3154	0x1C92    ADDS	R2, R2, #2
0x3156	0xF9B20000  LDRSH	R0, [R2, #0]
0x315A	0xF7FEF98B  BL	__SignedIntegralToFloat+0
0x315E	0x9004    STR	R0, [SP, #16]
0x3160	0x9A04    LDR	R2, [SP, #16]
0x3162	0x9806    LDR	R0, [SP, #24]
0x3164	0xF7FEFB7C  BL	__Sub_FP+0
0x3168	0x9006    STR	R0, [SP, #24]
0x316A	0x9A03    LDR	R2, [SP, #12]
0x316C	0xF9B20000  LDRSH	R0, [R2, #0]
0x3170	0xF7FEF980  BL	__SignedIntegralToFloat+0
0x3174	0x9004    STR	R0, [SP, #16]
0x3176	0x9A04    LDR	R2, [SP, #16]
0x3178	0x9806    LDR	R0, [SP, #24]
0x317A	0xF7FEFB1F  BL	__Div_FP+0
0x317E	0x4A05    LDR	R2, [PC, #20]
0x3180	0xF7FDF9FA  BL	__Add_FP+0
;__irgrid2_driver.c, 1413 :: 		return vdd;
0x3184	0x4600    MOV	R0, R0
;__irgrid2_driver.c, 1414 :: 		}
L_end_irgrid2_GetVdd:
0x3186	0xF8DDE000  LDR	LR, [SP, #0]
0x318A	0xB007    ADD	SP, SP, #28
0x318C	0x4770    BX	LR
0x318E	0xBF00    NOP
0x3190	0xFE0046FF  	#1191181824
0x3194	0x33334053  	#1079194419
; end of _irgrid2_GetVdd
_irgrid2_CalculateTo:
;__irgrid2_driver.c, 1162 :: 		void irgrid2_CalculateTo(uint16_t *frameData,  paramsMLX90640 *params, float emissivity, float tr, float *result)
0x36BC	0xB0A3    SUB	SP, SP, #140
0x36BE	0xF8CDE000  STR	LR, [SP, #0]
0x36C2	0x9013    STR	R0, [SP, #76]
0x36C4	0x9114    STR	R1, [SP, #80]
0x36C6	0x9215    STR	R2, [SP, #84]
0x36C8	0x9316    STR	R3, [SP, #88]
0x36CA	0x9C23    LDR	R4, [SP, #140]
0x36CC	0x9423    STR	R4, [SP, #140]
;__irgrid2_driver.c, 1187 :: 		subPage = frameData[833];
0x36CE	0x9C13    LDR	R4, [SP, #76]
0x36D0	0xF2046482  ADDW	R4, R4, #1666
0x36D4	0x8824    LDRH	R4, [R4, #0]
0x36D6	0xF8AD4046  STRH	R4, [SP, #70]
;__irgrid2_driver.c, 1188 :: 		vdd = irgrid2_GetVdd(frameData, params);
0x36DA	0x9914    LDR	R1, [SP, #80]
0x36DC	0x9813    LDR	R0, [SP, #76]
0x36DE	0xF7FFFCF7  BL	_irgrid2_GetVdd+0
0x36E2	0x9001    STR	R0, [SP, #4]
;__irgrid2_driver.c, 1189 :: 		ta = irgrid2_GetTa(frameData, params);
0x36E4	0x9914    LDR	R1, [SP, #80]
0x36E6	0x9813    LDR	R0, [SP, #76]
0x36E8	0xF7FFFF62  BL	_irgrid2_GetTa+0
0x36EC	0x9002    STR	R0, [SP, #8]
;__irgrid2_driver.c, 1190 :: 		ta4 = _pow((ta + 273.15), (double)4);
0x36EE	0x4AEF    LDR	R2, [PC, #956]
0x36F0	0xF7FCFF42  BL	__Add_FP+0
0x36F4	0xF04F4181  MOV	R1, #1082130432
0x36F8	0xF7FDFF9A  BL	__irgrid2_driver__pow+0
0x36FC	0x9003    STR	R0, [SP, #12]
;__irgrid2_driver.c, 1191 :: 		tr4 = _pow((tr + 273.15), (double)4);
0x36FE	0x9A16    LDR	R2, [SP, #88]
0x3700	0x48EA    LDR	R0, [PC, #936]
0x3702	0xF7FCFF39  BL	__Add_FP+0
0x3706	0xF04F4181  MOV	R1, #1082130432
0x370A	0xF7FDFF91  BL	__irgrid2_driver__pow+0
; tr4 start address is: 36 (R9)
0x370E	0x4681    MOV	R9, R0
;__irgrid2_driver.c, 1192 :: 		taTr = tr4 - (tr4-ta4)/emissivity;
0x3710	0x9A03    LDR	R2, [SP, #12]
0x3712	0xF7FEF8A5  BL	__Sub_FP+0
0x3716	0x9A15    LDR	R2, [SP, #84]
0x3718	0xF7FEF850  BL	__Div_FP+0
0x371C	0x9017    STR	R0, [SP, #92]
0x371E	0x9A17    LDR	R2, [SP, #92]
0x3720	0x4648    MOV	R0, R9
0x3722	0xF7FEF89D  BL	__Sub_FP+0
; tr4 end address is: 36 (R9)
0x3726	0x9004    STR	R0, [SP, #16]
;__irgrid2_driver.c, 1194 :: 		alphaCorrR[0] = 1 / (1 + params->ksTo[0] * 40);
0x3728	0xAC0D    ADD	R4, SP, #52
0x372A	0x9421    STR	R4, [SP, #132]
0x372C	0x941F    STR	R4, [SP, #124]
0x372E	0x9C14    LDR	R4, [SP, #80]
0x3730	0x342C    ADDS	R4, #44
0x3732	0x6822    LDR	R2, [R4, #0]
0x3734	0x48DE    LDR	R0, [PC, #888]
0x3736	0xF7FCFFF3  BL	__Mul_FP+0
0x373A	0xF04F527E  MOV	R2, #1065353216
0x373E	0xF7FCFF1B  BL	__Add_FP+0
0x3742	0x9017    STR	R0, [SP, #92]
0x3744	0x9A17    LDR	R2, [SP, #92]
0x3746	0xF04F507E  MOV	R0, #1065353216
0x374A	0xF7FEF837  BL	__Div_FP+0
0x374E	0x9C1F    LDR	R4, [SP, #124]
0x3750	0x6020    STR	R0, [R4, #0]
;__irgrid2_driver.c, 1195 :: 		alphaCorrR[1] = 1 ;
0x3752	0x9E21    LDR	R6, [SP, #132]
0x3754	0x1D35    ADDS	R5, R6, #4
0x3756	0xF04F547E  MOV	R4, #1065353216
0x375A	0x602C    STR	R4, [R5, #0]
;__irgrid2_driver.c, 1196 :: 		alphaCorrR[2] = (1 + params->ksTo[2] * params->ct[2]);
0x375C	0xF2060408  ADDW	R4, R6, #8
0x3760	0x9420    STR	R4, [SP, #128]
0x3762	0x9C14    LDR	R4, [SP, #80]
0x3764	0x342C    ADDS	R4, #44
0x3766	0x3408    ADDS	R4, #8
0x3768	0x941F    STR	R4, [SP, #124]
0x376A	0x9C14    LDR	R4, [SP, #80]
0x376C	0x343C    ADDS	R4, #60
0x376E	0x1D24    ADDS	R4, R4, #4
0x3770	0xF9B40000  LDRSH	R0, [R4, #0]
0x3774	0xF7FDFE7E  BL	__SignedIntegralToFloat+0
0x3778	0x9C1F    LDR	R4, [SP, #124]
0x377A	0x6822    LDR	R2, [R4, #0]
0x377C	0xF7FCFFD0  BL	__Mul_FP+0
0x3780	0xF04F527E  MOV	R2, #1065353216
0x3784	0xF7FCFEF8  BL	__Add_FP+0
0x3788	0x9C20    LDR	R4, [SP, #128]
0x378A	0x6020    STR	R0, [R4, #0]
;__irgrid2_driver.c, 1197 :: 		alphaCorrR[3] = alphaCorrR[2] * (1 + params->ksTo[3] * (params->ct[3] - params->ct[2]));
0x378C	0x9D21    LDR	R5, [SP, #132]
0x378E	0xF205040C  ADDW	R4, R5, #12
0x3792	0x9421    STR	R4, [SP, #132]
0x3794	0xF2050408  ADDW	R4, R5, #8
0x3798	0x6824    LDR	R4, [R4, #0]
0x379A	0x9420    STR	R4, [SP, #128]
0x379C	0x9C14    LDR	R4, [SP, #80]
0x379E	0x342C    ADDS	R4, #44
0x37A0	0x340C    ADDS	R4, #12
0x37A2	0x941F    STR	R4, [SP, #124]
0x37A4	0x9C14    LDR	R4, [SP, #80]
0x37A6	0xF204063C  ADDW	R6, R4, #60
0x37AA	0x1DB4    ADDS	R4, R6, #6
0x37AC	0xF9B45000  LDRSH	R5, [R4, #0]
0x37B0	0x1D34    ADDS	R4, R6, #4
0x37B2	0xF9B44000  LDRSH	R4, [R4, #0]
0x37B6	0x1B2C    SUB	R4, R5, R4
0x37B8	0xB224    SXTH	R4, R4
0x37BA	0xB220    SXTH	R0, R4
0x37BC	0xF7FDFE5A  BL	__SignedIntegralToFloat+0
0x37C0	0x9C1F    LDR	R4, [SP, #124]
0x37C2	0x6822    LDR	R2, [R4, #0]
0x37C4	0xF7FCFFAC  BL	__Mul_FP+0
0x37C8	0xF04F527E  MOV	R2, #1065353216
0x37CC	0xF7FCFED4  BL	__Add_FP+0
0x37D0	0x9A20    LDR	R2, [SP, #128]
0x37D2	0xF7FCFFA5  BL	__Mul_FP+0
0x37D6	0x9C21    LDR	R4, [SP, #132]
0x37D8	0x6020    STR	R0, [R4, #0]
;__irgrid2_driver.c, 1200 :: 		gain = frameData[778];
0x37DA	0x9C13    LDR	R4, [SP, #76]
0x37DC	0xF2046414  ADDW	R4, R4, #1556
0x37E0	0x8824    LDRH	R4, [R4, #0]
0x37E2	0xB2A0    UXTH	R0, R4
0x37E4	0xF7FDFFD4  BL	__UnsignedIntegralToFloat+0
0x37E8	0x9005    STR	R0, [SP, #20]
;__irgrid2_driver.c, 1201 :: 		if(gain > 32767)
0x37EA	0x4AB2    LDR	R2, [PC, #712]
0x37EC	0xF7FEF8BA  BL	__Compare_FP+0
0x37F0	0xF2400000  MOVW	R0, #0
0x37F4	0xDD00    BLE	L__irgrid2_CalculateTo317
0x37F6	0x2001    MOVS	R0, #1
L__irgrid2_CalculateTo317:
0x37F8	0xB128    CBZ	R0, L_irgrid2_CalculateTo170
;__irgrid2_driver.c, 1203 :: 		gain = gain - 65536;
0x37FA	0x9805    LDR	R0, [SP, #20]
0x37FC	0xF04F428F  MOV	R2, #1199570944
0x3800	0xF7FEF82E  BL	__Sub_FP+0
0x3804	0x9005    STR	R0, [SP, #20]
;__irgrid2_driver.c, 1204 :: 		}
L_irgrid2_CalculateTo170:
;__irgrid2_driver.c, 1206 :: 		gain = params->gainEE / gain;
0x3806	0x9C14    LDR	R4, [SP, #80]
0x3808	0x3414    ADDS	R4, #20
0x380A	0xF9B44000  LDRSH	R4, [R4, #0]
0x380E	0xB220    SXTH	R0, R4
0x3810	0xF7FDFE30  BL	__SignedIntegralToFloat+0
0x3814	0x9A05    LDR	R2, [SP, #20]
0x3816	0xF7FDFFD1  BL	__Div_FP+0
0x381A	0x9005    STR	R0, [SP, #20]
;__irgrid2_driver.c, 1209 :: 		mode = (frameData[832] & 0x1000) >> 5;
0x381C	0x9C13    LDR	R4, [SP, #76]
0x381E	0xF50464D0  ADD	R4, R4, #1664
0x3822	0x8824    LDRH	R4, [R4, #0]
0x3824	0xF4045480  AND	R4, R4, #4096
0x3828	0xB2A4    UXTH	R4, R4
0x382A	0x0964    LSRS	R4, R4, #5
0x382C	0xF88D4028  STRB	R4, [SP, #40]
;__irgrid2_driver.c, 1211 :: 		irDataCP[0] = frameData[776];
0x3830	0xAC06    ADD	R4, SP, #24
0x3832	0x9420    STR	R4, [SP, #128]
0x3834	0x941F    STR	R4, [SP, #124]
0x3836	0x9C13    LDR	R4, [SP, #76]
0x3838	0xF50464C2  ADD	R4, R4, #1552
0x383C	0x8824    LDRH	R4, [R4, #0]
0x383E	0xB2A0    UXTH	R0, R4
0x3840	0xF7FDFFA6  BL	__UnsignedIntegralToFloat+0
0x3844	0x9C1F    LDR	R4, [SP, #124]
0x3846	0x6020    STR	R0, [R4, #0]
;__irgrid2_driver.c, 1212 :: 		irDataCP[1] = frameData[808];
0x3848	0x9C20    LDR	R4, [SP, #128]
0x384A	0x1D24    ADDS	R4, R4, #4
0x384C	0x941F    STR	R4, [SP, #124]
0x384E	0x9C13    LDR	R4, [SP, #76]
0x3850	0xF50464CA  ADD	R4, R4, #1616
0x3854	0x8824    LDRH	R4, [R4, #0]
0x3856	0xB2A0    UXTH	R0, R4
0x3858	0xF7FDFF9A  BL	__UnsignedIntegralToFloat+0
0x385C	0x9C1F    LDR	R4, [SP, #124]
0x385E	0x6020    STR	R0, [R4, #0]
;__irgrid2_driver.c, 1213 :: 		for(i = 0; i < 2; i++)
0x3860	0x2400    MOVS	R4, #0
0x3862	0xB224    SXTH	R4, R4
0x3864	0xF8AD4048  STRH	R4, [SP, #72]
L_irgrid2_CalculateTo171:
0x3868	0xF9BD4048  LDRSH	R4, [SP, #72]
0x386C	0x2C02    CMP	R4, #2
0x386E	0xDA2C    BGE	L_irgrid2_CalculateTo172
;__irgrid2_driver.c, 1215 :: 		if(irDataCP[i] > 32767)
0x3870	0xAD06    ADD	R5, SP, #24
0x3872	0xF9BD4048  LDRSH	R4, [SP, #72]
0x3876	0x00A4    LSLS	R4, R4, #2
0x3878	0x192C    ADDS	R4, R5, R4
0x387A	0x6822    LDR	R2, [R4, #0]
0x387C	0x488D    LDR	R0, [PC, #564]
0x387E	0xF7FEF871  BL	__Compare_FP+0
0x3882	0xF2400000  MOVW	R0, #0
0x3886	0xDA00    BGE	L__irgrid2_CalculateTo318
0x3888	0x2001    MOVS	R0, #1
L__irgrid2_CalculateTo318:
0x388A	0xB160    CBZ	R0, L_irgrid2_CalculateTo174
;__irgrid2_driver.c, 1217 :: 		irDataCP[i] = irDataCP[i] - 65536;
0x388C	0xAD06    ADD	R5, SP, #24
0x388E	0xF9BD4048  LDRSH	R4, [SP, #72]
0x3892	0x00A4    LSLS	R4, R4, #2
0x3894	0x192C    ADDS	R4, R5, R4
0x3896	0x941F    STR	R4, [SP, #124]
0x3898	0x6820    LDR	R0, [R4, #0]
0x389A	0xF04F428F  MOV	R2, #1199570944
0x389E	0xF7FDFFDF  BL	__Sub_FP+0
0x38A2	0x9C1F    LDR	R4, [SP, #124]
0x38A4	0x6020    STR	R0, [R4, #0]
;__irgrid2_driver.c, 1218 :: 		}
L_irgrid2_CalculateTo174:
;__irgrid2_driver.c, 1219 :: 		irDataCP[i] = irDataCP[i] * gain;
0x38A6	0xAD06    ADD	R5, SP, #24
0x38A8	0xF9BD4048  LDRSH	R4, [SP, #72]
0x38AC	0x00A4    LSLS	R4, R4, #2
0x38AE	0x192C    ADDS	R4, R5, R4
0x38B0	0x941F    STR	R4, [SP, #124]
0x38B2	0x6822    LDR	R2, [R4, #0]
0x38B4	0x9805    LDR	R0, [SP, #20]
0x38B6	0xF7FCFF33  BL	__Mul_FP+0
0x38BA	0x9C1F    LDR	R4, [SP, #124]
0x38BC	0x6020    STR	R0, [R4, #0]
;__irgrid2_driver.c, 1213 :: 		for(i = 0; i < 2; i++)
0x38BE	0xF9BD4048  LDRSH	R4, [SP, #72]
0x38C2	0x1C64    ADDS	R4, R4, #1
0x38C4	0xF8AD4048  STRH	R4, [SP, #72]
;__irgrid2_driver.c, 1220 :: 		}
0x38C8	0xE7CE    B	L_irgrid2_CalculateTo171
L_irgrid2_CalculateTo172:
;__irgrid2_driver.c, 1221 :: 		irDataCP[0] = irDataCP[0] - params->cpOffset[0] * (1 + params->cpKta * (ta - 25)) * (1 + params->cpKv * (vdd - 3.3));
0x38CA	0xAD06    ADD	R5, SP, #24
0x38CC	0x462C    MOV	R4, R5
0x38CE	0x9422    STR	R4, [SP, #136]
0x38D0	0x682C    LDR	R4, [R5, #0]
0x38D2	0x9421    STR	R4, [SP, #132]
0x38D4	0x9D14    LDR	R5, [SP, #80]
0x38D6	0xF642244C  MOVW	R4, #10828
0x38DA	0x192C    ADDS	R4, R5, R4
0x38DC	0x9420    STR	R4, [SP, #128]
0x38DE	0x9C14    LDR	R4, [SP, #80]
0x38E0	0x3420    ADDS	R4, #32
0x38E2	0x941F    STR	R4, [SP, #124]
0x38E4	0x9802    LDR	R0, [SP, #8]
0x38E6	0x4A74    LDR	R2, [PC, #464]
0x38E8	0xF7FDFFBA  BL	__Sub_FP+0
0x38EC	0x9C1F    LDR	R4, [SP, #124]
0x38EE	0x6822    LDR	R2, [R4, #0]
0x38F0	0xF7FCFF16  BL	__Mul_FP+0
0x38F4	0xF04F527E  MOV	R2, #1065353216
0x38F8	0xF7FCFE3E  BL	__Add_FP+0
0x38FC	0x9C20    LDR	R4, [SP, #128]
0x38FE	0x901F    STR	R0, [SP, #124]
0x3900	0xF9B40000  LDRSH	R0, [R4, #0]
0x3904	0xF7FDFDB6  BL	__SignedIntegralToFloat+0
0x3908	0x9A1F    LDR	R2, [SP, #124]
0x390A	0xF7FCFF09  BL	__Mul_FP+0
0x390E	0x9020    STR	R0, [SP, #128]
0x3910	0x9C14    LDR	R4, [SP, #80]
0x3912	0x341C    ADDS	R4, #28
0x3914	0x941F    STR	R4, [SP, #124]
0x3916	0x9801    LDR	R0, [SP, #4]
0x3918	0x4A68    LDR	R2, [PC, #416]
0x391A	0xF7FDFFA1  BL	__Sub_FP+0
0x391E	0x9C1F    LDR	R4, [SP, #124]
0x3920	0x6822    LDR	R2, [R4, #0]
0x3922	0xF7FCFEFD  BL	__Mul_FP+0
0x3926	0xF04F527E  MOV	R2, #1065353216
0x392A	0xF7FCFE25  BL	__Add_FP+0
0x392E	0x9A20    LDR	R2, [SP, #128]
0x3930	0xF7FCFEF6  BL	__Mul_FP+0
0x3934	0x9017    STR	R0, [SP, #92]
0x3936	0x9A17    LDR	R2, [SP, #92]
0x3938	0x9821    LDR	R0, [SP, #132]
0x393A	0xF7FDFF91  BL	__Sub_FP+0
0x393E	0x9C22    LDR	R4, [SP, #136]
0x3940	0x6020    STR	R0, [R4, #0]
;__irgrid2_driver.c, 1222 :: 		if( mode ==  params->calibrationModeEE)
0x3942	0x9C14    LDR	R4, [SP, #80]
0x3944	0x3425    ADDS	R4, #37
0x3946	0x7825    LDRB	R5, [R4, #0]
0x3948	0xF89D4028  LDRB	R4, [SP, #40]
0x394C	0x42AC    CMP	R4, R5
0x394E	0xD13E    BNE	L_irgrid2_CalculateTo175
;__irgrid2_driver.c, 1224 :: 		irDataCP[1] = irDataCP[1] - params->cpOffset[1] * (1 + params->cpKta * (ta - 25)) * (1 + params->cpKv * (vdd - 3.3));
0x3950	0xAD06    ADD	R5, SP, #24
0x3952	0x1D2C    ADDS	R4, R5, #4
0x3954	0x9422    STR	R4, [SP, #136]
0x3956	0x1D2C    ADDS	R4, R5, #4
0x3958	0x6824    LDR	R4, [R4, #0]
0x395A	0x9421    STR	R4, [SP, #132]
0x395C	0x9D14    LDR	R5, [SP, #80]
0x395E	0xF642244C  MOVW	R4, #10828
0x3962	0x192C    ADDS	R4, R5, R4
0x3964	0x1CA4    ADDS	R4, R4, #2
0x3966	0x9420    STR	R4, [SP, #128]
0x3968	0x9C14    LDR	R4, [SP, #80]
0x396A	0x3420    ADDS	R4, #32
0x396C	0x941F    STR	R4, [SP, #124]
0x396E	0x9802    LDR	R0, [SP, #8]
0x3970	0x4A51    LDR	R2, [PC, #324]
0x3972	0xF7FDFF75  BL	__Sub_FP+0
0x3976	0x9C1F    LDR	R4, [SP, #124]
0x3978	0x6822    LDR	R2, [R4, #0]
0x397A	0xF7FCFED1  BL	__Mul_FP+0
0x397E	0xF04F527E  MOV	R2, #1065353216
0x3982	0xF7FCFDF9  BL	__Add_FP+0
0x3986	0x9C20    LDR	R4, [SP, #128]
0x3988	0x901F    STR	R0, [SP, #124]
0x398A	0xF9B40000  LDRSH	R0, [R4, #0]
0x398E	0xF7FDFD71  BL	__SignedIntegralToFloat+0
0x3992	0x9A1F    LDR	R2, [SP, #124]
0x3994	0xF7FCFEC4  BL	__Mul_FP+0
0x3998	0x9020    STR	R0, [SP, #128]
0x399A	0x9C14    LDR	R4, [SP, #80]
0x399C	0x341C    ADDS	R4, #28
0x399E	0x941F    STR	R4, [SP, #124]
0x39A0	0x9801    LDR	R0, [SP, #4]
0x39A2	0x4A46    LDR	R2, [PC, #280]
0x39A4	0xF7FDFF5C  BL	__Sub_FP+0
0x39A8	0x9C1F    LDR	R4, [SP, #124]
0x39AA	0x6822    LDR	R2, [R4, #0]
0x39AC	0xF7FCFEB8  BL	__Mul_FP+0
0x39B0	0xF04F527E  MOV	R2, #1065353216
0x39B4	0xF7FCFDE0  BL	__Add_FP+0
0x39B8	0x9A20    LDR	R2, [SP, #128]
0x39BA	0xF7FCFEB1  BL	__Mul_FP+0
0x39BE	0x9017    STR	R0, [SP, #92]
0x39C0	0x9A17    LDR	R2, [SP, #92]
0x39C2	0x9821    LDR	R0, [SP, #132]
0x39C4	0xF7FDFF4C  BL	__Sub_FP+0
0x39C8	0x9C22    LDR	R4, [SP, #136]
0x39CA	0x6020    STR	R0, [R4, #0]
;__irgrid2_driver.c, 1225 :: 		}
0x39CC	0xE045    B	L_irgrid2_CalculateTo176
L_irgrid2_CalculateTo175:
;__irgrid2_driver.c, 1228 :: 		irDataCP[1] = irDataCP[1] - (params->cpOffset[1] + params->ilChessC[0]) * (1 + params->cpKta * (ta - 25)) * (1 + params->cpKv * (vdd - 3.3));
0x39CE	0xAD06    ADD	R5, SP, #24
0x39D0	0x1D2C    ADDS	R4, R5, #4
0x39D2	0x9422    STR	R4, [SP, #136]
0x39D4	0x1D2C    ADDS	R4, R5, #4
0x39D6	0x6824    LDR	R4, [R4, #0]
0x39D8	0x9421    STR	R4, [SP, #132]
0x39DA	0x9D14    LDR	R5, [SP, #80]
0x39DC	0xF642244C  MOVW	R4, #10828
0x39E0	0x192C    ADDS	R4, R5, R4
0x39E2	0x1CA4    ADDS	R4, R4, #2
0x39E4	0xF9B46000  LDRSH	R6, [R4, #0]
0x39E8	0x9D14    LDR	R5, [SP, #80]
0x39EA	0xF6422450  MOVW	R4, #10832
0x39EE	0x192C    ADDS	R4, R5, R4
0x39F0	0x941F    STR	R4, [SP, #124]
0x39F2	0xB230    SXTH	R0, R6
0x39F4	0xF7FDFD3E  BL	__SignedIntegralToFloat+0
0x39F8	0x9C1F    LDR	R4, [SP, #124]
0x39FA	0x6822    LDR	R2, [R4, #0]
0x39FC	0xF7FCFDBC  BL	__Add_FP+0
0x3A00	0x9020    STR	R0, [SP, #128]
0x3A02	0x9C14    LDR	R4, [SP, #80]
0x3A04	0x3420    ADDS	R4, #32
0x3A06	0x941F    STR	R4, [SP, #124]
0x3A08	0x9802    LDR	R0, [SP, #8]
0x3A0A	0x4A2B    LDR	R2, [PC, #172]
0x3A0C	0xF7FDFF28  BL	__Sub_FP+0
0x3A10	0x9C1F    LDR	R4, [SP, #124]
0x3A12	0x6822    LDR	R2, [R4, #0]
0x3A14	0xF7FCFE84  BL	__Mul_FP+0
0x3A18	0xF04F527E  MOV	R2, #1065353216
0x3A1C	0xF7FCFDAC  BL	__Add_FP+0
0x3A20	0x9A20    LDR	R2, [SP, #128]
0x3A22	0xF7FCFE7D  BL	__Mul_FP+0
0x3A26	0x9020    STR	R0, [SP, #128]
0x3A28	0x9C14    LDR	R4, [SP, #80]
0x3A2A	0x341C    ADDS	R4, #28
0x3A2C	0x941F    STR	R4, [SP, #124]
0x3A2E	0x9801    LDR	R0, [SP, #4]
0x3A30	0x4A22    LDR	R2, [PC, #136]
0x3A32	0xF7FDFF15  BL	__Sub_FP+0
0x3A36	0x9C1F    LDR	R4, [SP, #124]
0x3A38	0x6822    LDR	R2, [R4, #0]
0x3A3A	0xF7FCFE71  BL	__Mul_FP+0
0x3A3E	0xF04F527E  MOV	R2, #1065353216
0x3A42	0xF7FCFD99  BL	__Add_FP+0
0x3A46	0x9A20    LDR	R2, [SP, #128]
0x3A48	0xF7FCFE6A  BL	__Mul_FP+0
0x3A4C	0x9017    STR	R0, [SP, #92]
0x3A4E	0x9A17    LDR	R2, [SP, #92]
0x3A50	0x9821    LDR	R0, [SP, #132]
0x3A52	0xF7FDFF05  BL	__Sub_FP+0
0x3A56	0x9C22    LDR	R4, [SP, #136]
0x3A58	0x6020    STR	R0, [R4, #0]
;__irgrid2_driver.c, 1229 :: 		}
L_irgrid2_CalculateTo176:
;__irgrid2_driver.c, 1231 :: 		for(pixelNumber = 0; pixelNumber < 768; pixelNumber++)
0x3A5A	0x2400    MOVS	R4, #0
0x3A5C	0xB224    SXTH	R4, R4
0x3A5E	0xF8AD404A  STRH	R4, [SP, #74]
L_irgrid2_CalculateTo177:
0x3A62	0xF9BD404A  LDRSH	R4, [SP, #74]
0x3A66	0xF5B47F40  CMP	R4, #768
0x3A6A	0xF280820B  BGE	L_irgrid2_CalculateTo178
;__irgrid2_driver.c, 1233 :: 		ilPattern = pixelNumber / 32 - (pixelNumber / 64) * 2;
0x3A6E	0xF9BD504A  LDRSH	R5, [SP, #74]
0x3A72	0x2420    MOVS	R4, #32
0x3A74	0xB224    SXTH	R4, R4
0x3A76	0xFB95F6F4  SDIV	R6, R5, R4
0x3A7A	0xB236    SXTH	R6, R6
0x3A7C	0xF9BD504A  LDRSH	R5, [SP, #74]
0x3A80	0x2440    MOVS	R4, #64
0x3A82	0xB224    SXTH	R4, R4
0x3A84	0xFB95F4F4  SDIV	R4, R5, R4
0x3A88	0xB224    SXTH	R4, R4
0x3A8A	0x0064    LSLS	R4, R4, #1
0x3A8C	0xB224    SXTH	R4, R4
0x3A8E	0x1B37    SUB	R7, R6, R4
0x3A90	0xF88D7029  STRB	R7, [SP, #41]
;__irgrid2_driver.c, 1234 :: 		chessPattern = ilPattern ^ (pixelNumber - (pixelNumber/2)*2);
0x3A94	0xF9BD504A  LDRSH	R5, [SP, #74]
0x3A98	0x2402    MOVS	R4, #2
0x3A9A	0xB224    SXTH	R4, R4
0x3A9C	0xFB95F4F4  SDIV	R4, R5, R4
0x3AA0	0xB224    SXTH	R4, R4
0x3AA2	0x0065    LSLS	R5, R4, #1
0x3AA4	0xB22D    SXTH	R5, R5
0x3AA6	0xF9BD404A  LDRSH	R4, [SP, #74]
0x3AAA	0xE009    B	#18
0x3AAC	0x93334388  	#1133024051
0x3AB0	0x00004220  	#1109393408
0x3AB4	0xFE0046FF  	#1191181824
0x3AB8	0x000041C8  	#1103626240
0x3ABC	0x33334053  	#1079194419
0x3AC0	0x1B65    SUB	R5, R4, R5
0x3AC2	0xB22D    SXTH	R5, R5
0x3AC4	0xB27C    SXTB	R4, R7
0x3AC6	0x406C    EORS	R4, R5
; chessPattern start address is: 0 (R0)
0x3AC8	0xB260    SXTB	R0, R4
;__irgrid2_driver.c, 1235 :: 		conversionPattern = ((pixelNumber + 2) / 4 - (pixelNumber + 3) / 4 + (pixelNumber + 1) / 4 - pixelNumber / 4) * (1 - 2 * ilPattern);
0x3ACA	0xF9BD404A  LDRSH	R4, [SP, #74]
0x3ACE	0x1CA5    ADDS	R5, R4, #2
0x3AD0	0xB22D    SXTH	R5, R5
0x3AD2	0x2404    MOVS	R4, #4
0x3AD4	0xB224    SXTH	R4, R4
0x3AD6	0xFB95F6F4  SDIV	R6, R5, R4
0x3ADA	0xB236    SXTH	R6, R6
0x3ADC	0xF9BD404A  LDRSH	R4, [SP, #74]
0x3AE0	0x1CE5    ADDS	R5, R4, #3
0x3AE2	0xB22D    SXTH	R5, R5
0x3AE4	0x2404    MOVS	R4, #4
0x3AE6	0xB224    SXTH	R4, R4
0x3AE8	0xFB95F4F4  SDIV	R4, R5, R4
0x3AEC	0xB224    SXTH	R4, R4
0x3AEE	0x1B36    SUB	R6, R6, R4
0x3AF0	0xB236    SXTH	R6, R6
0x3AF2	0xF9BD404A  LDRSH	R4, [SP, #74]
0x3AF6	0x1C65    ADDS	R5, R4, #1
0x3AF8	0xB22D    SXTH	R5, R5
0x3AFA	0x2404    MOVS	R4, #4
0x3AFC	0xB224    SXTH	R4, R4
0x3AFE	0xFB95F4F4  SDIV	R4, R5, R4
0x3B02	0xB224    SXTH	R4, R4
0x3B04	0x1936    ADDS	R6, R6, R4
0x3B06	0xB236    SXTH	R6, R6
0x3B08	0xF9BD504A  LDRSH	R5, [SP, #74]
0x3B0C	0x2404    MOVS	R4, #4
0x3B0E	0xB224    SXTH	R4, R4
0x3B10	0xFB95F4F4  SDIV	R4, R5, R4
0x3B14	0xB224    SXTH	R4, R4
0x3B16	0x1B35    SUB	R5, R6, R4
0x3B18	0xB22D    SXTH	R5, R5
0x3B1A	0xB27C    SXTB	R4, R7
0x3B1C	0x0064    LSLS	R4, R4, #1
0x3B1E	0xB224    SXTH	R4, R4
0x3B20	0xF1C40401  RSB	R4, R4, #1
0x3B24	0xB224    SXTH	R4, R4
0x3B26	0x436C    MULS	R4, R5, R4
; conversionPattern start address is: 36 (R9)
0x3B28	0xFA4FF984  SXTB	R9, R4
;__irgrid2_driver.c, 1237 :: 		if(mode == 0)
0x3B2C	0xF89D4028  LDRB	R4, [SP, #40]
0x3B30	0xB914    CBNZ	R4, L_irgrid2_CalculateTo180
; chessPattern end address is: 0 (R0)
;__irgrid2_driver.c, 1239 :: 		pattern = ilPattern;
; pattern start address is: 0 (R0)
0x3B32	0xF99D0029  LDRSB	R0, [SP, #41]
;__irgrid2_driver.c, 1240 :: 		}
; pattern end address is: 0 (R0)
0x3B36	0xE001    B	L_irgrid2_CalculateTo181
L_irgrid2_CalculateTo180:
;__irgrid2_driver.c, 1243 :: 		pattern = chessPattern;
; pattern start address is: 4 (R1)
; chessPattern start address is: 0 (R0)
0x3B38	0xB241    SXTB	R1, R0
; chessPattern end address is: 0 (R0)
; pattern end address is: 4 (R1)
0x3B3A	0xB248    SXTB	R0, R1
;__irgrid2_driver.c, 1244 :: 		}
L_irgrid2_CalculateTo181:
;__irgrid2_driver.c, 1246 :: 		if(pattern == frameData[833])
; pattern start address is: 0 (R0)
0x3B3C	0x9C13    LDR	R4, [SP, #76]
0x3B3E	0xF2046482  ADDW	R4, R4, #1666
0x3B42	0x8824    LDRH	R4, [R4, #0]
0x3B44	0x42A0    CMP	R0, R4
0x3B46	0xF0408197  BNE	L_irgrid2_CalculateTo182
; pattern end address is: 0 (R0)
;__irgrid2_driver.c, 1248 :: 		irData = frameData[pixelNumber];
0x3B4A	0xF9BD404A  LDRSH	R4, [SP, #74]
0x3B4E	0x0065    LSLS	R5, R4, #1
0x3B50	0x9C13    LDR	R4, [SP, #76]
0x3B52	0x1964    ADDS	R4, R4, R5
0x3B54	0x8824    LDRH	R4, [R4, #0]
0x3B56	0xB2A0    UXTH	R0, R4
0x3B58	0xF7FDFE1A  BL	__UnsignedIntegralToFloat+0
0x3B5C	0x9008    STR	R0, [SP, #32]
;__irgrid2_driver.c, 1249 :: 		if(irData > 32767)
0x3B5E	0x4ACB    LDR	R2, [PC, #812]
0x3B60	0xF7FDFF00  BL	__Compare_FP+0
0x3B64	0xF2400000  MOVW	R0, #0
0x3B68	0xDD00    BLE	L__irgrid2_CalculateTo319
0x3B6A	0x2001    MOVS	R0, #1
L__irgrid2_CalculateTo319:
0x3B6C	0xB128    CBZ	R0, L_irgrid2_CalculateTo183
;__irgrid2_driver.c, 1251 :: 		irData = irData - 65536;
0x3B6E	0x9808    LDR	R0, [SP, #32]
0x3B70	0xF04F428F  MOV	R2, #1199570944
0x3B74	0xF7FDFE74  BL	__Sub_FP+0
0x3B78	0x9008    STR	R0, [SP, #32]
;__irgrid2_driver.c, 1252 :: 		}
L_irgrid2_CalculateTo183:
;__irgrid2_driver.c, 1253 :: 		irData = irData * gain;
0x3B7A	0x9A05    LDR	R2, [SP, #20]
0x3B7C	0x9808    LDR	R0, [SP, #32]
0x3B7E	0xF7FCFDCF  BL	__Mul_FP+0
0x3B82	0x9008    STR	R0, [SP, #32]
;__irgrid2_driver.c, 1255 :: 		irData = irData - params->offset[pixelNumber]*(1 + params->kta[pixelNumber]*(ta - 25))*(1 + params->kv[pixelNumber]*(vdd - 3.3));
0x3B84	0x9C14    LDR	R4, [SP, #80]
0x3B86	0xF6044544  ADDW	R5, R4, #3140
0x3B8A	0xF9BD404A  LDRSH	R4, [SP, #74]
0x3B8E	0x0064    LSLS	R4, R4, #1
0x3B90	0x192C    ADDS	R4, R5, R4
0x3B92	0x9420    STR	R4, [SP, #128]
0x3B94	0x9D14    LDR	R5, [SP, #80]
0x3B96	0xF2412444  MOVW	R4, #4676
0x3B9A	0x192D    ADDS	R5, R5, R4
0x3B9C	0xF9BD404A  LDRSH	R4, [SP, #74]
0x3BA0	0x00A4    LSLS	R4, R4, #2
0x3BA2	0x9421    STR	R4, [SP, #132]
0x3BA4	0x192C    ADDS	R4, R5, R4
0x3BA6	0x941F    STR	R4, [SP, #124]
0x3BA8	0x9802    LDR	R0, [SP, #8]
0x3BAA	0x4AB9    LDR	R2, [PC, #740]
0x3BAC	0xF7FDFE58  BL	__Sub_FP+0
0x3BB0	0x9C1F    LDR	R4, [SP, #124]
0x3BB2	0x6822    LDR	R2, [R4, #0]
0x3BB4	0xF7FCFDB4  BL	__Mul_FP+0
0x3BB8	0xF04F527E  MOV	R2, #1065353216
0x3BBC	0xF7FCFCDC  BL	__Add_FP+0
0x3BC0	0x9C20    LDR	R4, [SP, #128]
0x3BC2	0x901F    STR	R0, [SP, #124]
0x3BC4	0xF9B40000  LDRSH	R0, [R4, #0]
0x3BC8	0xF7FDFC54  BL	__SignedIntegralToFloat+0
0x3BCC	0x9A1F    LDR	R2, [SP, #124]
0x3BCE	0xF7FCFDA7  BL	__Mul_FP+0
0x3BD2	0x9020    STR	R0, [SP, #128]
0x3BD4	0x9D14    LDR	R5, [SP, #80]
0x3BD6	0xF6416444  MOVW	R4, #7748
0x3BDA	0x192D    ADDS	R5, R5, R4
0x3BDC	0x9C21    LDR	R4, [SP, #132]
0x3BDE	0x192C    ADDS	R4, R5, R4
0x3BE0	0x941F    STR	R4, [SP, #124]
0x3BE2	0x9801    LDR	R0, [SP, #4]
0x3BE4	0x4AAB    LDR	R2, [PC, #684]
0x3BE6	0xF7FDFE3B  BL	__Sub_FP+0
0x3BEA	0x9C1F    LDR	R4, [SP, #124]
0x3BEC	0x6822    LDR	R2, [R4, #0]
0x3BEE	0xF7FCFD97  BL	__Mul_FP+0
0x3BF2	0xF04F527E  MOV	R2, #1065353216
0x3BF6	0xF7FCFCBF  BL	__Add_FP+0
0x3BFA	0x9A20    LDR	R2, [SP, #128]
0x3BFC	0xF7FCFD90  BL	__Mul_FP+0
0x3C00	0x9017    STR	R0, [SP, #92]
0x3C02	0x9A17    LDR	R2, [SP, #92]
0x3C04	0x9808    LDR	R0, [SP, #32]
0x3C06	0xF7FDFE2B  BL	__Sub_FP+0
0x3C0A	0x9008    STR	R0, [SP, #32]
;__irgrid2_driver.c, 1256 :: 		if(mode !=  params->calibrationModeEE)
0x3C0C	0x9C14    LDR	R4, [SP, #80]
0x3C0E	0x3425    ADDS	R4, #37
0x3C10	0x7825    LDRB	R5, [R4, #0]
0x3C12	0xF89D4028  LDRB	R4, [SP, #40]
0x3C16	0x42AC    CMP	R4, R5
0x3C18	0xD028    BEQ	L_irgrid2_CalculateTo184
;__irgrid2_driver.c, 1258 :: 		irData = irData + params->ilChessC[2] * (2 * ilPattern - 1) - params->ilChessC[1] * conversionPattern;
0x3C1A	0x9D14    LDR	R5, [SP, #80]
0x3C1C	0xF6422450  MOVW	R4, #10832
0x3C20	0x192C    ADDS	R4, R5, R4
0x3C22	0x9420    STR	R4, [SP, #128]
0x3C24	0x3408    ADDS	R4, #8
0x3C26	0x941F    STR	R4, [SP, #124]
0x3C28	0xF99D4029  LDRSB	R4, [SP, #41]
0x3C2C	0x0064    LSLS	R4, R4, #1
0x3C2E	0xB224    SXTH	R4, R4
0x3C30	0x1E64    SUBS	R4, R4, #1
0x3C32	0xB224    SXTH	R4, R4
0x3C34	0xB220    SXTH	R0, R4
0x3C36	0xF7FDFC1D  BL	__SignedIntegralToFloat+0
0x3C3A	0x9C1F    LDR	R4, [SP, #124]
0x3C3C	0x6822    LDR	R2, [R4, #0]
0x3C3E	0xF7FCFD6F  BL	__Mul_FP+0
0x3C42	0x9A08    LDR	R2, [SP, #32]
0x3C44	0xF7FCFC98  BL	__Add_FP+0
0x3C48	0x9C20    LDR	R4, [SP, #128]
0x3C4A	0x9020    STR	R0, [SP, #128]
0x3C4C	0x1D24    ADDS	R4, R4, #4
0x3C4E	0x941F    STR	R4, [SP, #124]
0x3C50	0xFA4FF089  SXTB	R0, R9
0x3C54	0xF7FDFC0E  BL	__SignedIntegralToFloat+0
; conversionPattern end address is: 36 (R9)
0x3C58	0x9C1F    LDR	R4, [SP, #124]
0x3C5A	0x6822    LDR	R2, [R4, #0]
0x3C5C	0xF7FCFD60  BL	__Mul_FP+0
0x3C60	0x9017    STR	R0, [SP, #92]
0x3C62	0x9A17    LDR	R2, [SP, #92]
0x3C64	0x9820    LDR	R0, [SP, #128]
0x3C66	0xF7FDFDFB  BL	__Sub_FP+0
0x3C6A	0x9008    STR	R0, [SP, #32]
;__irgrid2_driver.c, 1259 :: 		}
L_irgrid2_CalculateTo184:
;__irgrid2_driver.c, 1261 :: 		irData = irData / emissivity;
0x3C6C	0x9A15    LDR	R2, [SP, #84]
0x3C6E	0x9808    LDR	R0, [SP, #32]
0x3C70	0xF7FDFDA4  BL	__Div_FP+0
0x3C74	0x9008    STR	R0, [SP, #32]
;__irgrid2_driver.c, 1263 :: 		irData = irData - params->tgc * irDataCP[subPage];
0x3C76	0x9C14    LDR	R4, [SP, #80]
0x3C78	0xF2040618  ADDW	R6, R4, #24
0x3C7C	0x9621    STR	R6, [SP, #132]
0x3C7E	0xAD06    ADD	R5, SP, #24
0x3C80	0xF8BD4046  LDRH	R4, [SP, #70]
0x3C84	0x00A4    LSLS	R4, R4, #2
0x3C86	0x9420    STR	R4, [SP, #128]
0x3C88	0x192C    ADDS	R4, R5, R4
0x3C8A	0x6822    LDR	R2, [R4, #0]
0x3C8C	0x6830    LDR	R0, [R6, #0]
0x3C8E	0xF7FCFD47  BL	__Mul_FP+0
0x3C92	0x9017    STR	R0, [SP, #92]
0x3C94	0x9A17    LDR	R2, [SP, #92]
0x3C96	0x9808    LDR	R0, [SP, #32]
0x3C98	0xF7FDFDE2  BL	__Sub_FP+0
0x3C9C	0x9008    STR	R0, [SP, #32]
;__irgrid2_driver.c, 1265 :: 		alphaCompensated = (params->alpha[pixelNumber] - params->tgc * params->cpAlpha[subPage])*(1 + params->KsTa * (ta - 25));
0x3C9E	0x9C14    LDR	R4, [SP, #80]
0x3CA0	0xF2040544  ADDW	R5, R4, #68
0x3CA4	0xF9BD404A  LDRSH	R4, [SP, #74]
0x3CA8	0x00A4    LSLS	R4, R4, #2
0x3CAA	0x192C    ADDS	R4, R5, R4
0x3CAC	0x6824    LDR	R4, [R4, #0]
0x3CAE	0x941F    STR	R4, [SP, #124]
0x3CB0	0x9D14    LDR	R5, [SP, #80]
0x3CB2	0xF6422444  MOVW	R4, #10820
0x3CB6	0x192D    ADDS	R5, R5, R4
0x3CB8	0x9C20    LDR	R4, [SP, #128]
0x3CBA	0x192C    ADDS	R4, R5, R4
0x3CBC	0x6822    LDR	R2, [R4, #0]
0x3CBE	0x9C21    LDR	R4, [SP, #132]
0x3CC0	0x6820    LDR	R0, [R4, #0]
0x3CC2	0xF7FCFD2D  BL	__Mul_FP+0
0x3CC6	0x9017    STR	R0, [SP, #92]
0x3CC8	0x9A17    LDR	R2, [SP, #92]
0x3CCA	0x981F    LDR	R0, [SP, #124]
0x3CCC	0xF7FDFDC8  BL	__Sub_FP+0
0x3CD0	0x9020    STR	R0, [SP, #128]
0x3CD2	0x9C14    LDR	R4, [SP, #80]
0x3CD4	0x3428    ADDS	R4, #40
0x3CD6	0x941F    STR	R4, [SP, #124]
0x3CD8	0x9802    LDR	R0, [SP, #8]
0x3CDA	0x4A6D    LDR	R2, [PC, #436]
0x3CDC	0xF7FDFDC0  BL	__Sub_FP+0
0x3CE0	0x9C1F    LDR	R4, [SP, #124]
0x3CE2	0x6822    LDR	R2, [R4, #0]
0x3CE4	0xF7FCFD1C  BL	__Mul_FP+0
0x3CE8	0xF04F527E  MOV	R2, #1065353216
0x3CEC	0xF7FCFC44  BL	__Add_FP+0
0x3CF0	0x9A20    LDR	R2, [SP, #128]
0x3CF2	0xF7FCFD15  BL	__Mul_FP+0
0x3CF6	0x9009    STR	R0, [SP, #36]
;__irgrid2_driver.c, 1267 :: 		Sx = _pow(alphaCompensated, 3) * (irData + alphaCompensated * taTr);
0x3CF8	0x4967    LDR	R1, [PC, #412]
0x3CFA	0x4600    MOV	R0, R0
0x3CFC	0xF7FDFC98  BL	__irgrid2_driver__pow+0
0x3D00	0x901F    STR	R0, [SP, #124]
0x3D02	0x9A04    LDR	R2, [SP, #16]
0x3D04	0x9809    LDR	R0, [SP, #36]
0x3D06	0xF7FCFD0B  BL	__Mul_FP+0
0x3D0A	0x9A08    LDR	R2, [SP, #32]
0x3D0C	0xF7FCFC34  BL	__Add_FP+0
0x3D10	0x9A1F    LDR	R2, [SP, #124]
0x3D12	0xF7FCFD05  BL	__Mul_FP+0
0x3D16	0x900B    STR	R0, [SP, #44]
;__irgrid2_driver.c, 1268 :: 		Sx = _pow(Sx,0.25) * params->ksTo[1];
0x3D18	0xF04F517A  MOV	R1, #1048576000
0x3D1C	0x4600    MOV	R0, R0
0x3D1E	0xF7FDFC87  BL	__irgrid2_driver__pow+0
0x3D22	0x9C14    LDR	R4, [SP, #80]
0x3D24	0x342C    ADDS	R4, #44
0x3D26	0x941F    STR	R4, [SP, #124]
0x3D28	0x1D24    ADDS	R4, R4, #4
0x3D2A	0x6822    LDR	R2, [R4, #0]
0x3D2C	0xF7FCFCF8  BL	__Mul_FP+0
0x3D30	0x900B    STR	R0, [SP, #44]
;__irgrid2_driver.c, 1270 :: 		To = _pow((irData/(alphaCompensated * (1 - params->ksTo[1] * 273.15) + Sx) + taTr),0.25) - 273.15;
0x3D32	0x9C1F    LDR	R4, [SP, #124]
0x3D34	0x1D24    ADDS	R4, R4, #4
0x3D36	0x6822    LDR	R2, [R4, #0]
0x3D38	0x4858    LDR	R0, [PC, #352]
0x3D3A	0xF7FCFCF1  BL	__Mul_FP+0
0x3D3E	0x4602    MOV	R2, R0
0x3D40	0xF04F507E  MOV	R0, #1065353216
0x3D44	0xF7FDFD8C  BL	__Sub_FP+0
0x3D48	0x9A09    LDR	R2, [SP, #36]
0x3D4A	0xF7FCFCE9  BL	__Mul_FP+0
0x3D4E	0x9A0B    LDR	R2, [SP, #44]
0x3D50	0xF7FCFC12  BL	__Add_FP+0
0x3D54	0x9017    STR	R0, [SP, #92]
0x3D56	0x9A17    LDR	R2, [SP, #92]
0x3D58	0x9808    LDR	R0, [SP, #32]
0x3D5A	0xF7FDFD2F  BL	__Div_FP+0
0x3D5E	0x9A04    LDR	R2, [SP, #16]
0x3D60	0xF7FCFC0A  BL	__Add_FP+0
0x3D64	0xF04F517A  MOV	R1, #1048576000
0x3D68	0xF7FDFC62  BL	__irgrid2_driver__pow+0
0x3D6C	0x4A4B    LDR	R2, [PC, #300]
0x3D6E	0xF7FDFD77  BL	__Sub_FP+0
0x3D72	0x900C    STR	R0, [SP, #48]
;__irgrid2_driver.c, 1272 :: 		if(To < params->ct[1])
0x3D74	0x9C14    LDR	R4, [SP, #80]
0x3D76	0x343C    ADDS	R4, #60
0x3D78	0x1CA4    ADDS	R4, R4, #2
0x3D7A	0xF9B40000  LDRSH	R0, [R4, #0]
0x3D7E	0xF7FDFB79  BL	__SignedIntegralToFloat+0
0x3D82	0x9A0C    LDR	R2, [SP, #48]
0x3D84	0xF7FDFDEE  BL	__Compare_FP+0
0x3D88	0xF2400000  MOVW	R0, #0
0x3D8C	0xDD00    BLE	L__irgrid2_CalculateTo320
0x3D8E	0x2001    MOVS	R0, #1
L__irgrid2_CalculateTo320:
0x3D90	0xB120    CBZ	R0, L_irgrid2_CalculateTo185
;__irgrid2_driver.c, 1274 :: 		range = 0;
0x3D92	0x2400    MOVS	R4, #0
0x3D94	0xB264    SXTB	R4, R4
0x3D96	0xF88D4044  STRB	R4, [SP, #68]
;__irgrid2_driver.c, 1275 :: 		}
0x3D9A	0xE02B    B	L_irgrid2_CalculateTo186
L_irgrid2_CalculateTo185:
;__irgrid2_driver.c, 1276 :: 		else if(To < params->ct[2])
0x3D9C	0x9C14    LDR	R4, [SP, #80]
0x3D9E	0x343C    ADDS	R4, #60
0x3DA0	0x1D24    ADDS	R4, R4, #4
0x3DA2	0xF9B40000  LDRSH	R0, [R4, #0]
0x3DA6	0xF7FDFB65  BL	__SignedIntegralToFloat+0
0x3DAA	0x9A0C    LDR	R2, [SP, #48]
0x3DAC	0xF7FDFDDA  BL	__Compare_FP+0
0x3DB0	0xF2400000  MOVW	R0, #0
0x3DB4	0xDD00    BLE	L__irgrid2_CalculateTo321
0x3DB6	0x2001    MOVS	R0, #1
L__irgrid2_CalculateTo321:
0x3DB8	0xB120    CBZ	R0, L_irgrid2_CalculateTo187
;__irgrid2_driver.c, 1278 :: 		range = 1;
0x3DBA	0x2401    MOVS	R4, #1
0x3DBC	0xB264    SXTB	R4, R4
0x3DBE	0xF88D4044  STRB	R4, [SP, #68]
;__irgrid2_driver.c, 1279 :: 		}
0x3DC2	0xE017    B	L_irgrid2_CalculateTo188
L_irgrid2_CalculateTo187:
;__irgrid2_driver.c, 1280 :: 		else if(To < params->ct[3])
0x3DC4	0x9C14    LDR	R4, [SP, #80]
0x3DC6	0x343C    ADDS	R4, #60
0x3DC8	0x1DA4    ADDS	R4, R4, #6
0x3DCA	0xF9B40000  LDRSH	R0, [R4, #0]
0x3DCE	0xF7FDFB51  BL	__SignedIntegralToFloat+0
0x3DD2	0x9A0C    LDR	R2, [SP, #48]
0x3DD4	0xF7FDFDC6  BL	__Compare_FP+0
0x3DD8	0xF2400000  MOVW	R0, #0
0x3DDC	0xDD00    BLE	L__irgrid2_CalculateTo322
0x3DDE	0x2001    MOVS	R0, #1
L__irgrid2_CalculateTo322:
0x3DE0	0xB120    CBZ	R0, L_irgrid2_CalculateTo189
;__irgrid2_driver.c, 1282 :: 		range = 2;
0x3DE2	0x2402    MOVS	R4, #2
0x3DE4	0xB264    SXTB	R4, R4
0x3DE6	0xF88D4044  STRB	R4, [SP, #68]
;__irgrid2_driver.c, 1283 :: 		}
0x3DEA	0xE003    B	L_irgrid2_CalculateTo190
L_irgrid2_CalculateTo189:
;__irgrid2_driver.c, 1286 :: 		range = 3;
0x3DEC	0x2403    MOVS	R4, #3
0x3DEE	0xB264    SXTB	R4, R4
0x3DF0	0xF88D4044  STRB	R4, [SP, #68]
;__irgrid2_driver.c, 1287 :: 		}
L_irgrid2_CalculateTo190:
L_irgrid2_CalculateTo188:
L_irgrid2_CalculateTo186:
;__irgrid2_driver.c, 1289 :: 		To = _pow((irData / (alphaCompensated * alphaCorrR[range] * (1 + params->ksTo[range] * (To - params->ct[range]))) + taTr),0.25) - 273.15;
0x3DF4	0xAD0D    ADD	R5, SP, #52
0x3DF6	0xF99D4044  LDRSB	R4, [SP, #68]
0x3DFA	0x00A4    LSLS	R4, R4, #2
0x3DFC	0x941F    STR	R4, [SP, #124]
0x3DFE	0x192C    ADDS	R4, R5, R4
0x3E00	0x6822    LDR	R2, [R4, #0]
0x3E02	0x9809    LDR	R0, [SP, #36]
0x3E04	0xF7FCFC8C  BL	__Mul_FP+0
0x3E08	0x9020    STR	R0, [SP, #128]
0x3E0A	0x9C14    LDR	R4, [SP, #80]
0x3E0C	0xF204052C  ADDW	R5, R4, #44
0x3E10	0x9C1F    LDR	R4, [SP, #124]
0x3E12	0x192C    ADDS	R4, R5, R4
0x3E14	0x941F    STR	R4, [SP, #124]
0x3E16	0x9C14    LDR	R4, [SP, #80]
0x3E18	0xF204053C  ADDW	R5, R4, #60
0x3E1C	0xF99D4044  LDRSB	R4, [SP, #68]
0x3E20	0x0064    LSLS	R4, R4, #1
0x3E22	0x192C    ADDS	R4, R5, R4
0x3E24	0xF9B40000  LDRSH	R0, [R4, #0]
0x3E28	0xF7FDFB24  BL	__SignedIntegralToFloat+0
0x3E2C	0x9017    STR	R0, [SP, #92]
0x3E2E	0x9A17    LDR	R2, [SP, #92]
0x3E30	0x980C    LDR	R0, [SP, #48]
0x3E32	0xF7FDFD15  BL	__Sub_FP+0
0x3E36	0x9C1F    LDR	R4, [SP, #124]
0x3E38	0x6822    LDR	R2, [R4, #0]
0x3E3A	0xF7FCFC71  BL	__Mul_FP+0
0x3E3E	0xF04F527E  MOV	R2, #1065353216
0x3E42	0xF7FCFB99  BL	__Add_FP+0
0x3E46	0x9A20    LDR	R2, [SP, #128]
0x3E48	0xF7FCFC6A  BL	__Mul_FP+0
0x3E4C	0x9017    STR	R0, [SP, #92]
0x3E4E	0x9A17    LDR	R2, [SP, #92]
0x3E50	0x9808    LDR	R0, [SP, #32]
0x3E52	0xF7FDFCB3  BL	__Div_FP+0
0x3E56	0x9A04    LDR	R2, [SP, #16]
0x3E58	0xF7FCFB8E  BL	__Add_FP+0
0x3E5C	0xF04F517A  MOV	R1, #1048576000
0x3E60	0xF7FDFBE6  BL	__irgrid2_driver__pow+0
0x3E64	0x4A0D    LDR	R2, [PC, #52]
0x3E66	0xF7FDFCFB  BL	__Sub_FP+0
0x3E6A	0x900C    STR	R0, [SP, #48]
;__irgrid2_driver.c, 1291 :: 		result[pixelNumber] = To;
0x3E6C	0xF9BD404A  LDRSH	R4, [SP, #74]
0x3E70	0x00A5    LSLS	R5, R4, #2
0x3E72	0x9C23    LDR	R4, [SP, #140]
0x3E74	0x1964    ADDS	R4, R4, R5
0x3E76	0x6020    STR	R0, [R4, #0]
;__irgrid2_driver.c, 1292 :: 		}
L_irgrid2_CalculateTo182:
;__irgrid2_driver.c, 1231 :: 		for(pixelNumber = 0; pixelNumber < 768; pixelNumber++)
0x3E78	0xF9BD404A  LDRSH	R4, [SP, #74]
0x3E7C	0x1C64    ADDS	R4, R4, #1
0x3E7E	0xF8AD404A  STRH	R4, [SP, #74]
;__irgrid2_driver.c, 1293 :: 		}
0x3E82	0xE5EE    B	L_irgrid2_CalculateTo177
L_irgrid2_CalculateTo178:
;__irgrid2_driver.c, 1294 :: 		}
L_end_irgrid2_CalculateTo:
0x3E84	0xF8DDE000  LDR	LR, [SP, #0]
0x3E88	0xB023    ADD	SP, SP, #140
0x3E8A	0x4770    BX	LR
0x3E8C	0xFE0046FF  	#1191181824
0x3E90	0x000041C8  	#1103626240
0x3E94	0x33334053  	#1079194419
0x3E98	0x00004040  	#1077936128
0x3E9C	0x93334388  	#1133024051
; end of _irgrid2_CalculateTo
_FloatToStr:
;__Lib_Conversions.c, 631 :: 		
; str start address is: 4 (R1)
; fnum start address is: 0 (R0)
0x42D8	0xB082    SUB	SP, SP, #8
0x42DA	0xF8CDE000  STR	LR, [SP, #0]
0x42DE	0x4602    MOV	R2, R0
0x42E0	0x460C    MOV	R4, R1
; str end address is: 4 (R1)
; fnum end address is: 0 (R0)
; fnum start address is: 8 (R2)
; str start address is: 16 (R4)
;__Lib_Conversions.c, 633 :: 		
; bpoint start address is: 0 (R0)
0x42E2	0x2000    MOVS	R0, #0
;__Lib_Conversions.c, 635 :: 		
; dexpon start address is: 4 (R1)
0x42E4	0x2100    MOVS	R1, #0
0x42E6	0xB249    SXTB	R1, R1
;__Lib_Conversions.c, 638 :: 		
0x42E8	0x9201    STR	R2, [SP, #4]
; fnum end address is: 8 (R2)
;__Lib_Conversions.c, 639 :: 		
0x42EA	0x9A01    LDR	R2, [SP, #4]
0x42EC	0xF1B23FFF  CMP	R2, #-1
0x42F0	0xD106    BNE	L_FloatToStr117
; bpoint end address is: 0 (R0)
; dexpon end address is: 4 (R1)
;__Lib_Conversions.c, 640 :: 		
0x42F2	0x4A71    LDR	R2, [PC, #452]
0x42F4	0x4611    MOV	R1, R2
0x42F6	0x4620    MOV	R0, R4
; str end address is: 16 (R4)
0x42F8	0xF7FFFF6C  BL	_strcpy+0
;__Lib_Conversions.c, 641 :: 		
0x42FC	0x2003    MOVS	R0, #3
0x42FE	0xE0D7    B	L_end_FloatToStr
;__Lib_Conversions.c, 642 :: 		
L_FloatToStr117:
;__Lib_Conversions.c, 643 :: 		
; str start address is: 16 (R4)
; i start address is: 20 (R5)
; dexpon start address is: 4 (R1)
; bpoint start address is: 0 (R0)
0x4300	0x2501    MOVS	R5, #1
;__Lib_Conversions.c, 644 :: 		
0x4302	0xAA01    ADD	R2, SP, #4
0x4304	0x1CD2    ADDS	R2, R2, #3
0x4306	0x7812    LDRB	R2, [R2, #0]
0x4308	0xF0020280  AND	R2, R2, #128
0x430C	0xB2D2    UXTB	R2, R2
0x430E	0xB172    CBZ	R2, L__FloatToStr179
;__Lib_Conversions.c, 645 :: 		
0x4310	0xAA01    ADD	R2, SP, #4
0x4312	0x1CD3    ADDS	R3, R2, #3
0x4314	0x781A    LDRB	R2, [R3, #0]
0x4316	0xF0820280  EOR	R2, R2, #128
0x431A	0x701A    STRB	R2, [R3, #0]
;__Lib_Conversions.c, 646 :: 		
0x431C	0x1C6A    ADDS	R2, R5, #1
; i end address is: 20 (R5)
; i start address is: 12 (R3)
0x431E	0xB2D3    UXTB	R3, R2
;__Lib_Conversions.c, 647 :: 		
0x4320	0x222D    MOVS	R2, #45
0x4322	0x7022    STRB	R2, [R4, #0]
0x4324	0x1C62    ADDS	R2, R4, #1
0x4326	0x4614    MOV	R4, R2
; i end address is: 12 (R3)
; str end address is: 16 (R4)
0x4328	0xB2DE    UXTB	R6, R3
0x432A	0x46A2    MOV	R10, R4
;__Lib_Conversions.c, 648 :: 		
0x432C	0xE001    B	L_FloatToStr118
L__FloatToStr179:
;__Lib_Conversions.c, 644 :: 		
0x432E	0x46A2    MOV	R10, R4
0x4330	0xB2EE    UXTB	R6, R5
;__Lib_Conversions.c, 648 :: 		
L_FloatToStr118:
;__Lib_Conversions.c, 649 :: 		
; str start address is: 40 (R10)
; i start address is: 24 (R6)
0x4332	0x9A01    LDR	R2, [SP, #4]
0x4334	0xB932    CBNZ	R2, L_FloatToStr119
; bpoint end address is: 0 (R0)
; dexpon end address is: 4 (R1)
; i end address is: 24 (R6)
;__Lib_Conversions.c, 650 :: 		
0x4336	0x4A61    LDR	R2, [PC, #388]
0x4338	0x4611    MOV	R1, R2
0x433A	0x4650    MOV	R0, R10
; str end address is: 40 (R10)
0x433C	0xF7FFFF4A  BL	_strcpy+0
;__Lib_Conversions.c, 651 :: 		
0x4340	0x2000    MOVS	R0, #0
0x4342	0xE0B5    B	L_end_FloatToStr
;__Lib_Conversions.c, 652 :: 		
L_FloatToStr119:
;__Lib_Conversions.c, 653 :: 		
; str start address is: 40 (R10)
; i start address is: 24 (R6)
; dexpon start address is: 4 (R1)
; bpoint start address is: 0 (R0)
0x4344	0x9A01    LDR	R2, [SP, #4]
0x4346	0xF1B24FFF  CMP	R2, #2139095040
0x434A	0xD106    BNE	L_FloatToStr120
; bpoint end address is: 0 (R0)
; dexpon end address is: 4 (R1)
;__Lib_Conversions.c, 654 :: 		
0x434C	0x4A5C    LDR	R2, [PC, #368]
0x434E	0x4611    MOV	R1, R2
0x4350	0x4650    MOV	R0, R10
; str end address is: 40 (R10)
0x4352	0xF7FFFF3F  BL	_strcpy+0
;__Lib_Conversions.c, 655 :: 		
0x4356	0xB2F0    UXTB	R0, R6
; i end address is: 24 (R6)
0x4358	0xE0AA    B	L_end_FloatToStr
;__Lib_Conversions.c, 656 :: 		
L_FloatToStr120:
;__Lib_Conversions.c, 664 :: 		
; str start address is: 40 (R10)
; dexpon start address is: 4 (R1)
; bpoint start address is: 0 (R0)
0x435A	0xFA5FF980  UXTB	R9, R0
; dexpon end address is: 4 (R1)
; str end address is: 40 (R10)
0x435E	0xFA4FF881  SXTB	R8, R1
L_FloatToStr121:
; bpoint end address is: 0 (R0)
; str start address is: 40 (R10)
; dexpon start address is: 32 (R8)
; bpoint start address is: 36 (R9)
0x4362	0x9A01    LDR	R2, [SP, #4]
0x4364	0xF04F507E  MOV	R0, #1065353216
0x4368	0xF7FDFAFC  BL	__Compare_FP+0
0x436C	0xF2400000  MOVW	R0, #0
0x4370	0xDD00    BLE	L__FloatToStr239
0x4372	0x2001    MOVS	R0, #1
L__FloatToStr239:
0x4374	0xB148    CBZ	R0, L_FloatToStr122
;__Lib_Conversions.c, 665 :: 		
0x4376	0x9A01    LDR	R2, [SP, #4]
0x4378	0x4852    LDR	R0, [PC, #328]
0x437A	0xF7FCF9D1  BL	__Mul_FP+0
0x437E	0x9001    STR	R0, [SP, #4]
;__Lib_Conversions.c, 666 :: 		
0x4380	0xF1A80801  SUB	R8, R8, #1
0x4384	0xFA4FF888  SXTB	R8, R8
;__Lib_Conversions.c, 667 :: 		
0x4388	0xE7EB    B	L_FloatToStr121
L_FloatToStr122:
;__Lib_Conversions.c, 672 :: 		
; str end address is: 40 (R10)
; dexpon end address is: 32 (R8)
L_FloatToStr123:
; bpoint end address is: 36 (R9)
; bpoint start address is: 36 (R9)
; dexpon start address is: 32 (R8)
; str start address is: 40 (R10)
0x438A	0x9A01    LDR	R2, [SP, #4]
0x438C	0x484D    LDR	R0, [PC, #308]
0x438E	0xF7FDFAE9  BL	__Compare_FP+0
0x4392	0xF2400000  MOVW	R0, #0
0x4396	0xDC00    BGT	L__FloatToStr240
0x4398	0x2001    MOVS	R0, #1
L__FloatToStr240:
0x439A	0xB148    CBZ	R0, L_FloatToStr124
;__Lib_Conversions.c, 673 :: 		
0x439C	0x9A01    LDR	R2, [SP, #4]
0x439E	0x484A    LDR	R0, [PC, #296]
0x43A0	0xF7FCF9BE  BL	__Mul_FP+0
0x43A4	0x9001    STR	R0, [SP, #4]
;__Lib_Conversions.c, 674 :: 		
0x43A6	0xF1080801  ADD	R8, R8, #1
0x43AA	0xFA4FF888  SXTB	R8, R8
;__Lib_Conversions.c, 675 :: 		
0x43AE	0xE7EC    B	L_FloatToStr123
L_FloatToStr124:
;__Lib_Conversions.c, 680 :: 		
0x43B0	0x9A01    LDR	R2, [SP, #4]
0x43B2	0x0052    LSLS	R2, R2, #1
0x43B4	0x9201    STR	R2, [SP, #4]
;__Lib_Conversions.c, 689 :: 		
0x43B6	0xAA01    ADD	R2, SP, #4
0x43B8	0x1CD2    ADDS	R2, R2, #3
0x43BA	0x7812    LDRB	R2, [R2, #0]
0x43BC	0x3A7F    SUBS	R2, #127
; d start address is: 0 (R0)
0x43BE	0xB2D0    UXTB	R0, R2
;__Lib_Conversions.c, 692 :: 		
0x43C0	0xAA01    ADD	R2, SP, #4
0x43C2	0x1CD3    ADDS	R3, R2, #3
0x43C4	0x2201    MOVS	R2, #1
0x43C6	0x701A    STRB	R2, [R3, #0]
;__Lib_Conversions.c, 693 :: 		
0x43C8	0x9A01    LDR	R2, [SP, #4]
0x43CA	0x4082    LSLS	R2, R0
; d end address is: 0 (R0)
0x43CC	0x9201    STR	R2, [SP, #4]
;__Lib_Conversions.c, 694 :: 		
0x43CE	0xAA01    ADD	R2, SP, #4
0x43D0	0x1CD2    ADDS	R2, R2, #3
0x43D2	0x7812    LDRB	R2, [R2, #0]
0x43D4	0x3230    ADDS	R2, #48
0x43D6	0xF88A2000  STRB	R2, [R10, #0]
0x43DA	0xF10A0001  ADD	R0, R10, #1
; str end address is: 40 (R10)
; str start address is: 0 (R0)
;__Lib_Conversions.c, 695 :: 		
0x43DE	0xF1B80F01  CMP	R8, #1
0x43E2	0xDB06    BLT	L__FloatToStr178
0x43E4	0xF1B80F06  CMP	R8, #6
0x43E8	0xDC03    BGT	L__FloatToStr177
0x43EA	0x4605    MOV	R5, R0
; bpoint end address is: 36 (R9)
0x43EC	0xFA5FF189  UXTB	R1, R9
0x43F0	0xE003    B	L_FloatToStr127
L__FloatToStr178:
L__FloatToStr177:
;__Lib_Conversions.c, 696 :: 		
0x43F2	0x222E    MOVS	R2, #46
0x43F4	0x7002    STRB	R2, [R0, #0]
0x43F6	0x1C45    ADDS	R5, R0, #1
; str end address is: 0 (R0)
; str start address is: 20 (R5)
;__Lib_Conversions.c, 697 :: 		
; bpoint start address is: 4 (R1)
0x43F8	0x2101    MOVS	R1, #1
; str end address is: 20 (R5)
; bpoint end address is: 4 (R1)
;__Lib_Conversions.c, 698 :: 		
L_FloatToStr127:
;__Lib_Conversions.c, 699 :: 		
; bpoint start address is: 4 (R1)
; str start address is: 20 (R5)
; d start address is: 0 (R0)
0x43FA	0x2006    MOVS	R0, #6
; dexpon end address is: 32 (R8)
; str end address is: 20 (R5)
; bpoint end address is: 4 (R1)
; d end address is: 0 (R0)
0x43FC	0xFA4FF488  SXTB	R4, R8
L_FloatToStr128:
; d start address is: 0 (R0)
; str start address is: 20 (R5)
; bpoint start address is: 4 (R1)
; dexpon start address is: 16 (R4)
0x4400	0xB300    CBZ	R0, L_FloatToStr129
;__Lib_Conversions.c, 700 :: 		
0x4402	0xAA01    ADD	R2, SP, #4
0x4404	0x1CD3    ADDS	R3, R2, #3
0x4406	0x2200    MOVS	R2, #0
0x4408	0x701A    STRB	R2, [R3, #0]
;__Lib_Conversions.c, 701 :: 		
0x440A	0x9A01    LDR	R2, [SP, #4]
0x440C	0x0093    LSLS	R3, R2, #2
0x440E	0x9A01    LDR	R2, [SP, #4]
0x4410	0x18D2    ADDS	R2, R2, R3
0x4412	0x9201    STR	R2, [SP, #4]
;__Lib_Conversions.c, 702 :: 		
0x4414	0x9A01    LDR	R2, [SP, #4]
0x4416	0x0052    LSLS	R2, R2, #1
0x4418	0x9201    STR	R2, [SP, #4]
;__Lib_Conversions.c, 703 :: 		
0x441A	0xAA01    ADD	R2, SP, #4
0x441C	0x1CD2    ADDS	R2, R2, #3
0x441E	0x7812    LDRB	R2, [R2, #0]
0x4420	0x3230    ADDS	R2, #48
0x4422	0x702A    STRB	R2, [R5, #0]
0x4424	0x1C6D    ADDS	R5, R5, #1
;__Lib_Conversions.c, 704 :: 		
0x4426	0xB951    CBNZ	R1, L__FloatToStr181
;__Lib_Conversions.c, 705 :: 		
0x4428	0x1E62    SUBS	R2, R4, #1
0x442A	0xB252    SXTB	R2, R2
; dexpon end address is: 16 (R4)
; dexpon start address is: 12 (R3)
0x442C	0xB253    SXTB	R3, R2
0x442E	0xB922    CBNZ	R2, L__FloatToStr180
; bpoint end address is: 4 (R1)
;__Lib_Conversions.c, 706 :: 		
0x4430	0x222E    MOVS	R2, #46
0x4432	0x702A    STRB	R2, [R5, #0]
0x4434	0x1C6D    ADDS	R5, R5, #1
;__Lib_Conversions.c, 707 :: 		
; bpoint start address is: 4 (R1)
0x4436	0x2101    MOVS	R1, #1
; str end address is: 20 (R5)
; bpoint end address is: 4 (R1)
;__Lib_Conversions.c, 708 :: 		
0x4438	0xE7FF    B	L_FloatToStr132
L__FloatToStr180:
;__Lib_Conversions.c, 705 :: 		
;__Lib_Conversions.c, 708 :: 		
L_FloatToStr132:
; bpoint start address is: 4 (R1)
; str start address is: 20 (R5)
0x443A	0xB25C    SXTB	R4, R3
; str end address is: 20 (R5)
; bpoint end address is: 4 (R1)
; dexpon end address is: 12 (R3)
0x443C	0xE7FF    B	L_FloatToStr131
L__FloatToStr181:
;__Lib_Conversions.c, 704 :: 		
;__Lib_Conversions.c, 708 :: 		
L_FloatToStr131:
;__Lib_Conversions.c, 699 :: 		
; str start address is: 20 (R5)
; bpoint start address is: 4 (R1)
; dexpon start address is: 16 (R4)
0x443E	0x1E40    SUBS	R0, R0, #1
0x4440	0xB2C0    UXTB	R0, R0
;__Lib_Conversions.c, 709 :: 		
; bpoint end address is: 4 (R1)
; d end address is: 0 (R0)
0x4442	0xE7DD    B	L_FloatToStr128
L_FloatToStr129:
;__Lib_Conversions.c, 710 :: 		
0x4444	0x4629    MOV	R1, R5
; dexpon end address is: 16 (R4)
0x4446	0xB260    SXTB	R0, R4
L_FloatToStr133:
; str end address is: 20 (R5)
; dexpon start address is: 0 (R0)
; str start address is: 4 (R1)
0x4448	0x1E4A    SUBS	R2, R1, #1
0x444A	0x7812    LDRB	R2, [R2, #0]
0x444C	0x2A30    CMP	R2, #48
0x444E	0xD101    BNE	L_FloatToStr134
;__Lib_Conversions.c, 711 :: 		
0x4450	0x1E49    SUBS	R1, R1, #1
0x4452	0xE7F9    B	L_FloatToStr133
L_FloatToStr134:
;__Lib_Conversions.c, 712 :: 		
0x4454	0x1E4A    SUBS	R2, R1, #1
0x4456	0x7812    LDRB	R2, [R2, #0]
0x4458	0x2A2E    CMP	R2, #46
0x445A	0xD101    BNE	L__FloatToStr182
;__Lib_Conversions.c, 713 :: 		
0x445C	0x1E49    SUBS	R1, R1, #1
; str end address is: 4 (R1)
0x445E	0xE7FF    B	L_FloatToStr135
L__FloatToStr182:
;__Lib_Conversions.c, 712 :: 		
;__Lib_Conversions.c, 713 :: 		
L_FloatToStr135:
;__Lib_Conversions.c, 714 :: 		
; str start address is: 4 (R1)
0x4460	0xB310    CBZ	R0, L__FloatToStr185
;__Lib_Conversions.c, 715 :: 		
0x4462	0x2265    MOVS	R2, #101
0x4464	0x700A    STRB	R2, [R1, #0]
0x4466	0x1C49    ADDS	R1, R1, #1
;__Lib_Conversions.c, 716 :: 		
0x4468	0x2800    CMP	R0, #0
0x446A	0xDA06    BGE	L__FloatToStr183
;__Lib_Conversions.c, 717 :: 		
0x446C	0x222D    MOVS	R2, #45
0x446E	0x700A    STRB	R2, [R1, #0]
0x4470	0x1C49    ADDS	R1, R1, #1
;__Lib_Conversions.c, 718 :: 		
0x4472	0x4242    RSBS	R2, R0, #0
0x4474	0xB250    SXTB	R0, R2
; dexpon end address is: 0 (R0)
; str end address is: 4 (R1)
0x4476	0xB243    SXTB	R3, R0
;__Lib_Conversions.c, 719 :: 		
0x4478	0xE000    B	L_FloatToStr137
L__FloatToStr183:
;__Lib_Conversions.c, 716 :: 		
0x447A	0xB243    SXTB	R3, R0
;__Lib_Conversions.c, 719 :: 		
L_FloatToStr137:
;__Lib_Conversions.c, 720 :: 		
; dexpon start address is: 12 (R3)
; str start address is: 4 (R1)
; d start address is: 0 (R0)
0x447C	0xB2D8    UXTB	R0, R3
;__Lib_Conversions.c, 721 :: 		
0x447E	0xB2DA    UXTB	R2, R3
; dexpon end address is: 12 (R3)
0x4480	0x2A09    CMP	R2, #9
0x4482	0xD907    BLS	L__FloatToStr184
;__Lib_Conversions.c, 722 :: 		
0x4484	0x220A    MOVS	R2, #10
0x4486	0xFBB0F2F2  UDIV	R2, R0, R2
0x448A	0xB2D2    UXTB	R2, R2
0x448C	0x3230    ADDS	R2, #48
0x448E	0x700A    STRB	R2, [R1, #0]
0x4490	0x1C49    ADDS	R1, R1, #1
; str end address is: 4 (R1)
0x4492	0xE7FF    B	L_FloatToStr138
L__FloatToStr184:
;__Lib_Conversions.c, 721 :: 		
;__Lib_Conversions.c, 722 :: 		
L_FloatToStr138:
;__Lib_Conversions.c, 723 :: 		
; str start address is: 4 (R1)
0x4494	0x230A    MOVS	R3, #10
0x4496	0xFBB0F2F3  UDIV	R2, R0, R3
0x449A	0xFB030212  MLS	R2, R3, R2, R0
0x449E	0xB2D2    UXTB	R2, R2
; d end address is: 0 (R0)
0x44A0	0x3230    ADDS	R2, #48
0x44A2	0x700A    STRB	R2, [R1, #0]
0x44A4	0x1C48    ADDS	R0, R1, #1
; str end address is: 4 (R1)
; str start address is: 0 (R0)
; str end address is: 0 (R0)
;__Lib_Conversions.c, 724 :: 		
0x44A6	0xE000    B	L_FloatToStr136
L__FloatToStr185:
;__Lib_Conversions.c, 714 :: 		
0x44A8	0x4608    MOV	R0, R1
;__Lib_Conversions.c, 724 :: 		
L_FloatToStr136:
;__Lib_Conversions.c, 725 :: 		
; str start address is: 0 (R0)
0x44AA	0x2200    MOVS	R2, #0
0x44AC	0x7002    STRB	R2, [R0, #0]
; str end address is: 0 (R0)
;__Lib_Conversions.c, 726 :: 		
0x44AE	0x2000    MOVS	R0, #0
;__Lib_Conversions.c, 727 :: 		
L_end_FloatToStr:
0x44B0	0xF8DDE000  LDR	LR, [SP, #0]
0x44B4	0xB002    ADD	SP, SP, #8
0x44B6	0x4770    BX	LR
0x44B8	0x007A2000  	?lstr1___Lib_Conversions+0
0x44BC	0x007E2000  	?lstr2___Lib_Conversions+0
0x44C0	0x00802000  	?lstr3___Lib_Conversions+0
0x44C4	0x00004120  	#1092616192
0x44C8	0xCCCD3DCC  	#1036831949
; end of _FloatToStr
_strcpy:
;__Lib_CString.c, 133 :: 		
; from start address is: 4 (R1)
; to start address is: 0 (R0)
0x41D4	0xB081    SUB	SP, SP, #4
0x41D6	0x9100    STR	R1, [SP, #0]
0x41D8	0x4601    MOV	R1, R0
0x41DA	0x9800    LDR	R0, [SP, #0]
; from end address is: 4 (R1)
; to end address is: 0 (R0)
; to start address is: 4 (R1)
; from start address is: 0 (R0)
;__Lib_CString.c, 136 :: 		
; cp start address is: 12 (R3)
0x41DC	0x460B    MOV	R3, R1
; cp end address is: 12 (R3)
; to end address is: 4 (R1)
;__Lib_CString.c, 137 :: 		
L_strcpy34:
; cp start address is: 20 (R5)
; cp start address is: 12 (R3)
; from start address is: 0 (R0)
; to start address is: 4 (R1)
0x41DE	0x461C    MOV	R4, R3
0x41E0	0x1C5A    ADDS	R2, R3, #1
; cp end address is: 12 (R3)
; cp start address is: 20 (R5)
0x41E2	0x4615    MOV	R5, R2
; cp end address is: 20 (R5)
0x41E4	0x4603    MOV	R3, R0
0x41E6	0x1C42    ADDS	R2, R0, #1
0x41E8	0x4610    MOV	R0, R2
; from end address is: 0 (R0)
0x41EA	0x781A    LDRB	R2, [R3, #0]
0x41EC	0x7022    STRB	R2, [R4, #0]
0x41EE	0x7822    LDRB	R2, [R4, #0]
0x41F0	0xB10A    CBZ	R2, L_strcpy35
; cp end address is: 20 (R5)
; from end address is: 0 (R0)
;__Lib_CString.c, 138 :: 		
; from start address is: 0 (R0)
; cp start address is: 20 (R5)
; cp end address is: 20 (R5)
; from end address is: 0 (R0)
0x41F2	0x462B    MOV	R3, R5
0x41F4	0xE7F3    B	L_strcpy34
L_strcpy35:
;__Lib_CString.c, 139 :: 		
0x41F6	0x4608    MOV	R0, R1
; to end address is: 4 (R1)
;__Lib_CString.c, 140 :: 		
L_end_strcpy:
0x41F8	0xB001    ADD	SP, SP, #4
0x41FA	0x4770    BX	LR
; end of _strcpy
_Delay_1ms:
;__Lib_Delays.c, 41 :: 		void Delay_1ms() {
;__Lib_Delays.c, 42 :: 		Delay_ms(1);
0x4248	0xF64267DF  MOVW	R7, #11999
0x424C	0xF2C00700  MOVT	R7, #0
L_Delay_1ms14:
0x4250	0x1E7F    SUBS	R7, R7, #1
0x4252	0xD1FD    BNE	L_Delay_1ms14
0x4254	0xBF00    NOP
0x4256	0xBF00    NOP
0x4258	0xBF00    NOP
0x425A	0xBF00    NOP
0x425C	0xBF00    NOP
;__Lib_Delays.c, 43 :: 		}
L_end_Delay_1ms:
0x425E	0x4770    BX	LR
; end of _Delay_1ms
__Lib_System_105_107_InitialSetUpRCCRCC2:
;__Lib_System_105_107.c, 383 :: 		
0x483C	0xB081    SUB	SP, SP, #4
0x483E	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_System_105_107.c, 386 :: 		
; ulRCC_CR start address is: 8 (R2)
0x4842	0x4A46    LDR	R2, [PC, #280]
;__Lib_System_105_107.c, 387 :: 		
; ulRCC_CFGR start address is: 12 (R3)
0x4844	0x4B46    LDR	R3, [PC, #280]
;__Lib_System_105_107.c, 388 :: 		
; ulRCC_CFGR2 start address is: 16 (R4)
0x4846	0x4C47    LDR	R4, [PC, #284]
;__Lib_System_105_107.c, 389 :: 		
; Fosc_kHz start address is: 4 (R1)
0x4848	0x4947    LDR	R1, [PC, #284]
;__Lib_System_105_107.c, 396 :: 		
0x484A	0xF64B3080  MOVW	R0, #48000
0x484E	0x4281    CMP	R1, R0
0x4850	0xD906    BLS	L___Lib_System_105_107_InitialSetUpRCCRCC232
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_105_107.c, 397 :: 		
0x4852	0x4846    LDR	R0, [PC, #280]
0x4854	0x6800    LDR	R0, [R0, #0]
0x4856	0xF0400102  ORR	R1, R0, #2
0x485A	0x4844    LDR	R0, [PC, #272]
0x485C	0x6001    STR	R1, [R0, #0]
0x485E	0xE011    B	L___Lib_System_105_107_InitialSetUpRCCRCC233
L___Lib_System_105_107_InitialSetUpRCCRCC232:
;__Lib_System_105_107.c, 398 :: 		
; Fosc_kHz start address is: 4 (R1)
0x4860	0xF64550C0  MOVW	R0, #24000
0x4864	0x4281    CMP	R1, R0
0x4866	0xD906    BLS	L___Lib_System_105_107_InitialSetUpRCCRCC234
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_105_107.c, 399 :: 		
0x4868	0x4840    LDR	R0, [PC, #256]
0x486A	0x6800    LDR	R0, [R0, #0]
0x486C	0xF0400101  ORR	R1, R0, #1
0x4870	0x483E    LDR	R0, [PC, #248]
0x4872	0x6001    STR	R1, [R0, #0]
0x4874	0xE006    B	L___Lib_System_105_107_InitialSetUpRCCRCC235
L___Lib_System_105_107_InitialSetUpRCCRCC234:
;__Lib_System_105_107.c, 401 :: 		
0x4876	0x483D    LDR	R0, [PC, #244]
0x4878	0x6801    LDR	R1, [R0, #0]
0x487A	0xF06F0007  MVN	R0, #7
0x487E	0x4001    ANDS	R1, R0
0x4880	0x483A    LDR	R0, [PC, #232]
0x4882	0x6001    STR	R1, [R0, #0]
L___Lib_System_105_107_InitialSetUpRCCRCC235:
L___Lib_System_105_107_InitialSetUpRCCRCC233:
;__Lib_System_105_107.c, 403 :: 		
0x4884	0xF7FFFEA8  BL	__Lib_System_105_107_SystemClockSetDefault+0
;__Lib_System_105_107.c, 405 :: 		
0x4888	0x4839    LDR	R0, [PC, #228]
0x488A	0x6003    STR	R3, [R0, #0]
;__Lib_System_105_107.c, 406 :: 		
0x488C	0x4839    LDR	R0, [PC, #228]
0x488E	0x6004    STR	R4, [R0, #0]
; ulRCC_CFGR2 end address is: 16 (R4)
;__Lib_System_105_107.c, 407 :: 		
0x4890	0x4839    LDR	R0, [PC, #228]
0x4892	0xEA020100  AND	R1, R2, R0, LSL #0
0x4896	0x4839    LDR	R0, [PC, #228]
0x4898	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 409 :: 		
0x489A	0xF0020001  AND	R0, R2, #1
0x489E	0xB140    CBZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC253
; ulRCC_CFGR end address is: 12 (R3)
; ulRCC_CR end address is: 8 (R2)
0x48A0	0x4619    MOV	R1, R3
;__Lib_System_105_107.c, 410 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC237:
; ulRCC_CFGR start address is: 4 (R1)
; ulRCC_CR start address is: 8 (R2)
0x48A2	0x4836    LDR	R0, [PC, #216]
0x48A4	0x6800    LDR	R0, [R0, #0]
0x48A6	0xF0000002  AND	R0, R0, #2
0x48AA	0x2800    CMP	R0, #0
0x48AC	0xD100    BNE	L___Lib_System_105_107_InitialSetUpRCCRCC238
;__Lib_System_105_107.c, 411 :: 		
0x48AE	0xE7F8    B	L___Lib_System_105_107_InitialSetUpRCCRCC237
L___Lib_System_105_107_InitialSetUpRCCRCC238:
;__Lib_System_105_107.c, 412 :: 		
; ulRCC_CFGR end address is: 4 (R1)
0x48B0	0xE000    B	L___Lib_System_105_107_InitialSetUpRCCRCC236
; ulRCC_CR end address is: 8 (R2)
L___Lib_System_105_107_InitialSetUpRCCRCC253:
;__Lib_System_105_107.c, 409 :: 		
0x48B2	0x4619    MOV	R1, R3
;__Lib_System_105_107.c, 412 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC236:
;__Lib_System_105_107.c, 414 :: 		
; ulRCC_CFGR start address is: 4 (R1)
; ulRCC_CR start address is: 8 (R2)
0x48B4	0xF4023080  AND	R0, R2, #65536
0x48B8	0xB140    CBZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC254
; ulRCC_CR end address is: 8 (R2)
; ulRCC_CFGR end address is: 4 (R1)
0x48BA	0x460B    MOV	R3, R1
;__Lib_System_105_107.c, 415 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC240:
; ulRCC_CR start address is: 8 (R2)
; ulRCC_CFGR start address is: 12 (R3)
0x48BC	0x482F    LDR	R0, [PC, #188]
0x48BE	0x6800    LDR	R0, [R0, #0]
0x48C0	0xF4003000  AND	R0, R0, #131072
0x48C4	0x2800    CMP	R0, #0
0x48C6	0xD100    BNE	L___Lib_System_105_107_InitialSetUpRCCRCC241
;__Lib_System_105_107.c, 416 :: 		
0x48C8	0xE7F8    B	L___Lib_System_105_107_InitialSetUpRCCRCC240
L___Lib_System_105_107_InitialSetUpRCCRCC241:
;__Lib_System_105_107.c, 417 :: 		
; ulRCC_CR end address is: 8 (R2)
0x48CA	0xE000    B	L___Lib_System_105_107_InitialSetUpRCCRCC239
; ulRCC_CFGR end address is: 12 (R3)
L___Lib_System_105_107_InitialSetUpRCCRCC254:
;__Lib_System_105_107.c, 414 :: 		
0x48CC	0x460B    MOV	R3, R1
;__Lib_System_105_107.c, 417 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC239:
;__Lib_System_105_107.c, 419 :: 		
; ulRCC_CR start address is: 8 (R2)
; ulRCC_CFGR start address is: 12 (R3)
0x48CE	0xF0025080  AND	R0, R2, #268435456
0x48D2	0xB168    CBZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC255
;__Lib_System_105_107.c, 420 :: 		
0x48D4	0x4829    LDR	R0, [PC, #164]
0x48D6	0x6800    LDR	R0, [R0, #0]
0x48D8	0xF0405180  ORR	R1, R0, #268435456
0x48DC	0x4827    LDR	R0, [PC, #156]
0x48DE	0x6001    STR	R1, [R0, #0]
; ulRCC_CFGR end address is: 12 (R3)
; ulRCC_CR end address is: 8 (R2)
;__Lib_System_105_107.c, 421 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC243:
; ulRCC_CFGR start address is: 12 (R3)
; ulRCC_CR start address is: 8 (R2)
0x48E0	0x4826    LDR	R0, [PC, #152]
0x48E2	0x6800    LDR	R0, [R0, #0]
0x48E4	0xF0005000  AND	R0, R0, #536870912
0x48E8	0x2800    CMP	R0, #0
0x48EA	0xD100    BNE	L___Lib_System_105_107_InitialSetUpRCCRCC244
;__Lib_System_105_107.c, 422 :: 		
0x48EC	0xE7F8    B	L___Lib_System_105_107_InitialSetUpRCCRCC243
L___Lib_System_105_107_InitialSetUpRCCRCC244:
;__Lib_System_105_107.c, 423 :: 		
; ulRCC_CR end address is: 8 (R2)
0x48EE	0xE7FF    B	L___Lib_System_105_107_InitialSetUpRCCRCC242
; ulRCC_CFGR end address is: 12 (R3)
L___Lib_System_105_107_InitialSetUpRCCRCC255:
;__Lib_System_105_107.c, 419 :: 		
;__Lib_System_105_107.c, 423 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC242:
;__Lib_System_105_107.c, 425 :: 		
; ulRCC_CFGR start address is: 12 (R3)
; ulRCC_CR start address is: 8 (R2)
0x48F0	0xF0026080  AND	R0, R2, #67108864
0x48F4	0xB178    CBZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC256
;__Lib_System_105_107.c, 426 :: 		
0x48F6	0x4821    LDR	R0, [PC, #132]
0x48F8	0x6800    LDR	R0, [R0, #0]
0x48FA	0xF0406180  ORR	R1, R0, #67108864
0x48FE	0x481F    LDR	R0, [PC, #124]
0x4900	0x6001    STR	R1, [R0, #0]
; ulRCC_CFGR end address is: 12 (R3)
; ulRCC_CR end address is: 8 (R2)
0x4902	0x4611    MOV	R1, R2
0x4904	0x461A    MOV	R2, R3
;__Lib_System_105_107.c, 427 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC246:
; ulRCC_CR start address is: 4 (R1)
; ulRCC_CFGR start address is: 8 (R2)
0x4906	0x481D    LDR	R0, [PC, #116]
0x4908	0x6800    LDR	R0, [R0, #0]
0x490A	0xF0006000  AND	R0, R0, #134217728
0x490E	0x2800    CMP	R0, #0
0x4910	0xD100    BNE	L___Lib_System_105_107_InitialSetUpRCCRCC247
;__Lib_System_105_107.c, 428 :: 		
0x4912	0xE7F8    B	L___Lib_System_105_107_InitialSetUpRCCRCC246
L___Lib_System_105_107_InitialSetUpRCCRCC247:
;__Lib_System_105_107.c, 429 :: 		
; ulRCC_CFGR end address is: 8 (R2)
0x4914	0xE001    B	L___Lib_System_105_107_InitialSetUpRCCRCC245
; ulRCC_CR end address is: 4 (R1)
L___Lib_System_105_107_InitialSetUpRCCRCC256:
;__Lib_System_105_107.c, 425 :: 		
0x4916	0x4611    MOV	R1, R2
0x4918	0x461A    MOV	R2, R3
;__Lib_System_105_107.c, 429 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC245:
;__Lib_System_105_107.c, 431 :: 		
; ulRCC_CR start address is: 4 (R1)
; ulRCC_CFGR start address is: 8 (R2)
0x491A	0xF0017080  AND	R0, R1, #16777216
; ulRCC_CR end address is: 4 (R1)
0x491E	0xB170    CBZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC257
;__Lib_System_105_107.c, 432 :: 		
0x4920	0x4816    LDR	R0, [PC, #88]
0x4922	0x6800    LDR	R0, [R0, #0]
0x4924	0xF0407180  ORR	R1, R0, #16777216
0x4928	0x4814    LDR	R0, [PC, #80]
0x492A	0x6001    STR	R1, [R0, #0]
; ulRCC_CFGR end address is: 8 (R2)
0x492C	0x4611    MOV	R1, R2
;__Lib_System_105_107.c, 433 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC249:
; ulRCC_CFGR start address is: 4 (R1)
0x492E	0x4813    LDR	R0, [PC, #76]
0x4930	0x6800    LDR	R0, [R0, #0]
0x4932	0xF0007000  AND	R0, R0, #33554432
0x4936	0xB900    CBNZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC250
;__Lib_System_105_107.c, 434 :: 		
0x4938	0xE7F9    B	L___Lib_System_105_107_InitialSetUpRCCRCC249
L___Lib_System_105_107_InitialSetUpRCCRCC250:
;__Lib_System_105_107.c, 435 :: 		
0x493A	0x460A    MOV	R2, R1
0x493C	0xE7FF    B	L___Lib_System_105_107_InitialSetUpRCCRCC248
; ulRCC_CFGR end address is: 4 (R1)
L___Lib_System_105_107_InitialSetUpRCCRCC257:
;__Lib_System_105_107.c, 431 :: 		
;__Lib_System_105_107.c, 435 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC248:
;__Lib_System_105_107.c, 439 :: 		
; ulRCC_CFGR start address is: 8 (R2)
; ulRCC_CFGR end address is: 8 (R2)
L___Lib_System_105_107_InitialSetUpRCCRCC251:
; ulRCC_CFGR start address is: 8 (R2)
0x493E	0x480C    LDR	R0, [PC, #48]
0x4940	0x6800    LDR	R0, [R0, #0]
0x4942	0xF000010C  AND	R1, R0, #12
0x4946	0x0090    LSLS	R0, R2, #2
0x4948	0xF000000C  AND	R0, R0, #12
0x494C	0x4281    CMP	R1, R0
0x494E	0xD000    BEQ	L___Lib_System_105_107_InitialSetUpRCCRCC252
;__Lib_System_105_107.c, 440 :: 		
; ulRCC_CFGR end address is: 8 (R2)
0x4950	0xE7F5    B	L___Lib_System_105_107_InitialSetUpRCCRCC251
L___Lib_System_105_107_InitialSetUpRCCRCC252:
;__Lib_System_105_107.c, 441 :: 		
L_end_InitialSetUpRCCRCC2:
0x4952	0xF8DDE000  LDR	LR, [SP, #0]
0x4956	0xB001    ADD	SP, SP, #4
0x4958	0x4770    BX	LR
0x495A	0xBF00    NOP
0x495C	0x00810501  	#83951745
0x4960	0x8402001D  	#1934338
0x4964	0x06440001  	#67140
0x4968	0x19400001  	#72000
0x496C	0x20004002  	FLASH_ACR+0
0x4970	0x10044002  	RCC_CFGR+0
0x4974	0x102C4002  	RCC_CFGR2+0
0x4978	0xFFFF000F  	#1048575
0x497C	0x10004002  	RCC_CR+0
; end of __Lib_System_105_107_InitialSetUpRCCRCC2
__Lib_System_105_107_SystemClockSetDefault:
;__Lib_System_105_107.c, 356 :: 		
0x45D8	0xB081    SUB	SP, SP, #4
;__Lib_System_105_107.c, 359 :: 		
0x45DA	0x4815    LDR	R0, [PC, #84]
0x45DC	0x6800    LDR	R0, [R0, #0]
0x45DE	0xF0400101  ORR	R1, R0, #1
0x45E2	0x4813    LDR	R0, [PC, #76]
0x45E4	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 362 :: 		
0x45E6	0x4913    LDR	R1, [PC, #76]
0x45E8	0x4813    LDR	R0, [PC, #76]
0x45EA	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 365 :: 		
0x45EC	0x4810    LDR	R0, [PC, #64]
0x45EE	0x6801    LDR	R1, [R0, #0]
0x45F0	0x4812    LDR	R0, [PC, #72]
0x45F2	0x4001    ANDS	R1, R0
0x45F4	0x480E    LDR	R0, [PC, #56]
0x45F6	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 368 :: 		
0x45F8	0x480D    LDR	R0, [PC, #52]
0x45FA	0x6801    LDR	R1, [R0, #0]
0x45FC	0xF46F2080  MVN	R0, #262144
0x4600	0x4001    ANDS	R1, R0
0x4602	0x480B    LDR	R0, [PC, #44]
0x4604	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 371 :: 		
0x4606	0x480C    LDR	R0, [PC, #48]
0x4608	0x6801    LDR	R1, [R0, #0]
0x460A	0xF46F00FE  MVN	R0, #8323072
0x460E	0x4001    ANDS	R1, R0
0x4610	0x4809    LDR	R0, [PC, #36]
0x4612	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 374 :: 		
0x4614	0x4806    LDR	R0, [PC, #24]
0x4616	0x6801    LDR	R1, [R0, #0]
0x4618	0xF06F50A0  MVN	R0, #335544320
0x461C	0x4001    ANDS	R1, R0
0x461E	0x4804    LDR	R0, [PC, #16]
0x4620	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 377 :: 		
0x4622	0xF04F0100  MOV	R1, #0
0x4626	0x4806    LDR	R0, [PC, #24]
0x4628	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 381 :: 		
L_end_SystemClockSetDefault:
0x462A	0xB001    ADD	SP, SP, #4
0x462C	0x4770    BX	LR
0x462E	0xBF00    NOP
0x4630	0x10004002  	RCC_CR+0
0x4634	0x0000F0FF  	#-251723776
0x4638	0x10044002  	RCC_CFGR+0
0x463C	0xFFFFFEF6  	#-17367041
0x4640	0x102C4002  	RCC_CFGR2+0
; end of __Lib_System_105_107_SystemClockSetDefault
__Lib_System_105_107_InitialSetUpFosc:
;__Lib_System_105_107.c, 443 :: 		
0x4800	0xB081    SUB	SP, SP, #4
;__Lib_System_105_107.c, 444 :: 		
0x4802	0x4902    LDR	R1, [PC, #8]
0x4804	0x4802    LDR	R0, [PC, #8]
0x4806	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 445 :: 		
L_end_InitialSetUpFosc:
0x4808	0xB001    ADD	SP, SP, #4
0x480A	0x4770    BX	LR
0x480C	0x19400001  	#72000
0x4810	0x37782000  	___System_CLOCK_IN_KHZ+0
; end of __Lib_System_105_107_InitialSetUpFosc
___GenExcept:
;__Lib_System_105_107.c, 307 :: 		
0x4814	0xB081    SUB	SP, SP, #4
;__Lib_System_105_107.c, 308 :: 		
L___GenExcept28:
0x4816	0xE7FE    B	L___GenExcept28
;__Lib_System_105_107.c, 309 :: 		
L_end___GenExcept:
0x4818	0xB001    ADD	SP, SP, #4
0x481A	0x4770    BX	LR
; end of ___GenExcept
0x5314	0xB500    PUSH	(R14)
0x5316	0xF8DFB014  LDR	R11, [PC, #20]
0x531A	0xF8DFA014  LDR	R10, [PC, #20]
0x531E	0xF8DFC014  LDR	R12, [PC, #20]
0x5322	0xF7FFFA63  BL	18412
0x5326	0xBD00    POP	(R15)
0x5328	0x4770    BX	LR
0x532A	0xBF00    NOP
0x532C	0x00002000  	#536870912
0x5330	0x00902000  	#536871056
0x5334	0x50000000  	#20480
0x5394	0xB500    PUSH	(R14)
0x5396	0xF8DFB010  LDR	R11, [PC, #16]
0x539A	0xF8DFA010  LDR	R10, [PC, #16]
0x539E	0xF7FFF951  BL	17988
0x53A2	0xBD00    POP	(R15)
0x53A4	0x4770    BX	LR
0x53A6	0xBF00    NOP
0x53A8	0x00002000  	#536870912
0x53AC	0x44A82000  	#536888488
;Click_IR_Grid2_STM.c,3 :: __IRGRID2_I2C_CFG [4]
0x3F9C	0x00061A80 ;__IRGRID2_I2C_CFG+0
; end of __IRGRID2_I2C_CFG
;__irgrid2_driver.c,0 :: ?ICSirgrid2_readData_readReg_L0 [1664]
0x4980	0x00000000 ;?ICSirgrid2_readData_readReg_L0+0
0x4984	0x00000000 ;?ICSirgrid2_readData_readReg_L0+4
0x4988	0x00000000 ;?ICSirgrid2_readData_readReg_L0+8
0x498C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+12
0x4990	0x00000000 ;?ICSirgrid2_readData_readReg_L0+16
0x4994	0x00000000 ;?ICSirgrid2_readData_readReg_L0+20
0x4998	0x00000000 ;?ICSirgrid2_readData_readReg_L0+24
0x499C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+28
0x49A0	0x00000000 ;?ICSirgrid2_readData_readReg_L0+32
0x49A4	0x00000000 ;?ICSirgrid2_readData_readReg_L0+36
0x49A8	0x00000000 ;?ICSirgrid2_readData_readReg_L0+40
0x49AC	0x00000000 ;?ICSirgrid2_readData_readReg_L0+44
0x49B0	0x00000000 ;?ICSirgrid2_readData_readReg_L0+48
0x49B4	0x00000000 ;?ICSirgrid2_readData_readReg_L0+52
0x49B8	0x00000000 ;?ICSirgrid2_readData_readReg_L0+56
0x49BC	0x00000000 ;?ICSirgrid2_readData_readReg_L0+60
0x49C0	0x00000000 ;?ICSirgrid2_readData_readReg_L0+64
0x49C4	0x00000000 ;?ICSirgrid2_readData_readReg_L0+68
0x49C8	0x00000000 ;?ICSirgrid2_readData_readReg_L0+72
0x49CC	0x00000000 ;?ICSirgrid2_readData_readReg_L0+76
0x49D0	0x00000000 ;?ICSirgrid2_readData_readReg_L0+80
0x49D4	0x00000000 ;?ICSirgrid2_readData_readReg_L0+84
0x49D8	0x00000000 ;?ICSirgrid2_readData_readReg_L0+88
0x49DC	0x00000000 ;?ICSirgrid2_readData_readReg_L0+92
0x49E0	0x00000000 ;?ICSirgrid2_readData_readReg_L0+96
0x49E4	0x00000000 ;?ICSirgrid2_readData_readReg_L0+100
0x49E8	0x00000000 ;?ICSirgrid2_readData_readReg_L0+104
0x49EC	0x00000000 ;?ICSirgrid2_readData_readReg_L0+108
0x49F0	0x00000000 ;?ICSirgrid2_readData_readReg_L0+112
0x49F4	0x00000000 ;?ICSirgrid2_readData_readReg_L0+116
0x49F8	0x00000000 ;?ICSirgrid2_readData_readReg_L0+120
0x49FC	0x00000000 ;?ICSirgrid2_readData_readReg_L0+124
0x4A00	0x00000000 ;?ICSirgrid2_readData_readReg_L0+128
0x4A04	0x00000000 ;?ICSirgrid2_readData_readReg_L0+132
0x4A08	0x00000000 ;?ICSirgrid2_readData_readReg_L0+136
0x4A0C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+140
0x4A10	0x00000000 ;?ICSirgrid2_readData_readReg_L0+144
0x4A14	0x00000000 ;?ICSirgrid2_readData_readReg_L0+148
0x4A18	0x00000000 ;?ICSirgrid2_readData_readReg_L0+152
0x4A1C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+156
0x4A20	0x00000000 ;?ICSirgrid2_readData_readReg_L0+160
0x4A24	0x00000000 ;?ICSirgrid2_readData_readReg_L0+164
0x4A28	0x00000000 ;?ICSirgrid2_readData_readReg_L0+168
0x4A2C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+172
0x4A30	0x00000000 ;?ICSirgrid2_readData_readReg_L0+176
0x4A34	0x00000000 ;?ICSirgrid2_readData_readReg_L0+180
0x4A38	0x00000000 ;?ICSirgrid2_readData_readReg_L0+184
0x4A3C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+188
0x4A40	0x00000000 ;?ICSirgrid2_readData_readReg_L0+192
0x4A44	0x00000000 ;?ICSirgrid2_readData_readReg_L0+196
0x4A48	0x00000000 ;?ICSirgrid2_readData_readReg_L0+200
0x4A4C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+204
0x4A50	0x00000000 ;?ICSirgrid2_readData_readReg_L0+208
0x4A54	0x00000000 ;?ICSirgrid2_readData_readReg_L0+212
0x4A58	0x00000000 ;?ICSirgrid2_readData_readReg_L0+216
0x4A5C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+220
0x4A60	0x00000000 ;?ICSirgrid2_readData_readReg_L0+224
0x4A64	0x00000000 ;?ICSirgrid2_readData_readReg_L0+228
0x4A68	0x00000000 ;?ICSirgrid2_readData_readReg_L0+232
0x4A6C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+236
0x4A70	0x00000000 ;?ICSirgrid2_readData_readReg_L0+240
0x4A74	0x00000000 ;?ICSirgrid2_readData_readReg_L0+244
0x4A78	0x00000000 ;?ICSirgrid2_readData_readReg_L0+248
0x4A7C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+252
0x4A80	0x00000000 ;?ICSirgrid2_readData_readReg_L0+256
0x4A84	0x00000000 ;?ICSirgrid2_readData_readReg_L0+260
0x4A88	0x00000000 ;?ICSirgrid2_readData_readReg_L0+264
0x4A8C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+268
0x4A90	0x00000000 ;?ICSirgrid2_readData_readReg_L0+272
0x4A94	0x00000000 ;?ICSirgrid2_readData_readReg_L0+276
0x4A98	0x00000000 ;?ICSirgrid2_readData_readReg_L0+280
0x4A9C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+284
0x4AA0	0x00000000 ;?ICSirgrid2_readData_readReg_L0+288
0x4AA4	0x00000000 ;?ICSirgrid2_readData_readReg_L0+292
0x4AA8	0x00000000 ;?ICSirgrid2_readData_readReg_L0+296
0x4AAC	0x00000000 ;?ICSirgrid2_readData_readReg_L0+300
0x4AB0	0x00000000 ;?ICSirgrid2_readData_readReg_L0+304
0x4AB4	0x00000000 ;?ICSirgrid2_readData_readReg_L0+308
0x4AB8	0x00000000 ;?ICSirgrid2_readData_readReg_L0+312
0x4ABC	0x00000000 ;?ICSirgrid2_readData_readReg_L0+316
0x4AC0	0x00000000 ;?ICSirgrid2_readData_readReg_L0+320
0x4AC4	0x00000000 ;?ICSirgrid2_readData_readReg_L0+324
0x4AC8	0x00000000 ;?ICSirgrid2_readData_readReg_L0+328
0x4ACC	0x00000000 ;?ICSirgrid2_readData_readReg_L0+332
0x4AD0	0x00000000 ;?ICSirgrid2_readData_readReg_L0+336
0x4AD4	0x00000000 ;?ICSirgrid2_readData_readReg_L0+340
0x4AD8	0x00000000 ;?ICSirgrid2_readData_readReg_L0+344
0x4ADC	0x00000000 ;?ICSirgrid2_readData_readReg_L0+348
0x4AE0	0x00000000 ;?ICSirgrid2_readData_readReg_L0+352
0x4AE4	0x00000000 ;?ICSirgrid2_readData_readReg_L0+356
0x4AE8	0x00000000 ;?ICSirgrid2_readData_readReg_L0+360
0x4AEC	0x00000000 ;?ICSirgrid2_readData_readReg_L0+364
0x4AF0	0x00000000 ;?ICSirgrid2_readData_readReg_L0+368
0x4AF4	0x00000000 ;?ICSirgrid2_readData_readReg_L0+372
0x4AF8	0x00000000 ;?ICSirgrid2_readData_readReg_L0+376
0x4AFC	0x00000000 ;?ICSirgrid2_readData_readReg_L0+380
0x4B00	0x00000000 ;?ICSirgrid2_readData_readReg_L0+384
0x4B04	0x00000000 ;?ICSirgrid2_readData_readReg_L0+388
0x4B08	0x00000000 ;?ICSirgrid2_readData_readReg_L0+392
0x4B0C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+396
0x4B10	0x00000000 ;?ICSirgrid2_readData_readReg_L0+400
0x4B14	0x00000000 ;?ICSirgrid2_readData_readReg_L0+404
0x4B18	0x00000000 ;?ICSirgrid2_readData_readReg_L0+408
0x4B1C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+412
0x4B20	0x00000000 ;?ICSirgrid2_readData_readReg_L0+416
0x4B24	0x00000000 ;?ICSirgrid2_readData_readReg_L0+420
0x4B28	0x00000000 ;?ICSirgrid2_readData_readReg_L0+424
0x4B2C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+428
0x4B30	0x00000000 ;?ICSirgrid2_readData_readReg_L0+432
0x4B34	0x00000000 ;?ICSirgrid2_readData_readReg_L0+436
0x4B38	0x00000000 ;?ICSirgrid2_readData_readReg_L0+440
0x4B3C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+444
0x4B40	0x00000000 ;?ICSirgrid2_readData_readReg_L0+448
0x4B44	0x00000000 ;?ICSirgrid2_readData_readReg_L0+452
0x4B48	0x00000000 ;?ICSirgrid2_readData_readReg_L0+456
0x4B4C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+460
0x4B50	0x00000000 ;?ICSirgrid2_readData_readReg_L0+464
0x4B54	0x00000000 ;?ICSirgrid2_readData_readReg_L0+468
0x4B58	0x00000000 ;?ICSirgrid2_readData_readReg_L0+472
0x4B5C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+476
0x4B60	0x00000000 ;?ICSirgrid2_readData_readReg_L0+480
0x4B64	0x00000000 ;?ICSirgrid2_readData_readReg_L0+484
0x4B68	0x00000000 ;?ICSirgrid2_readData_readReg_L0+488
0x4B6C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+492
0x4B70	0x00000000 ;?ICSirgrid2_readData_readReg_L0+496
0x4B74	0x00000000 ;?ICSirgrid2_readData_readReg_L0+500
0x4B78	0x00000000 ;?ICSirgrid2_readData_readReg_L0+504
0x4B7C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+508
0x4B80	0x00000000 ;?ICSirgrid2_readData_readReg_L0+512
0x4B84	0x00000000 ;?ICSirgrid2_readData_readReg_L0+516
0x4B88	0x00000000 ;?ICSirgrid2_readData_readReg_L0+520
0x4B8C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+524
0x4B90	0x00000000 ;?ICSirgrid2_readData_readReg_L0+528
0x4B94	0x00000000 ;?ICSirgrid2_readData_readReg_L0+532
0x4B98	0x00000000 ;?ICSirgrid2_readData_readReg_L0+536
0x4B9C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+540
0x4BA0	0x00000000 ;?ICSirgrid2_readData_readReg_L0+544
0x4BA4	0x00000000 ;?ICSirgrid2_readData_readReg_L0+548
0x4BA8	0x00000000 ;?ICSirgrid2_readData_readReg_L0+552
0x4BAC	0x00000000 ;?ICSirgrid2_readData_readReg_L0+556
0x4BB0	0x00000000 ;?ICSirgrid2_readData_readReg_L0+560
0x4BB4	0x00000000 ;?ICSirgrid2_readData_readReg_L0+564
0x4BB8	0x00000000 ;?ICSirgrid2_readData_readReg_L0+568
0x4BBC	0x00000000 ;?ICSirgrid2_readData_readReg_L0+572
0x4BC0	0x00000000 ;?ICSirgrid2_readData_readReg_L0+576
0x4BC4	0x00000000 ;?ICSirgrid2_readData_readReg_L0+580
0x4BC8	0x00000000 ;?ICSirgrid2_readData_readReg_L0+584
0x4BCC	0x00000000 ;?ICSirgrid2_readData_readReg_L0+588
0x4BD0	0x00000000 ;?ICSirgrid2_readData_readReg_L0+592
0x4BD4	0x00000000 ;?ICSirgrid2_readData_readReg_L0+596
0x4BD8	0x00000000 ;?ICSirgrid2_readData_readReg_L0+600
0x4BDC	0x00000000 ;?ICSirgrid2_readData_readReg_L0+604
0x4BE0	0x00000000 ;?ICSirgrid2_readData_readReg_L0+608
0x4BE4	0x00000000 ;?ICSirgrid2_readData_readReg_L0+612
0x4BE8	0x00000000 ;?ICSirgrid2_readData_readReg_L0+616
0x4BEC	0x00000000 ;?ICSirgrid2_readData_readReg_L0+620
0x4BF0	0x00000000 ;?ICSirgrid2_readData_readReg_L0+624
0x4BF4	0x00000000 ;?ICSirgrid2_readData_readReg_L0+628
0x4BF8	0x00000000 ;?ICSirgrid2_readData_readReg_L0+632
0x4BFC	0x00000000 ;?ICSirgrid2_readData_readReg_L0+636
0x4C00	0x00000000 ;?ICSirgrid2_readData_readReg_L0+640
0x4C04	0x00000000 ;?ICSirgrid2_readData_readReg_L0+644
0x4C08	0x00000000 ;?ICSirgrid2_readData_readReg_L0+648
0x4C0C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+652
0x4C10	0x00000000 ;?ICSirgrid2_readData_readReg_L0+656
0x4C14	0x00000000 ;?ICSirgrid2_readData_readReg_L0+660
0x4C18	0x00000000 ;?ICSirgrid2_readData_readReg_L0+664
0x4C1C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+668
0x4C20	0x00000000 ;?ICSirgrid2_readData_readReg_L0+672
0x4C24	0x00000000 ;?ICSirgrid2_readData_readReg_L0+676
0x4C28	0x00000000 ;?ICSirgrid2_readData_readReg_L0+680
0x4C2C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+684
0x4C30	0x00000000 ;?ICSirgrid2_readData_readReg_L0+688
0x4C34	0x00000000 ;?ICSirgrid2_readData_readReg_L0+692
0x4C38	0x00000000 ;?ICSirgrid2_readData_readReg_L0+696
0x4C3C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+700
0x4C40	0x00000000 ;?ICSirgrid2_readData_readReg_L0+704
0x4C44	0x00000000 ;?ICSirgrid2_readData_readReg_L0+708
0x4C48	0x00000000 ;?ICSirgrid2_readData_readReg_L0+712
0x4C4C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+716
0x4C50	0x00000000 ;?ICSirgrid2_readData_readReg_L0+720
0x4C54	0x00000000 ;?ICSirgrid2_readData_readReg_L0+724
0x4C58	0x00000000 ;?ICSirgrid2_readData_readReg_L0+728
0x4C5C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+732
0x4C60	0x00000000 ;?ICSirgrid2_readData_readReg_L0+736
0x4C64	0x00000000 ;?ICSirgrid2_readData_readReg_L0+740
0x4C68	0x00000000 ;?ICSirgrid2_readData_readReg_L0+744
0x4C6C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+748
0x4C70	0x00000000 ;?ICSirgrid2_readData_readReg_L0+752
0x4C74	0x00000000 ;?ICSirgrid2_readData_readReg_L0+756
0x4C78	0x00000000 ;?ICSirgrid2_readData_readReg_L0+760
0x4C7C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+764
0x4C80	0x00000000 ;?ICSirgrid2_readData_readReg_L0+768
0x4C84	0x00000000 ;?ICSirgrid2_readData_readReg_L0+772
0x4C88	0x00000000 ;?ICSirgrid2_readData_readReg_L0+776
0x4C8C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+780
0x4C90	0x00000000 ;?ICSirgrid2_readData_readReg_L0+784
0x4C94	0x00000000 ;?ICSirgrid2_readData_readReg_L0+788
0x4C98	0x00000000 ;?ICSirgrid2_readData_readReg_L0+792
0x4C9C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+796
0x4CA0	0x00000000 ;?ICSirgrid2_readData_readReg_L0+800
0x4CA4	0x00000000 ;?ICSirgrid2_readData_readReg_L0+804
0x4CA8	0x00000000 ;?ICSirgrid2_readData_readReg_L0+808
0x4CAC	0x00000000 ;?ICSirgrid2_readData_readReg_L0+812
0x4CB0	0x00000000 ;?ICSirgrid2_readData_readReg_L0+816
0x4CB4	0x00000000 ;?ICSirgrid2_readData_readReg_L0+820
0x4CB8	0x00000000 ;?ICSirgrid2_readData_readReg_L0+824
0x4CBC	0x00000000 ;?ICSirgrid2_readData_readReg_L0+828
0x4CC0	0x00000000 ;?ICSirgrid2_readData_readReg_L0+832
0x4CC4	0x00000000 ;?ICSirgrid2_readData_readReg_L0+836
0x4CC8	0x00000000 ;?ICSirgrid2_readData_readReg_L0+840
0x4CCC	0x00000000 ;?ICSirgrid2_readData_readReg_L0+844
0x4CD0	0x00000000 ;?ICSirgrid2_readData_readReg_L0+848
0x4CD4	0x00000000 ;?ICSirgrid2_readData_readReg_L0+852
0x4CD8	0x00000000 ;?ICSirgrid2_readData_readReg_L0+856
0x4CDC	0x00000000 ;?ICSirgrid2_readData_readReg_L0+860
0x4CE0	0x00000000 ;?ICSirgrid2_readData_readReg_L0+864
0x4CE4	0x00000000 ;?ICSirgrid2_readData_readReg_L0+868
0x4CE8	0x00000000 ;?ICSirgrid2_readData_readReg_L0+872
0x4CEC	0x00000000 ;?ICSirgrid2_readData_readReg_L0+876
0x4CF0	0x00000000 ;?ICSirgrid2_readData_readReg_L0+880
0x4CF4	0x00000000 ;?ICSirgrid2_readData_readReg_L0+884
0x4CF8	0x00000000 ;?ICSirgrid2_readData_readReg_L0+888
0x4CFC	0x00000000 ;?ICSirgrid2_readData_readReg_L0+892
0x4D00	0x00000000 ;?ICSirgrid2_readData_readReg_L0+896
0x4D04	0x00000000 ;?ICSirgrid2_readData_readReg_L0+900
0x4D08	0x00000000 ;?ICSirgrid2_readData_readReg_L0+904
0x4D0C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+908
0x4D10	0x00000000 ;?ICSirgrid2_readData_readReg_L0+912
0x4D14	0x00000000 ;?ICSirgrid2_readData_readReg_L0+916
0x4D18	0x00000000 ;?ICSirgrid2_readData_readReg_L0+920
0x4D1C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+924
0x4D20	0x00000000 ;?ICSirgrid2_readData_readReg_L0+928
0x4D24	0x00000000 ;?ICSirgrid2_readData_readReg_L0+932
0x4D28	0x00000000 ;?ICSirgrid2_readData_readReg_L0+936
0x4D2C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+940
0x4D30	0x00000000 ;?ICSirgrid2_readData_readReg_L0+944
0x4D34	0x00000000 ;?ICSirgrid2_readData_readReg_L0+948
0x4D38	0x00000000 ;?ICSirgrid2_readData_readReg_L0+952
0x4D3C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+956
0x4D40	0x00000000 ;?ICSirgrid2_readData_readReg_L0+960
0x4D44	0x00000000 ;?ICSirgrid2_readData_readReg_L0+964
0x4D48	0x00000000 ;?ICSirgrid2_readData_readReg_L0+968
0x4D4C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+972
0x4D50	0x00000000 ;?ICSirgrid2_readData_readReg_L0+976
0x4D54	0x00000000 ;?ICSirgrid2_readData_readReg_L0+980
0x4D58	0x00000000 ;?ICSirgrid2_readData_readReg_L0+984
0x4D5C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+988
0x4D60	0x00000000 ;?ICSirgrid2_readData_readReg_L0+992
0x4D64	0x00000000 ;?ICSirgrid2_readData_readReg_L0+996
0x4D68	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1000
0x4D6C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1004
0x4D70	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1008
0x4D74	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1012
0x4D78	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1016
0x4D7C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1020
0x4D80	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1024
0x4D84	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1028
0x4D88	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1032
0x4D8C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1036
0x4D90	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1040
0x4D94	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1044
0x4D98	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1048
0x4D9C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1052
0x4DA0	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1056
0x4DA4	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1060
0x4DA8	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1064
0x4DAC	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1068
0x4DB0	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1072
0x4DB4	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1076
0x4DB8	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1080
0x4DBC	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1084
0x4DC0	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1088
0x4DC4	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1092
0x4DC8	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1096
0x4DCC	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1100
0x4DD0	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1104
0x4DD4	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1108
0x4DD8	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1112
0x4DDC	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1116
0x4DE0	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1120
0x4DE4	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1124
0x4DE8	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1128
0x4DEC	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1132
0x4DF0	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1136
0x4DF4	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1140
0x4DF8	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1144
0x4DFC	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1148
0x4E00	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1152
0x4E04	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1156
0x4E08	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1160
0x4E0C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1164
0x4E10	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1168
0x4E14	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1172
0x4E18	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1176
0x4E1C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1180
0x4E20	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1184
0x4E24	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1188
0x4E28	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1192
0x4E2C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1196
0x4E30	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1200
0x4E34	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1204
0x4E38	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1208
0x4E3C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1212
0x4E40	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1216
0x4E44	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1220
0x4E48	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1224
0x4E4C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1228
0x4E50	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1232
0x4E54	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1236
0x4E58	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1240
0x4E5C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1244
0x4E60	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1248
0x4E64	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1252
0x4E68	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1256
0x4E6C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1260
0x4E70	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1264
0x4E74	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1268
0x4E78	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1272
0x4E7C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1276
0x4E80	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1280
0x4E84	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1284
0x4E88	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1288
0x4E8C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1292
0x4E90	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1296
0x4E94	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1300
0x4E98	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1304
0x4E9C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1308
0x4EA0	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1312
0x4EA4	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1316
0x4EA8	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1320
0x4EAC	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1324
0x4EB0	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1328
0x4EB4	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1332
0x4EB8	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1336
0x4EBC	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1340
0x4EC0	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1344
0x4EC4	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1348
0x4EC8	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1352
0x4ECC	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1356
0x4ED0	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1360
0x4ED4	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1364
0x4ED8	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1368
0x4EDC	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1372
0x4EE0	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1376
0x4EE4	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1380
0x4EE8	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1384
0x4EEC	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1388
0x4EF0	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1392
0x4EF4	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1396
0x4EF8	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1400
0x4EFC	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1404
0x4F00	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1408
0x4F04	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1412
0x4F08	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1416
0x4F0C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1420
0x4F10	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1424
0x4F14	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1428
0x4F18	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1432
0x4F1C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1436
0x4F20	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1440
0x4F24	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1444
0x4F28	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1448
0x4F2C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1452
0x4F30	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1456
0x4F34	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1460
0x4F38	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1464
0x4F3C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1468
0x4F40	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1472
0x4F44	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1476
0x4F48	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1480
0x4F4C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1484
0x4F50	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1488
0x4F54	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1492
0x4F58	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1496
0x4F5C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1500
0x4F60	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1504
0x4F64	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1508
0x4F68	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1512
0x4F6C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1516
0x4F70	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1520
0x4F74	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1524
0x4F78	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1528
0x4F7C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1532
0x4F80	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1536
0x4F84	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1540
0x4F88	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1544
0x4F8C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1548
0x4F90	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1552
0x4F94	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1556
0x4F98	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1560
0x4F9C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1564
0x4FA0	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1568
0x4FA4	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1572
0x4FA8	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1576
0x4FAC	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1580
0x4FB0	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1584
0x4FB4	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1588
0x4FB8	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1592
0x4FBC	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1596
0x4FC0	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1600
0x4FC4	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1604
0x4FC8	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1608
0x4FCC	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1612
0x4FD0	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1616
0x4FD4	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1620
0x4FD8	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1624
0x4FDC	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1628
0x4FE0	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1632
0x4FE4	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1636
0x4FE8	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1640
0x4FEC	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1644
0x4FF0	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1648
0x4FF4	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1652
0x4FF8	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1656
0x4FFC	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1660
; end of ?ICSirgrid2_readData_readReg_L0
;Click_IR_Grid2_STM.c,0 :: ?ICS?lstr2_Click_IR_Grid2_STM [26]
0x5000	0x202D2D2D ;?ICS?lstr2_Click_IR_Grid2_STM+0
0x5004	0x72617453 ;?ICS?lstr2_Click_IR_Grid2_STM+4
0x5008	0x656D2074 ;?ICS?lstr2_Click_IR_Grid2_STM+8
0x500C	0x72757361 ;?ICS?lstr2_Click_IR_Grid2_STM+12
0x5010	0x6E656D65 ;?ICS?lstr2_Click_IR_Grid2_STM+16
0x5014	0x2D2D2074 ;?ICS?lstr2_Click_IR_Grid2_STM+20
0x5018	0x002D ;?ICS?lstr2_Click_IR_Grid2_STM+24
; end of ?ICS?lstr2_Click_IR_Grid2_STM
;Click_IR_Grid2_STM.c,0 :: ?ICS?lstr1_Click_IR_Grid2_STM [22]
0x501A	0x2D2D2D20 ;?ICS?lstr1_Click_IR_Grid2_STM+0
0x501E	0x73795320 ;?ICS?lstr1_Click_IR_Grid2_STM+4
0x5022	0x206D6574 ;?ICS?lstr1_Click_IR_Grid2_STM+8
0x5026	0x74696E49 ;?ICS?lstr1_Click_IR_Grid2_STM+12
0x502A	0x2D2D2D20 ;?ICS?lstr1_Click_IR_Grid2_STM+16
0x502E	0x0020 ;?ICS?lstr1_Click_IR_Grid2_STM+20
; end of ?ICS?lstr1_Click_IR_Grid2_STM
;Click_IR_Grid2_STM.c,0 :: ?ICS_Ta [4]
0x5030	0x00000000 ;?ICS_Ta+0
; end of ?ICS_Ta
;,0 :: _initBlock_5 [64]
; Containing: ?ICS?lstr3_Click_IR_Grid2_STM [23]
;             ?ICS?lstr4_Click_IR_Grid2_STM [2]
;             ?ICS?lstr5_Click_IR_Grid2_STM [39]
0x5034	0x69626D41 ;_initBlock_5+0 : ?ICS?lstr3_Click_IR_Grid2_STM at 0x5034
0x5038	0x20746E65 ;_initBlock_5+4
0x503C	0x706D6574 ;_initBlock_5+8
0x5040	0x74617265 ;_initBlock_5+12
0x5044	0x3A657275 ;_initBlock_5+16
0x5048	0x20002020 ;_initBlock_5+20 : ?ICS?lstr4_Click_IR_Grid2_STM at 0x504B
0x504C	0x2D2D2D00 ;_initBlock_5+24 : ?ICS?lstr5_Click_IR_Grid2_STM at 0x504D
0x5050	0x78695020 ;_initBlock_5+28
0x5054	0x74206C65 ;_initBlock_5+32
0x5058	0x65706D65 ;_initBlock_5+36
0x505C	0x75746172 ;_initBlock_5+40
0x5060	0x6D206572 ;_initBlock_5+44
0x5064	0x69727461 ;_initBlock_5+48
0x5068	0x32332078 ;_initBlock_5+52
0x506C	0x20343278 ;_initBlock_5+56
0x5070	0x002D2D2D ;_initBlock_5+60
; end of _initBlock_5
;Click_IR_Grid2_STM.c,0 :: ?ICS?lstr6_Click_IR_Grid2_STM [2]
0x5074	0x007C ;?ICS?lstr6_Click_IR_Grid2_STM+0
; end of ?ICS?lstr6_Click_IR_Grid2_STM
;Click_IR_Grid2_STM.c,0 :: ?ICS?lstr7_Click_IR_Grid2_STM [2]
0x5076	0x0020 ;?ICS?lstr7_Click_IR_Grid2_STM+0
; end of ?ICS?lstr7_Click_IR_Grid2_STM
;Click_IR_Grid2_STM.c,0 :: ?ICS?lstr8_Click_IR_Grid2_STM [2]
0x5078	0x0020 ;?ICS?lstr8_Click_IR_Grid2_STM+0
; end of ?ICS?lstr8_Click_IR_Grid2_STM
;__Lib_Conversions.c,0 :: ?ICS?lstr1___Lib_Conversions [4]
0x507A	0x004E614E ;?ICS?lstr1___Lib_Conversions+0
; end of ?ICS?lstr1___Lib_Conversions
;__Lib_Conversions.c,0 :: ?ICS?lstr2___Lib_Conversions [2]
0x507E	0x0030 ;?ICS?lstr2___Lib_Conversions+0
; end of ?ICS?lstr2___Lib_Conversions
;__Lib_Conversions.c,0 :: ?ICS?lstr3___Lib_Conversions [4]
0x5080	0x00464E49 ;?ICS?lstr3___Lib_Conversions+0
; end of ?ICS?lstr3___Lib_Conversions
;__Lib_I2C_12.c,0 :: ?ICS__Lib_I2C_12__I2C1_TIMEOUT [4]
0x5084	0x00000000 ;?ICS__Lib_I2C_12__I2C1_TIMEOUT+0
; end of ?ICS__Lib_I2C_12__I2C1_TIMEOUT
;__Lib_I2C_12.c,0 :: ?ICS__Lib_I2C_12__I2C2_TIMEOUT [4]
0x5088	0x00000000 ;?ICS__Lib_I2C_12__I2C2_TIMEOUT+0
; end of ?ICS__Lib_I2C_12__I2C2_TIMEOUT
;__Lib_I2C_12.c,0 :: ?ICS__Lib_I2C_12__I2Cx_TIMEOUT [4]
0x508C	0x00000000 ;?ICS__Lib_I2C_12__I2Cx_TIMEOUT+0
; end of ?ICS__Lib_I2C_12__I2Cx_TIMEOUT
;__Lib_GPIO_32F10x_Defs.c,680 :: __GPIO_MODULE_I2C1_PB67 [108]
0x5090	0x00000016 ;__GPIO_MODULE_I2C1_PB67+0
0x5094	0x00000017 ;__GPIO_MODULE_I2C1_PB67+4
0x5098	0xFFFFFFFF ;__GPIO_MODULE_I2C1_PB67+8
0x509C	0x00000000 ;__GPIO_MODULE_I2C1_PB67+12
0x50A0	0x00000000 ;__GPIO_MODULE_I2C1_PB67+16
0x50A4	0x00000000 ;__GPIO_MODULE_I2C1_PB67+20
0x50A8	0x00000000 ;__GPIO_MODULE_I2C1_PB67+24
0x50AC	0x00000000 ;__GPIO_MODULE_I2C1_PB67+28
0x50B0	0x00000000 ;__GPIO_MODULE_I2C1_PB67+32
0x50B4	0x00000000 ;__GPIO_MODULE_I2C1_PB67+36
0x50B8	0x00000000 ;__GPIO_MODULE_I2C1_PB67+40
0x50BC	0x00000000 ;__GPIO_MODULE_I2C1_PB67+44
0x50C0	0x00000000 ;__GPIO_MODULE_I2C1_PB67+48
0x50C4	0x00000828 ;__GPIO_MODULE_I2C1_PB67+52
0x50C8	0x00000828 ;__GPIO_MODULE_I2C1_PB67+56
0x50CC	0x00000000 ;__GPIO_MODULE_I2C1_PB67+60
0x50D0	0x00000000 ;__GPIO_MODULE_I2C1_PB67+64
0x50D4	0x00000000 ;__GPIO_MODULE_I2C1_PB67+68
0x50D8	0x00000000 ;__GPIO_MODULE_I2C1_PB67+72
0x50DC	0x00000000 ;__GPIO_MODULE_I2C1_PB67+76
0x50E0	0x00000000 ;__GPIO_MODULE_I2C1_PB67+80
0x50E4	0x00000000 ;__GPIO_MODULE_I2C1_PB67+84
0x50E8	0x00000000 ;__GPIO_MODULE_I2C1_PB67+88
0x50EC	0x00000000 ;__GPIO_MODULE_I2C1_PB67+92
0x50F0	0x00000000 ;__GPIO_MODULE_I2C1_PB67+96
0x50F4	0x00000000 ;__GPIO_MODULE_I2C1_PB67+100
0x50F8	0x00000002 ;__GPIO_MODULE_I2C1_PB67+104
; end of __GPIO_MODULE_I2C1_PB67
;__Lib_GPIO_32F10x_Defs.c,726 :: __GPIO_MODULE_USART3_PD89 [108]
0x50FC	0x00000038 ;__GPIO_MODULE_USART3_PD89+0
0x5100	0x00000039 ;__GPIO_MODULE_USART3_PD89+4
0x5104	0xFFFFFFFF ;__GPIO_MODULE_USART3_PD89+8
0x5108	0x00000000 ;__GPIO_MODULE_USART3_PD89+12
0x510C	0x00000000 ;__GPIO_MODULE_USART3_PD89+16
0x5110	0x00000000 ;__GPIO_MODULE_USART3_PD89+20
0x5114	0x00000000 ;__GPIO_MODULE_USART3_PD89+24
0x5118	0x00000000 ;__GPIO_MODULE_USART3_PD89+28
0x511C	0x00000000 ;__GPIO_MODULE_USART3_PD89+32
0x5120	0x00000000 ;__GPIO_MODULE_USART3_PD89+36
0x5124	0x00000000 ;__GPIO_MODULE_USART3_PD89+40
0x5128	0x00000000 ;__GPIO_MODULE_USART3_PD89+44
0x512C	0x00000000 ;__GPIO_MODULE_USART3_PD89+48
0x5130	0x00000818 ;__GPIO_MODULE_USART3_PD89+52
0x5134	0x00000018 ;__GPIO_MODULE_USART3_PD89+56
0x5138	0x00000000 ;__GPIO_MODULE_USART3_PD89+60
0x513C	0x00000000 ;__GPIO_MODULE_USART3_PD89+64
0x5140	0x00000000 ;__GPIO_MODULE_USART3_PD89+68
0x5144	0x00000000 ;__GPIO_MODULE_USART3_PD89+72
0x5148	0x00000000 ;__GPIO_MODULE_USART3_PD89+76
0x514C	0x00000000 ;__GPIO_MODULE_USART3_PD89+80
0x5150	0x00000000 ;__GPIO_MODULE_USART3_PD89+84
0x5154	0x00000000 ;__GPIO_MODULE_USART3_PD89+88
0x5158	0x00000000 ;__GPIO_MODULE_USART3_PD89+92
0x515C	0x00000000 ;__GPIO_MODULE_USART3_PD89+96
0x5160	0x00000000 ;__GPIO_MODULE_USART3_PD89+100
0x5164	0x08140030 ;__GPIO_MODULE_USART3_PD89+104
; end of __GPIO_MODULE_USART3_PD89
;__Lib_GPIO_32F10x_Defs.c,711 :: __GPIO_MODULE_USART2_PD56 [108]
0x5168	0x00000035 ;__GPIO_MODULE_USART2_PD56+0
0x516C	0x00000036 ;__GPIO_MODULE_USART2_PD56+4
0x5170	0xFFFFFFFF ;__GPIO_MODULE_USART2_PD56+8
0x5174	0x00000000 ;__GPIO_MODULE_USART2_PD56+12
0x5178	0x00000000 ;__GPIO_MODULE_USART2_PD56+16
0x517C	0x00000000 ;__GPIO_MODULE_USART2_PD56+20
0x5180	0x00000000 ;__GPIO_MODULE_USART2_PD56+24
0x5184	0x00000000 ;__GPIO_MODULE_USART2_PD56+28
0x5188	0x00000000 ;__GPIO_MODULE_USART2_PD56+32
0x518C	0x00000000 ;__GPIO_MODULE_USART2_PD56+36
0x5190	0x00000000 ;__GPIO_MODULE_USART2_PD56+40
0x5194	0x00000000 ;__GPIO_MODULE_USART2_PD56+44
0x5198	0x00000000 ;__GPIO_MODULE_USART2_PD56+48
0x519C	0x00000818 ;__GPIO_MODULE_USART2_PD56+52
0x51A0	0x00000018 ;__GPIO_MODULE_USART2_PD56+56
0x51A4	0x00000000 ;__GPIO_MODULE_USART2_PD56+60
0x51A8	0x00000000 ;__GPIO_MODULE_USART2_PD56+64
0x51AC	0x00000000 ;__GPIO_MODULE_USART2_PD56+68
0x51B0	0x00000000 ;__GPIO_MODULE_USART2_PD56+72
0x51B4	0x00000000 ;__GPIO_MODULE_USART2_PD56+76
0x51B8	0x00000000 ;__GPIO_MODULE_USART2_PD56+80
0x51BC	0x00000000 ;__GPIO_MODULE_USART2_PD56+84
0x51C0	0x00000000 ;__GPIO_MODULE_USART2_PD56+88
0x51C4	0x00000000 ;__GPIO_MODULE_USART2_PD56+92
0x51C8	0x00000000 ;__GPIO_MODULE_USART2_PD56+96
0x51CC	0x00000000 ;__GPIO_MODULE_USART2_PD56+100
0x51D0	0x08000008 ;__GPIO_MODULE_USART2_PD56+104
; end of __GPIO_MODULE_USART2_PD56
;__Lib_GPIO_32F10x_Defs.c,696 :: __GPIO_MODULE_USART1_PA9_10 [108]
0x51D4	0x00000009 ;__GPIO_MODULE_USART1_PA9_10+0
0x51D8	0x0000000A ;__GPIO_MODULE_USART1_PA9_10+4
0x51DC	0xFFFFFFFF ;__GPIO_MODULE_USART1_PA9_10+8
0x51E0	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+12
0x51E4	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+16
0x51E8	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+20
0x51EC	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+24
0x51F0	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+28
0x51F4	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+32
0x51F8	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+36
0x51FC	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+40
0x5200	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+44
0x5204	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+48
0x5208	0x00000818 ;__GPIO_MODULE_USART1_PA9_10+52
0x520C	0x00000018 ;__GPIO_MODULE_USART1_PA9_10+56
0x5210	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+60
0x5214	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+64
0x5218	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+68
0x521C	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+72
0x5220	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+76
0x5224	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+80
0x5228	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+84
0x522C	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+88
0x5230	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+92
0x5234	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+96
0x5238	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+100
0x523C	0x00000004 ;__GPIO_MODULE_USART1_PA9_10+104
; end of __GPIO_MODULE_USART1_PA9_10
;easymx_v7_STM32F107VC.c,47 :: __MIKROBUS1_GPIO [96]
0x5240	0x00000295 ;__MIKROBUS1_GPIO+0
0x5244	0x000002A1 ;__MIKROBUS1_GPIO+4
0x5248	0x00000289 ;__MIKROBUS1_GPIO+8
0x524C	0x00000271 ;__MIKROBUS1_GPIO+12
0x5250	0x0000027D ;__MIKROBUS1_GPIO+16
0x5254	0x000002AD ;__MIKROBUS1_GPIO+20
0x5258	0x000002DD ;__MIKROBUS1_GPIO+24
0x525C	0x000002E9 ;__MIKROBUS1_GPIO+28
0x5260	0x000002D1 ;__MIKROBUS1_GPIO+32
0x5264	0x000002B9 ;__MIKROBUS1_GPIO+36
0x5268	0x000002C5 ;__MIKROBUS1_GPIO+40
0x526C	0x00000211 ;__MIKROBUS1_GPIO+44
0x5270	0xFFFFFFFF ;__MIKROBUS1_GPIO+48
0x5274	0xFFFFFFFF ;__MIKROBUS1_GPIO+52
0x5278	0xFFFFFFFF ;__MIKROBUS1_GPIO+56
0x527C	0xFFFFFFFF ;__MIKROBUS1_GPIO+60
0x5280	0xFFFFFFFF ;__MIKROBUS1_GPIO+64
0x5284	0xFFFFFFFF ;__MIKROBUS1_GPIO+68
0x5288	0xFFFFFFFF ;__MIKROBUS1_GPIO+72
0x528C	0xFFFFFFFF ;__MIKROBUS1_GPIO+76
0x5290	0xFFFFFFFF ;__MIKROBUS1_GPIO+80
0x5294	0xFFFFFFFF ;__MIKROBUS1_GPIO+84
0x5298	0xFFFFFFFF ;__MIKROBUS1_GPIO+88
0x529C	0xFFFFFFFF ;__MIKROBUS1_GPIO+92
; end of __MIKROBUS1_GPIO
;__irgrid2_driver.c,176 :: __irgrid2_driver__exp_coeff_L0 [40]
0x52A0	0x3F800000 ;__irgrid2_driver__exp_coeff_L0+0
0x52A4	0x3F317218 ;__irgrid2_driver__exp_coeff_L0+4
0x52A8	0x3E75FDF0 ;__irgrid2_driver__exp_coeff_L0+8
0x52AC	0x3D635847 ;__irgrid2_driver__exp_coeff_L0+12
0x52B0	0x3C1D9558 ;__irgrid2_driver__exp_coeff_L0+16
0x52B4	0x3AAEC482 ;__irgrid2_driver__exp_coeff_L0+20
0x52B8	0x392178A8 ;__irgrid2_driver__exp_coeff_L0+24
0x52BC	0x378093EF ;__irgrid2_driver__exp_coeff_L0+28
0x52C0	0x35A792A0 ;__irgrid2_driver__exp_coeff_L0+32
0x52C4	0x34155646 ;__irgrid2_driver__exp_coeff_L0+36
; end of __irgrid2_driver__exp_coeff_L0
;__irgrid2_driver.c,215 :: __irgrid2_driver__log_coeff_L0 [36]
0x52C8	0x2EDBE6FF ;__irgrid2_driver__log_coeff_L0+0
0x52CC	0x3F7FFFC4 ;__irgrid2_driver__log_coeff_L0+4
0x52D0	0xBEFFEF80 ;__irgrid2_driver__log_coeff_L0+8
0x52D4	0x3EA9E190 ;__irgrid2_driver__log_coeff_L0+12
0x52D8	0xBE7682EC ;__irgrid2_driver__log_coeff_L0+16
0x52DC	0x3E2BAD82 ;__irgrid2_driver__log_coeff_L0+20
0x52E0	0xBDC33C0E ;__irgrid2_driver__log_coeff_L0+24
0x52E4	0x3D13D187 ;__irgrid2_driver__log_coeff_L0+28
0x52E8	0xBBD37841 ;__irgrid2_driver__log_coeff_L0+32
; end of __irgrid2_driver__log_coeff_L0
;__Lib_System_105_107.c,447 :: __Lib_System_105_107_APBAHBPrescTable [16]
0x52EC	0x00000000 ;__Lib_System_105_107_APBAHBPrescTable+0
0x52F0	0x04030201 ;__Lib_System_105_107_APBAHBPrescTable+4
0x52F4	0x04030201 ;__Lib_System_105_107_APBAHBPrescTable+8
0x52F8	0x09080706 ;__Lib_System_105_107_APBAHBPrescTable+12
; end of __Lib_System_105_107_APBAHBPrescTable
;easymx_v7_STM32F107VC.c,15 :: __MIKROBUS1_I2C [12]
0x52FC	0x000015B9 ;__MIKROBUS1_I2C+0
0x5300	0x000015E9 ;__MIKROBUS1_I2C+4
0x5304	0x00001395 ;__MIKROBUS1_I2C+8
; end of __MIKROBUS1_I2C
;__irgrid2_driver.c,0 :: ?ICSirgrid2_getPixelTemperature__tr_L0 [4]
0x5308	0x00000000 ;?ICSirgrid2_getPixelTemperature__tr_L0+0
; end of ?ICSirgrid2_getPixelTemperature__tr_L0
;__irgrid2_driver.c,0 :: ?ICSirgrid2_getPixelTemperature__emissivity_L0 [4]
0x530C	0x3F733333 ;?ICSirgrid2_getPixelTemperature__emissivity_L0+0
; end of ?ICSirgrid2_getPixelTemperature__emissivity_L0
;__Lib_System_105_107.c,448 :: __Lib_System_105_107_ADCPrescTable [4]
0x5310	0x08060402 ;__Lib_System_105_107_ADCPrescTable+0
; end of __Lib_System_105_107_ADCPrescTable
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0150     [140]    _GPIO_Clk_Enable
0x01DC      [24]    _I2Cx_Is_Idle
0x01F4      [26]    _I2Cx_Get_Status
0x0210      [12]    easymx_v7_STM32F107VC__setSDA_1
0x021C      [12]    easymx_v7_STM32F107VC__setAN_2
0x0228      [12]    easymx_v7_STM32F107VC__setRST_2
0x0234      [12]    easymx_v7_STM32F107VC__setMOSI_2
0x0240      [12]    easymx_v7_STM32F107VC__setPWM_2
0x024C      [12]    easymx_v7_STM32F107VC__setMISO_2
0x0258      [12]    easymx_v7_STM32F107VC__setCS_2
0x0264      [12]    easymx_v7_STM32F107VC__setSCK_2
0x0270      [12]    easymx_v7_STM32F107VC__setSCK_1
0x027C      [12]    easymx_v7_STM32F107VC__setMISO_1
0x0288      [12]    easymx_v7_STM32F107VC__setCS_1
0x0294      [12]    easymx_v7_STM32F107VC__setAN_1
0x02A0      [12]    easymx_v7_STM32F107VC__setRST_1
0x02AC      [12]    easymx_v7_STM32F107VC__setMOSI_1
0x02B8      [12]    easymx_v7_STM32F107VC__setTX_1
0x02C4      [12]    easymx_v7_STM32F107VC__setSCL_1
0x02D0      [12]    easymx_v7_STM32F107VC__setRX_1
0x02DC      [12]    easymx_v7_STM32F107VC__setPWM_1
0x02E8      [12]    easymx_v7_STM32F107VC__setINT_1
0x02F4     [500]    _GPIO_Config
0x04E8     [144]    __Lib_I2C_12_I2Cx_Wait_For_Idle
0x0578     [254]    __Add_FP
0x0678      [36]    _ChekXForEvent
0x069C      [12]    easymx_v7_STM32F107VC__setSDA_2
0x06A8      [12]    easymx_v7_STM32F107VC__setRX_2
0x06B4      [12]    easymx_v7_STM32F107VC__setINT_2
0x06C0      [12]    easymx_v7_STM32F107VC__setSCL_2
0x06CC      [12]    easymx_v7_STM32F107VC__setTX_2
0x06D8      [72]    __irgrid2_driver__eval_poly
0x0720     [138]    __Mul_FP
0x07AC     [204]    _I2Cx_Start
0x0878     [108]    __irgrid2_driver__ldexp
0x08E4     [124]    __irgrid2_driver__floor
0x0960      [12]    __Lib_UART_123_45_UARTx_Tx_Idle
0x096C      [12]    __Lib_UART_123_45_UARTx_Data_Ready
0x0978      [22]    __Lib_UART_123_45_UARTx_Read
0x0990      [38]    __irgrid2_driver__frexp
0x09B8    [1116]    _I2Cx_Read
0x0E14     [408]    _I2Cx_Write
0x0FAC      [12]    _Get_Fosc_kHz
0x0FB8     [152]    __Lib_GPIO_32F10x_GPIO_Configure_Pin
0x1050      [24]    _UART3_Tx_Idle
0x1068      [24]    _UART3_Read
0x1080      [24]    _UART3_Data_Ready
0x1098      [24]    _UART5_Read
0x10B0      [24]    _UART5_Data_Ready
0x10C8      [24]    _UART4_Tx_Idle
0x10E0      [24]    _UART4_Read
0x10F8      [24]    _UART4_Data_Ready
0x1110      [24]    _UART2_Tx_Idle
0x1128      [24]    _UART1_Tx_Idle
0x1140      [24]    _UART2_Data_Ready
0x1158      [24]    _UART2_Read
0x1170     [168]    _RCC_GetClocksFrequency
0x1218      [24]    _I2C2_Start
0x1230     [272]    _GPIO_Alternate_Function_Enable
0x1340      [24]    _UART1_Data_Ready
0x1358      [24]    _UART1_Read
0x1370      [36]    _I2C2_Read
0x1394      [36]    _I2C1_Read
0x13B8     [120]    __irgrid2_driver__log
0x1430      [66]    __FloatToSignedIntegral
0x1474      [64]    __SignedIntegralToFloat
0x14B4     [260]    __irgrid2_driver__exp
0x15B8      [24]    _I2C1_Start
0x15D0      [24]    _UART5_Tx_Idle
0x15E8      [36]    _I2C1_Write
0x160C      [36]    _I2C2_Write
0x1630     [178]    __irgrid2_driver__pow
0x16E4      [72]    __irgrid2_driver_CheckAdjacentPixels
0x172C      [36]    __irgrid2_driver_hal_i2cRead
0x1750      [24]    _Delay_10ms
0x1768      [40]    __irgrid2_driver_hal_i2cWrite
0x1790      [44]    __UnsignedIntegralToFloat
0x17BC     [164]    __Div_FP
0x1860     [258]    __Sub_FP
0x1964     [104]    __Compare_FP
0x19CC      [30]    __Lib_UART_123_45_UARTx_Write
0x19EC     [580]    __Lib_UART_123_45_UARTx_Init_Advanced
0x1C30      [44]    __irgrid2_driver_hal_i2cStart
0x1C5C     [412]    _I2Cx_Init_Advanced
0x1DF8      [28]    _UART5_Write
0x1E14     [388]    __irgrid2_driver_ExtractKvPixelParameters
0x1F98      [28]    _UART4_Write
0x1FB4     [256]    __irgrid2_driver_ExtractPTATParameters
0x20B4      [72]    __irgrid2_driver_ExtractVDDParameters
0x20FC      [28]    __irgrid2_driver_CheckEEPROMValid
0x2118     [600]    __irgrid2_driver_ExtractKtaPixelParameters
0x2370      [88]    __irgrid2_driver_ExtractTgcParameters
0x23C8      [24]    __irgrid2_driver_ExtractResolutionParameters
0x23E0     [208]    _irgrid2_readData
0x24B0      [34]    __irgrid2_driver_ExtractGainParameters
0x24D4     [996]    __irgrid2_driver_ExtractAlphaParameters
0x28B8     [740]    __irgrid2_driver_ExtractOffsetParameters
0x2B9C      [92]    __irgrid2_driver_ExtractKsTaParameters
0x2BF8     [420]    __irgrid2_driver_ExtractKsToParameters
0x2D9C     [664]    __irgrid2_driver_ExtractCPParameters
0x3034      [76]    _irgrid2_writeByte
0x3080      [40]    _UART1_Init_Advanced
0x30A8      [40]    _UART2_Init_Advanced
0x30D0     [200]    _irgrid2_GetVdd
0x3198      [40]    _UART3_Init_Advanced
0x31C0      [28]    _I2C1_Init_Advanced
0x31DC      [28]    _UART2_Write
0x31F8     [408]    __irgrid2_driver_ExtractCILCParameters
0x3390      [28]    _UART3_Write
0x33AC     [486]    __irgrid2_driver_ExtractDeviatingPixels
0x3594      [28]    _UART1_Write
0x35B0     [268]    _irgrid2_GetTa
0x36BC    [2020]    _irgrid2_CalculateTo
0x3EA0     [178]    _irgrid2_getFrameData
0x3F54      [70]    _irgrid2_setRefreshRate
0x3FA0      [24]    _Delay_100ms
0x3FB8      [32]    easymx_v7_STM32F107VC__i2cInit_1
0x3FD8      [32]    easymx_v7_STM32F107VC__log_write
0x3FF8      [32]    easymx_v7_STM32F107VC__i2cInit_2
0x4018     [150]    _irgrid2_ExtractParameters
0x40B0      [56]    easymx_v7_STM32F107VC__log_init2
0x40E8      [56]    easymx_v7_STM32F107VC__log_init1
0x4120      [56]    easymx_v7_STM32F107VC__log_initUartB
0x4158      [56]    easymx_v7_STM32F107VC__log_initUartA
0x4190      [40]    __irgrid2_driver_hal_i2cMap
0x41B8      [28]    _irgrid2_readEEPROM
0x41D4      [40]    _strcpy
0x41FC       [2]    __irgrid2_driver_hal_gpioMap
0x4200      [70]    _mikrobus_logInit
0x4248      [24]    _Delay_1ms
0x4260     [120]    _irgrid2_getPixelTemperature
0x42D8     [500]    _FloatToStr
0x44CC      [48]    _irgrid2_init
0x44FC      [36]    _irgrid2_i2cDriverInit
0x4520      [48]    _mikrobus_i2cInit
0x4550      [24]    _Delay_80us
0x4568     [112]    _mikrobus_logWrite
0x45D8     [108]    __Lib_System_105_107_SystemClockSetDefault
0x4644      [58]    ___FillZeros
0x4680      [76]    _systemInit
0x46CC      [52]    _applicationInit
0x4700     [236]    _applicationTask
0x47EC      [20]    ___CC2DW
0x4800      [20]    __Lib_System_105_107_InitialSetUpFosc
0x4814       [8]    ___GenExcept
0x481C      [32]    _main
0x483C     [324]    __Lib_System_105_107_InitialSetUpRCCRCC2
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x20000000      [26]    ?lstr2_Click_IR_Grid2_STM
0x2000001A      [22]    ?lstr1_Click_IR_Grid2_STM
0x20000030       [4]    _Ta
0x20000034      [23]    ?lstr3_Click_IR_Grid2_STM
0x2000004B       [2]    ?lstr4_Click_IR_Grid2_STM
0x2000004D      [39]    ?lstr5_Click_IR_Grid2_STM
0x20000074       [2]    ?lstr6_Click_IR_Grid2_STM
0x20000076       [2]    ?lstr7_Click_IR_Grid2_STM
0x20000078       [2]    ?lstr8_Click_IR_Grid2_STM
0x2000007A       [4]    ?lstr1___Lib_Conversions
0x2000007E       [2]    ?lstr2___Lib_Conversions
0x20000080       [4]    ?lstr3___Lib_Conversions
0x20000084       [4]    __Lib_I2C_12__I2C1_TIMEOUT
0x20000088       [4]    __Lib_I2C_12__I2C2_TIMEOUT
0x2000008C       [4]    __Lib_I2C_12__I2Cx_TIMEOUT
0x20000090    [3072]    _pixelTemp
0x20000C90     [100]    _demoText
0x20000CF4       [2]    _cnt
0x20000CF6       [1]    __irgrid2_driver__slaveAddress
0x20000CF8       [4]    _logger
0x20000CFC   [10864]    __irgrid2_driver_mlx90640
0x2000376C       [4]    __irgrid2_driver_fp_i2cWrite
0x20003770       [4]    __irgrid2_driver_fp_i2cRead
0x20003774       [4]    __irgrid2_driver_fp_i2cStart
0x20003778       [4]    ___System_CLOCK_IN_KHZ
0x2000377C       [4]    _I2Cx_Timeout_Ptr
0x20003780       [4]    _I2C1_Timeout_Ptr
0x20003784       [4]    _I2C2_Timeout_Ptr
0x20003788       [4]    _I2C_Start_Ptr
0x2000378C       [4]    _I2C_Read_Ptr
0x20003790       [4]    _I2C_Write_Ptr
0x20003794       [4]    _UART_Wr_Ptr
0x20003798       [4]    _UART_Rd_Ptr
0x2000379C       [4]    _UART_Rdy_Ptr
0x200037A0       [4]    _UART_Tx_Idle_Ptr
0x200037A4    [1664]    irgrid2_init_eeMLX90640_L0
0x20003E24    [1668]    irgrid2_getPixelTemperature_mlx90640Frame_L0
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x3F9C       [4]    __IRGRID2_I2C_CFG
0x4980    [1664]    ?ICSirgrid2_readData_readReg_L0
0x5000      [26]    ?ICS?lstr2_Click_IR_Grid2_STM
0x501A      [22]    ?ICS?lstr1_Click_IR_Grid2_STM
0x5030       [4]    ?ICS_Ta
0x5034      [23]    ?ICS?lstr3_Click_IR_Grid2_STM
0x504B       [2]    ?ICS?lstr4_Click_IR_Grid2_STM
0x504D      [39]    ?ICS?lstr5_Click_IR_Grid2_STM
0x5074       [2]    ?ICS?lstr6_Click_IR_Grid2_STM
0x5076       [2]    ?ICS?lstr7_Click_IR_Grid2_STM
0x5078       [2]    ?ICS?lstr8_Click_IR_Grid2_STM
0x507A       [4]    ?ICS?lstr1___Lib_Conversions
0x507E       [2]    ?ICS?lstr2___Lib_Conversions
0x5080       [4]    ?ICS?lstr3___Lib_Conversions
0x5084       [4]    ?ICS__Lib_I2C_12__I2C1_TIMEOUT
0x5088       [4]    ?ICS__Lib_I2C_12__I2C2_TIMEOUT
0x508C       [4]    ?ICS__Lib_I2C_12__I2Cx_TIMEOUT
0x5090     [108]    __GPIO_MODULE_I2C1_PB67
0x50FC     [108]    __GPIO_MODULE_USART3_PD89
0x5168     [108]    __GPIO_MODULE_USART2_PD56
0x51D4     [108]    __GPIO_MODULE_USART1_PA9_10
0x5240      [96]    __MIKROBUS1_GPIO
0x52A0      [40]    __irgrid2_driver__exp_coeff_L0
0x52C8      [36]    __irgrid2_driver__log_coeff_L0
0x52EC      [16]    __Lib_System_105_107_APBAHBPrescTable
0x52FC      [12]    __MIKROBUS1_I2C
0x5308       [4]    ?ICSirgrid2_getPixelTemperature__tr_L0
0x530C       [4]    ?ICSirgrid2_getPixelTemperature__emissivity_L0
0x5310       [4]    __Lib_System_105_107_ADCPrescTable
