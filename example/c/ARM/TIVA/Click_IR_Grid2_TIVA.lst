;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 27.8.2018. 18:06:33
;----------------------------------------------

;Address Opcode 	ASM
____SysVT:
0x0000	0xFFFC2003  	537133052
0x0004	0x499D0000  	18845
0x0008	0x48250000  	18469
0x000C	0x48250000  	18469
0x0010	0x48250000  	18469
0x0014	0x48250000  	18469
0x0018	0x48250000  	18469
0x001C	0x48250000  	18469
0x0020	0x48250000  	18469
0x0024	0x48250000  	18469
0x0028	0x48250000  	18469
0x002C	0x48250000  	18469
0x0030	0x48250000  	18469
0x0034	0x48250000  	18469
0x0038	0x48250000  	18469
0x003C	0x48250000  	18469
0x0040	0x48250000  	18469
0x0044	0x48250000  	18469
0x0048	0x48250000  	18469
0x004C	0x48250000  	18469
0x0050	0x48250000  	18469
0x0054	0x48250000  	18469
0x0058	0x48250000  	18469
0x005C	0x48250000  	18469
0x0060	0x48250000  	18469
0x0064	0x48250000  	18469
0x0068	0x48250000  	18469
0x006C	0x48250000  	18469
0x0070	0x48250000  	18469
0x0074	0x48250000  	18469
0x0078	0x48250000  	18469
0x007C	0x48250000  	18469
0x0080	0x48250000  	18469
0x0084	0x48250000  	18469
0x0088	0x48250000  	18469
0x008C	0x48250000  	18469
0x0090	0x48250000  	18469
0x0094	0x48250000  	18469
0x0098	0x48250000  	18469
0x009C	0x48250000  	18469
0x00A0	0x48250000  	18469
0x00A4	0x48250000  	18469
0x00A8	0x48250000  	18469
0x00AC	0x48250000  	18469
0x00B0	0x48250000  	18469
0x00B4	0x48250000  	18469
0x00B8	0x48250000  	18469
0x00BC	0x48250000  	18469
0x00C0	0x48250000  	18469
0x00C4	0x48250000  	18469
0x00C8	0x48250000  	18469
0x00CC	0x48250000  	18469
0x00D0	0x48250000  	18469
0x00D4	0x48250000  	18469
0x00D8	0x48250000  	18469
0x00DC	0x48250000  	18469
0x00E0	0x48250000  	18469
0x00E4	0x48250000  	18469
0x00E8	0x48250000  	18469
0x00EC	0x48250000  	18469
0x00F0	0x48250000  	18469
0x00F4	0x48250000  	18469
0x00F8	0x48250000  	18469
0x00FC	0x48250000  	18469
0x0100	0x48250000  	18469
0x0104	0x48250000  	18469
0x0108	0x48250000  	18469
0x010C	0x48250000  	18469
0x0110	0x48250000  	18469
0x0114	0x48250000  	18469
0x0118	0x48250000  	18469
0x011C	0x48250000  	18469
0x0120	0x48250000  	18469
0x0124	0x48250000  	18469
0x0128	0x48250000  	18469
0x012C	0x48250000  	18469
0x0130	0x48250000  	18469
0x0134	0x48250000  	18469
0x0138	0x48250000  	18469
0x013C	0x48250000  	18469
0x0140	0x48250000  	18469
0x0144	0x48250000  	18469
0x0148	0x48250000  	18469
0x014C	0x48250000  	18469
0x0150	0x48250000  	18469
0x0154	0x48250000  	18469
0x0158	0x48250000  	18469
0x015C	0x48250000  	18469
0x0160	0x48250000  	18469
0x0164	0x48250000  	18469
0x0168	0x48250000  	18469
0x016C	0x48250000  	18469
0x0170	0x48250000  	18469
0x0174	0x48250000  	18469
0x0178	0x48250000  	18469
0x017C	0x48250000  	18469
0x0180	0x48250000  	18469
0x0184	0x48250000  	18469
0x0188	0x48250000  	18469
0x018C	0x48250000  	18469
0x0190	0x48250000  	18469
0x0194	0x48250000  	18469
0x0198	0x48250000  	18469
0x019C	0x48250000  	18469
0x01A0	0x48250000  	18469
0x01A4	0x48250000  	18469
0x01A8	0x48250000  	18469
0x01AC	0x48250000  	18469
0x01B0	0x48250000  	18469
0x01B4	0x48250000  	18469
0x01B8	0x48250000  	18469
0x01BC	0x48250000  	18469
0x01C0	0x48250000  	18469
0x01C4	0x48250000  	18469
0x01C8	0x48250000  	18469
0x01CC	0x48250000  	18469
0x01D0	0x48250000  	18469
0x01D4	0x48250000  	18469
0x01D8	0x48250000  	18469
0x01DC	0x48250000  	18469
0x01E0	0x48250000  	18469
0x01E4	0x48250000  	18469
0x01E8	0x48250000  	18469
0x01EC	0x48250000  	18469
0x01F0	0x48250000  	18469
0x01F4	0x48250000  	18469
0x01F8	0x48250000  	18469
0x01FC	0x48250000  	18469
0x0200	0x48250000  	18469
0x0204	0x48250000  	18469
; end of ____SysVT
_main:
;Click_IR_Grid2_TIVA.c, 78 :: 		void main()
0x499C	0xF7FFFF66  BL	18540
0x49A0	0xF7FFFF44  BL	18476
0x49A4	0xF000FE06  BL	21940
0x49A8	0xF7FFFF56  BL	18520
0x49AC	0xF000FDB4  BL	21784
;Click_IR_Grid2_TIVA.c, 80 :: 		systemInit();
0x49B0	0xF7FFFE76  BL	_systemInit+0
;Click_IR_Grid2_TIVA.c, 81 :: 		applicationInit();
0x49B4	0xF7FFFE9A  BL	_applicationInit+0
;Click_IR_Grid2_TIVA.c, 83 :: 		while (1)
L_main10:
;Click_IR_Grid2_TIVA.c, 85 :: 		applicationTask();
0x49B8	0xF7FFFEB2  BL	_applicationTask+0
;Click_IR_Grid2_TIVA.c, 86 :: 		}
0x49BC	0xE7FC    B	L_main10
;Click_IR_Grid2_TIVA.c, 87 :: 		}
L_end_main:
L__main_end_loop:
0x49BE	0xE7FE    B	L__main_end_loop
; end of _main
___CC2DW:
;__Lib_System_TIVA.c, 19 :: 		
0x4810	0xB081    SUB	SP, SP, #4
;__Lib_System_TIVA.c, 21 :: 		
L_loopDW:
;__Lib_System_TIVA.c, 22 :: 		
0x4812	0xF81C9B01  LDRB	R9, [R12], #1
;__Lib_System_TIVA.c, 23 :: 		
0x4816	0xF80B9B01  STRB	R9, [R11], #1
;__Lib_System_TIVA.c, 24 :: 		
0x481A	0xEBBB0F0A  CMP	R11, R10, LSL #0
;__Lib_System_TIVA.c, 25 :: 		
0x481E	0xD1F8    BNE	L_loopDW
;__Lib_System_TIVA.c, 27 :: 		
L_end___CC2DW:
0x4820	0xB001    ADD	SP, SP, #4
0x4822	0x4770    BX	LR
; end of ___CC2DW
___FillZeros:
;__Lib_System_TIVA.c, 62 :: 		
0x4660	0xB081    SUB	SP, SP, #4
;__Lib_System_TIVA.c, 64 :: 		
0x4662	0xF04F0900  MOV	R9, #0
;__Lib_System_TIVA.c, 65 :: 		
0x4666	0xF04F0C00  MOV	R12, #0
;__Lib_System_TIVA.c, 66 :: 		
0x466A	0xEBBD0F0A  CMP	SP, R10, LSL #0
;__Lib_System_TIVA.c, 67 :: 		
0x466E	0xDC04    BGT	L_loopFZs
;__Lib_System_TIVA.c, 68 :: 		
0x4670	0xEBBD0F0B  CMP	SP, R11, LSL #0
;__Lib_System_TIVA.c, 69 :: 		
0x4674	0xDB01    BLT	L_loopFZs
;__Lib_System_TIVA.c, 70 :: 		
0x4676	0x46D4    MOV	R12, R10
;__Lib_System_TIVA.c, 71 :: 		
0x4678	0x46EA    MOV	R10, SP
;__Lib_System_TIVA.c, 72 :: 		
L_loopFZs:
;__Lib_System_TIVA.c, 73 :: 		
0x467A	0xF84B9B04  STR	R9, [R11], #4
;__Lib_System_TIVA.c, 74 :: 		
0x467E	0xEBBB0F0A  CMP	R11, R10, LSL #0
;__Lib_System_TIVA.c, 75 :: 		
0x4682	0xD1FA    BNE	L_loopFZs
;__Lib_System_TIVA.c, 76 :: 		
0x4684	0xEBBC0F0A  CMP	R12, R10, LSL #0
;__Lib_System_TIVA.c, 77 :: 		
0x4688	0xDD05    BLE	L_norep
;__Lib_System_TIVA.c, 78 :: 		
0x468A	0x46E2    MOV	R10, R12
;__Lib_System_TIVA.c, 79 :: 		
0x468C	0xF8D9B000  LDR	R11, [R9, #0]
;__Lib_System_TIVA.c, 80 :: 		
0x4690	0xF10B0B04  ADD	R11, R11, #4
;__Lib_System_TIVA.c, 81 :: 		
0x4694	0xE7F1    B	L_loopFZs
;__Lib_System_TIVA.c, 82 :: 		
L_norep:
;__Lib_System_TIVA.c, 85 :: 		
L_end___FillZeros:
0x4696	0xB001    ADD	SP, SP, #4
0x4698	0x4770    BX	LR
; end of ___FillZeros
_systemInit:
;Click_IR_Grid2_TIVA.c, 35 :: 		void systemInit()
0x46A0	0xB081    SUB	SP, SP, #4
0x46A2	0xF8CDE000  STR	LR, [SP, #0]
;Click_IR_Grid2_TIVA.c, 37 :: 		Delay_80us();
0x46A6	0xF7FFFE07  BL	_Delay_80us+0
;Click_IR_Grid2_TIVA.c, 38 :: 		mikrobus_i2cInit( _MIKROBUS1, &_IRGRID2_I2C_CFG[0] );
0x46AA	0x480E    LDR	R0, [PC, #56]
0x46AC	0x4601    MOV	R1, R0
0x46AE	0x2000    MOVS	R0, #0
0x46B0	0xF7FFFE0E  BL	_mikrobus_i2cInit+0
;Click_IR_Grid2_TIVA.c, 39 :: 		mikrobus_logInit( _LOG_USBUART_A, 115200 );
0x46B4	0xF44F31E1  MOV	R1, #115200
0x46B8	0x2020    MOVS	R0, #32
0x46BA	0xF7FFFE97  BL	_mikrobus_logInit+0
;Click_IR_Grid2_TIVA.c, 40 :: 		mikrobus_logWrite(" --- System Init --- ", _LOG_LINE);
0x46BE	0x480A    LDR	R0, [PC, #40]
0x46C0	0x2102    MOVS	R1, #2
0x46C2	0xF7FFFE5B  BL	_mikrobus_logWrite+0
;Click_IR_Grid2_TIVA.c, 41 :: 		Delay_ms( 100 );
0x46C6	0xF64007FE  MOVW	R7, #2302
0x46CA	0xF2C0073D  MOVT	R7, #61
0x46CE	0xBF00    NOP
0x46D0	0xBF00    NOP
L_systemInit0:
0x46D2	0x1E7F    SUBS	R7, R7, #1
0x46D4	0xD1FD    BNE	L_systemInit0
0x46D6	0xBF00    NOP
0x46D8	0xBF00    NOP
0x46DA	0xBF00    NOP
;Click_IR_Grid2_TIVA.c, 42 :: 		}
L_end_systemInit:
0x46DC	0xF8DDE000  LDR	LR, [SP, #0]
0x46E0	0xB001    ADD	SP, SP, #4
0x46E2	0x4770    BX	LR
0x46E4	0x13940000  	__IRGRID2_I2C_CFG+0
0x46E8	0x00002000  	?lstr1_Click_IR_Grid2_TIVA+0
; end of _systemInit
_Delay_80us:
;__Lib_Delays.c, 29 :: 		void Delay_80us() {
;__Lib_Delays.c, 30 :: 		Delay_us(78);
0x42B8	0xF640472E  MOVW	R7, #3118
0x42BC	0xF2C00700  MOVT	R7, #0
L_Delay_80us8:
0x42C0	0x1E7F    SUBS	R7, R7, #1
0x42C2	0xD1FD    BNE	L_Delay_80us8
0x42C4	0xBF00    NOP
0x42C6	0xBF00    NOP
0x42C8	0xBF00    NOP
0x42CA	0xBF00    NOP
0x42CC	0xBF00    NOP
;__Lib_Delays.c, 31 :: 		}
L_end_Delay_80us:
0x42CE	0x4770    BX	LR
; end of _Delay_80us
_mikrobus_i2cInit:
;easymx_v7_TM4C129XNCZAD.c, 222 :: 		T_mikrobus_ret mikrobus_i2cInit(T_mikrobus_soc bus, const uint32_t *cfg)
; cfg start address is: 4 (R1)
; bus start address is: 0 (R0)
0x42D0	0xB081    SUB	SP, SP, #4
0x42D2	0xF8CDE000  STR	LR, [SP, #0]
; cfg end address is: 4 (R1)
; bus end address is: 0 (R0)
; bus start address is: 0 (R0)
; cfg start address is: 4 (R1)
;easymx_v7_TM4C129XNCZAD.c, 224 :: 		switch( bus )
0x42D6	0xE009    B	L_mikrobus_i2cInit83
; bus end address is: 0 (R0)
;easymx_v7_TM4C129XNCZAD.c, 227 :: 		case _MIKROBUS1 : return _i2cInit_1( cfg );
L_mikrobus_i2cInit85:
0x42D8	0x4608    MOV	R0, R1
; cfg end address is: 4 (R1)
0x42DA	0xF7FFFA03  BL	easymx_v7_TM4C129XNCZAD__i2cInit_1+0
0x42DE	0xE00A    B	L_end_mikrobus_i2cInit
;easymx_v7_TM4C129XNCZAD.c, 230 :: 		case _MIKROBUS2 : return _i2cInit_2( cfg );
L_mikrobus_i2cInit86:
; cfg start address is: 4 (R1)
0x42E0	0x4608    MOV	R0, R1
; cfg end address is: 4 (R1)
0x42E2	0xF7FFFA0F  BL	easymx_v7_TM4C129XNCZAD__i2cInit_2+0
0x42E6	0xE006    B	L_end_mikrobus_i2cInit
;easymx_v7_TM4C129XNCZAD.c, 244 :: 		default : return _MIKROBUS_ERR_BUS;
L_mikrobus_i2cInit87:
0x42E8	0x2001    MOVS	R0, #1
0x42EA	0xE004    B	L_end_mikrobus_i2cInit
;easymx_v7_TM4C129XNCZAD.c, 245 :: 		}
L_mikrobus_i2cInit83:
; cfg start address is: 4 (R1)
; bus start address is: 0 (R0)
0x42EC	0x2800    CMP	R0, #0
0x42EE	0xD0F3    BEQ	L_mikrobus_i2cInit85
0x42F0	0x2801    CMP	R0, #1
0x42F2	0xD0F5    BEQ	L_mikrobus_i2cInit86
; bus end address is: 0 (R0)
; cfg end address is: 4 (R1)
0x42F4	0xE7F8    B	L_mikrobus_i2cInit87
;easymx_v7_TM4C129XNCZAD.c, 248 :: 		}
L_end_mikrobus_i2cInit:
0x42F6	0xF8DDE000  LDR	LR, [SP, #0]
0x42FA	0xB001    ADD	SP, SP, #4
0x42FC	0x4770    BX	LR
; end of _mikrobus_i2cInit
easymx_v7_TM4C129XNCZAD__i2cInit_1:
;__em_c129_i2c.c, 29 :: 		static T_mikrobus_ret _i2cInit_1(const uint32_t* cfg)
; cfg start address is: 0 (R0)
0x36E4	0xB081    SUB	SP, SP, #4
0x36E6	0xF8CDE000  STR	LR, [SP, #0]
; cfg end address is: 0 (R0)
; cfg start address is: 0 (R0)
;__em_c129_i2c.c, 31 :: 		I2C0_Init_Advanced( cfg[0], &_GPIO_MODULE_I2C0_B23_AHB );
0x36EA	0x6801    LDR	R1, [R0, #0]
; cfg end address is: 0 (R0)
0x36EC	0x4608    MOV	R0, R1
0x36EE	0x4904    LDR	R1, [PC, #16]
0x36F0	0xF7FFFE1C  BL	_I2C0_Init_Advanced+0
;__em_c129_i2c.c, 32 :: 		return _MIKROBUS_OK;
0x36F4	0x2000    MOVS	R0, __MIKROBUS_OK
;__em_c129_i2c.c, 33 :: 		}
L_end__i2cInit_1:
0x36F6	0xF8DDE000  LDR	LR, [SP, #0]
0x36FA	0xB001    ADD	SP, SP, #4
0x36FC	0x4770    BX	LR
0x36FE	0xBF00    NOP
0x3700	0x51F80000  	__GPIO_MODULE_I2C0_B23_AHB+0
; end of easymx_v7_TM4C129XNCZAD__i2cInit_1
_I2C0_Init_Advanced:
;__Lib_I2C_09.c, 683 :: 		
; module start address is: 4 (R1)
; bitrate start address is: 0 (R0)
0x332C	0xB081    SUB	SP, SP, #4
0x332E	0xF8CDE000  STR	LR, [SP, #0]
; module end address is: 4 (R1)
; bitrate end address is: 0 (R0)
; bitrate start address is: 0 (R0)
; module start address is: 4 (R1)
;__Lib_I2C_09.c, 684 :: 		
0x3332	0x460A    MOV	R2, R1
; module end address is: 4 (R1)
0x3334	0x4601    MOV	R1, R0
; bitrate end address is: 0 (R0)
0x3336	0x4803    LDR	R0, [PC, #12]
0x3338	0xF7FEFB32  BL	__Lib_I2C_09_I2Cx_Init_Advanced+0
;__Lib_I2C_09.c, 685 :: 		
L_end_I2C0_Init_Advanced:
0x333C	0xF8DDE000  LDR	LR, [SP, #0]
0x3340	0xB001    ADD	SP, SP, #4
0x3342	0x4770    BX	LR
0x3344	0x00004002  	I2C0_MSA+0
; end of _I2C0_Init_Advanced
__Lib_I2C_09_I2Cx_Init_Advanced:
;__Lib_I2C_09.c, 514 :: 		
; module start address is: 8 (R2)
; bitrate start address is: 4 (R1)
; i2cBase start address is: 0 (R0)
0x19A0	0xB083    SUB	SP, SP, #12
0x19A2	0xF8CDE000  STR	LR, [SP, #0]
0x19A6	0x9201    STR	R2, [SP, #4]
0x19A8	0x460A    MOV	R2, R1
0x19AA	0x4601    MOV	R1, R0
0x19AC	0x9801    LDR	R0, [SP, #4]
; module end address is: 8 (R2)
; bitrate end address is: 4 (R1)
; i2cBase end address is: 0 (R0)
; i2cBase start address is: 4 (R1)
; bitrate start address is: 8 (R2)
; module start address is: 0 (R0)
;__Lib_I2C_09.c, 518 :: 		
0x19AE	0x4B5C    LDR	R3, [PC, #368]
0x19B0	0x4299    CMP	R1, R3
0x19B2	0xD116    BNE	L___Lib_I2C_09_I2Cx_Init_Advanced71
;__Lib_I2C_09.c, 519 :: 		
0x19B4	0x2400    MOVS	R4, #0
0x19B6	0x4B5B    LDR	R3, [PC, #364]
0x19B8	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_09.c, 520 :: 		
0x19BA	0x2401    MOVS	R4, #1
0x19BC	0xB264    SXTB	R4, R4
0x19BE	0x4B5A    LDR	R3, [PC, #360]
0x19C0	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_09.c, 521 :: 		
0x19C2	0x4C5A    LDR	R4, [PC, #360]
0x19C4	0x4B5A    LDR	R3, [PC, #360]
0x19C6	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_09.c, 522 :: 		
0x19C8	0x4C5A    LDR	R4, [PC, #360]
0x19CA	0x4B5B    LDR	R3, [PC, #364]
0x19CC	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_09.c, 523 :: 		
0x19CE	0x4C5B    LDR	R4, [PC, #364]
0x19D0	0x4B5B    LDR	R3, [PC, #364]
0x19D2	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_09.c, 524 :: 		
0x19D4	0x4C5B    LDR	R4, [PC, #364]
0x19D6	0x4B5C    LDR	R3, [PC, #368]
0x19D8	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_09.c, 525 :: 		
0x19DA	0x4C5C    LDR	R4, [PC, #368]
0x19DC	0x4B5C    LDR	R3, [PC, #368]
0x19DE	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_09.c, 526 :: 		
0x19E0	0xE165    B	L___Lib_I2C_09_I2Cx_Init_Advanced72
L___Lib_I2C_09_I2Cx_Init_Advanced71:
;__Lib_I2C_09.c, 527 :: 		
0x19E2	0x4B5C    LDR	R3, [PC, #368]
0x19E4	0x4299    CMP	R1, R3
0x19E6	0xD116    BNE	L___Lib_I2C_09_I2Cx_Init_Advanced73
;__Lib_I2C_09.c, 528 :: 		
0x19E8	0x2400    MOVS	R4, #0
0x19EA	0x4B5B    LDR	R3, [PC, #364]
0x19EC	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_09.c, 529 :: 		
0x19EE	0x2401    MOVS	R4, #1
0x19F0	0xB264    SXTB	R4, R4
0x19F2	0x4B5A    LDR	R3, [PC, #360]
0x19F4	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_09.c, 530 :: 		
0x19F6	0x4C5A    LDR	R4, [PC, #360]
0x19F8	0x4B4D    LDR	R3, [PC, #308]
0x19FA	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_09.c, 531 :: 		
0x19FC	0x4C59    LDR	R4, [PC, #356]
0x19FE	0x4B4E    LDR	R3, [PC, #312]
0x1A00	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_09.c, 532 :: 		
0x1A02	0x4C59    LDR	R4, [PC, #356]
0x1A04	0x4B4E    LDR	R3, [PC, #312]
0x1A06	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_09.c, 533 :: 		
0x1A08	0x4C58    LDR	R4, [PC, #352]
0x1A0A	0x4B4F    LDR	R3, [PC, #316]
0x1A0C	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_09.c, 534 :: 		
0x1A0E	0x4C58    LDR	R4, [PC, #352]
0x1A10	0x4B4F    LDR	R3, [PC, #316]
0x1A12	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_09.c, 535 :: 		
0x1A14	0xE14B    B	L___Lib_I2C_09_I2Cx_Init_Advanced74
L___Lib_I2C_09_I2Cx_Init_Advanced73:
;__Lib_I2C_09.c, 536 :: 		
0x1A16	0x4B57    LDR	R3, [PC, #348]
0x1A18	0x4299    CMP	R1, R3
0x1A1A	0xD116    BNE	L___Lib_I2C_09_I2Cx_Init_Advanced75
;__Lib_I2C_09.c, 537 :: 		
0x1A1C	0x2400    MOVS	R4, #0
0x1A1E	0x4B56    LDR	R3, [PC, #344]
0x1A20	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_09.c, 538 :: 		
0x1A22	0x2401    MOVS	R4, #1
0x1A24	0xB264    SXTB	R4, R4
0x1A26	0x4B55    LDR	R3, [PC, #340]
0x1A28	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_09.c, 539 :: 		
0x1A2A	0x4C55    LDR	R4, [PC, #340]
0x1A2C	0x4B40    LDR	R3, [PC, #256]
0x1A2E	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_09.c, 540 :: 		
0x1A30	0x4C54    LDR	R4, [PC, #336]
0x1A32	0x4B41    LDR	R3, [PC, #260]
0x1A34	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_09.c, 541 :: 		
0x1A36	0x4C54    LDR	R4, [PC, #336]
0x1A38	0x4B41    LDR	R3, [PC, #260]
0x1A3A	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_09.c, 542 :: 		
0x1A3C	0x4C53    LDR	R4, [PC, #332]
0x1A3E	0x4B42    LDR	R3, [PC, #264]
0x1A40	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_09.c, 543 :: 		
0x1A42	0x4C53    LDR	R4, [PC, #332]
0x1A44	0x4B42    LDR	R3, [PC, #264]
0x1A46	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_09.c, 544 :: 		
0x1A48	0xE131    B	L___Lib_I2C_09_I2Cx_Init_Advanced76
L___Lib_I2C_09_I2Cx_Init_Advanced75:
;__Lib_I2C_09.c, 545 :: 		
0x1A4A	0x4B52    LDR	R3, [PC, #328]
0x1A4C	0x4299    CMP	R1, R3
0x1A4E	0xD116    BNE	L___Lib_I2C_09_I2Cx_Init_Advanced77
;__Lib_I2C_09.c, 546 :: 		
0x1A50	0x2400    MOVS	R4, #0
0x1A52	0x4B51    LDR	R3, [PC, #324]
0x1A54	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_09.c, 547 :: 		
0x1A56	0x2401    MOVS	R4, #1
0x1A58	0xB264    SXTB	R4, R4
0x1A5A	0x4B50    LDR	R3, [PC, #320]
0x1A5C	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_09.c, 548 :: 		
0x1A5E	0x4C50    LDR	R4, [PC, #320]
0x1A60	0x4B33    LDR	R3, [PC, #204]
0x1A62	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_09.c, 549 :: 		
0x1A64	0x4C4F    LDR	R4, [PC, #316]
0x1A66	0x4B34    LDR	R3, [PC, #208]
0x1A68	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_09.c, 550 :: 		
0x1A6A	0x4C4F    LDR	R4, [PC, #316]
0x1A6C	0x4B34    LDR	R3, [PC, #208]
0x1A6E	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_09.c, 551 :: 		
0x1A70	0x4C4E    LDR	R4, [PC, #312]
0x1A72	0x4B35    LDR	R3, [PC, #212]
0x1A74	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_09.c, 552 :: 		
0x1A76	0x4C4E    LDR	R4, [PC, #312]
0x1A78	0x4B35    LDR	R3, [PC, #212]
0x1A7A	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_09.c, 553 :: 		
0x1A7C	0xE117    B	L___Lib_I2C_09_I2Cx_Init_Advanced78
L___Lib_I2C_09_I2Cx_Init_Advanced77:
;__Lib_I2C_09.c, 554 :: 		
0x1A7E	0x4B4D    LDR	R3, [PC, #308]
0x1A80	0x4299    CMP	R1, R3
0x1A82	0xD116    BNE	L___Lib_I2C_09_I2Cx_Init_Advanced79
;__Lib_I2C_09.c, 555 :: 		
0x1A84	0x2400    MOVS	R4, #0
0x1A86	0x4B4C    LDR	R3, [PC, #304]
0x1A88	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_09.c, 556 :: 		
0x1A8A	0x2401    MOVS	R4, #1
0x1A8C	0xB264    SXTB	R4, R4
0x1A8E	0x4B4B    LDR	R3, [PC, #300]
0x1A90	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_09.c, 557 :: 		
0x1A92	0x4C4B    LDR	R4, [PC, #300]
0x1A94	0x4B26    LDR	R3, [PC, #152]
0x1A96	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_09.c, 558 :: 		
0x1A98	0x4C4A    LDR	R4, [PC, #296]
0x1A9A	0x4B27    LDR	R3, [PC, #156]
0x1A9C	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_09.c, 559 :: 		
0x1A9E	0x4C4A    LDR	R4, [PC, #296]
0x1AA0	0x4B27    LDR	R3, [PC, #156]
0x1AA2	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_09.c, 560 :: 		
0x1AA4	0x4C49    LDR	R4, [PC, #292]
0x1AA6	0x4B28    LDR	R3, [PC, #160]
0x1AA8	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_09.c, 561 :: 		
0x1AAA	0x4C49    LDR	R4, [PC, #292]
0x1AAC	0x4B28    LDR	R3, [PC, #160]
0x1AAE	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_09.c, 562 :: 		
0x1AB0	0xE0FD    B	L___Lib_I2C_09_I2Cx_Init_Advanced80
L___Lib_I2C_09_I2Cx_Init_Advanced79:
;__Lib_I2C_09.c, 563 :: 		
0x1AB2	0x4B48    LDR	R3, [PC, #288]
0x1AB4	0x4299    CMP	R1, R3
0x1AB6	0xD116    BNE	L___Lib_I2C_09_I2Cx_Init_Advanced81
;__Lib_I2C_09.c, 564 :: 		
0x1AB8	0x2400    MOVS	R4, #0
0x1ABA	0x4B47    LDR	R3, [PC, #284]
0x1ABC	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_09.c, 565 :: 		
0x1ABE	0x2401    MOVS	R4, #1
0x1AC0	0xB264    SXTB	R4, R4
0x1AC2	0x4B46    LDR	R3, [PC, #280]
0x1AC4	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_09.c, 566 :: 		
0x1AC6	0x4C46    LDR	R4, [PC, #280]
0x1AC8	0x4B19    LDR	R3, [PC, #100]
0x1ACA	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_09.c, 567 :: 		
0x1ACC	0x4C45    LDR	R4, [PC, #276]
0x1ACE	0x4B1A    LDR	R3, [PC, #104]
0x1AD0	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_09.c, 568 :: 		
0x1AD2	0x4C45    LDR	R4, [PC, #276]
0x1AD4	0x4B1A    LDR	R3, [PC, #104]
0x1AD6	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_09.c, 569 :: 		
0x1AD8	0x4C44    LDR	R4, [PC, #272]
0x1ADA	0x4B1B    LDR	R3, [PC, #108]
0x1ADC	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_09.c, 570 :: 		
0x1ADE	0x4C44    LDR	R4, [PC, #272]
0x1AE0	0x4B1B    LDR	R3, [PC, #108]
0x1AE2	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_09.c, 571 :: 		
0x1AE4	0xE0E3    B	L___Lib_I2C_09_I2Cx_Init_Advanced82
L___Lib_I2C_09_I2Cx_Init_Advanced81:
;__Lib_I2C_09.c, 572 :: 		
0x1AE6	0x4B43    LDR	R3, [PC, #268]
0x1AE8	0x4299    CMP	R1, R3
0x1AEA	0xD116    BNE	L___Lib_I2C_09_I2Cx_Init_Advanced83
;__Lib_I2C_09.c, 573 :: 		
0x1AEC	0x2400    MOVS	R4, #0
0x1AEE	0x4B42    LDR	R3, [PC, #264]
0x1AF0	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_09.c, 574 :: 		
0x1AF2	0x2401    MOVS	R4, #1
0x1AF4	0xB264    SXTB	R4, R4
0x1AF6	0x4B41    LDR	R3, [PC, #260]
0x1AF8	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_09.c, 575 :: 		
0x1AFA	0x4C41    LDR	R4, [PC, #260]
0x1AFC	0x4B0C    LDR	R3, [PC, #48]
0x1AFE	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_09.c, 576 :: 		
0x1B00	0x4C40    LDR	R4, [PC, #256]
0x1B02	0x4B0D    LDR	R3, [PC, #52]
0x1B04	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_09.c, 577 :: 		
0x1B06	0x4C40    LDR	R4, [PC, #256]
0x1B08	0x4B0D    LDR	R3, [PC, #52]
0x1B0A	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_09.c, 578 :: 		
0x1B0C	0x4C3F    LDR	R4, [PC, #252]
0x1B0E	0x4B0E    LDR	R3, [PC, #56]
0x1B10	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_09.c, 579 :: 		
0x1B12	0x4C3F    LDR	R4, [PC, #252]
0x1B14	0x4B0E    LDR	R3, [PC, #56]
0x1B16	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_09.c, 580 :: 		
0x1B18	0xE0C9    B	L___Lib_I2C_09_I2Cx_Init_Advanced84
L___Lib_I2C_09_I2Cx_Init_Advanced83:
;__Lib_I2C_09.c, 581 :: 		
0x1B1A	0x4B3E    LDR	R3, [PC, #248]
0x1B1C	0x4299    CMP	R1, R3
0x1B1E	0xE07B    B	#246
0x1B20	0x00004002  	I2C0_MSA+0
0x1B24	0x00882000  	__Lib_I2C_09__I2C0_TIMEOUT+0
0x1B28	0xC40043FC  	SYSCTL_RCGCI2C+0
0x1B2C	0xFFFFFFFF  	_I2C0_Enable+0
0x1B30	0x44C42000  	_I2C_Enable_Ptr+0
0x1B34	0x14C90000  	_I2C0_Master_Slave_Addr_Set+0
0x1B38	0x44C82000  	_I2C_Master_Slave_Addr_Set_Ptr+0
0x1B3C	0x143D0000  	_I2C0_Write+0
0x1B40	0x44CC2000  	_I2C_Write_Ptr+0
0x1B44	0x13790000  	_I2C0_Read+0
0x1B48	0x44D02000  	_I2C_Read_Ptr+0
0x1B4C	0xFFFFFFFF  	_I2C0_Disable+0
0x1B50	0x44D42000  	_I2C_Disable_Ptr+0
0x1B54	0x10004002  	I2C1_MSA+0
0x1B58	0x008C2000  	__Lib_I2C_09__I2C1_TIMEOUT+0
0x1B5C	0xC40443FC  	SYSCTL_RCGCI2C+0
0x1B60	0xFFFFFFFF  	_I2C1_Enable+0
0x1B64	0x15010000  	_I2C1_Master_Slave_Addr_Set+0
0x1B68	0x10750000  	_I2C1_Write+0
0x1B6C	0x13CD0000  	_I2C1_Read+0
0x1B70	0xFFFFFFFF  	_I2C1_Disable+0
0x1B74	0x20004002  	I2C2_MSA+0
0x1B78	0x00902000  	__Lib_I2C_09__I2C2_TIMEOUT+0
0x1B7C	0xC40843FC  	SYSCTL_RCGCI2C+0
0x1B80	0xFFFFFFFF  	_I2C2_Enable+0
0x1B84	0x14E50000  	_I2C2_Master_Slave_Addr_Set+0
0x1B88	0x11690000  	_I2C2_Write+0
0x1B8C	0x14210000  	_I2C2_Read+0
0x1B90	0xFFFFFFFF  	_I2C2_Disable+0
0x1B94	0x30004002  	I2C3_MSA+0
0x1B98	0x00942000  	__Lib_I2C_09__I2C3_TIMEOUT+0
0x1B9C	0xC40C43FC  	SYSCTL_RCGCI2C+0
0x1BA0	0xFFFFFFFF  	_I2C3_Enable+0
0x1BA4	0x15390000  	_I2C3_Master_Slave_Addr_Set+0
0x1BA8	0x114D0000  	_I2C3_Write+0
0x1BAC	0x14050000  	_I2C3_Read+0
0x1BB0	0xFFFFFFFF  	_I2C3_Disable+0
0x1BB4	0x0000400C  	I2C4_MSA+0
0x1BB8	0x00982000  	__Lib_I2C_09__I2C4_TIMEOUT+0
0x1BBC	0xC41043FC  	SYSCTL_RCGCI2C+0
0x1BC0	0xFFFFFFFF  	_I2C4_Enable+0
0x1BC4	0x151D0000  	_I2C4_Master_Slave_Addr_Set+0
0x1BC8	0x11310000  	_I2C4_Write+0
0x1BCC	0x13E90000  	_I2C4_Read+0
0x1BD0	0xFFFFFFFF  	_I2C4_Disable+0
0x1BD4	0x1000400C  	I2C5_MSA+0
0x1BD8	0x009C2000  	__Lib_I2C_09__I2C5_TIMEOUT+0
0x1BDC	0xC41443FC  	SYSCTL_RCGCI2C+0
0x1BE0	0xFFFFFFFF  	_I2C5_Enable+0
0x1BE4	0x14750000  	_I2C5_Master_Slave_Addr_Set+0
0x1BE8	0x10050000  	_I2C5_Write+0
0x1BEC	0x11BD0000  	_I2C5_Read+0
0x1BF0	0xFFFFFFFF  	_I2C5_Disable+0
0x1BF4	0x2000400C  	I2C6_MSA+0
0x1BF8	0x00A02000  	__Lib_I2C_09__I2C6_TIMEOUT+0
0x1BFC	0xC41843FC  	SYSCTL_RCGCI2C+0
0x1C00	0xFFFFFFFF  	_I2C6_Enable+0
0x1C04	0x14590000  	_I2C6_Master_Slave_Addr_Set+0
0x1C08	0x10590000  	_I2C6_Write+0
0x1C0C	0x11A10000  	_I2C6_Read+0
0x1C10	0xFFFFFFFF  	_I2C6_Disable+0
0x1C14	0x3000400C  	I2C7_MSA+0
0x1C18	0xD116    BNE	L___Lib_I2C_09_I2Cx_Init_Advanced85
;__Lib_I2C_09.c, 582 :: 		
0x1C1A	0x2400    MOVS	R4, #0
0x1C1C	0x4B41    LDR	R3, [PC, #260]
0x1C1E	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_09.c, 583 :: 		
0x1C20	0x2401    MOVS	R4, #1
0x1C22	0xB264    SXTB	R4, R4
0x1C24	0x4B40    LDR	R3, [PC, #256]
0x1C26	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_09.c, 584 :: 		
0x1C28	0x4C40    LDR	R4, [PC, #256]
0x1C2A	0x4B41    LDR	R3, [PC, #260]
0x1C2C	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_09.c, 585 :: 		
0x1C2E	0x4C41    LDR	R4, [PC, #260]
0x1C30	0x4B41    LDR	R3, [PC, #260]
0x1C32	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_09.c, 586 :: 		
0x1C34	0x4C41    LDR	R4, [PC, #260]
0x1C36	0x4B42    LDR	R3, [PC, #264]
0x1C38	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_09.c, 587 :: 		
0x1C3A	0x4C42    LDR	R4, [PC, #264]
0x1C3C	0x4B42    LDR	R3, [PC, #264]
0x1C3E	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_09.c, 588 :: 		
0x1C40	0x4C42    LDR	R4, [PC, #264]
0x1C42	0x4B43    LDR	R3, [PC, #268]
0x1C44	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_09.c, 589 :: 		
0x1C46	0xE032    B	L___Lib_I2C_09_I2Cx_Init_Advanced86
L___Lib_I2C_09_I2Cx_Init_Advanced85:
;__Lib_I2C_09.c, 590 :: 		
0x1C48	0x4B42    LDR	R3, [PC, #264]
0x1C4A	0x4299    CMP	R1, R3
0x1C4C	0xD116    BNE	L___Lib_I2C_09_I2Cx_Init_Advanced87
;__Lib_I2C_09.c, 591 :: 		
0x1C4E	0x2400    MOVS	R4, #0
0x1C50	0x4B41    LDR	R3, [PC, #260]
0x1C52	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_09.c, 592 :: 		
0x1C54	0x2401    MOVS	R4, #1
0x1C56	0xB264    SXTB	R4, R4
0x1C58	0x4B40    LDR	R3, [PC, #256]
0x1C5A	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_09.c, 593 :: 		
0x1C5C	0x4C40    LDR	R4, [PC, #256]
0x1C5E	0x4B34    LDR	R3, [PC, #208]
0x1C60	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_09.c, 594 :: 		
0x1C62	0x4C40    LDR	R4, [PC, #256]
0x1C64	0x4B34    LDR	R3, [PC, #208]
0x1C66	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_09.c, 595 :: 		
0x1C68	0x4C3F    LDR	R4, [PC, #252]
0x1C6A	0x4B35    LDR	R3, [PC, #212]
0x1C6C	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_09.c, 596 :: 		
0x1C6E	0x4C3F    LDR	R4, [PC, #252]
0x1C70	0x4B35    LDR	R3, [PC, #212]
0x1C72	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_09.c, 597 :: 		
0x1C74	0x4C3E    LDR	R4, [PC, #248]
0x1C76	0x4B36    LDR	R3, [PC, #216]
0x1C78	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_09.c, 598 :: 		
0x1C7A	0xE018    B	L___Lib_I2C_09_I2Cx_Init_Advanced88
L___Lib_I2C_09_I2Cx_Init_Advanced87:
;__Lib_I2C_09.c, 599 :: 		
0x1C7C	0x4B3D    LDR	R3, [PC, #244]
0x1C7E	0x4299    CMP	R1, R3
0x1C80	0xD115    BNE	L___Lib_I2C_09_I2Cx_Init_Advanced89
;__Lib_I2C_09.c, 600 :: 		
0x1C82	0x2400    MOVS	R4, #0
0x1C84	0x4B3C    LDR	R3, [PC, #240]
0x1C86	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_09.c, 601 :: 		
0x1C88	0x2401    MOVS	R4, #1
0x1C8A	0xB264    SXTB	R4, R4
0x1C8C	0x4B3B    LDR	R3, [PC, #236]
0x1C8E	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_09.c, 602 :: 		
0x1C90	0x4C3B    LDR	R4, [PC, #236]
0x1C92	0x4B27    LDR	R3, [PC, #156]
0x1C94	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_09.c, 603 :: 		
0x1C96	0x4C3B    LDR	R4, [PC, #236]
0x1C98	0x4B27    LDR	R3, [PC, #156]
0x1C9A	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_09.c, 604 :: 		
0x1C9C	0x4C3A    LDR	R4, [PC, #232]
0x1C9E	0x4B28    LDR	R3, [PC, #160]
0x1CA0	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_09.c, 605 :: 		
0x1CA2	0x4C3A    LDR	R4, [PC, #232]
0x1CA4	0x4B28    LDR	R3, [PC, #160]
0x1CA6	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_09.c, 606 :: 		
0x1CA8	0x4C39    LDR	R4, [PC, #228]
0x1CAA	0x4B29    LDR	R3, [PC, #164]
0x1CAC	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_09.c, 607 :: 		
L___Lib_I2C_09_I2Cx_Init_Advanced89:
L___Lib_I2C_09_I2Cx_Init_Advanced88:
L___Lib_I2C_09_I2Cx_Init_Advanced86:
L___Lib_I2C_09_I2Cx_Init_Advanced84:
L___Lib_I2C_09_I2Cx_Init_Advanced82:
L___Lib_I2C_09_I2Cx_Init_Advanced80:
L___Lib_I2C_09_I2Cx_Init_Advanced78:
L___Lib_I2C_09_I2Cx_Init_Advanced76:
L___Lib_I2C_09_I2Cx_Init_Advanced74:
L___Lib_I2C_09_I2Cx_Init_Advanced72:
;__Lib_I2C_09.c, 608 :: 		
0x1CAE	0x9201    STR	R2, [SP, #4]
; module end address is: 0 (R0)
0x1CB0	0x9102    STR	R1, [SP, #8]
0x1CB2	0xF7FFF9ED  BL	_GPIO_Alternate_Function_Enable+0
0x1CB6	0x9902    LDR	R1, [SP, #8]
0x1CB8	0x9A01    LDR	R2, [SP, #4]
;__Lib_I2C_09.c, 610 :: 		
0x1CBA	0xF2010420  ADDW	R4, R1, #32
0x1CBE	0x2310    MOVS	R3, #16
0x1CC0	0x6023    STR	R3, [R4, #0]
;__Lib_I2C_09.c, 613 :: 		
0x1CC2	0x4B34    LDR	R3, [PC, #208]
0x1CC4	0x429A    CMP	R2, R3
0x1CC6	0xD107    BNE	L___Lib_I2C_09_I2Cx_Init_Advanced90
;__Lib_I2C_09.c, 614 :: 		
; mul start address is: 24 (R6)
0x1CC8	0x2606    MOVS	R6, #6
;__Lib_I2C_09.c, 615 :: 		
0x1CCA	0x1D0D    ADDS	R5, R1, #4
0x1CCC	0x2401    MOVS	R4, #1
0x1CCE	0x682B    LDR	R3, [R5, #0]
0x1CD0	0xF3641304  BFI	R3, R4, #4, #1
0x1CD4	0x602B    STR	R3, [R5, #0]
;__Lib_I2C_09.c, 616 :: 		
; mul end address is: 24 (R6)
0x1CD6	0xE006    B	L___Lib_I2C_09_I2Cx_Init_Advanced91
L___Lib_I2C_09_I2Cx_Init_Advanced90:
;__Lib_I2C_09.c, 618 :: 		
; mul start address is: 24 (R6)
0x1CD8	0x2614    MOVS	R6, #20
;__Lib_I2C_09.c, 619 :: 		
0x1CDA	0x1D0D    ADDS	R5, R1, #4
0x1CDC	0x2400    MOVS	R4, #0
0x1CDE	0x682B    LDR	R3, [R5, #0]
0x1CE0	0xF3641304  BFI	R3, R4, #4, #1
0x1CE4	0x602B    STR	R3, [R5, #0]
; mul end address is: 24 (R6)
;__Lib_I2C_09.c, 620 :: 		
L___Lib_I2C_09_I2Cx_Init_Advanced91:
;__Lib_I2C_09.c, 622 :: 		
; mul start address is: 24 (R6)
0x1CE6	0xF7FFFA1D  BL	_Get_Fosc_kHz+0
0x1CEA	0xF24033E8  MOVW	R3, #1000
0x1CEE	0xFB00F503  MUL	R5, R0, R3
;__Lib_I2C_09.c, 623 :: 		
0x1CF2	0xFB06F402  MUL	R4, R6, R2
; bitrate end address is: 8 (R2)
; mul end address is: 24 (R6)
0x1CF6	0xFBB5F3F4  UDIV	R3, R5, R4
; tmp start address is: 0 (R0)
0x1CFA	0x4618    MOV	R0, R3
;__Lib_I2C_09.c, 624 :: 		
0x1CFC	0x4363    MULS	R3, R4, R3
0x1CFE	0x1AEB    SUB	R3, R5, R3
0x1D00	0xB90B    CBNZ	R3, L___Lib_I2C_09_I2Cx_Init_Advanced112
;__Lib_I2C_09.c, 625 :: 		
0x1D02	0x1E40    SUBS	R0, R0, #1
; tmp end address is: 0 (R0)
0x1D04	0xE7FF    B	L___Lib_I2C_09_I2Cx_Init_Advanced92
L___Lib_I2C_09_I2Cx_Init_Advanced112:
;__Lib_I2C_09.c, 624 :: 		
;__Lib_I2C_09.c, 625 :: 		
L___Lib_I2C_09_I2Cx_Init_Advanced92:
;__Lib_I2C_09.c, 626 :: 		
; tmp start address is: 0 (R0)
0x1D06	0x287F    CMP	R0, #127
0x1D08	0xD901    BLS	L___Lib_I2C_09_I2Cx_Init_Advanced113
;__Lib_I2C_09.c, 627 :: 		
0x1D0A	0x207F    MOVS	R0, #127
; tmp end address is: 0 (R0)
0x1D0C	0xE7FF    B	L___Lib_I2C_09_I2Cx_Init_Advanced93
L___Lib_I2C_09_I2Cx_Init_Advanced113:
;__Lib_I2C_09.c, 626 :: 		
;__Lib_I2C_09.c, 627 :: 		
L___Lib_I2C_09_I2Cx_Init_Advanced93:
;__Lib_I2C_09.c, 628 :: 		
; tmp start address is: 0 (R0)
0x1D0E	0x2801    CMP	R0, #1
0x1D10	0xD201    BCS	L___Lib_I2C_09_I2Cx_Init_Advanced114
;__Lib_I2C_09.c, 629 :: 		
0x1D12	0x2001    MOVS	R0, #1
; tmp end address is: 0 (R0)
0x1D14	0xE7FF    B	L___Lib_I2C_09_I2Cx_Init_Advanced94
L___Lib_I2C_09_I2Cx_Init_Advanced114:
;__Lib_I2C_09.c, 628 :: 		
;__Lib_I2C_09.c, 629 :: 		
L___Lib_I2C_09_I2Cx_Init_Advanced94:
;__Lib_I2C_09.c, 631 :: 		
; tmp start address is: 0 (R0)
0x1D16	0xF201030C  ADDW	R3, R1, #12
; i2cBase end address is: 4 (R1)
0x1D1A	0x6018    STR	R0, [R3, #0]
; tmp end address is: 0 (R0)
;__Lib_I2C_09.c, 632 :: 		
L_end_I2Cx_Init_Advanced:
0x1D1C	0xF8DDE000  LDR	LR, [SP, #0]
0x1D20	0xB003    ADD	SP, SP, #12
0x1D22	0x4770    BX	LR
0x1D24	0x00A42000  	__Lib_I2C_09__I2C7_TIMEOUT+0
0x1D28	0xC41C43FC  	SYSCTL_RCGCI2C+0
0x1D2C	0xFFFFFFFF  	_I2C7_Enable+0
0x1D30	0x44C42000  	_I2C_Enable_Ptr+0
0x1D34	0x14AD0000  	_I2C7_Master_Slave_Addr_Set+0
0x1D38	0x44C82000  	_I2C_Master_Slave_Addr_Set_Ptr+0
0x1D3C	0x103D0000  	_I2C7_Write+0
0x1D40	0x44CC2000  	_I2C_Write_Ptr+0
0x1D44	0x11850000  	_I2C7_Read+0
0x1D48	0x44D02000  	_I2C_Read_Ptr+0
0x1D4C	0xFFFFFFFF  	_I2C7_Disable+0
0x1D50	0x44D42000  	_I2C_Disable_Ptr+0
0x1D54	0x8000400B  	I2C8_MSA+0
0x1D58	0x00A82000  	__Lib_I2C_09__I2C8_TIMEOUT+0
0x1D5C	0xC42043FC  	SYSCTL_RCGCI2C+0
0x1D60	0xFFFFFFFF  	_I2C8_Enable+0
0x1D64	0x14910000  	_I2C8_Master_Slave_Addr_Set+0
0x1D68	0x10210000  	_I2C8_Write+0
0x1D6C	0x11D90000  	_I2C8_Read+0
0x1D70	0xFFFFFFFF  	_I2C8_Disable+0
0x1D74	0x9000400B  	I2C9_MSA+0
0x1D78	0x00AC2000  	__Lib_I2C_09__I2C9_TIMEOUT+0
0x1D7C	0xC42443FC  	SYSCTL_RCGCI2C+0
0x1D80	0xFFFFFFFF  	_I2C9_Enable+0
0x1D84	0x15550000  	_I2C9_Master_Slave_Addr_Set+0
0x1D88	0x13B10000  	_I2C9_Write+0
0x1D8C	0x135D0000  	_I2C9_Read+0
0x1D90	0xFFFFFFFF  	_I2C9_Disable+0
0x1D94	0xCFD00032  	#3330000
; end of __Lib_I2C_09_I2Cx_Init_Advanced
_GPIO_Alternate_Function_Enable:
;__Lib_GPIO_6.c, 543 :: 		
; module start address is: 0 (R0)
0x1090	0xB081    SUB	SP, SP, #4
0x1092	0xF8CDE000  STR	LR, [SP, #0]
; module end address is: 0 (R0)
; module start address is: 0 (R0)
;__Lib_GPIO_6.c, 547 :: 		
; cnt start address is: 44 (R11)
0x1096	0xF2400B00  MOVW	R11, #0
; module end address is: 0 (R0)
; cnt end address is: 44 (R11)
0x109A	0x4682    MOV	R10, R0
L_GPIO_Alternate_Function_Enable108:
; cnt start address is: 44 (R11)
; module start address is: 40 (R10)
0x109C	0xF10A01D8  ADD	R1, R10, #216
0x10A0	0x7809    LDRB	R1, [R1, #0]
0x10A2	0x458B    CMP	R11, R1
0x10A4	0xD239    BCS	L_GPIO_Alternate_Function_Enable109
;__Lib_GPIO_6.c, 548 :: 		
0x10A6	0x210C    MOVS	R1, #12
0x10A8	0xFB0BF101  MUL	R1, R11, R1
0x10AC	0xEB0A0101  ADD	R1, R10, R1, LSL #0
; tmpPinDsc start address is: 48 (R12)
0x10B0	0x468C    MOV	R12, R1
;__Lib_GPIO_6.c, 550 :: 		
0x10B2	0xF10C0108  ADD	R1, R12, #8
0x10B6	0x7809    LDRB	R1, [R1, #0]
0x10B8	0xB9A9    CBNZ	R1, L_GPIO_Alternate_Function_Enable111
;__Lib_GPIO_6.c, 551 :: 		
0x10BA	0xF10C0108  ADD	R1, R12, #8
0x10BE	0x7809    LDRB	R1, [R1, #0]
0x10C0	0xB2CC    UXTB	R4, R1
0x10C2	0xF10C0106  ADD	R1, R12, #6
0x10C6	0x8809    LDRH	R1, [R1, #0]
0x10C8	0xB28B    UXTH	R3, R1
0x10CA	0xF10C0104  ADD	R1, R12, #4
0x10CE	0x7809    LDRB	R1, [R1, #0]
0x10D0	0xB2CA    UXTB	R2, R1
0x10D2	0xF8DC1000  LDR	R1, [R12, #0]
; tmpPinDsc end address is: 48 (R12)
0x10D6	0x4608    MOV	R0, R1
0x10D8	0xB2D1    UXTB	R1, R2
0x10DA	0x2200    MOVS	R2, __GPIO_DIR_INPUT
0x10DC	0xB410    PUSH	(R4)
0x10DE	0xF7FFFA25  BL	_GPIO_Config+0
0x10E2	0xB001    ADD	SP, SP, #4
0x10E4	0xE014    B	L_GPIO_Alternate_Function_Enable112
L_GPIO_Alternate_Function_Enable111:
;__Lib_GPIO_6.c, 553 :: 		
; tmpPinDsc start address is: 48 (R12)
0x10E6	0xF10C0108  ADD	R1, R12, #8
0x10EA	0x7809    LDRB	R1, [R1, #0]
0x10EC	0xB2CC    UXTB	R4, R1
0x10EE	0xF10C0106  ADD	R1, R12, #6
0x10F2	0x8809    LDRH	R1, [R1, #0]
0x10F4	0xB28B    UXTH	R3, R1
0x10F6	0xF10C0104  ADD	R1, R12, #4
0x10FA	0x7809    LDRB	R1, [R1, #0]
0x10FC	0xB2CA    UXTB	R2, R1
0x10FE	0xF8DC1000  LDR	R1, [R12, #0]
; tmpPinDsc end address is: 48 (R12)
0x1102	0x4608    MOV	R0, R1
0x1104	0xB2D1    UXTB	R1, R2
0x1106	0x220F    MOVS	R2, __GPIO_DIR_NO_CHANGE
0x1108	0xB410    PUSH	(R4)
0x110A	0xF7FFFA0F  BL	_GPIO_Config+0
0x110E	0xB001    ADD	SP, SP, #4
L_GPIO_Alternate_Function_Enable112:
;__Lib_GPIO_6.c, 547 :: 		
0x1110	0xF10B0B01  ADD	R11, R11, #1
0x1114	0xFA5FFB8B  UXTB	R11, R11
;__Lib_GPIO_6.c, 554 :: 		
; module end address is: 40 (R10)
; cnt end address is: 44 (R11)
0x1118	0xE7C0    B	L_GPIO_Alternate_Function_Enable108
L_GPIO_Alternate_Function_Enable109:
;__Lib_GPIO_6.c, 555 :: 		
L_end_GPIO_Alternate_Function_Enable:
0x111A	0xF8DDE000  LDR	LR, [SP, #0]
0x111E	0xB001    ADD	SP, SP, #4
0x1120	0x4770    BX	LR
; end of _GPIO_Alternate_Function_Enable
_GPIO_Config:
;__Lib_GPIO_6.c, 344 :: 		
; config start address is: 12 (R3)
; dir start address is: 8 (R2)
; pin_mask start address is: 4 (R1)
; port start address is: 0 (R0)
0x052C	0xB082    SUB	SP, SP, #8
0x052E	0xF8CDE000  STR	LR, [SP, #0]
0x0532	0xFA5FF881  UXTB	R8, R1
0x0536	0xB2D5    UXTB	R5, R2
0x0538	0xB29F    UXTH	R7, R3
; config end address is: 12 (R3)
; dir end address is: 8 (R2)
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; pin_mask start address is: 32 (R8)
; dir start address is: 20 (R5)
; config start address is: 28 (R7)
; pin_code start address is: 12 (R3)
0x053A	0xF89D3008  LDRB	R3, [SP, #8]
;__Lib_GPIO_6.c, 349 :: 		
0x053E	0x4CF5    LDR	R4, [PC, #980]
0x0540	0xEA000404  AND	R4, R0, R4, LSL #0
; port end address is: 0 (R0)
; port start address is: 36 (R9)
0x0544	0x46A1    MOV	R9, R4
;__Lib_GPIO_6.c, 351 :: 		
0x0546	0x4620    MOV	R0, R4
0x0548	0xF7FFFEFA  BL	_GPIO_Clk_Enable+0
;__Lib_GPIO_6.c, 353 :: 		
0x054C	0x4CF2    LDR	R4, [PC, #968]
0x054E	0x42A5    CMP	R5, R4
0x0550	0xD108    BNE	L_GPIO_Config46
; dir end address is: 20 (R5)
;__Lib_GPIO_6.c, 354 :: 		
0x0552	0xF5096680  ADD	R6, R9, #1024
0x0556	0xEA6F0508  MVN	R5, R8, LSL #0
0x055A	0xB2ED    UXTB	R5, R5
0x055C	0x6834    LDR	R4, [R6, #0]
0x055E	0x402C    ANDS	R4, R5
0x0560	0x6034    STR	R4, [R6, #0]
0x0562	0xE008    B	L_GPIO_Config47
L_GPIO_Config46:
;__Lib_GPIO_6.c, 355 :: 		
; dir start address is: 20 (R5)
0x0564	0x4CED    LDR	R4, [PC, #948]
0x0566	0x42A5    CMP	R5, R4
0x0568	0xD105    BNE	L_GPIO_Config48
; dir end address is: 20 (R5)
;__Lib_GPIO_6.c, 356 :: 		
0x056A	0xF5096580  ADD	R5, R9, #1024
0x056E	0x682C    LDR	R4, [R5, #0]
0x0570	0xEA440408  ORR	R4, R4, R8, LSL #0
0x0574	0x602C    STR	R4, [R5, #0]
L_GPIO_Config48:
L_GPIO_Config47:
;__Lib_GPIO_6.c, 358 :: 		
0x0576	0xF2400401  MOVW	R4, __GPIO_CFG_PULL_UP
0x057A	0xEA070404  AND	R4, R7, R4, LSL #0
0x057E	0xB2A4    UXTH	R4, R4
0x0580	0xB134    CBZ	R4, L_GPIO_Config49
;__Lib_GPIO_6.c, 359 :: 		
0x0582	0xF50965A2  ADD	R5, R9, #1296
0x0586	0x682C    LDR	R4, [R5, #0]
0x0588	0xEA440408  ORR	R4, R4, R8, LSL #0
0x058C	0x602C    STR	R4, [R5, #0]
0x058E	0xE007    B	L_GPIO_Config50
L_GPIO_Config49:
;__Lib_GPIO_6.c, 361 :: 		
0x0590	0xF50966A2  ADD	R6, R9, #1296
0x0594	0xEA6F0508  MVN	R5, R8, LSL #0
0x0598	0xB2ED    UXTB	R5, R5
0x059A	0x6834    LDR	R4, [R6, #0]
0x059C	0x402C    ANDS	R4, R5
0x059E	0x6034    STR	R4, [R6, #0]
L_GPIO_Config50:
;__Lib_GPIO_6.c, 363 :: 		
0x05A0	0xF2400402  MOVW	R4, __GPIO_CFG_PULL_DOWN
0x05A4	0xEA070404  AND	R4, R7, R4, LSL #0
0x05A8	0xB2A4    UXTH	R4, R4
0x05AA	0xB134    CBZ	R4, L_GPIO_Config51
;__Lib_GPIO_6.c, 364 :: 		
0x05AC	0xF2095514  ADDW	R5, R9, #1300
0x05B0	0x682C    LDR	R4, [R5, #0]
0x05B2	0xEA440408  ORR	R4, R4, R8, LSL #0
0x05B6	0x602C    STR	R4, [R5, #0]
0x05B8	0xE007    B	L_GPIO_Config52
L_GPIO_Config51:
;__Lib_GPIO_6.c, 366 :: 		
0x05BA	0xF2095614  ADDW	R6, R9, #1300
0x05BE	0xEA6F0508  MVN	R5, R8, LSL #0
0x05C2	0xB2ED    UXTB	R5, R5
0x05C4	0x6834    LDR	R4, [R6, #0]
0x05C6	0x402C    ANDS	R4, R5
0x05C8	0x6034    STR	R4, [R6, #0]
L_GPIO_Config52:
;__Lib_GPIO_6.c, 369 :: 		
0x05CA	0xF2400408  MOVW	R4, __GPIO_CFG_OPEN_DRAIN
0x05CE	0xEA070404  AND	R4, R7, R4, LSL #0
0x05D2	0xB2A4    UXTH	R4, R4
0x05D4	0xB134    CBZ	R4, L_GPIO_Config53
;__Lib_GPIO_6.c, 370 :: 		
0x05D6	0xF209550C  ADDW	R5, R9, #1292
0x05DA	0x682C    LDR	R4, [R5, #0]
0x05DC	0xEA440408  ORR	R4, R4, R8, LSL #0
0x05E0	0x602C    STR	R4, [R5, #0]
0x05E2	0xE007    B	L_GPIO_Config54
L_GPIO_Config53:
;__Lib_GPIO_6.c, 372 :: 		
0x05E4	0xF209560C  ADDW	R6, R9, #1292
0x05E8	0xEA6F0508  MVN	R5, R8, LSL #0
0x05EC	0xB2ED    UXTB	R5, R5
0x05EE	0x6834    LDR	R4, [R6, #0]
0x05F0	0x402C    ANDS	R4, R5
0x05F2	0x6034    STR	R4, [R6, #0]
L_GPIO_Config54:
;__Lib_GPIO_6.c, 375 :: 		
0x05F4	0xF2400410  MOVW	R4, __GPIO_CFG_DRIVE_2mA
0x05F8	0xEA070404  AND	R4, R7, R4, LSL #0
0x05FC	0xB2A4    UXTH	R4, R4
0x05FE	0xB134    CBZ	R4, L_GPIO_Config55
;__Lib_GPIO_6.c, 376 :: 		
0x0600	0xF50965A0  ADD	R5, R9, #1280
0x0604	0x682C    LDR	R4, [R5, #0]
0x0606	0xEA440408  ORR	R4, R4, R8, LSL #0
0x060A	0x602C    STR	R4, [R5, #0]
0x060C	0xE007    B	L_GPIO_Config56
L_GPIO_Config55:
;__Lib_GPIO_6.c, 378 :: 		
0x060E	0xF50966A0  ADD	R6, R9, #1280
0x0612	0xEA6F0508  MVN	R5, R8, LSL #0
0x0616	0xB2ED    UXTB	R5, R5
0x0618	0x6834    LDR	R4, [R6, #0]
0x061A	0x402C    ANDS	R4, R5
0x061C	0x6034    STR	R4, [R6, #0]
L_GPIO_Config56:
;__Lib_GPIO_6.c, 381 :: 		
0x061E	0xF2400420  MOVW	R4, __GPIO_CFG_DRIVE_4mA
0x0622	0xEA070404  AND	R4, R7, R4, LSL #0
0x0626	0xB2A4    UXTH	R4, R4
0x0628	0xB134    CBZ	R4, L_GPIO_Config57
;__Lib_GPIO_6.c, 382 :: 		
0x062A	0xF2095504  ADDW	R5, R9, #1284
0x062E	0x682C    LDR	R4, [R5, #0]
0x0630	0xEA440408  ORR	R4, R4, R8, LSL #0
0x0634	0x602C    STR	R4, [R5, #0]
0x0636	0xE007    B	L_GPIO_Config58
L_GPIO_Config57:
;__Lib_GPIO_6.c, 384 :: 		
0x0638	0xF2095604  ADDW	R6, R9, #1284
0x063C	0xEA6F0508  MVN	R5, R8, LSL #0
0x0640	0xB2ED    UXTB	R5, R5
0x0642	0x6834    LDR	R4, [R6, #0]
0x0644	0x402C    ANDS	R4, R5
0x0646	0x6034    STR	R4, [R6, #0]
L_GPIO_Config58:
;__Lib_GPIO_6.c, 387 :: 		
0x0648	0xF2400440  MOVW	R4, __GPIO_CFG_DRIVE_8mA
0x064C	0xEA070404  AND	R4, R7, R4, LSL #0
0x0650	0xB2A4    UXTH	R4, R4
0x0652	0xB134    CBZ	R4, L_GPIO_Config59
;__Lib_GPIO_6.c, 388 :: 		
0x0654	0xF50965A1  ADD	R5, R9, #1288
0x0658	0x682C    LDR	R4, [R5, #0]
0x065A	0xEA440408  ORR	R4, R4, R8, LSL #0
0x065E	0x602C    STR	R4, [R5, #0]
0x0660	0xE007    B	L_GPIO_Config60
L_GPIO_Config59:
;__Lib_GPIO_6.c, 390 :: 		
0x0662	0xF50966A1  ADD	R6, R9, #1288
0x0666	0xEA6F0508  MVN	R5, R8, LSL #0
0x066A	0xB2ED    UXTB	R5, R5
0x066C	0x6834    LDR	R4, [R6, #0]
0x066E	0x402C    ANDS	R4, R5
0x0670	0x6034    STR	R4, [R6, #0]
L_GPIO_Config60:
;__Lib_GPIO_6.c, 392 :: 		
0x0672	0xF2410400  MOVW	R4, __GPIO_CFG_DRIVE_6mA
0x0676	0xEA070404  AND	R4, R7, R4, LSL #0
0x067A	0xB2A4    UXTH	R4, R4
0x067C	0x2C01    CMP	R4, #1
0x067E	0xD013    BEQ	L__GPIO_Config116
0x0680	0xF2420400  MOVW	R4, __GPIO_CFG_DRIVE_10mA
0x0684	0xEA070404  AND	R4, R7, R4, LSL #0
0x0688	0xB2A4    UXTH	R4, R4
0x068A	0x2C01    CMP	R4, #1
0x068C	0xD00C    BEQ	L__GPIO_Config115
0x068E	0xF2440400  MOVW	R4, __GPIO_CFG_DRIVE_12mA
0x0692	0xEA070404  AND	R4, R7, R4, LSL #0
0x0696	0xB2A4    UXTH	R4, R4
0x0698	0x2C01    CMP	R4, #1
0x069A	0xD005    BEQ	L__GPIO_Config114
0x069C	0xB2DE    UXTB	R6, R3
0x069E	0x464B    MOV	R3, R9
0x06A0	0xB2B8    UXTH	R0, R7
0x06A2	0xFA5FF588  UXTB	R5, R8
0x06A6	0xE03C    B	L_GPIO_Config63
L__GPIO_Config116:
L__GPIO_Config115:
L__GPIO_Config114:
;__Lib_GPIO_6.c, 394 :: 		
; tmp_code start address is: 0 (R0)
0x06A8	0x2000    MOVS	R0, #0
;__Lib_GPIO_6.c, 395 :: 		
; i start address is: 24 (R6)
0x06AA	0x2600    MOVS	R6, #0
; pin_mask end address is: 32 (R8)
; config end address is: 28 (R7)
; port end address is: 36 (R9)
; tmp_code end address is: 0 (R0)
; i end address is: 24 (R6)
; pin_code end address is: 12 (R3)
0x06AC	0xB2DA    UXTB	R2, R3
0x06AE	0xB2BB    UXTH	R3, R7
0x06B0	0x4607    MOV	R7, R0
0x06B2	0xFA5FF088  UXTB	R0, R8
0x06B6	0x4649    MOV	R1, R9
L_GPIO_Config64:
; i start address is: 24 (R6)
; tmp_code start address is: 28 (R7)
; port start address is: 4 (R1)
; pin_code start address is: 8 (R2)
; config start address is: 12 (R3)
; pin_mask start address is: 0 (R0)
0x06B8	0x2E08    CMP	R6, #8
0x06BA	0xD213    BCS	L_GPIO_Config65
;__Lib_GPIO_6.c, 397 :: 		
0x06BC	0xFA20F406  LSR	R4, R0, R6
0x06C0	0xB2E4    UXTB	R4, R4
0x06C2	0xF0040401  AND	R4, R4, #1
0x06C6	0xB2E4    UXTB	R4, R4
0x06C8	0xB14C    CBZ	R4, L__GPIO_Config117
;__Lib_GPIO_6.c, 399 :: 		
0x06CA	0x0075    LSLS	R5, R6, #1
0x06CC	0xB22D    SXTH	R5, R5
0x06CE	0x2403    MOVS	R4, #3
0x06D0	0xB224    SXTH	R4, R4
0x06D2	0x40AC    LSLS	R4, R5
0x06D4	0xB224    SXTH	R4, R4
0x06D6	0xEA470504  ORR	R5, R7, R4, LSL #0
; tmp_code end address is: 28 (R7)
; tmp_code start address is: 20 (R5)
; tmp_code end address is: 20 (R5)
0x06DA	0x462F    MOV	R7, R5
;__Lib_GPIO_6.c, 400 :: 		
0x06DC	0xE7FF    B	L_GPIO_Config67
L__GPIO_Config117:
;__Lib_GPIO_6.c, 397 :: 		
;__Lib_GPIO_6.c, 400 :: 		
L_GPIO_Config67:
;__Lib_GPIO_6.c, 395 :: 		
; tmp_code start address is: 28 (R7)
0x06DE	0x1C76    ADDS	R6, R6, #1
0x06E0	0xB2F6    UXTB	R6, R6
;__Lib_GPIO_6.c, 401 :: 		
; i end address is: 24 (R6)
0x06E2	0xE7E9    B	L_GPIO_Config64
L_GPIO_Config65:
;__Lib_GPIO_6.c, 402 :: 		
0x06E4	0xF60176C4  ADDW	R6, R1, #4036
0x06E8	0x43FD    MVN	R5, R7
; tmp_code end address is: 28 (R7)
0x06EA	0x6834    LDR	R4, [R6, #0]
0x06EC	0x402C    ANDS	R4, R5
0x06EE	0x6034    STR	R4, [R6, #0]
;__Lib_GPIO_6.c, 403 :: 		
0x06F0	0xF201563C  ADDW	R6, R1, #1340
0x06F4	0x43C5    MVN	R5, R0
0x06F6	0xB2ED    UXTB	R5, R5
0x06F8	0x6834    LDR	R4, [R6, #0]
0x06FA	0x402C    ANDS	R4, R5
0x06FC	0x6034    STR	R4, [R6, #0]
;__Lib_GPIO_6.c, 404 :: 		
0x06FE	0xF50166A1  ADD	R6, R1, #1288
0x0702	0x43C5    MVN	R5, R0
0x0704	0xB2ED    UXTB	R5, R5
0x0706	0x6834    LDR	R4, [R6, #0]
0x0708	0x402C    ANDS	R4, R5
0x070A	0x6034    STR	R4, [R6, #0]
;__Lib_GPIO_6.c, 405 :: 		
0x070C	0xF2015604  ADDW	R6, R1, #1284
0x0710	0x43C5    MVN	R5, R0
0x0712	0xB2ED    UXTB	R5, R5
0x0714	0x6834    LDR	R4, [R6, #0]
0x0716	0x402C    ANDS	R4, R5
0x0718	0x6034    STR	R4, [R6, #0]
; pin_mask end address is: 0 (R0)
; config end address is: 12 (R3)
; port end address is: 4 (R1)
; pin_code end address is: 8 (R2)
0x071A	0xB2C5    UXTB	R5, R0
0x071C	0xB298    UXTH	R0, R3
0x071E	0x460B    MOV	R3, R1
0x0720	0xB2D6    UXTB	R6, R2
;__Lib_GPIO_6.c, 406 :: 		
L_GPIO_Config63:
;__Lib_GPIO_6.c, 408 :: 		
; pin_mask start address is: 20 (R5)
; config start address is: 0 (R0)
; pin_code start address is: 24 (R6)
; port start address is: 12 (R3)
; tmp_code start address is: 4 (R1)
0x0722	0x2100    MOVS	R1, #0
;__Lib_GPIO_6.c, 410 :: 		
0x0724	0xF2410400  MOVW	R4, __GPIO_CFG_DRIVE_6mA
0x0728	0xEA000404  AND	R4, R0, R4, LSL #0
0x072C	0xB2A4    UXTH	R4, R4
0x072E	0xB33C    CBZ	R4, L__GPIO_Config119
;__Lib_GPIO_6.c, 412 :: 		
; i start address is: 8 (R2)
0x0730	0x2200    MOVS	R2, #0
; pin_mask end address is: 20 (R5)
; tmp_code end address is: 4 (R1)
; port end address is: 12 (R3)
; pin_code end address is: 24 (R6)
; i end address is: 8 (R2)
; config end address is: 0 (R0)
0x0732	0x460F    MOV	R7, R1
0x0734	0xB2E9    UXTB	R1, R5
L_GPIO_Config69:
; i start address is: 8 (R2)
; tmp_code start address is: 28 (R7)
; port start address is: 12 (R3)
; pin_code start address is: 24 (R6)
; config start address is: 0 (R0)
; pin_mask start address is: 4 (R1)
0x0736	0x2A08    CMP	R2, #8
0x0738	0xD213    BCS	L_GPIO_Config70
;__Lib_GPIO_6.c, 414 :: 		
0x073A	0xFA21F402  LSR	R4, R1, R2
0x073E	0xB2E4    UXTB	R4, R4
0x0740	0xF0040401  AND	R4, R4, #1
0x0744	0xB2E4    UXTB	R4, R4
0x0746	0xB14C    CBZ	R4, L__GPIO_Config118
;__Lib_GPIO_6.c, 416 :: 		
0x0748	0x0055    LSLS	R5, R2, #1
0x074A	0xB22D    SXTH	R5, R5
0x074C	0x2401    MOVS	R4, #1
0x074E	0xB224    SXTH	R4, R4
0x0750	0x40AC    LSLS	R4, R5
0x0752	0xB224    SXTH	R4, R4
0x0754	0xEA470504  ORR	R5, R7, R4, LSL #0
; tmp_code end address is: 28 (R7)
; tmp_code start address is: 20 (R5)
; tmp_code end address is: 20 (R5)
0x0758	0x462F    MOV	R7, R5
;__Lib_GPIO_6.c, 417 :: 		
0x075A	0xE7FF    B	L_GPIO_Config72
L__GPIO_Config118:
;__Lib_GPIO_6.c, 414 :: 		
;__Lib_GPIO_6.c, 417 :: 		
L_GPIO_Config72:
;__Lib_GPIO_6.c, 412 :: 		
; tmp_code start address is: 28 (R7)
0x075C	0x1C52    ADDS	R2, R2, #1
0x075E	0xB2D2    UXTB	R2, R2
;__Lib_GPIO_6.c, 418 :: 		
; i end address is: 8 (R2)
0x0760	0xE7E9    B	L_GPIO_Config69
L_GPIO_Config70:
;__Lib_GPIO_6.c, 420 :: 		
0x0762	0xF60375C4  ADDW	R5, R3, #4036
0x0766	0x682C    LDR	R4, [R5, #0]
0x0768	0x433C    ORRS	R4, R7
0x076A	0x602C    STR	R4, [R5, #0]
;__Lib_GPIO_6.c, 421 :: 		
0x076C	0xF50365A1  ADD	R5, R3, #1288
0x0770	0x682C    LDR	R4, [R5, #0]
0x0772	0x430C    ORRS	R4, R1
0x0774	0x602C    STR	R4, [R5, #0]
; port end address is: 12 (R3)
; pin_code end address is: 24 (R6)
; config end address is: 0 (R0)
; pin_mask end address is: 4 (R1)
; tmp_code end address is: 28 (R7)
0x0776	0x463D    MOV	R5, R7
0x0778	0x461F    MOV	R7, R3
0x077A	0xB283    UXTH	R3, R0
0x077C	0xB2C8    UXTB	R0, R1
;__Lib_GPIO_6.c, 422 :: 		
0x077E	0xE003    B	L_GPIO_Config68
L__GPIO_Config119:
;__Lib_GPIO_6.c, 410 :: 		
0x0780	0x461F    MOV	R7, R3
0x0782	0xB283    UXTH	R3, R0
0x0784	0xB2E8    UXTB	R0, R5
0x0786	0x460D    MOV	R5, R1
;__Lib_GPIO_6.c, 422 :: 		
L_GPIO_Config68:
;__Lib_GPIO_6.c, 425 :: 		
; tmp_code start address is: 20 (R5)
; port start address is: 28 (R7)
; pin_code start address is: 24 (R6)
; config start address is: 12 (R3)
; pin_mask start address is: 0 (R0)
0x0788	0xF2420400  MOVW	R4, __GPIO_CFG_DRIVE_10mA
0x078C	0xEA030404  AND	R4, R3, R4, LSL #0
0x0790	0xB2A4    UXTH	R4, R4
0x0792	0xB36C    CBZ	R4, L__GPIO_Config121
;__Lib_GPIO_6.c, 427 :: 		
; i start address is: 8 (R2)
0x0794	0x2200    MOVS	R2, #0
; port end address is: 28 (R7)
; pin_mask end address is: 0 (R0)
; config end address is: 12 (R3)
; pin_code end address is: 24 (R6)
; i end address is: 8 (R2)
; tmp_code end address is: 20 (R5)
0x0796	0x46A8    MOV	R8, R5
0x0798	0x4639    MOV	R1, R7
L_GPIO_Config74:
; i start address is: 8 (R2)
; pin_mask start address is: 0 (R0)
; config start address is: 12 (R3)
; pin_code start address is: 24 (R6)
; port start address is: 4 (R1)
; tmp_code start address is: 32 (R8)
0x079A	0x2A08    CMP	R2, #8
0x079C	0xD213    BCS	L_GPIO_Config75
;__Lib_GPIO_6.c, 429 :: 		
0x079E	0xFA20F402  LSR	R4, R0, R2
0x07A2	0xB2E4    UXTB	R4, R4
0x07A4	0xF0040401  AND	R4, R4, #1
0x07A8	0xB2E4    UXTB	R4, R4
0x07AA	0xB14C    CBZ	R4, L__GPIO_Config120
;__Lib_GPIO_6.c, 431 :: 		
0x07AC	0x0055    LSLS	R5, R2, #1
0x07AE	0xB22D    SXTH	R5, R5
0x07B0	0x2403    MOVS	R4, #3
0x07B2	0xB224    SXTH	R4, R4
0x07B4	0x40AC    LSLS	R4, R5
0x07B6	0xB224    SXTH	R4, R4
0x07B8	0xEA480504  ORR	R5, R8, R4, LSL #0
; tmp_code end address is: 32 (R8)
; tmp_code start address is: 20 (R5)
; tmp_code end address is: 20 (R5)
0x07BC	0x46A8    MOV	R8, R5
;__Lib_GPIO_6.c, 432 :: 		
0x07BE	0xE7FF    B	L_GPIO_Config77
L__GPIO_Config120:
;__Lib_GPIO_6.c, 429 :: 		
;__Lib_GPIO_6.c, 432 :: 		
L_GPIO_Config77:
;__Lib_GPIO_6.c, 427 :: 		
; tmp_code start address is: 32 (R8)
0x07C0	0x1C52    ADDS	R2, R2, #1
0x07C2	0xB2D2    UXTB	R2, R2
;__Lib_GPIO_6.c, 433 :: 		
; i end address is: 8 (R2)
0x07C4	0xE7E9    B	L_GPIO_Config74
L_GPIO_Config75:
;__Lib_GPIO_6.c, 437 :: 		
0x07C6	0xF60175C4  ADDW	R5, R1, #4036
0x07CA	0x682C    LDR	R4, [R5, #0]
0x07CC	0xEA440408  ORR	R4, R4, R8, LSL #0
0x07D0	0x602C    STR	R4, [R5, #0]
;__Lib_GPIO_6.c, 438 :: 		
0x07D2	0xF201553C  ADDW	R5, R1, #1340
0x07D6	0x682C    LDR	R4, [R5, #0]
0x07D8	0x4304    ORRS	R4, R0
0x07DA	0x602C    STR	R4, [R5, #0]
;__Lib_GPIO_6.c, 439 :: 		
0x07DC	0xF50165A1  ADD	R5, R1, #1288
0x07E0	0x682C    LDR	R4, [R5, #0]
0x07E2	0x4304    ORRS	R4, R0
0x07E4	0x602C    STR	R4, [R5, #0]
; pin_mask end address is: 0 (R0)
; config end address is: 12 (R3)
; pin_code end address is: 24 (R6)
; port end address is: 4 (R1)
; tmp_code end address is: 32 (R8)
0x07E6	0xB2F7    UXTB	R7, R6
0x07E8	0x460E    MOV	R6, R1
0x07EA	0xB2C2    UXTB	R2, R0
0x07EC	0xB298    UXTH	R0, R3
;__Lib_GPIO_6.c, 440 :: 		
0x07EE	0xE005    B	L_GPIO_Config73
L__GPIO_Config121:
;__Lib_GPIO_6.c, 425 :: 		
0x07F0	0x9701    STR	R7, [SP, #4]
0x07F2	0xB2C2    UXTB	R2, R0
0x07F4	0xB298    UXTH	R0, R3
0x07F6	0xB2F7    UXTB	R7, R6
0x07F8	0x46A8    MOV	R8, R5
0x07FA	0x9E01    LDR	R6, [SP, #4]
;__Lib_GPIO_6.c, 440 :: 		
L_GPIO_Config73:
;__Lib_GPIO_6.c, 443 :: 		
; pin_mask start address is: 8 (R2)
; config start address is: 0 (R0)
; pin_code start address is: 28 (R7)
; port start address is: 24 (R6)
; tmp_code start address is: 32 (R8)
0x07FC	0xF2440400  MOVW	R4, __GPIO_CFG_DRIVE_12mA
0x0800	0xEA000404  AND	R4, R0, R4, LSL #0
0x0804	0xB2A4    UXTH	R4, R4
0x0806	0xB384    CBZ	R4, L__GPIO_Config123
;__Lib_GPIO_6.c, 445 :: 		
; i start address is: 12 (R3)
0x0808	0x2300    MOVS	R3, #0
; pin_mask end address is: 8 (R2)
; port end address is: 24 (R6)
; pin_code end address is: 28 (R7)
; tmp_code end address is: 32 (R8)
; config end address is: 0 (R0)
; i end address is: 12 (R3)
0x080A	0xB2D1    UXTB	R1, R2
L_GPIO_Config79:
; i start address is: 12 (R3)
; tmp_code start address is: 32 (R8)
; port start address is: 24 (R6)
; pin_code start address is: 28 (R7)
; config start address is: 0 (R0)
; pin_mask start address is: 4 (R1)
0x080C	0x2B08    CMP	R3, #8
0x080E	0xD214    BCS	L_GPIO_Config80
;__Lib_GPIO_6.c, 447 :: 		
0x0810	0xFA21F403  LSR	R4, R1, R3
0x0814	0xB2E4    UXTB	R4, R4
0x0816	0xF0040401  AND	R4, R4, #1
0x081A	0xB2E4    UXTB	R4, R4
0x081C	0xB154    CBZ	R4, L__GPIO_Config122
;__Lib_GPIO_6.c, 449 :: 		
0x081E	0x005D    LSLS	R5, R3, #1
0x0820	0xB22D    SXTH	R5, R5
0x0822	0x2403    MOVS	R4, #3
0x0824	0xB224    SXTH	R4, R4
0x0826	0x40AC    LSLS	R4, R5
0x0828	0xB224    SXTH	R4, R4
0x082A	0xEA480404  ORR	R4, R8, R4, LSL #0
; tmp_code end address is: 32 (R8)
; tmp_code start address is: 8 (R2)
0x082E	0x4622    MOV	R2, R4
; tmp_code end address is: 8 (R2)
0x0830	0x4690    MOV	R8, R2
;__Lib_GPIO_6.c, 450 :: 		
0x0832	0xE7FF    B	L_GPIO_Config82
L__GPIO_Config122:
;__Lib_GPIO_6.c, 447 :: 		
;__Lib_GPIO_6.c, 450 :: 		
L_GPIO_Config82:
;__Lib_GPIO_6.c, 445 :: 		
; tmp_code start address is: 32 (R8)
0x0834	0x1C5B    ADDS	R3, R3, #1
0x0836	0xB2DB    UXTB	R3, R3
;__Lib_GPIO_6.c, 451 :: 		
; i end address is: 12 (R3)
0x0838	0xE7E8    B	L_GPIO_Config79
L_GPIO_Config80:
;__Lib_GPIO_6.c, 454 :: 		
0x083A	0xF60675C4  ADDW	R5, R6, #4036
0x083E	0x682C    LDR	R4, [R5, #0]
0x0840	0xEA440408  ORR	R4, R4, R8, LSL #0
; tmp_code end address is: 32 (R8)
0x0844	0x602C    STR	R4, [R5, #0]
;__Lib_GPIO_6.c, 455 :: 		
0x0846	0xF206553C  ADDW	R5, R6, #1340
0x084A	0x682C    LDR	R4, [R5, #0]
0x084C	0x430C    ORRS	R4, R1
0x084E	0x602C    STR	R4, [R5, #0]
;__Lib_GPIO_6.c, 456 :: 		
0x0850	0xF50665A1  ADD	R5, R6, #1288
0x0854	0x682C    LDR	R4, [R5, #0]
0x0856	0x430C    ORRS	R4, R1
0x0858	0x602C    STR	R4, [R5, #0]
;__Lib_GPIO_6.c, 457 :: 		
0x085A	0xF2065504  ADDW	R5, R6, #1284
0x085E	0x682C    LDR	R4, [R5, #0]
0x0860	0x430C    ORRS	R4, R1
0x0862	0x602C    STR	R4, [R5, #0]
; port end address is: 24 (R6)
; pin_code end address is: 28 (R7)
; config end address is: 0 (R0)
; pin_mask end address is: 4 (R1)
0x0864	0xB2FB    UXTB	R3, R7
0x0866	0x4632    MOV	R2, R6
;__Lib_GPIO_6.c, 458 :: 		
0x0868	0xE002    B	L_GPIO_Config78
L__GPIO_Config123:
;__Lib_GPIO_6.c, 443 :: 		
0x086A	0xB2D1    UXTB	R1, R2
0x086C	0x4632    MOV	R2, R6
0x086E	0xB2FB    UXTB	R3, R7
;__Lib_GPIO_6.c, 458 :: 		
L_GPIO_Config78:
;__Lib_GPIO_6.c, 460 :: 		
; port start address is: 8 (R2)
; pin_code start address is: 12 (R3)
; config start address is: 0 (R0)
; pin_mask start address is: 4 (R1)
0x0870	0xF2400480  MOVW	R4, __GPIO_CFG_SLEW_RATE
0x0874	0xEA000404  AND	R4, R0, R4, LSL #0
0x0878	0xB2A4    UXTH	R4, R4
0x087A	0xB174    CBZ	R4, L_GPIO_Config83
;__Lib_GPIO_6.c, 461 :: 		
0x087C	0xF2400440  MOVW	R4, __GPIO_CFG_DRIVE_8mA
0x0880	0xEA000404  AND	R4, R0, R4, LSL #0
0x0884	0xB2A4    UXTH	R4, R4
0x0886	0xB12C    CBZ	R4, L_GPIO_Config84
;__Lib_GPIO_6.c, 462 :: 		
0x0888	0xF50265A3  ADD	R5, R2, #1304
0x088C	0x682C    LDR	R4, [R5, #0]
0x088E	0x430C    ORRS	R4, R1
0x0890	0x602C    STR	R4, [R5, #0]
;__Lib_GPIO_6.c, 463 :: 		
0x0892	0xE001    B	L_GPIO_Config85
; port end address is: 8 (R2)
; pin_code end address is: 12 (R3)
; config end address is: 0 (R0)
; pin_mask end address is: 4 (R1)
L_GPIO_Config84:
;__Lib_GPIO_6.c, 465 :: 		
0x0894	0x2001    MOVS	R0, #1
0x0896	0xE0FA    B	L_end_GPIO_Config
L_GPIO_Config85:
;__Lib_GPIO_6.c, 466 :: 		
; pin_mask start address is: 4 (R1)
; config start address is: 0 (R0)
; pin_code start address is: 12 (R3)
; port start address is: 8 (R2)
0x0898	0xE006    B	L_GPIO_Config86
L_GPIO_Config83:
;__Lib_GPIO_6.c, 468 :: 		
0x089A	0xF50266A3  ADD	R6, R2, #1304
0x089E	0x43CD    MVN	R5, R1
0x08A0	0xB2ED    UXTB	R5, R5
0x08A2	0x6834    LDR	R4, [R6, #0]
0x08A4	0x402C    ANDS	R4, R5
0x08A6	0x6034    STR	R4, [R6, #0]
L_GPIO_Config86:
;__Lib_GPIO_6.c, 470 :: 		
0x08A8	0xF2401400  MOVW	R4, __GPIO_CFG_DIGITAL_ENABLE
0x08AC	0xEA000404  AND	R4, R0, R4, LSL #0
0x08B0	0xB2A4    UXTH	R4, R4
0x08B2	0xB12C    CBZ	R4, L_GPIO_Config87
;__Lib_GPIO_6.c, 471 :: 		
0x08B4	0xF202551C  ADDW	R5, R2, #1308
0x08B8	0x682C    LDR	R4, [R5, #0]
0x08BA	0x430C    ORRS	R4, R1
0x08BC	0x602C    STR	R4, [R5, #0]
0x08BE	0xE006    B	L_GPIO_Config88
L_GPIO_Config87:
;__Lib_GPIO_6.c, 473 :: 		
0x08C0	0xF202561C  ADDW	R6, R2, #1308
0x08C4	0x43CD    MVN	R5, R1
0x08C6	0xB2ED    UXTB	R5, R5
0x08C8	0x6834    LDR	R4, [R6, #0]
0x08CA	0x402C    ANDS	R4, R5
0x08CC	0x6034    STR	R4, [R6, #0]
L_GPIO_Config88:
;__Lib_GPIO_6.c, 476 :: 		
0x08CE	0xF2402400  MOVW	R4, __GPIO_CFG_ISOLATION_DISABLE
0x08D2	0xEA000404  AND	R4, R0, R4, LSL #0
0x08D6	0xB2A4    UXTH	R4, R4
0x08D8	0x2C00    CMP	R4, #0
0x08DA	0xD03A    BEQ	L_GPIO_Config89
;__Lib_GPIO_6.c, 477 :: 		
0x08DC	0x4C10    LDR	R4, [PC, #64]
0x08DE	0x42A2    CMP	R2, R4
0x08E0	0xF2400500  MOVW	R5, #0
0x08E4	0xD000    BEQ	L__GPIO_Config131
0x08E6	0x2501    MOVS	R5, #1
L__GPIO_Config131:
0x08E8	0x4C0E    LDR	R4, [PC, #56]
0x08EA	0x42A2    CMP	R2, R4
0x08EC	0xF2400400  MOVW	R4, #0
0x08F0	0xD000    BEQ	L__GPIO_Config132
0x08F2	0x2401    MOVS	R4, #1
L__GPIO_Config132:
0x08F4	0x4025    ANDS	R5, R4
0x08F6	0x4C0C    LDR	R4, [PC, #48]
0x08F8	0x42A2    CMP	R2, R4
0x08FA	0xF2400400  MOVW	R4, #0
0x08FE	0xD000    BEQ	L__GPIO_Config133
0x0900	0x2401    MOVS	R4, #1
L__GPIO_Config133:
0x0902	0x4025    ANDS	R5, R4
;__Lib_GPIO_6.c, 478 :: 		
0x0904	0x4C09    LDR	R4, [PC, #36]
0x0906	0x42A2    CMP	R2, R4
0x0908	0xF2400400  MOVW	R4, #0
0x090C	0xD000    BEQ	L__GPIO_Config134
0x090E	0x2401    MOVS	R4, #1
L__GPIO_Config134:
0x0910	0x4025    ANDS	R5, R4
0x0912	0xE00D    B	#26
0x0914	0xF000FFFF  	#-4096
0x0918	0x00000000  	__GPIO_DIR_INPUT
0x091C	0x00010000  	__GPIO_DIR_OUTPUT
0x0920	0xC0004005  	#1074118656
0x0924	0xB0004005  	#1074114560
0x0928	0x90004005  	#1074106368
0x092C	0x10004006  	#1074139136
0x0930	0x4C59    LDR	R4, [PC, #356]
0x0932	0x42A2    CMP	R2, R4
0x0934	0xF2400400  MOVW	R4, #0
0x0938	0xD000    BEQ	L__GPIO_Config135
0x093A	0x2401    MOVS	R4, #1
L__GPIO_Config135:
0x093C	0xEA050404  AND	R4, R5, R4, LSL #0
0x0940	0xB10C    CBZ	R4, L_GPIO_Config90
; port end address is: 8 (R2)
; pin_code end address is: 12 (R3)
; config end address is: 0 (R0)
; pin_mask end address is: 4 (R1)
;__Lib_GPIO_6.c, 479 :: 		
0x0942	0x2001    MOVS	R0, #1
0x0944	0xE0A3    B	L_end_GPIO_Config
L_GPIO_Config90:
;__Lib_GPIO_6.c, 481 :: 		
; pin_mask start address is: 4 (R1)
; config start address is: 0 (R0)
; pin_code start address is: 12 (R3)
; port start address is: 8 (R2)
0x0946	0xF50265A5  ADD	R5, R2, #1320
0x094A	0x682C    LDR	R4, [R5, #0]
0x094C	0x430C    ORRS	R4, R1
0x094E	0x602C    STR	R4, [R5, #0]
;__Lib_GPIO_6.c, 483 :: 		
0x0950	0xE02A    B	L_GPIO_Config92
L_GPIO_Config89:
;__Lib_GPIO_6.c, 485 :: 		
0x0952	0x4C52    LDR	R4, [PC, #328]
0x0954	0x42A2    CMP	R2, R4
0x0956	0xF2400500  MOVW	R5, #0
0x095A	0xD100    BNE	L__GPIO_Config136
0x095C	0x2501    MOVS	R5, #1
L__GPIO_Config136:
0x095E	0x4C50    LDR	R4, [PC, #320]
0x0960	0x42A2    CMP	R2, R4
0x0962	0xF2400400  MOVW	R4, #0
0x0966	0xD100    BNE	L__GPIO_Config137
0x0968	0x2401    MOVS	R4, #1
L__GPIO_Config137:
0x096A	0x4325    ORRS	R5, R4
0x096C	0x4C4D    LDR	R4, [PC, #308]
0x096E	0x42A2    CMP	R2, R4
0x0970	0xF2400400  MOVW	R4, #0
0x0974	0xD100    BNE	L__GPIO_Config138
0x0976	0x2401    MOVS	R4, #1
L__GPIO_Config138:
0x0978	0x4325    ORRS	R5, R4
;__Lib_GPIO_6.c, 486 :: 		
0x097A	0x4C4B    LDR	R4, [PC, #300]
0x097C	0x42A2    CMP	R2, R4
0x097E	0xF2400400  MOVW	R4, #0
0x0982	0xD100    BNE	L__GPIO_Config139
0x0984	0x2401    MOVS	R4, #1
L__GPIO_Config139:
0x0986	0x4325    ORRS	R5, R4
0x0988	0x4C43    LDR	R4, [PC, #268]
0x098A	0x42A2    CMP	R2, R4
0x098C	0xF2400400  MOVW	R4, #0
0x0990	0xD100    BNE	L__GPIO_Config140
0x0992	0x2401    MOVS	R4, #1
L__GPIO_Config140:
0x0994	0xEA450404  ORR	R4, R5, R4, LSL #0
0x0998	0xB134    CBZ	R4, L_GPIO_Config93
;__Lib_GPIO_6.c, 487 :: 		
0x099A	0xF50266A5  ADD	R6, R2, #1320
0x099E	0x43CD    MVN	R5, R1
0x09A0	0xB2ED    UXTB	R5, R5
0x09A2	0x6834    LDR	R4, [R6, #0]
0x09A4	0x402C    ANDS	R4, R5
0x09A6	0x6034    STR	R4, [R6, #0]
L_GPIO_Config93:
;__Lib_GPIO_6.c, 488 :: 		
L_GPIO_Config92:
;__Lib_GPIO_6.c, 490 :: 		
0x09A8	0xF6400400  MOVW	R4, __GPIO_CFG_ADC_SRC_TRIGGER
0x09AC	0xEA000404  AND	R4, R0, R4, LSL #0
0x09B0	0xB2A4    UXTH	R4, R4
0x09B2	0xB12C    CBZ	R4, L_GPIO_Config94
;__Lib_GPIO_6.c, 491 :: 		
0x09B4	0xF50265A6  ADD	R5, R2, #1328
0x09B8	0x682C    LDR	R4, [R5, #0]
0x09BA	0x430C    ORRS	R4, R1
0x09BC	0x602C    STR	R4, [R5, #0]
0x09BE	0xE006    B	L_GPIO_Config95
L_GPIO_Config94:
;__Lib_GPIO_6.c, 493 :: 		
0x09C0	0xF50266A6  ADD	R6, R2, #1328
0x09C4	0x43CD    MVN	R5, R1
0x09C6	0xB2ED    UXTB	R5, R5
0x09C8	0x6834    LDR	R4, [R6, #0]
0x09CA	0x402C    ANDS	R4, R5
0x09CC	0x6034    STR	R4, [R6, #0]
L_GPIO_Config95:
;__Lib_GPIO_6.c, 495 :: 		
0x09CE	0xF2404400  MOVW	R4, __GPIO_CFG_ALT_FUNCTION
0x09D2	0xEA000404  AND	R4, R0, R4, LSL #0
0x09D6	0xB2A4    UXTH	R4, R4
; config end address is: 0 (R0)
0x09D8	0xB12C    CBZ	R4, L_GPIO_Config96
;__Lib_GPIO_6.c, 496 :: 		
0x09DA	0xF5026584  ADD	R5, R2, #1056
0x09DE	0x682C    LDR	R4, [R5, #0]
0x09E0	0x430C    ORRS	R4, R1
0x09E2	0x602C    STR	R4, [R5, #0]
0x09E4	0xE006    B	L_GPIO_Config97
L_GPIO_Config96:
;__Lib_GPIO_6.c, 498 :: 		
0x09E6	0xF5026684  ADD	R6, R2, #1056
0x09EA	0x43CD    MVN	R5, R1
0x09EC	0xB2ED    UXTB	R5, R5
0x09EE	0x6834    LDR	R4, [R6, #0]
0x09F0	0x402C    ANDS	R4, R5
0x09F2	0x6034    STR	R4, [R6, #0]
L_GPIO_Config97:
;__Lib_GPIO_6.c, 501 :: 		
0x09F4	0xB90B    CBNZ	R3, L_GPIO_Config98
; port end address is: 8 (R2)
; pin_code end address is: 12 (R3)
; pin_mask end address is: 4 (R1)
;__Lib_GPIO_6.c, 502 :: 		
0x09F6	0x2000    MOVS	R0, #0
0x09F8	0xE049    B	L_end_GPIO_Config
L_GPIO_Config98:
;__Lib_GPIO_6.c, 503 :: 		
; pin_mask start address is: 4 (R1)
; pin_code start address is: 12 (R3)
; port start address is: 8 (R2)
0x09FA	0x2B0F    CMP	R3, #15
0x09FC	0xD901    BLS	L_GPIO_Config99
; port end address is: 8 (R2)
; pin_code end address is: 12 (R3)
; pin_mask end address is: 4 (R1)
;__Lib_GPIO_6.c, 504 :: 		
0x09FE	0x2001    MOVS	R0, #1
0x0A00	0xE045    B	L_end_GPIO_Config
L_GPIO_Config99:
;__Lib_GPIO_6.c, 506 :: 		
; tmp_code start address is: 28 (R7)
; pin_mask start address is: 4 (R1)
; pin_code start address is: 12 (R3)
; port start address is: 8 (R2)
0x0A02	0x2700    MOVS	R7, #0
;__Lib_GPIO_6.c, 507 :: 		
; i start address is: 0 (R0)
0x0A04	0x2000    MOVS	R0, #0
; port end address is: 8 (R2)
; pin_code end address is: 12 (R3)
; i end address is: 0 (R0)
; pin_mask end address is: 4 (R1)
; tmp_code end address is: 28 (R7)
0x0A06	0xF88D3004  STRB	R3, [SP, #4]
0x0A0A	0xB2C3    UXTB	R3, R0
0x0A0C	0x4610    MOV	R0, R2
0x0A0E	0xF89D2004  LDRB	R2, [SP, #4]
L_GPIO_Config100:
; i start address is: 12 (R3)
; tmp_code start address is: 28 (R7)
; pin_mask start address is: 4 (R1)
; pin_code start address is: 8 (R2)
; port start address is: 0 (R0)
0x0A12	0x2B08    CMP	R3, #8
0x0A14	0xD212    BCS	L_GPIO_Config101
;__Lib_GPIO_6.c, 508 :: 		
0x0A16	0xFA21F403  LSR	R4, R1, R3
0x0A1A	0xB2E4    UXTB	R4, R4
0x0A1C	0xF0040401  AND	R4, R4, #1
0x0A20	0xB2E4    UXTB	R4, R4
0x0A22	0xB144    CBZ	R4, L__GPIO_Config124
;__Lib_GPIO_6.c, 509 :: 		
0x0A24	0x009D    LSLS	R5, R3, #2
0x0A26	0xB22D    SXTH	R5, R5
0x0A28	0xF04F040F  MOV	R4, #15
0x0A2C	0x40AC    LSLS	R4, R5
0x0A2E	0xEA470504  ORR	R5, R7, R4, LSL #0
; tmp_code end address is: 28 (R7)
; tmp_code start address is: 20 (R5)
; tmp_code end address is: 20 (R5)
0x0A32	0x462F    MOV	R7, R5
0x0A34	0xE7FF    B	L_GPIO_Config103
L__GPIO_Config124:
;__Lib_GPIO_6.c, 508 :: 		
;__Lib_GPIO_6.c, 509 :: 		
L_GPIO_Config103:
;__Lib_GPIO_6.c, 507 :: 		
; tmp_code start address is: 28 (R7)
0x0A36	0x1C5B    ADDS	R3, R3, #1
0x0A38	0xB2DB    UXTB	R3, R3
;__Lib_GPIO_6.c, 510 :: 		
; i end address is: 12 (R3)
0x0A3A	0xE7EA    B	L_GPIO_Config100
L_GPIO_Config101:
;__Lib_GPIO_6.c, 511 :: 		
0x0A3C	0xF200562C  ADDW	R6, R0, #1324
0x0A40	0x43FD    MVN	R5, R7
; tmp_code end address is: 28 (R7)
0x0A42	0x6834    LDR	R4, [R6, #0]
0x0A44	0x402C    ANDS	R4, R5
0x0A46	0x6034    STR	R4, [R6, #0]
;__Lib_GPIO_6.c, 512 :: 		
; tmp_code start address is: 24 (R6)
0x0A48	0x2600    MOVS	R6, #0
;__Lib_GPIO_6.c, 513 :: 		
; i start address is: 12 (R3)
0x0A4A	0x2300    MOVS	R3, #0
; pin_mask end address is: 4 (R1)
; i end address is: 12 (R3)
; port end address is: 0 (R0)
; tmp_code end address is: 24 (R6)
0x0A4C	0xF88D3004  STRB	R3, [SP, #4]
0x0A50	0xB2CB    UXTB	R3, R1
0x0A52	0xF89D1004  LDRB	R1, [SP, #4]
L_GPIO_Config104:
; i start address is: 4 (R1)
; pin_mask start address is: 12 (R3)
; tmp_code start address is: 24 (R6)
; port start address is: 0 (R0)
; pin_code start address is: 8 (R2)
; pin_code end address is: 8 (R2)
; pin_mask start address is: 12 (R3)
; pin_mask end address is: 12 (R3)
0x0A56	0x2908    CMP	R1, #8
0x0A58	0xD213    BCS	L_GPIO_Config105
; pin_code end address is: 8 (R2)
; pin_mask end address is: 12 (R3)
;__Lib_GPIO_6.c, 514 :: 		
; pin_mask start address is: 12 (R3)
; pin_code start address is: 8 (R2)
0x0A5A	0xFA23F401  LSR	R4, R3, R1
0x0A5E	0xB2E4    UXTB	R4, R4
0x0A60	0xF0040401  AND	R4, R4, #1
0x0A64	0xB2E4    UXTB	R4, R4
0x0A66	0xB14C    CBZ	R4, L__GPIO_Config125
;__Lib_GPIO_6.c, 515 :: 		
0x0A68	0xB2D5    UXTB	R5, R2
0x0A6A	0x008C    LSLS	R4, R1, #2
0x0A6C	0xB224    SXTH	R4, R4
0x0A6E	0xFA05F404  LSL	R4, R5, R4
0x0A72	0xEA460404  ORR	R4, R6, R4, LSL #0
; tmp_code end address is: 24 (R6)
; tmp_code start address is: 20 (R5)
0x0A76	0x4625    MOV	R5, R4
; tmp_code end address is: 20 (R5)
0x0A78	0x462E    MOV	R6, R5
0x0A7A	0xE7FF    B	L_GPIO_Config107
L__GPIO_Config125:
;__Lib_GPIO_6.c, 514 :: 		
;__Lib_GPIO_6.c, 515 :: 		
L_GPIO_Config107:
;__Lib_GPIO_6.c, 513 :: 		
; tmp_code start address is: 24 (R6)
0x0A7C	0x1C49    ADDS	R1, R1, #1
0x0A7E	0xB2C9    UXTB	R1, R1
;__Lib_GPIO_6.c, 516 :: 		
; pin_code end address is: 8 (R2)
; pin_mask end address is: 12 (R3)
; i end address is: 4 (R1)
0x0A80	0xE7E9    B	L_GPIO_Config104
L_GPIO_Config105:
;__Lib_GPIO_6.c, 517 :: 		
0x0A82	0xF200552C  ADDW	R5, R0, #1324
; port end address is: 0 (R0)
0x0A86	0x682C    LDR	R4, [R5, #0]
0x0A88	0x4334    ORRS	R4, R6
; tmp_code end address is: 24 (R6)
0x0A8A	0x602C    STR	R4, [R5, #0]
;__Lib_GPIO_6.c, 519 :: 		
0x0A8C	0x2000    MOVS	R0, #0
;__Lib_GPIO_6.c, 520 :: 		
L_end_GPIO_Config:
0x0A8E	0xF8DDE000  LDR	LR, [SP, #0]
0x0A92	0xB002    ADD	SP, SP, #8
0x0A94	0x4770    BX	LR
0x0A96	0xBF00    NOP
0x0A98	0x50004006  	#1074155520
0x0A9C	0xC0004005  	#1074118656
0x0AA0	0xB0004005  	#1074114560
0x0AA4	0x90004005  	#1074106368
0x0AA8	0x10004006  	#1074139136
; end of _GPIO_Config
_GPIO_Clk_Enable:
;__Lib_GPIO_6.c, 5 :: 		
; port start address is: 0 (R0)
0x0340	0xB081    SUB	SP, SP, #4
; port end address is: 0 (R0)
; port start address is: 0 (R0)
;__Lib_GPIO_6.c, 8 :: 		
0x0342	0x4966    LDR	R1, [PC, #408]
0x0344	0xEA000101  AND	R1, R0, R1, LSL #0
; port end address is: 0 (R0)
; _port start address is: 0 (R0)
0x0348	0x4608    MOV	R0, R1
;__Lib_GPIO_6.c, 9 :: 		
0x034A	0xE07D    B	L_GPIO_Clk_Enable0
; _port end address is: 0 (R0)
;__Lib_GPIO_6.c, 12 :: 		
L_GPIO_Clk_Enable2:
;__Lib_GPIO_6.c, 13 :: 		
0x034C	0x4964    LDR	R1, [PC, #400]
0x034E	0x6809    LDR	R1, [R1, #0]
0x0350	0xF0410201  ORR	R2, R1, #1
0x0354	0x4962    LDR	R1, [PC, #392]
0x0356	0x600A    STR	R2, [R1, #0]
;__Lib_GPIO_6.c, 14 :: 		
0x0358	0xE0BE    B	L_end_GPIO_Clk_Enable
;__Lib_GPIO_6.c, 18 :: 		
L_GPIO_Clk_Enable3:
;__Lib_GPIO_6.c, 19 :: 		
0x035A	0x4961    LDR	R1, [PC, #388]
0x035C	0x6809    LDR	R1, [R1, #0]
0x035E	0xF0410202  ORR	R2, R1, #2
0x0362	0x495F    LDR	R1, [PC, #380]
0x0364	0x600A    STR	R2, [R1, #0]
;__Lib_GPIO_6.c, 20 :: 		
0x0366	0xE0B7    B	L_end_GPIO_Clk_Enable
;__Lib_GPIO_6.c, 24 :: 		
L_GPIO_Clk_Enable4:
;__Lib_GPIO_6.c, 25 :: 		
0x0368	0x495D    LDR	R1, [PC, #372]
0x036A	0x6809    LDR	R1, [R1, #0]
0x036C	0xF0410204  ORR	R2, R1, #4
0x0370	0x495B    LDR	R1, [PC, #364]
0x0372	0x600A    STR	R2, [R1, #0]
;__Lib_GPIO_6.c, 26 :: 		
0x0374	0xE0B0    B	L_end_GPIO_Clk_Enable
;__Lib_GPIO_6.c, 30 :: 		
L_GPIO_Clk_Enable5:
;__Lib_GPIO_6.c, 31 :: 		
0x0376	0x495A    LDR	R1, [PC, #360]
0x0378	0x6809    LDR	R1, [R1, #0]
0x037A	0xF0410208  ORR	R2, R1, #8
0x037E	0x4958    LDR	R1, [PC, #352]
0x0380	0x600A    STR	R2, [R1, #0]
;__Lib_GPIO_6.c, 32 :: 		
0x0382	0xE0A9    B	L_end_GPIO_Clk_Enable
;__Lib_GPIO_6.c, 36 :: 		
L_GPIO_Clk_Enable6:
;__Lib_GPIO_6.c, 37 :: 		
0x0384	0x4956    LDR	R1, [PC, #344]
0x0386	0x6809    LDR	R1, [R1, #0]
0x0388	0xF0410210  ORR	R2, R1, #16
0x038C	0x4954    LDR	R1, [PC, #336]
0x038E	0x600A    STR	R2, [R1, #0]
;__Lib_GPIO_6.c, 38 :: 		
0x0390	0xE0A2    B	L_end_GPIO_Clk_Enable
;__Lib_GPIO_6.c, 42 :: 		
L_GPIO_Clk_Enable7:
;__Lib_GPIO_6.c, 43 :: 		
0x0392	0x4953    LDR	R1, [PC, #332]
0x0394	0x6809    LDR	R1, [R1, #0]
0x0396	0xF0410220  ORR	R2, R1, #32
0x039A	0x4951    LDR	R1, [PC, #324]
0x039C	0x600A    STR	R2, [R1, #0]
;__Lib_GPIO_6.c, 44 :: 		
0x039E	0xE09B    B	L_end_GPIO_Clk_Enable
;__Lib_GPIO_6.c, 48 :: 		
L_GPIO_Clk_Enable8:
;__Lib_GPIO_6.c, 49 :: 		
0x03A0	0x494F    LDR	R1, [PC, #316]
0x03A2	0x6809    LDR	R1, [R1, #0]
0x03A4	0xF0410240  ORR	R2, R1, #64
0x03A8	0x494D    LDR	R1, [PC, #308]
0x03AA	0x600A    STR	R2, [R1, #0]
;__Lib_GPIO_6.c, 50 :: 		
0x03AC	0xE094    B	L_end_GPIO_Clk_Enable
;__Lib_GPIO_6.c, 54 :: 		
L_GPIO_Clk_Enable9:
;__Lib_GPIO_6.c, 55 :: 		
0x03AE	0x494C    LDR	R1, [PC, #304]
0x03B0	0x6809    LDR	R1, [R1, #0]
0x03B2	0xF0410280  ORR	R2, R1, #128
0x03B6	0x494A    LDR	R1, [PC, #296]
0x03B8	0x600A    STR	R2, [R1, #0]
;__Lib_GPIO_6.c, 56 :: 		
0x03BA	0xE08D    B	L_end_GPIO_Clk_Enable
;__Lib_GPIO_6.c, 60 :: 		
L_GPIO_Clk_Enable10:
;__Lib_GPIO_6.c, 61 :: 		
0x03BC	0x4948    LDR	R1, [PC, #288]
0x03BE	0x6809    LDR	R1, [R1, #0]
0x03C0	0xF4417280  ORR	R2, R1, #256
0x03C4	0x4946    LDR	R1, [PC, #280]
0x03C6	0x600A    STR	R2, [R1, #0]
;__Lib_GPIO_6.c, 62 :: 		
0x03C8	0xE086    B	L_end_GPIO_Clk_Enable
;__Lib_GPIO_6.c, 66 :: 		
L_GPIO_Clk_Enable11:
;__Lib_GPIO_6.c, 67 :: 		
0x03CA	0x4945    LDR	R1, [PC, #276]
0x03CC	0x6809    LDR	R1, [R1, #0]
0x03CE	0xF4417200  ORR	R2, R1, #512
0x03D2	0x4943    LDR	R1, [PC, #268]
0x03D4	0x600A    STR	R2, [R1, #0]
;__Lib_GPIO_6.c, 68 :: 		
0x03D6	0xE07F    B	L_end_GPIO_Clk_Enable
;__Lib_GPIO_6.c, 72 :: 		
L_GPIO_Clk_Enable12:
;__Lib_GPIO_6.c, 73 :: 		
0x03D8	0x4941    LDR	R1, [PC, #260]
0x03DA	0x6809    LDR	R1, [R1, #0]
0x03DC	0xF4416280  ORR	R2, R1, #1024
0x03E0	0x493F    LDR	R1, [PC, #252]
0x03E2	0x600A    STR	R2, [R1, #0]
;__Lib_GPIO_6.c, 74 :: 		
0x03E4	0xE078    B	L_end_GPIO_Clk_Enable
;__Lib_GPIO_6.c, 78 :: 		
L_GPIO_Clk_Enable13:
;__Lib_GPIO_6.c, 79 :: 		
0x03E6	0x493E    LDR	R1, [PC, #248]
0x03E8	0x6809    LDR	R1, [R1, #0]
0x03EA	0xF4416200  ORR	R2, R1, #2048
0x03EE	0x493C    LDR	R1, [PC, #240]
0x03F0	0x600A    STR	R2, [R1, #0]
;__Lib_GPIO_6.c, 80 :: 		
0x03F2	0xE071    B	L_end_GPIO_Clk_Enable
;__Lib_GPIO_6.c, 84 :: 		
L_GPIO_Clk_Enable14:
;__Lib_GPIO_6.c, 85 :: 		
0x03F4	0x493A    LDR	R1, [PC, #232]
0x03F6	0x6809    LDR	R1, [R1, #0]
0x03F8	0xF4415280  ORR	R2, R1, #4096
0x03FC	0x4938    LDR	R1, [PC, #224]
0x03FE	0x600A    STR	R2, [R1, #0]
;__Lib_GPIO_6.c, 86 :: 		
0x0400	0xE06A    B	L_end_GPIO_Clk_Enable
;__Lib_GPIO_6.c, 90 :: 		
L_GPIO_Clk_Enable15:
;__Lib_GPIO_6.c, 91 :: 		
0x0402	0x4937    LDR	R1, [PC, #220]
0x0404	0x6809    LDR	R1, [R1, #0]
0x0406	0xF4415200  ORR	R2, R1, #8192
0x040A	0x4935    LDR	R1, [PC, #212]
0x040C	0x600A    STR	R2, [R1, #0]
;__Lib_GPIO_6.c, 92 :: 		
0x040E	0xE063    B	L_end_GPIO_Clk_Enable
;__Lib_GPIO_6.c, 96 :: 		
L_GPIO_Clk_Enable16:
;__Lib_GPIO_6.c, 97 :: 		
0x0410	0x4933    LDR	R1, [PC, #204]
0x0412	0x6809    LDR	R1, [R1, #0]
0x0414	0xF4414280  ORR	R2, R1, #16384
0x0418	0x4931    LDR	R1, [PC, #196]
0x041A	0x600A    STR	R2, [R1, #0]
;__Lib_GPIO_6.c, 98 :: 		
0x041C	0xE05C    B	L_end_GPIO_Clk_Enable
;__Lib_GPIO_6.c, 102 :: 		
L_GPIO_Clk_Enable17:
;__Lib_GPIO_6.c, 103 :: 		
0x041E	0x4930    LDR	R1, [PC, #192]
0x0420	0x6809    LDR	R1, [R1, #0]
0x0422	0xF4414200  ORR	R2, R1, #32768
0x0426	0x492E    LDR	R1, [PC, #184]
0x0428	0x600A    STR	R2, [R1, #0]
;__Lib_GPIO_6.c, 104 :: 		
0x042A	0xE055    B	L_end_GPIO_Clk_Enable
;__Lib_GPIO_6.c, 108 :: 		
L_GPIO_Clk_Enable18:
;__Lib_GPIO_6.c, 109 :: 		
0x042C	0x492C    LDR	R1, [PC, #176]
0x042E	0x6809    LDR	R1, [R1, #0]
0x0430	0xF4413280  ORR	R2, R1, #65536
0x0434	0x492A    LDR	R1, [PC, #168]
0x0436	0x600A    STR	R2, [R1, #0]
;__Lib_GPIO_6.c, 110 :: 		
0x0438	0xE04E    B	L_end_GPIO_Clk_Enable
;__Lib_GPIO_6.c, 114 :: 		
L_GPIO_Clk_Enable19:
;__Lib_GPIO_6.c, 115 :: 		
0x043A	0x4929    LDR	R1, [PC, #164]
0x043C	0x6809    LDR	R1, [R1, #0]
0x043E	0xF4413200  ORR	R2, R1, #131072
0x0442	0x4927    LDR	R1, [PC, #156]
0x0444	0x600A    STR	R2, [R1, #0]
;__Lib_GPIO_6.c, 116 :: 		
0x0446	0xE047    B	L_end_GPIO_Clk_Enable
;__Lib_GPIO_6.c, 119 :: 		
L_GPIO_Clk_Enable0:
; _port start address is: 0 (R0)
0x0448	0x4926    LDR	R1, [PC, #152]
0x044A	0x4288    CMP	R0, R1
0x044C	0xF43FAF7E  BEQ	L_GPIO_Clk_Enable2
0x0450	0x4925    LDR	R1, [PC, #148]
0x0452	0x4288    CMP	R0, R1
0x0454	0xF43FAF81  BEQ	L_GPIO_Clk_Enable3
0x0458	0x4924    LDR	R1, [PC, #144]
0x045A	0x4288    CMP	R0, R1
0x045C	0xF43FAF84  BEQ	L_GPIO_Clk_Enable4
0x0460	0x4923    LDR	R1, [PC, #140]
0x0462	0x4288    CMP	R0, R1
0x0464	0xF43FAF87  BEQ	L_GPIO_Clk_Enable5
0x0468	0x4922    LDR	R1, [PC, #136]
0x046A	0x4288    CMP	R0, R1
0x046C	0xF43FAF8A  BEQ	L_GPIO_Clk_Enable6
0x0470	0x4921    LDR	R1, [PC, #132]
0x0472	0x4288    CMP	R0, R1
0x0474	0xF43FAF8D  BEQ	L_GPIO_Clk_Enable7
0x0478	0x4920    LDR	R1, [PC, #128]
0x047A	0x4288    CMP	R0, R1
0x047C	0xF43FAF90  BEQ	L_GPIO_Clk_Enable8
0x0480	0x491F    LDR	R1, [PC, #124]
0x0482	0x4288    CMP	R0, R1
0x0484	0xF43FAF93  BEQ	L_GPIO_Clk_Enable9
0x0488	0x491E    LDR	R1, [PC, #120]
0x048A	0x4288    CMP	R0, R1
0x048C	0xF43FAF96  BEQ	L_GPIO_Clk_Enable10
0x0490	0x491D    LDR	R1, [PC, #116]
0x0492	0x4288    CMP	R0, R1
0x0494	0xF43FAF99  BEQ	L_GPIO_Clk_Enable11
0x0498	0x491C    LDR	R1, [PC, #112]
0x049A	0x4288    CMP	R0, R1
0x049C	0xF43FAF9C  BEQ	L_GPIO_Clk_Enable12
0x04A0	0x491B    LDR	R1, [PC, #108]
0x04A2	0x4288    CMP	R0, R1
0x04A4	0xF43FAF9F  BEQ	L_GPIO_Clk_Enable13
0x04A8	0x491A    LDR	R1, [PC, #104]
0x04AA	0x4288    CMP	R0, R1
0x04AC	0xF43FAFA2  BEQ	L_GPIO_Clk_Enable14
0x04B0	0x4919    LDR	R1, [PC, #100]
0x04B2	0x4288    CMP	R0, R1
0x04B4	0xF43FAFA5  BEQ	L_GPIO_Clk_Enable15
0x04B8	0x4918    LDR	R1, [PC, #96]
0x04BA	0x4288    CMP	R0, R1
0x04BC	0xF43FAFA8  BEQ	L_GPIO_Clk_Enable16
0x04C0	0x4917    LDR	R1, [PC, #92]
0x04C2	0x4288    CMP	R0, R1
0x04C4	0xF43FAFAB  BEQ	L_GPIO_Clk_Enable17
0x04C8	0x4916    LDR	R1, [PC, #88]
0x04CA	0x4288    CMP	R0, R1
0x04CC	0xF43FAFAE  BEQ	L_GPIO_Clk_Enable18
0x04D0	0x4915    LDR	R1, [PC, #84]
0x04D2	0x4288    CMP	R0, R1
0x04D4	0xF43FAFB1  BEQ	L_GPIO_Clk_Enable19
; _port end address is: 0 (R0)
;__Lib_GPIO_6.c, 120 :: 		
L_end_GPIO_Clk_Enable:
0x04D8	0xB001    ADD	SP, SP, #4
0x04DA	0x4770    BX	LR
0x04DC	0xF000FFFF  	#-4096
0x04E0	0xE608400F  	SYSCTL_RCGCGPIO+0
0x04E4	0x80004005  	#1074102272
0x04E8	0x90004005  	#1074106368
0x04EC	0xA0004005  	#1074110464
0x04F0	0xB0004005  	#1074114560
0x04F4	0xC0004005  	#1074118656
0x04F8	0xD0004005  	#1074122752
0x04FC	0xE0004005  	#1074126848
0x0500	0xF0004005  	#1074130944
0x0504	0x00004006  	#1074135040
0x0508	0x10004006  	#1074139136
0x050C	0x20004006  	#1074143232
0x0510	0x30004006  	#1074147328
0x0514	0x40004006  	#1074151424
0x0518	0x50004006  	#1074155520
0x051C	0x60004006  	#1074159616
0x0520	0x70004006  	#1074163712
0x0524	0x80004006  	#1074167808
0x0528	0x90004006  	#1074171904
; end of _GPIO_Clk_Enable
_Get_Fosc_kHz:
;__Lib_Delays.c, 9 :: 		unsigned long Get_Fosc_kHz(){
;__Lib_Delays.c, 10 :: 		return __System_CLOCK_IN_KHZ;
0x1124	0x4801    LDR	R0, [PC, #4]
0x1126	0x6800    LDR	R0, [R0, #0]
;__Lib_Delays.c, 11 :: 		}
L_end_Get_Fosc_kHz:
0x1128	0x4770    BX	LR
0x112A	0xBF00    NOP
0x112C	0x44982000  	___System_CLOCK_IN_KHZ+0
; end of _Get_Fosc_kHz
easymx_v7_TM4C129XNCZAD__i2cInit_2:
;__em_c129_i2c.c, 35 :: 		static T_mikrobus_ret _i2cInit_2(const uint32_t* cfg)
; cfg start address is: 0 (R0)
0x3704	0xB081    SUB	SP, SP, #4
0x3706	0xF8CDE000  STR	LR, [SP, #0]
; cfg end address is: 0 (R0)
; cfg start address is: 0 (R0)
;__em_c129_i2c.c, 37 :: 		I2C0_Init_Advanced( cfg[0], &_GPIO_MODULE_I2C0_B23_AHB );
0x370A	0x6801    LDR	R1, [R0, #0]
; cfg end address is: 0 (R0)
0x370C	0x4608    MOV	R0, R1
0x370E	0x4904    LDR	R1, [PC, #16]
0x3710	0xF7FFFE0C  BL	_I2C0_Init_Advanced+0
;__em_c129_i2c.c, 38 :: 		return _MIKROBUS_OK;
0x3714	0x2000    MOVS	R0, __MIKROBUS_OK
;__em_c129_i2c.c, 39 :: 		}
L_end__i2cInit_2:
0x3716	0xF8DDE000  LDR	LR, [SP, #0]
0x371A	0xB001    ADD	SP, SP, #4
0x371C	0x4770    BX	LR
0x371E	0xBF00    NOP
0x3720	0x51F80000  	__GPIO_MODULE_I2C0_B23_AHB+0
; end of easymx_v7_TM4C129XNCZAD__i2cInit_2
_mikrobus_logInit:
;easymx_v7_TM4C129XNCZAD.c, 283 :: 		T_mikrobus_ret mikrobus_logInit(T_log_bus port, const uint32_t baud)
; baud start address is: 4 (R1)
; port start address is: 0 (R0)
0x43EC	0xB081    SUB	SP, SP, #4
0x43EE	0xF8CDE000  STR	LR, [SP, #0]
; baud end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; baud start address is: 4 (R1)
;easymx_v7_TM4C129XNCZAD.c, 285 :: 		switch( port )
0x43F2	0xE011    B	L_mikrobus_logInit88
; port end address is: 0 (R0)
;easymx_v7_TM4C129XNCZAD.c, 288 :: 		case _MIKROBUS1 : return _log_init1( baud );
L_mikrobus_logInit90:
0x43F4	0x4608    MOV	R0, R1
; baud end address is: 4 (R1)
0x43F6	0xF7FFF995  BL	easymx_v7_TM4C129XNCZAD__log_init1+0
0x43FA	0xE016    B	L_end_mikrobus_logInit
;easymx_v7_TM4C129XNCZAD.c, 291 :: 		case _MIKROBUS2: return _log_init2( baud );
L_mikrobus_logInit91:
; baud start address is: 4 (R1)
0x43FC	0x4608    MOV	R0, R1
; baud end address is: 4 (R1)
0x43FE	0xF7FFF95F  BL	easymx_v7_TM4C129XNCZAD__log_init2+0
0x4402	0xE012    B	L_end_mikrobus_logInit
;easymx_v7_TM4C129XNCZAD.c, 309 :: 		case _LOG_USBUART_A : return _log_initUartA( baud );
L_mikrobus_logInit92:
; baud start address is: 4 (R1)
0x4404	0x4608    MOV	R0, R1
; baud end address is: 4 (R1)
0x4406	0xF7FFFE35  BL	easymx_v7_TM4C129XNCZAD__log_initUartA+0
0x440A	0xE00E    B	L_end_mikrobus_logInit
;easymx_v7_TM4C129XNCZAD.c, 312 :: 		case _LOG_USBUART_B : return _log_initUartB( baud );
L_mikrobus_logInit93:
; baud start address is: 4 (R1)
0x440C	0x4608    MOV	R0, R1
; baud end address is: 4 (R1)
0x440E	0xF7FFFF29  BL	easymx_v7_TM4C129XNCZAD__log_initUartB+0
0x4412	0xE00A    B	L_end_mikrobus_logInit
;easymx_v7_TM4C129XNCZAD.c, 314 :: 		default : return _MIKROBUS_ERR_BUS;
L_mikrobus_logInit94:
0x4414	0x2001    MOVS	R0, #1
0x4416	0xE008    B	L_end_mikrobus_logInit
;easymx_v7_TM4C129XNCZAD.c, 315 :: 		}
L_mikrobus_logInit88:
; baud start address is: 4 (R1)
; port start address is: 0 (R0)
0x4418	0x2800    CMP	R0, #0
0x441A	0xD0EB    BEQ	L_mikrobus_logInit90
0x441C	0x2801    CMP	R0, #1
0x441E	0xD0ED    BEQ	L_mikrobus_logInit91
0x4420	0x2820    CMP	R0, #32
0x4422	0xD0EF    BEQ	L_mikrobus_logInit92
0x4424	0x2830    CMP	R0, #48
0x4426	0xD0F1    BEQ	L_mikrobus_logInit93
; port end address is: 0 (R0)
; baud end address is: 4 (R1)
0x4428	0xE7F4    B	L_mikrobus_logInit94
;easymx_v7_TM4C129XNCZAD.c, 317 :: 		}
L_end_mikrobus_logInit:
0x442A	0xF8DDE000  LDR	LR, [SP, #0]
0x442E	0xB001    ADD	SP, SP, #4
0x4430	0x4770    BX	LR
; end of _mikrobus_logInit
easymx_v7_TM4C129XNCZAD__log_init1:
;__em_c129_log.c, 23 :: 		static T_mikrobus_ret _log_init1(uint32_t baud)
; baud start address is: 0 (R0)
0x3724	0xB081    SUB	SP, SP, #4
0x3726	0xF8CDE000  STR	LR, [SP, #0]
; baud end address is: 0 (R0)
; baud start address is: 0 (R0)
;__em_c129_log.c, 25 :: 		UART5_Init( baud );
; baud end address is: 0 (R0)
0x372A	0xF7FFFE73  BL	_UART5_Init+0
;__em_c129_log.c, 26 :: 		logger = UART5_Write;
0x372E	0x4A04    LDR	R2, [PC, #16]
0x3730	0x4904    LDR	R1, [PC, #16]
0x3732	0x600A    STR	R2, [R1, #0]
;__em_c129_log.c, 27 :: 		return 0;
0x3734	0x2000    MOVS	R0, #0
;__em_c129_log.c, 28 :: 		}
L_end__log_init1:
0x3736	0xF8DDE000  LDR	LR, [SP, #0]
0x373A	0xB001    ADD	SP, SP, #4
0x373C	0x4770    BX	LR
0x373E	0xBF00    NOP
0x3740	0x366D0000  	_UART5_Write+0
0x3744	0x0D142000  	_logger+0
; end of easymx_v7_TM4C129XNCZAD__log_init1
_UART5_Init:
;__Lib_UART_07.c, 1146 :: 		
; baud_rate start address is: 0 (R0)
0x3414	0xB082    SUB	SP, SP, #8
0x3416	0xF8CDE000  STR	LR, [SP, #0]
0x341A	0x4603    MOV	R3, R0
; baud_rate end address is: 0 (R0)
; baud_rate start address is: 12 (R3)
;__Lib_UART_07.c, 1149 :: 		
0x341C	0x4A21    LDR	R2, [PC, #132]
0x341E	0x4922    LDR	R1, [PC, #136]
0x3420	0x600A    STR	R2, [R1, #0]
;__Lib_UART_07.c, 1150 :: 		
0x3422	0x4A22    LDR	R2, [PC, #136]
0x3424	0x4922    LDR	R1, [PC, #136]
0x3426	0x600A    STR	R2, [R1, #0]
;__Lib_UART_07.c, 1151 :: 		
0x3428	0x4A22    LDR	R2, [PC, #136]
0x342A	0x4923    LDR	R1, [PC, #140]
0x342C	0x600A    STR	R2, [R1, #0]
;__Lib_UART_07.c, 1152 :: 		
0x342E	0x4A23    LDR	R2, [PC, #140]
0x3430	0x4923    LDR	R1, [PC, #140]
0x3432	0x600A    STR	R2, [R1, #0]
;__Lib_UART_07.c, 1155 :: 		
0x3434	0x9301    STR	R3, [SP, #4]
0x3436	0x4823    LDR	R0, [PC, #140]
0x3438	0xF7FDFE2A  BL	_GPIO_Alternate_Function_Enable+0
0x343C	0x9B01    LDR	R3, [SP, #4]
;__Lib_UART_07.c, 1157 :: 		
0x343E	0x2201    MOVS	R2, #1
0x3440	0xB252    SXTB	R2, R2
0x3442	0x4921    LDR	R1, [PC, #132]
0x3444	0x600A    STR	R2, [R1, #0]
;__Lib_UART_07.c, 1158 :: 		
0x3446	0xBF00    NOP
;__Lib_UART_07.c, 1159 :: 		
0x3448	0xBF00    NOP
;__Lib_UART_07.c, 1160 :: 		
0x344A	0xBF00    NOP
;__Lib_UART_07.c, 1168 :: 		
0x344C	0xF7FEFA72  BL	__Lib_UART_07_UART5_Disable+0
;__Lib_UART_07.c, 1170 :: 		
0x3450	0xF7FDFE68  BL	_Get_Fosc_kHz+0
0x3454	0xF24031E8  MOVW	R1, #1000
0x3458	0xFB00F201  MUL	R2, R0, R1
; UARTClk start address is: 0 (R0)
0x345C	0x4610    MOV	R0, R2
;__Lib_UART_07.c, 1174 :: 		
0x345E	0x0119    LSLS	R1, R3, #4
0x3460	0x4291    CMP	R1, R2
0x3462	0xD905    BLS	L_UART5_Init105
;__Lib_UART_07.c, 1177 :: 		
0x3464	0x2201    MOVS	R2, #1
0x3466	0xB252    SXTB	R2, R2
0x3468	0x4918    LDR	R1, [PC, #96]
0x346A	0x600A    STR	R2, [R1, #0]
;__Lib_UART_07.c, 1181 :: 		
0x346C	0x085A    LSRS	R2, R3, #1
; baud_rate end address is: 12 (R3)
; baud_rate start address is: 8 (R2)
;__Lib_UART_07.c, 1182 :: 		
; baud_rate end address is: 8 (R2)
0x346E	0xE004    B	L_UART5_Init106
L_UART5_Init105:
;__Lib_UART_07.c, 1185 :: 		
; baud_rate start address is: 12 (R3)
0x3470	0x2200    MOVS	R2, #0
0x3472	0xB252    SXTB	R2, R2
0x3474	0x4915    LDR	R1, [PC, #84]
0x3476	0x600A    STR	R2, [R1, #0]
; baud_rate end address is: 12 (R3)
0x3478	0x461A    MOV	R2, R3
;__Lib_UART_07.c, 1186 :: 		
L_UART5_Init106:
;__Lib_UART_07.c, 1189 :: 		
; baud_rate start address is: 8 (R2)
0x347A	0x00C1    LSLS	R1, R0, #3
; UARTClk end address is: 0 (R0)
0x347C	0xFBB1F1F2  UDIV	R1, R1, R2
; baud_rate end address is: 8 (R2)
0x3480	0x1C49    ADDS	R1, R1, #1
0x3482	0x084B    LSRS	R3, R1, #1
;__Lib_UART_07.c, 1192 :: 		
0x3484	0x099A    LSRS	R2, R3, #6
0x3486	0x4912    LDR	R1, [PC, #72]
0x3488	0x600A    STR	R2, [R1, #0]
;__Lib_UART_07.c, 1193 :: 		
0x348A	0xF003023F  AND	R2, R3, #63
0x348E	0x4911    LDR	R1, [PC, #68]
0x3490	0x600A    STR	R2, [R1, #0]
;__Lib_UART_07.c, 1197 :: 		
0x3492	0x2260    MOVS	R2, #96
0x3494	0x4910    LDR	R1, [PC, #64]
0x3496	0x600A    STR	R2, [R1, #0]
;__Lib_UART_07.c, 1203 :: 		
0x3498	0xF7FEFA3A  BL	__Lib_UART_07_UART5_Enable+0
;__Lib_UART_07.c, 1204 :: 		
L_end_UART5_Init:
0x349C	0xF8DDE000  LDR	LR, [SP, #0]
0x34A0	0xB002    ADD	SP, SP, #8
0x34A2	0x4770    BX	LR
0x34A4	0x366D0000  	_UART5_Write+0
0x34A8	0x44D82000  	_UART_Wr_Ptr+0
0x34AC	0xFFFFFFFF  	_UART5_Read+0
0x34B0	0x44DC2000  	_UART_Rd_Ptr+0
0x34B4	0xFFFFFFFF  	_UART5_Data_Ready+0
0x34B8	0x44E02000  	_UART_Rdy_Ptr+0
0x34BC	0xFFFFFFFF  	_UART5_Tx_Idle+0
0x34C0	0x44E42000  	_UART_Tx_Idle_Ptr+0
0x34C4	0x50400000  	__GPIO_MODULE_UART5_H67_AHB+0
0x34C8	0xC31443FC  	SYSCTL_RCGCUART+0
0x34CC	0x06144222  	UART5_CTL+0
0x34D0	0x10244001  	UART5_IBRD+0
0x34D4	0x10284001  	UART5_FBRD+0
0x34D8	0x102C4001  	UART5_LCRH+0
; end of _UART5_Init
__Lib_UART_07_UART5_Disable:
;__Lib_UART_07.c, 1123 :: 		
0x1934	0xB081    SUB	SP, SP, #4
;__Lib_UART_07.c, 1131 :: 		
0x1936	0x2100    MOVS	R1, #0
0x1938	0xB249    SXTB	R1, R1
0x193A	0x4804    LDR	R0, [PC, #16]
0x193C	0x6001    STR	R1, [R0, #0]
;__Lib_UART_07.c, 1132 :: 		
0x193E	0x4804    LDR	R0, [PC, #16]
0x1940	0x6001    STR	R1, [R0, #0]
;__Lib_UART_07.c, 1133 :: 		
0x1942	0x4804    LDR	R0, [PC, #16]
0x1944	0x6001    STR	R1, [R0, #0]
;__Lib_UART_07.c, 1134 :: 		
L_end_UART5_Disable:
0x1946	0xB001    ADD	SP, SP, #4
0x1948	0x4770    BX	LR
0x194A	0xBF00    NOP
0x194C	0x06004222  	UART5_CTL+0
0x1950	0x06204222  	UART5_CTL+0
0x1954	0x06244222  	UART5_CTL+0
; end of __Lib_UART_07_UART5_Disable
__Lib_UART_07_UART5_Enable:
;__Lib_UART_07.c, 1136 :: 		
0x1910	0xB081    SUB	SP, SP, #4
;__Lib_UART_07.c, 1141 :: 		
0x1912	0x2101    MOVS	R1, #1
0x1914	0xB249    SXTB	R1, R1
0x1916	0x4804    LDR	R0, [PC, #16]
0x1918	0x6001    STR	R1, [R0, #0]
;__Lib_UART_07.c, 1142 :: 		
0x191A	0x4804    LDR	R0, [PC, #16]
0x191C	0x6001    STR	R1, [R0, #0]
;__Lib_UART_07.c, 1143 :: 		
0x191E	0x4804    LDR	R0, [PC, #16]
0x1920	0x6001    STR	R1, [R0, #0]
;__Lib_UART_07.c, 1144 :: 		
L_end_UART5_Enable:
0x1922	0xB001    ADD	SP, SP, #4
0x1924	0x4770    BX	LR
0x1926	0xBF00    NOP
0x1928	0x06004222  	UART5_CTL+0
0x192C	0x06204222  	UART5_CTL+0
0x1930	0x06244222  	UART5_CTL+0
; end of __Lib_UART_07_UART5_Enable
easymx_v7_TM4C129XNCZAD__log_init2:
;__em_c129_log.c, 30 :: 		static T_mikrobus_ret _log_init2(uint32_t baud)
; baud start address is: 0 (R0)
0x36C0	0xB081    SUB	SP, SP, #4
0x36C2	0xF8CDE000  STR	LR, [SP, #0]
; baud end address is: 0 (R0)
; baud start address is: 0 (R0)
;__em_c129_log.c, 32 :: 		UART7_Init( baud );
; baud end address is: 0 (R0)
0x36C6	0xF7FFFF6D  BL	_UART7_Init+0
;__em_c129_log.c, 33 :: 		logger = UART7_Write;
0x36CA	0x4A04    LDR	R2, [PC, #16]
0x36CC	0x4904    LDR	R1, [PC, #16]
0x36CE	0x600A    STR	R2, [R1, #0]
;__em_c129_log.c, 34 :: 		return 0;
0x36D0	0x2000    MOVS	R0, #0
;__em_c129_log.c, 35 :: 		}
L_end__log_init2:
0x36D2	0xF8DDE000  LDR	LR, [SP, #0]
0x36D6	0xB001    ADD	SP, SP, #4
0x36D8	0x4770    BX	LR
0x36DA	0xBF00    NOP
0x36DC	0x36890000  	_UART7_Write+0
0x36E0	0x0D142000  	_logger+0
; end of easymx_v7_TM4C129XNCZAD__log_init2
_UART7_Init:
;__Lib_UART_07.c, 1556 :: 		
; baud_rate start address is: 0 (R0)
0x35A4	0xB082    SUB	SP, SP, #8
0x35A6	0xF8CDE000  STR	LR, [SP, #0]
0x35AA	0x4603    MOV	R3, R0
; baud_rate end address is: 0 (R0)
; baud_rate start address is: 12 (R3)
;__Lib_UART_07.c, 1559 :: 		
0x35AC	0x4A21    LDR	R2, [PC, #132]
0x35AE	0x4922    LDR	R1, [PC, #136]
0x35B0	0x600A    STR	R2, [R1, #0]
;__Lib_UART_07.c, 1560 :: 		
0x35B2	0x4A22    LDR	R2, [PC, #136]
0x35B4	0x4922    LDR	R1, [PC, #136]
0x35B6	0x600A    STR	R2, [R1, #0]
;__Lib_UART_07.c, 1561 :: 		
0x35B8	0x4A22    LDR	R2, [PC, #136]
0x35BA	0x4923    LDR	R1, [PC, #140]
0x35BC	0x600A    STR	R2, [R1, #0]
;__Lib_UART_07.c, 1562 :: 		
0x35BE	0x4A23    LDR	R2, [PC, #140]
0x35C0	0x4923    LDR	R1, [PC, #140]
0x35C2	0x600A    STR	R2, [R1, #0]
;__Lib_UART_07.c, 1565 :: 		
0x35C4	0x9301    STR	R3, [SP, #4]
0x35C6	0x4823    LDR	R0, [PC, #140]
0x35C8	0xF7FDFD62  BL	_GPIO_Alternate_Function_Enable+0
0x35CC	0x9B01    LDR	R3, [SP, #4]
;__Lib_UART_07.c, 1567 :: 		
0x35CE	0x2201    MOVS	R2, #1
0x35D0	0xB252    SXTB	R2, R2
0x35D2	0x4921    LDR	R1, [PC, #132]
0x35D4	0x600A    STR	R2, [R1, #0]
;__Lib_UART_07.c, 1568 :: 		
0x35D6	0xBF00    NOP
;__Lib_UART_07.c, 1569 :: 		
0x35D8	0xBF00    NOP
;__Lib_UART_07.c, 1570 :: 		
0x35DA	0xBF00    NOP
;__Lib_UART_07.c, 1578 :: 		
0x35DC	0xF7FEF986  BL	__Lib_UART_07_UART7_Disable+0
;__Lib_UART_07.c, 1580 :: 		
0x35E0	0xF7FDFDA0  BL	_Get_Fosc_kHz+0
0x35E4	0xF24031E8  MOVW	R1, #1000
0x35E8	0xFB00F201  MUL	R2, R0, R1
; UARTClk start address is: 0 (R0)
0x35EC	0x4610    MOV	R0, R2
;__Lib_UART_07.c, 1584 :: 		
0x35EE	0x0119    LSLS	R1, R3, #4
0x35F0	0x4291    CMP	R1, R2
0x35F2	0xD905    BLS	L_UART7_Init141
;__Lib_UART_07.c, 1587 :: 		
0x35F4	0x2201    MOVS	R2, #1
0x35F6	0xB252    SXTB	R2, R2
0x35F8	0x4918    LDR	R1, [PC, #96]
0x35FA	0x600A    STR	R2, [R1, #0]
;__Lib_UART_07.c, 1591 :: 		
0x35FC	0x085A    LSRS	R2, R3, #1
; baud_rate end address is: 12 (R3)
; baud_rate start address is: 8 (R2)
;__Lib_UART_07.c, 1592 :: 		
; baud_rate end address is: 8 (R2)
0x35FE	0xE004    B	L_UART7_Init142
L_UART7_Init141:
;__Lib_UART_07.c, 1595 :: 		
; baud_rate start address is: 12 (R3)
0x3600	0x2200    MOVS	R2, #0
0x3602	0xB252    SXTB	R2, R2
0x3604	0x4915    LDR	R1, [PC, #84]
0x3606	0x600A    STR	R2, [R1, #0]
; baud_rate end address is: 12 (R3)
0x3608	0x461A    MOV	R2, R3
;__Lib_UART_07.c, 1596 :: 		
L_UART7_Init142:
;__Lib_UART_07.c, 1599 :: 		
; baud_rate start address is: 8 (R2)
0x360A	0x00C1    LSLS	R1, R0, #3
; UARTClk end address is: 0 (R0)
0x360C	0xFBB1F1F2  UDIV	R1, R1, R2
; baud_rate end address is: 8 (R2)
0x3610	0x1C49    ADDS	R1, R1, #1
0x3612	0x084B    LSRS	R3, R1, #1
;__Lib_UART_07.c, 1602 :: 		
0x3614	0x099A    LSRS	R2, R3, #6
0x3616	0x4912    LDR	R1, [PC, #72]
0x3618	0x600A    STR	R2, [R1, #0]
;__Lib_UART_07.c, 1603 :: 		
0x361A	0xF003023F  AND	R2, R3, #63
0x361E	0x4911    LDR	R1, [PC, #68]
0x3620	0x600A    STR	R2, [R1, #0]
;__Lib_UART_07.c, 1607 :: 		
0x3622	0x2260    MOVS	R2, #96
0x3624	0x4910    LDR	R1, [PC, #64]
0x3626	0x600A    STR	R2, [R1, #0]
;__Lib_UART_07.c, 1613 :: 		
0x3628	0xF7FEF8B6  BL	__Lib_UART_07_UART7_Enable+0
;__Lib_UART_07.c, 1614 :: 		
L_end_UART7_Init:
0x362C	0xF8DDE000  LDR	LR, [SP, #0]
0x3630	0xB002    ADD	SP, SP, #8
0x3632	0x4770    BX	LR
0x3634	0x36890000  	_UART7_Write+0
0x3638	0x44D82000  	_UART_Wr_Ptr+0
0x363C	0xFFFFFFFF  	_UART7_Read+0
0x3640	0x44DC2000  	_UART_Rd_Ptr+0
0x3644	0xFFFFFFFF  	_UART7_Data_Ready+0
0x3648	0x44E02000  	_UART_Rdy_Ptr+0
0x364C	0xFFFFFFFF  	_UART7_Tx_Idle+0
0x3650	0x44E42000  	_UART_Tx_Idle_Ptr+0
0x3654	0x52D40000  	__GPIO_MODULE_UART7_C45_AHB+0
0x3658	0xC31C43FC  	SYSCTL_RCGCUART+0
0x365C	0x06144226  	UART7_CTL+0
0x3660	0x30244001  	UART7_IBRD+0
0x3664	0x30284001  	UART7_FBRD+0
0x3668	0x302C4001  	UART7_LCRH+0
; end of _UART7_Init
__Lib_UART_07_UART7_Disable:
;__Lib_UART_07.c, 1533 :: 		
0x18EC	0xB081    SUB	SP, SP, #4
;__Lib_UART_07.c, 1541 :: 		
0x18EE	0x2100    MOVS	R1, #0
0x18F0	0xB249    SXTB	R1, R1
0x18F2	0x4804    LDR	R0, [PC, #16]
0x18F4	0x6001    STR	R1, [R0, #0]
;__Lib_UART_07.c, 1542 :: 		
0x18F6	0x4804    LDR	R0, [PC, #16]
0x18F8	0x6001    STR	R1, [R0, #0]
;__Lib_UART_07.c, 1543 :: 		
0x18FA	0x4804    LDR	R0, [PC, #16]
0x18FC	0x6001    STR	R1, [R0, #0]
;__Lib_UART_07.c, 1544 :: 		
L_end_UART7_Disable:
0x18FE	0xB001    ADD	SP, SP, #4
0x1900	0x4770    BX	LR
0x1902	0xBF00    NOP
0x1904	0x06004226  	UART7_CTL+0
0x1908	0x06204226  	UART7_CTL+0
0x190C	0x06244226  	UART7_CTL+0
; end of __Lib_UART_07_UART7_Disable
__Lib_UART_07_UART7_Enable:
;__Lib_UART_07.c, 1546 :: 		
0x1798	0xB081    SUB	SP, SP, #4
;__Lib_UART_07.c, 1551 :: 		
0x179A	0x2101    MOVS	R1, #1
0x179C	0xB249    SXTB	R1, R1
0x179E	0x4804    LDR	R0, [PC, #16]
0x17A0	0x6001    STR	R1, [R0, #0]
;__Lib_UART_07.c, 1552 :: 		
0x17A2	0x4804    LDR	R0, [PC, #16]
0x17A4	0x6001    STR	R1, [R0, #0]
;__Lib_UART_07.c, 1553 :: 		
0x17A6	0x4804    LDR	R0, [PC, #16]
0x17A8	0x6001    STR	R1, [R0, #0]
;__Lib_UART_07.c, 1554 :: 		
L_end_UART7_Enable:
0x17AA	0xB001    ADD	SP, SP, #4
0x17AC	0x4770    BX	LR
0x17AE	0xBF00    NOP
0x17B0	0x06004226  	UART7_CTL+0
0x17B4	0x06204226  	UART7_CTL+0
0x17B8	0x06244226  	UART7_CTL+0
; end of __Lib_UART_07_UART7_Enable
easymx_v7_TM4C129XNCZAD__log_initUartA:
;__em_c129_log.c, 37 :: 		static T_mikrobus_ret _log_initUartA(uint32_t baud)
; baud start address is: 0 (R0)
0x4074	0xB081    SUB	SP, SP, #4
0x4076	0xF8CDE000  STR	LR, [SP, #0]
; baud end address is: 0 (R0)
; baud start address is: 0 (R0)
;__em_c129_log.c, 39 :: 		UART2_Init( baud );
; baud end address is: 0 (R0)
0x407A	0xF7FFFA2F  BL	_UART2_Init+0
;__em_c129_log.c, 40 :: 		logger = UART2_Write;
0x407E	0x4A04    LDR	R2, [PC, #16]
0x4080	0x4904    LDR	R1, [PC, #16]
0x4082	0x600A    STR	R2, [R1, #0]
;__em_c129_log.c, 41 :: 		return 0;
0x4084	0x2000    MOVS	R0, #0
;__em_c129_log.c, 42 :: 		}
L_end__log_initUartA:
0x4086	0xF8DDE000  LDR	LR, [SP, #0]
0x408A	0xB001    ADD	SP, SP, #4
0x408C	0x4770    BX	LR
0x408E	0xBF00    NOP
0x4090	0x1E090000  	_UART2_Write+0
0x4094	0x0D142000  	_logger+0
; end of easymx_v7_TM4C129XNCZAD__log_initUartA
_UART2_Init:
;__Lib_UART_07.c, 531 :: 		
; baud_rate start address is: 0 (R0)
0x34DC	0xB082    SUB	SP, SP, #8
0x34DE	0xF8CDE000  STR	LR, [SP, #0]
0x34E2	0x4603    MOV	R3, R0
; baud_rate end address is: 0 (R0)
; baud_rate start address is: 12 (R3)
;__Lib_UART_07.c, 534 :: 		
0x34E4	0x4A21    LDR	R2, [PC, #132]
0x34E6	0x4922    LDR	R1, [PC, #136]
0x34E8	0x600A    STR	R2, [R1, #0]
;__Lib_UART_07.c, 535 :: 		
0x34EA	0x4A22    LDR	R2, [PC, #136]
0x34EC	0x4922    LDR	R1, [PC, #136]
0x34EE	0x600A    STR	R2, [R1, #0]
;__Lib_UART_07.c, 536 :: 		
0x34F0	0x4A22    LDR	R2, [PC, #136]
0x34F2	0x4923    LDR	R1, [PC, #140]
0x34F4	0x600A    STR	R2, [R1, #0]
;__Lib_UART_07.c, 537 :: 		
0x34F6	0x4A23    LDR	R2, [PC, #140]
0x34F8	0x4923    LDR	R1, [PC, #140]
0x34FA	0x600A    STR	R2, [R1, #0]
;__Lib_UART_07.c, 540 :: 		
0x34FC	0x9301    STR	R3, [SP, #4]
0x34FE	0x4823    LDR	R0, [PC, #140]
0x3500	0xF7FDFDC6  BL	_GPIO_Alternate_Function_Enable+0
0x3504	0x9B01    LDR	R3, [SP, #4]
;__Lib_UART_07.c, 542 :: 		
0x3506	0x2201    MOVS	R2, #1
0x3508	0xB252    SXTB	R2, R2
0x350A	0x4921    LDR	R1, [PC, #132]
0x350C	0x600A    STR	R2, [R1, #0]
;__Lib_UART_07.c, 543 :: 		
0x350E	0xBF00    NOP
;__Lib_UART_07.c, 544 :: 		
0x3510	0xBF00    NOP
;__Lib_UART_07.c, 545 :: 		
0x3512	0xBF00    NOP
;__Lib_UART_07.c, 553 :: 		
0x3514	0xF7FEF92E  BL	__Lib_UART_07_UART2_Disable+0
;__Lib_UART_07.c, 555 :: 		
0x3518	0xF7FDFE04  BL	_Get_Fosc_kHz+0
0x351C	0xF24031E8  MOVW	R1, #1000
0x3520	0xFB00F201  MUL	R2, R0, R1
; UARTClk start address is: 0 (R0)
0x3524	0x4610    MOV	R0, R2
;__Lib_UART_07.c, 559 :: 		
0x3526	0x0119    LSLS	R1, R3, #4
0x3528	0x4291    CMP	R1, R2
0x352A	0xD905    BLS	L_UART2_Init51
;__Lib_UART_07.c, 562 :: 		
0x352C	0x2201    MOVS	R2, #1
0x352E	0xB252    SXTB	R2, R2
0x3530	0x4918    LDR	R1, [PC, #96]
0x3532	0x600A    STR	R2, [R1, #0]
;__Lib_UART_07.c, 566 :: 		
0x3534	0x085A    LSRS	R2, R3, #1
; baud_rate end address is: 12 (R3)
; baud_rate start address is: 8 (R2)
;__Lib_UART_07.c, 567 :: 		
; baud_rate end address is: 8 (R2)
0x3536	0xE004    B	L_UART2_Init52
L_UART2_Init51:
;__Lib_UART_07.c, 570 :: 		
; baud_rate start address is: 12 (R3)
0x3538	0x2200    MOVS	R2, #0
0x353A	0xB252    SXTB	R2, R2
0x353C	0x4915    LDR	R1, [PC, #84]
0x353E	0x600A    STR	R2, [R1, #0]
; baud_rate end address is: 12 (R3)
0x3540	0x461A    MOV	R2, R3
;__Lib_UART_07.c, 571 :: 		
L_UART2_Init52:
;__Lib_UART_07.c, 574 :: 		
; baud_rate start address is: 8 (R2)
0x3542	0x00C1    LSLS	R1, R0, #3
; UARTClk end address is: 0 (R0)
0x3544	0xFBB1F1F2  UDIV	R1, R1, R2
; baud_rate end address is: 8 (R2)
0x3548	0x1C49    ADDS	R1, R1, #1
0x354A	0x084B    LSRS	R3, R1, #1
;__Lib_UART_07.c, 577 :: 		
0x354C	0x099A    LSRS	R2, R3, #6
0x354E	0x4912    LDR	R1, [PC, #72]
0x3550	0x600A    STR	R2, [R1, #0]
;__Lib_UART_07.c, 578 :: 		
0x3552	0xF003023F  AND	R2, R3, #63
0x3556	0x4911    LDR	R1, [PC, #68]
0x3558	0x600A    STR	R2, [R1, #0]
;__Lib_UART_07.c, 582 :: 		
0x355A	0x2260    MOVS	R2, #96
0x355C	0x4910    LDR	R1, [PC, #64]
0x355E	0x600A    STR	R2, [R1, #0]
;__Lib_UART_07.c, 588 :: 		
0x3560	0xF7FEF806  BL	__Lib_UART_07_UART2_Enable+0
;__Lib_UART_07.c, 589 :: 		
L_end_UART2_Init:
0x3564	0xF8DDE000  LDR	LR, [SP, #0]
0x3568	0xB002    ADD	SP, SP, #8
0x356A	0x4770    BX	LR
0x356C	0x1E090000  	_UART2_Write+0
0x3570	0x44D82000  	_UART_Wr_Ptr+0
0x3574	0xFFFFFFFF  	_UART2_Read+0
0x3578	0x44DC2000  	_UART_Rd_Ptr+0
0x357C	0xFFFFFFFF  	_UART2_Data_Ready+0
0x3580	0x44E02000  	_UART_Rdy_Ptr+0
0x3584	0xFFFFFFFF  	_UART2_Tx_Idle+0
0x3588	0x44E42000  	_UART_Tx_Idle_Ptr+0
0x358C	0x511C0000  	__GPIO_MODULE_UART2_D45_AHB+0
0x3590	0xC30843FC  	SYSCTL_RCGCUART+0
0x3594	0x0614421C  	UART2_CTL+0
0x3598	0xE0244000  	UART2_IBRD+0
0x359C	0xE0284000  	UART2_FBRD+0
0x35A0	0xE02C4000  	UART2_LCRH+0
; end of _UART2_Init
__Lib_UART_07_UART2_Disable:
;__Lib_UART_07.c, 508 :: 		
0x1774	0xB081    SUB	SP, SP, #4
;__Lib_UART_07.c, 516 :: 		
0x1776	0x2100    MOVS	R1, #0
0x1778	0xB249    SXTB	R1, R1
0x177A	0x4804    LDR	R0, [PC, #16]
0x177C	0x6001    STR	R1, [R0, #0]
;__Lib_UART_07.c, 517 :: 		
0x177E	0x4804    LDR	R0, [PC, #16]
0x1780	0x6001    STR	R1, [R0, #0]
;__Lib_UART_07.c, 518 :: 		
0x1782	0x4804    LDR	R0, [PC, #16]
0x1784	0x6001    STR	R1, [R0, #0]
;__Lib_UART_07.c, 519 :: 		
L_end_UART2_Disable:
0x1786	0xB001    ADD	SP, SP, #4
0x1788	0x4770    BX	LR
0x178A	0xBF00    NOP
0x178C	0x0600421C  	UART2_CTL+0
0x1790	0x0620421C  	UART2_CTL+0
0x1794	0x0624421C  	UART2_CTL+0
; end of __Lib_UART_07_UART2_Disable
__Lib_UART_07_UART2_Enable:
;__Lib_UART_07.c, 521 :: 		
0x1570	0xB081    SUB	SP, SP, #4
;__Lib_UART_07.c, 526 :: 		
0x1572	0x2101    MOVS	R1, #1
0x1574	0xB249    SXTB	R1, R1
0x1576	0x4804    LDR	R0, [PC, #16]
0x1578	0x6001    STR	R1, [R0, #0]
;__Lib_UART_07.c, 527 :: 		
0x157A	0x4804    LDR	R0, [PC, #16]
0x157C	0x6001    STR	R1, [R0, #0]
;__Lib_UART_07.c, 528 :: 		
0x157E	0x4804    LDR	R0, [PC, #16]
0x1580	0x6001    STR	R1, [R0, #0]
;__Lib_UART_07.c, 529 :: 		
L_end_UART2_Enable:
0x1582	0xB001    ADD	SP, SP, #4
0x1584	0x4770    BX	LR
0x1586	0xBF00    NOP
0x1588	0x0600421C  	UART2_CTL+0
0x158C	0x0620421C  	UART2_CTL+0
0x1590	0x0624421C  	UART2_CTL+0
; end of __Lib_UART_07_UART2_Enable
easymx_v7_TM4C129XNCZAD__log_initUartB:
;__em_c129_log.c, 44 :: 		static T_mikrobus_ret _log_initUartB(uint32_t baud)
; baud start address is: 0 (R0)
0x4264	0xB081    SUB	SP, SP, #4
0x4266	0xF8CDE000  STR	LR, [SP, #0]
; baud end address is: 0 (R0)
; baud start address is: 0 (R0)
;__em_c129_log.c, 46 :: 		UART7_Init( baud );
; baud end address is: 0 (R0)
0x426A	0xF7FFF99B  BL	_UART7_Init+0
;__em_c129_log.c, 47 :: 		logger = UART7_Write;
0x426E	0x4A04    LDR	R2, [PC, #16]
0x4270	0x4904    LDR	R1, [PC, #16]
0x4272	0x600A    STR	R2, [R1, #0]
;__em_c129_log.c, 48 :: 		return 0;
0x4274	0x2000    MOVS	R0, #0
;__em_c129_log.c, 49 :: 		}
L_end__log_initUartB:
0x4276	0xF8DDE000  LDR	LR, [SP, #0]
0x427A	0xB001    ADD	SP, SP, #4
0x427C	0x4770    BX	LR
0x427E	0xBF00    NOP
0x4280	0x36890000  	_UART7_Write+0
0x4284	0x0D142000  	_logger+0
; end of easymx_v7_TM4C129XNCZAD__log_initUartB
_mikrobus_logWrite:
;easymx_v7_TM4C129XNCZAD.c, 319 :: 		T_mikrobus_ret mikrobus_logWrite(uint8_t* data_, T_log_format format)
; format start address is: 4 (R1)
; data_ start address is: 0 (R0)
0x437C	0xB083    SUB	SP, SP, #12
0x437E	0xF8CDE000  STR	LR, [SP, #0]
0x4382	0x4602    MOV	R2, R0
; format end address is: 4 (R1)
; data_ end address is: 0 (R0)
; data_ start address is: 8 (R2)
; format start address is: 4 (R1)
;easymx_v7_TM4C129XNCZAD.c, 321 :: 		uint8_t *ptr = data_;
; ptr start address is: 0 (R0)
0x4384	0x4610    MOV	R0, R2
; data_ end address is: 8 (R2)
;easymx_v7_TM4C129XNCZAD.c, 322 :: 		uint8_t row = 13;
0x4386	0x220D    MOVS	R2, #13
0x4388	0xF88D2008  STRB	R2, [SP, #8]
0x438C	0x220A    MOVS	R2, #10
0x438E	0xF88D2009  STRB	R2, [SP, #9]
;easymx_v7_TM4C129XNCZAD.c, 323 :: 		uint8_t line = 10;
;easymx_v7_TM4C129XNCZAD.c, 324 :: 		switch( format )
0x4392	0xE01F    B	L_mikrobus_logWrite95
; format end address is: 4 (R1)
;easymx_v7_TM4C129XNCZAD.c, 326 :: 		case _LOG_BYTE :
L_mikrobus_logWrite97:
;easymx_v7_TM4C129XNCZAD.c, 327 :: 		_log_write( ptr );
; ptr end address is: 0 (R0)
0x4394	0xF7FFFF56  BL	easymx_v7_TM4C129XNCZAD__log_write+0
;easymx_v7_TM4C129XNCZAD.c, 328 :: 		break;
0x4398	0xE023    B	L_mikrobus_logWrite96
;easymx_v7_TM4C129XNCZAD.c, 329 :: 		case _LOG_TEXT :
L_mikrobus_logWrite98:
;easymx_v7_TM4C129XNCZAD.c, 330 :: 		while( *ptr )
; ptr start address is: 0 (R0)
L_mikrobus_logWrite99:
; ptr end address is: 0 (R0)
; ptr start address is: 0 (R0)
0x439A	0x7802    LDRB	R2, [R0, #0]
0x439C	0xB12A    CBZ	R2, L_mikrobus_logWrite100
;easymx_v7_TM4C129XNCZAD.c, 332 :: 		_log_write( ptr );
0x439E	0x9001    STR	R0, [SP, #4]
0x43A0	0xF7FFFF50  BL	easymx_v7_TM4C129XNCZAD__log_write+0
0x43A4	0x9801    LDR	R0, [SP, #4]
;easymx_v7_TM4C129XNCZAD.c, 333 :: 		ptr++;
0x43A6	0x1C40    ADDS	R0, R0, #1
;easymx_v7_TM4C129XNCZAD.c, 334 :: 		}
; ptr end address is: 0 (R0)
0x43A8	0xE7F7    B	L_mikrobus_logWrite99
L_mikrobus_logWrite100:
;easymx_v7_TM4C129XNCZAD.c, 335 :: 		break;
0x43AA	0xE01A    B	L_mikrobus_logWrite96
;easymx_v7_TM4C129XNCZAD.c, 336 :: 		case _LOG_LINE :
L_mikrobus_logWrite101:
;easymx_v7_TM4C129XNCZAD.c, 337 :: 		while( *ptr )
; ptr start address is: 0 (R0)
L_mikrobus_logWrite102:
; ptr end address is: 0 (R0)
; ptr start address is: 0 (R0)
0x43AC	0x7802    LDRB	R2, [R0, #0]
0x43AE	0xB12A    CBZ	R2, L_mikrobus_logWrite103
;easymx_v7_TM4C129XNCZAD.c, 339 :: 		_log_write( ptr );
0x43B0	0x9001    STR	R0, [SP, #4]
0x43B2	0xF7FFFF47  BL	easymx_v7_TM4C129XNCZAD__log_write+0
0x43B6	0x9801    LDR	R0, [SP, #4]
;easymx_v7_TM4C129XNCZAD.c, 340 :: 		ptr++;
0x43B8	0x1C40    ADDS	R0, R0, #1
;easymx_v7_TM4C129XNCZAD.c, 341 :: 		}
; ptr end address is: 0 (R0)
0x43BA	0xE7F7    B	L_mikrobus_logWrite102
L_mikrobus_logWrite103:
;easymx_v7_TM4C129XNCZAD.c, 342 :: 		_log_write( &row );
0x43BC	0xAA02    ADD	R2, SP, #8
0x43BE	0x4610    MOV	R0, R2
0x43C0	0xF7FFFF40  BL	easymx_v7_TM4C129XNCZAD__log_write+0
;easymx_v7_TM4C129XNCZAD.c, 343 :: 		_log_write( &line );
0x43C4	0xF10D0209  ADD	R2, SP, #9
0x43C8	0x4610    MOV	R0, R2
0x43CA	0xF7FFFF3B  BL	easymx_v7_TM4C129XNCZAD__log_write+0
;easymx_v7_TM4C129XNCZAD.c, 344 :: 		break;
0x43CE	0xE008    B	L_mikrobus_logWrite96
;easymx_v7_TM4C129XNCZAD.c, 345 :: 		default :
L_mikrobus_logWrite104:
;easymx_v7_TM4C129XNCZAD.c, 346 :: 		return _MIKROBUS_ERR_LOG;
0x43D0	0x2006    MOVS	R0, #6
0x43D2	0xE007    B	L_end_mikrobus_logWrite
;easymx_v7_TM4C129XNCZAD.c, 347 :: 		}
L_mikrobus_logWrite95:
; ptr start address is: 0 (R0)
; format start address is: 4 (R1)
0x43D4	0x2900    CMP	R1, #0
0x43D6	0xD0DD    BEQ	L_mikrobus_logWrite97
0x43D8	0x2901    CMP	R1, #1
0x43DA	0xD0DE    BEQ	L_mikrobus_logWrite98
0x43DC	0x2902    CMP	R1, #2
0x43DE	0xD0E5    BEQ	L_mikrobus_logWrite101
; format end address is: 4 (R1)
; ptr end address is: 0 (R0)
0x43E0	0xE7F6    B	L_mikrobus_logWrite104
L_mikrobus_logWrite96:
;easymx_v7_TM4C129XNCZAD.c, 348 :: 		return 0;
0x43E2	0x2000    MOVS	R0, #0
;easymx_v7_TM4C129XNCZAD.c, 349 :: 		}
L_end_mikrobus_logWrite:
0x43E4	0xF8DDE000  LDR	LR, [SP, #0]
0x43E8	0xB003    ADD	SP, SP, #12
0x43EA	0x4770    BX	LR
; end of _mikrobus_logWrite
easymx_v7_TM4C129XNCZAD__log_write:
;__em_c129_log.c, 17 :: 		static T_mikrobus_ret _log_write(uint8_t *data_)
; data_ start address is: 0 (R0)
0x4244	0xB081    SUB	SP, SP, #4
0x4246	0xF8CDE000  STR	LR, [SP, #0]
; data_ end address is: 0 (R0)
; data_ start address is: 0 (R0)
;__em_c129_log.c, 19 :: 		logger( *data_ );
0x424A	0x7801    LDRB	R1, [R0, #0]
; data_ end address is: 0 (R0)
0x424C	0xB2CC    UXTB	R4, R1
0x424E	0xB2A0    UXTH	R0, R4
0x4250	0x4C03    LDR	R4, [PC, #12]
0x4252	0x6824    LDR	R4, [R4, #0]
0x4254	0x47A0    BLX	R4
;__em_c129_log.c, 20 :: 		return 0;
0x4256	0x2000    MOVS	R0, #0
;__em_c129_log.c, 21 :: 		}
L_end__log_write:
0x4258	0xF8DDE000  LDR	LR, [SP, #0]
0x425C	0xB001    ADD	SP, SP, #4
0x425E	0x4770    BX	LR
0x4260	0x0D142000  	_logger+0
; end of easymx_v7_TM4C129XNCZAD__log_write
_UART0_Write:
;__Lib_UART_07.c, 26 :: 		
; _data start address is: 0 (R0)
0x1E24	0xB081    SUB	SP, SP, #4
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
; _data end address is: 0 (R0)
;__Lib_UART_07.c, 28 :: 		
L_UART0_Write0:
; _data start address is: 0 (R0)
0x1E26	0x4904    LDR	R1, [PC, #16]
0x1E28	0x6809    LDR	R1, [R1, #0]
0x1E2A	0xB101    CBZ	R1, L_UART0_Write1
0x1E2C	0xE7FB    B	L_UART0_Write0
L_UART0_Write1:
;__Lib_UART_07.c, 31 :: 		
0x1E2E	0x4903    LDR	R1, [PC, #12]
0x1E30	0x6008    STR	R0, [R1, #0]
; _data end address is: 0 (R0)
;__Lib_UART_07.c, 32 :: 		
L_end_UART0_Write:
0x1E32	0xB001    ADD	SP, SP, #4
0x1E34	0x4770    BX	LR
0x1E36	0xBF00    NOP
0x1E38	0x03144218  	UART0_FR+0
0x1E3C	0xC0004000  	UART0_DR+0
; end of _UART0_Write
_UART1_Write:
;__Lib_UART_07.c, 222 :: 		
; _data start address is: 0 (R0)
0x1DEC	0xB081    SUB	SP, SP, #4
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
; _data end address is: 0 (R0)
;__Lib_UART_07.c, 224 :: 		
L_UART1_Write18:
; _data start address is: 0 (R0)
0x1DEE	0x4904    LDR	R1, [PC, #16]
0x1DF0	0x6809    LDR	R1, [R1, #0]
0x1DF2	0xB101    CBZ	R1, L_UART1_Write19
0x1DF4	0xE7FB    B	L_UART1_Write18
L_UART1_Write19:
;__Lib_UART_07.c, 227 :: 		
0x1DF6	0x4903    LDR	R1, [PC, #12]
0x1DF8	0x6008    STR	R0, [R1, #0]
; _data end address is: 0 (R0)
;__Lib_UART_07.c, 228 :: 		
L_end_UART1_Write:
0x1DFA	0xB001    ADD	SP, SP, #4
0x1DFC	0x4770    BX	LR
0x1DFE	0xBF00    NOP
0x1E00	0x0314421A  	UART1_FR+0
0x1E04	0xD0004000  	UART1_DR+0
; end of _UART1_Write
_UART2_Write:
;__Lib_UART_07.c, 437 :: 		
; _data start address is: 0 (R0)
0x1E08	0xB081    SUB	SP, SP, #4
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
; _data end address is: 0 (R0)
;__Lib_UART_07.c, 439 :: 		
L_UART2_Write36:
; _data start address is: 0 (R0)
0x1E0A	0x4904    LDR	R1, [PC, #16]
0x1E0C	0x6809    LDR	R1, [R1, #0]
0x1E0E	0xB101    CBZ	R1, L_UART2_Write37
0x1E10	0xE7FB    B	L_UART2_Write36
L_UART2_Write37:
;__Lib_UART_07.c, 442 :: 		
0x1E12	0x4903    LDR	R1, [PC, #12]
0x1E14	0x6008    STR	R0, [R1, #0]
; _data end address is: 0 (R0)
;__Lib_UART_07.c, 443 :: 		
L_end_UART2_Write:
0x1E16	0xB001    ADD	SP, SP, #4
0x1E18	0x4770    BX	LR
0x1E1A	0xBF00    NOP
0x1E1C	0x0314421C  	UART2_FR+0
0x1E20	0xE0004000  	UART2_DR+0
; end of _UART2_Write
_UART3_Write:
;__Lib_UART_07.c, 642 :: 		
; _data start address is: 0 (R0)
0x1D98	0xB081    SUB	SP, SP, #4
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
; _data end address is: 0 (R0)
;__Lib_UART_07.c, 644 :: 		
L_UART3_Write54:
; _data start address is: 0 (R0)
0x1D9A	0x4904    LDR	R1, [PC, #16]
0x1D9C	0x6809    LDR	R1, [R1, #0]
0x1D9E	0xB101    CBZ	R1, L_UART3_Write55
0x1DA0	0xE7FB    B	L_UART3_Write54
L_UART3_Write55:
;__Lib_UART_07.c, 647 :: 		
0x1DA2	0x4903    LDR	R1, [PC, #12]
0x1DA4	0x6008    STR	R0, [R1, #0]
; _data end address is: 0 (R0)
;__Lib_UART_07.c, 648 :: 		
L_end_UART3_Write:
0x1DA6	0xB001    ADD	SP, SP, #4
0x1DA8	0x4770    BX	LR
0x1DAA	0xBF00    NOP
0x1DAC	0x0314421E  	UART3_FR+0
0x1DB0	0xF0004000  	UART3_DR+0
; end of _UART3_Write
_UART4_Write:
;__Lib_UART_07.c, 847 :: 		
; _data start address is: 0 (R0)
0x1DD0	0xB081    SUB	SP, SP, #4
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
; _data end address is: 0 (R0)
;__Lib_UART_07.c, 849 :: 		
L_UART4_Write72:
; _data start address is: 0 (R0)
0x1DD2	0x4904    LDR	R1, [PC, #16]
0x1DD4	0x6809    LDR	R1, [R1, #0]
0x1DD6	0xB101    CBZ	R1, L_UART4_Write73
0x1DD8	0xE7FB    B	L_UART4_Write72
L_UART4_Write73:
;__Lib_UART_07.c, 852 :: 		
0x1DDA	0x4903    LDR	R1, [PC, #12]
0x1DDC	0x6008    STR	R0, [R1, #0]
; _data end address is: 0 (R0)
;__Lib_UART_07.c, 853 :: 		
L_end_UART4_Write:
0x1DDE	0xB001    ADD	SP, SP, #4
0x1DE0	0x4770    BX	LR
0x1DE2	0xBF00    NOP
0x1DE4	0x03144220  	UART4_FR+0
0x1DE8	0x00004001  	UART4_DR+0
; end of _UART4_Write
_UART5_Write:
;__Lib_UART_07.c, 1052 :: 		
; _data start address is: 0 (R0)
0x366C	0xB081    SUB	SP, SP, #4
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
; _data end address is: 0 (R0)
;__Lib_UART_07.c, 1054 :: 		
L_UART5_Write90:
; _data start address is: 0 (R0)
0x366E	0x4904    LDR	R1, [PC, #16]
0x3670	0x6809    LDR	R1, [R1, #0]
0x3672	0xB101    CBZ	R1, L_UART5_Write91
0x3674	0xE7FB    B	L_UART5_Write90
L_UART5_Write91:
;__Lib_UART_07.c, 1057 :: 		
0x3676	0x4903    LDR	R1, [PC, #12]
0x3678	0x6008    STR	R0, [R1, #0]
; _data end address is: 0 (R0)
;__Lib_UART_07.c, 1058 :: 		
L_end_UART5_Write:
0x367A	0xB001    ADD	SP, SP, #4
0x367C	0x4770    BX	LR
0x367E	0xBF00    NOP
0x3680	0x03144222  	UART5_FR+0
0x3684	0x10004001  	UART5_DR+0
; end of _UART5_Write
_UART6_Write:
;__Lib_UART_07.c, 1257 :: 		
; _data start address is: 0 (R0)
0x36A4	0xB081    SUB	SP, SP, #4
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
; _data end address is: 0 (R0)
;__Lib_UART_07.c, 1259 :: 		
L_UART6_Write108:
; _data start address is: 0 (R0)
0x36A6	0x4904    LDR	R1, [PC, #16]
0x36A8	0x6809    LDR	R1, [R1, #0]
0x36AA	0xB101    CBZ	R1, L_UART6_Write109
0x36AC	0xE7FB    B	L_UART6_Write108
L_UART6_Write109:
;__Lib_UART_07.c, 1262 :: 		
0x36AE	0x4903    LDR	R1, [PC, #12]
0x36B0	0x6008    STR	R0, [R1, #0]
; _data end address is: 0 (R0)
;__Lib_UART_07.c, 1263 :: 		
L_end_UART6_Write:
0x36B2	0xB001    ADD	SP, SP, #4
0x36B4	0x4770    BX	LR
0x36B6	0xBF00    NOP
0x36B8	0x03144224  	UART6_FR+0
0x36BC	0x20004001  	UART6_DR+0
; end of _UART6_Write
_UART7_Write:
;__Lib_UART_07.c, 1462 :: 		
; _data start address is: 0 (R0)
0x3688	0xB081    SUB	SP, SP, #4
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
; _data end address is: 0 (R0)
;__Lib_UART_07.c, 1464 :: 		
L_UART7_Write126:
; _data start address is: 0 (R0)
0x368A	0x4904    LDR	R1, [PC, #16]
0x368C	0x6809    LDR	R1, [R1, #0]
0x368E	0xB101    CBZ	R1, L_UART7_Write127
0x3690	0xE7FB    B	L_UART7_Write126
L_UART7_Write127:
;__Lib_UART_07.c, 1467 :: 		
0x3692	0x4903    LDR	R1, [PC, #12]
0x3694	0x6008    STR	R0, [R1, #0]
; _data end address is: 0 (R0)
;__Lib_UART_07.c, 1468 :: 		
L_end_UART7_Write:
0x3696	0xB001    ADD	SP, SP, #4
0x3698	0x4770    BX	LR
0x369A	0xBF00    NOP
0x369C	0x03144226  	UART7_FR+0
0x36A0	0x30004001  	UART7_DR+0
; end of _UART7_Write
_applicationInit:
;Click_IR_Grid2_TIVA.c, 44 :: 		void applicationInit()
0x46EC	0xB081    SUB	SP, SP, #4
0x46EE	0xF8CDE000  STR	LR, [SP, #0]
;Click_IR_Grid2_TIVA.c, 46 :: 		irgrid2_i2cDriverInit( (T_IRGRID2_P)&_MIKROBUS1_GPIO, (T_IRGRID2_P)&_MIKROBUS1_I2C, 0x33 );
0x46F2	0x2233    MOVS	R2, #51
0x46F4	0x4907    LDR	R1, [PC, #28]
0x46F6	0x4808    LDR	R0, [PC, #32]
0x46F8	0xF7FFFF92  BL	_irgrid2_i2cDriverInit+0
;Click_IR_Grid2_TIVA.c, 47 :: 		irgrid2_init();
0x46FC	0xF7FFFDC4  BL	_irgrid2_init+0
;Click_IR_Grid2_TIVA.c, 48 :: 		mikrobus_logWrite("--- Start measurement ---", _LOG_LINE);
0x4700	0x4806    LDR	R0, [PC, #24]
0x4702	0x2102    MOVS	R1, #2
0x4704	0xF7FFFE3A  BL	_mikrobus_logWrite+0
;Click_IR_Grid2_TIVA.c, 49 :: 		Delay_100ms();
0x4708	0xF7FFFCC6  BL	_Delay_100ms+0
;Click_IR_Grid2_TIVA.c, 50 :: 		}
L_end_applicationInit:
0x470C	0xF8DDE000  LDR	LR, [SP, #0]
0x4710	0xB001    ADD	SP, SP, #4
0x4712	0x4770    BX	LR
0x4714	0x550C0000  	__MIKROBUS1_I2C+0
0x4718	0x54380000  	__MIKROBUS1_GPIO+0
0x471C	0x00162000  	?lstr2_Click_IR_Grid2_TIVA+0
; end of _applicationInit
_irgrid2_i2cDriverInit:
;__irgrid2_driver.c, 868 :: 		void irgrid2_i2cDriverInit(T_IRGRID2_P gpioObj, T_IRGRID2_P i2cObj, uint8_t slave)
; slave start address is: 8 (R2)
; i2cObj start address is: 4 (R1)
; gpioObj start address is: 0 (R0)
0x4620	0xB081    SUB	SP, SP, #4
0x4622	0xF8CDE000  STR	LR, [SP, #0]
0x4626	0x4604    MOV	R4, R0
; slave end address is: 8 (R2)
; i2cObj end address is: 4 (R1)
; gpioObj end address is: 0 (R0)
; gpioObj start address is: 16 (R4)
; i2cObj start address is: 4 (R1)
; slave start address is: 8 (R2)
;__irgrid2_driver.c, 870 :: 		_slaveAddress = slave;
0x4628	0x4B05    LDR	R3, [PC, #20]
0x462A	0x701A    STRB	R2, [R3, #0]
; slave end address is: 8 (R2)
;__irgrid2_driver.c, 871 :: 		hal_i2cMap( (T_HAL_P)i2cObj );
0x462C	0x4608    MOV	R0, R1
; i2cObj end address is: 4 (R1)
0x462E	0xF7FFFDE7  BL	__irgrid2_driver_hal_i2cMap+0
;__irgrid2_driver.c, 872 :: 		hal_gpioMap( (T_HAL_P)gpioObj );
0x4632	0x4620    MOV	R0, R4
; gpioObj end address is: 16 (R4)
0x4634	0xF7FFFDE2  BL	__irgrid2_driver_hal_gpioMap+0
;__irgrid2_driver.c, 873 :: 		}
L_end_irgrid2_i2cDriverInit:
0x4638	0xF8DDE000  LDR	LR, [SP, #0]
0x463C	0xB001    ADD	SP, SP, #4
0x463E	0x4770    BX	LR
0x4640	0x00852000  	__irgrid2_driver__slaveAddress+0
; end of _irgrid2_i2cDriverInit
__irgrid2_driver_hal_i2cMap:
;__hal_tiva.c, 90 :: 		static void hal_i2cMap(T_HAL_P i2cObj)
; i2cObj start address is: 0 (R0)
; i2cObj end address is: 0 (R0)
; i2cObj start address is: 0 (R0)
;__hal_tiva.c, 94 :: 		fp_i2cStart    = tmp->i2cStart;
0x4200	0x6802    LDR	R2, [R0, #0]
0x4202	0x4906    LDR	R1, [PC, #24]
0x4204	0x600A    STR	R2, [R1, #0]
;__hal_tiva.c, 95 :: 		fp_i2cWrite    = tmp->i2cWrite;
0x4206	0x1D01    ADDS	R1, R0, #4
0x4208	0x680A    LDR	R2, [R1, #0]
0x420A	0x4905    LDR	R1, [PC, #20]
0x420C	0x600A    STR	R2, [R1, #0]
;__hal_tiva.c, 96 :: 		fp_i2cRead     = tmp->i2cRead;
0x420E	0xF2000108  ADDW	R1, R0, #8
; i2cObj end address is: 0 (R0)
0x4212	0x680A    LDR	R2, [R1, #0]
0x4214	0x4903    LDR	R1, [PC, #12]
0x4216	0x600A    STR	R2, [R1, #0]
;__hal_tiva.c, 97 :: 		}
L_end_hal_i2cMap:
0x4218	0x4770    BX	LR
0x421A	0xBF00    NOP
0x421C	0x0D182000  	__irgrid2_driver_fp_i2cStart+0
0x4220	0x44942000  	__irgrid2_driver_fp_i2cWrite+0
0x4224	0x0D1C2000  	__irgrid2_driver_fp_i2cRead+0
; end of __irgrid2_driver_hal_i2cMap
__irgrid2_driver_hal_gpioMap:
;__irgrid2_hal.c, 321 :: 		static void hal_gpioMap(T_HAL_P gpioObj)
;__irgrid2_hal.c, 397 :: 		}
L_end_hal_gpioMap:
0x41FC	0x4770    BX	LR
; end of __irgrid2_driver_hal_gpioMap
_irgrid2_init:
;__irgrid2_driver.c, 997 :: 		void irgrid2_init()
0x4288	0xB081    SUB	SP, SP, #4
0x428A	0xF8CDE000  STR	LR, [SP, #0]
;__irgrid2_driver.c, 999 :: 		irgrid2_readEEPROM(eeMLX90640);
0x428E	0x4808    LDR	R0, [PC, #32]
0x4290	0xF7FFFFCA  BL	_irgrid2_readEEPROM+0
;__irgrid2_driver.c, 1000 :: 		irgrid2_ExtractParameters(eeMLX90640, &mlx90640);
0x4294	0x4907    LDR	R1, [PC, #28]
0x4296	0x4806    LDR	R0, [PC, #24]
0x4298	0xF7FFFF64  BL	_irgrid2_ExtractParameters+0
;__irgrid2_driver.c, 1001 :: 		irgrid2_setRefreshRate( 0x03 );
0x429C	0x2003    MOVS	R0, #3
0x429E	0xF7FFFA53  BL	_irgrid2_setRefreshRate+0
;__irgrid2_driver.c, 1002 :: 		Delay_100ms();
0x42A2	0xF7FFFEF9  BL	_Delay_100ms+0
;__irgrid2_driver.c, 1003 :: 		}
L_end_irgrid2_init:
0x42A6	0xF8DDE000  LDR	LR, [SP, #0]
0x42AA	0xB001    ADD	SP, SP, #4
0x42AC	0x4770    BX	LR
0x42AE	0xBF00    NOP
0x42B0	0x0D202000  	__irgrid2_driver_eeMLX90640+0
0x42B4	0x13A02000  	__irgrid2_driver_mlx90640+0
; end of _irgrid2_init
_irgrid2_readEEPROM:
;__irgrid2_driver.c, 951 :: 		void irgrid2_readEEPROM(uint16_t *eeData)
; eeData start address is: 0 (R0)
0x4228	0xB081    SUB	SP, SP, #4
0x422A	0xF8CDE000  STR	LR, [SP, #0]
; eeData end address is: 0 (R0)
; eeData start address is: 0 (R0)
;__irgrid2_driver.c, 953 :: 		irgrid2_readData(0x2400, 832, eeData);
0x422E	0x4602    MOV	R2, R0
; eeData end address is: 0 (R0)
0x4230	0xF2403140  MOVW	R1, #832
0x4234	0xF2424000  MOVW	R0, #9216
0x4238	0xF7FFF886  BL	_irgrid2_readData+0
;__irgrid2_driver.c, 954 :: 		}
L_end_irgrid2_readEEPROM:
0x423C	0xF8DDE000  LDR	LR, [SP, #0]
0x4240	0xB001    ADD	SP, SP, #4
0x4242	0x4770    BX	LR
; end of _irgrid2_readEEPROM
_irgrid2_readData:
;__irgrid2_driver.c, 921 :: 		void irgrid2_readData(uint16_t startAddr, uint16_t nBytes, uint16_t *dataOUT)
; startAddr start address is: 0 (R0)
0x3348	0xF2AD6D94  SUBW	SP, SP, #1684
0x334C	0xF8CDE000  STR	LR, [SP, #0]
0x3350	0xF8AD1688  STRH	R1, [SP, #1672]
0x3354	0xF8CD268C  STR	R2, [SP, #1676]
; startAddr end address is: 0 (R0)
; startAddr start address is: 0 (R0)
;__irgrid2_driver.c, 924 :: 		uint8_t readReg[ 1664 ] = {0};
0x3358	0xF10D0B06  ADD	R11, SP, #6
0x335C	0xF50B6AD0  ADD	R10, R11, #1664
0x3360	0xF8DFC0A8  LDR	R12, [PC, #168]
0x3364	0xF001FA54  BL	___CC2DW+0
;__irgrid2_driver.c, 925 :: 		uint16_t cnt = 0;
;__irgrid2_driver.c, 926 :: 		uint16_t dataCnt = 0;
;__irgrid2_driver.c, 927 :: 		uint16_t nMemAddressRead = 0;
;__irgrid2_driver.c, 928 :: 		uint16_t i = 0;
;__irgrid2_driver.c, 930 :: 		nMemAddressRead = 2 * nBytes;
0x3368	0xF8BD3688  LDRH	R3, [SP, #1672]
0x336C	0x005B    LSLS	R3, R3, #1
0x336E	0xF8AD3690  STRH	R3, [SP, #1680]
;__irgrid2_driver.c, 932 :: 		writeReg[ 0 ] = (uint8_t)(startAddr >> 8);
0x3372	0xAC01    ADD	R4, SP, #4
0x3374	0x0A03    LSRS	R3, R0, #8
0x3376	0xB2DB    UXTB	R3, R3
0x3378	0x7023    STRB	R3, [R4, #0]
;__irgrid2_driver.c, 933 :: 		writeReg[ 1 ] = (uint8_t)(startAddr & 0x00FF);
0x337A	0x1C64    ADDS	R4, R4, #1
0x337C	0xF00003FF  AND	R3, R0, #255
; startAddr end address is: 0 (R0)
0x3380	0xB2DB    UXTB	R3, R3
0x3382	0x7023    STRB	R3, [R4, #0]
;__irgrid2_driver.c, 935 :: 		hal_i2cStart();
0x3384	0xF7FEF906  BL	__irgrid2_driver_hal_i2cStart+0
;__irgrid2_driver.c, 936 :: 		hal_i2cWrite(_slaveAddress, writeReg, 2, END_MODE_RESTART);
0x3388	0xAC01    ADD	R4, SP, #4
0x338A	0x4B21    LDR	R3, [PC, #132]
0x338C	0x781B    LDRB	R3, [R3, #0]
0x338E	0x2202    MOVS	R2, #2
0x3390	0x4621    MOV	R1, R4
0x3392	0xB2D8    UXTB	R0, R3
0x3394	0x2301    MOVS	R3, #1
0x3396	0xF7FEFA11  BL	__irgrid2_driver_hal_i2cWrite+0
;__irgrid2_driver.c, 938 :: 		hal_i2cRead(_slaveAddress, readReg, nMemAddressRead, END_MODE_STOP);
0x339A	0xF10D0406  ADD	R4, SP, #6
0x339E	0x4B1C    LDR	R3, [PC, #112]
0x33A0	0x781B    LDRB	R3, [R3, #0]
0x33A2	0xF8BD2690  LDRH	R2, [SP, #1680]
0x33A6	0x4621    MOV	R1, R4
0x33A8	0xB2D8    UXTB	R0, R3
0x33AA	0x2300    MOVS	R3, #0
0x33AC	0xF7FEF8FC  BL	__irgrid2_driver_hal_i2cRead+0
;__irgrid2_driver.c, 940 :: 		for(cnt=0; cnt < nBytes; cnt++)
; cnt start address is: 4 (R1)
0x33B0	0x2100    MOVS	R1, #0
; cnt end address is: 4 (R1)
0x33B2	0xB288    UXTH	R0, R1
L_irgrid2_readData171:
; cnt start address is: 0 (R0)
0x33B4	0xF8BD3688  LDRH	R3, [SP, #1672]
0x33B8	0x4298    CMP	R0, R3
0x33BA	0xD221    BCS	L_irgrid2_readData172
;__irgrid2_driver.c, 942 :: 		i = cnt << 1;
0x33BC	0x0045    LSLS	R5, R0, #1
0x33BE	0xB2AD    UXTH	R5, R5
; i start address is: 4 (R1)
0x33C0	0xB2A9    UXTH	R1, R5
;__irgrid2_driver.c, 944 :: 		dataOUT[cnt] = readReg[ i ];
0x33C2	0x0044    LSLS	R4, R0, #1
0x33C4	0xF8DD368C  LDR	R3, [SP, #1676]
0x33C8	0x191C    ADDS	R4, R3, R4
0x33CA	0xF10D0606  ADD	R6, SP, #6
0x33CE	0x1973    ADDS	R3, R6, R5
0x33D0	0x781B    LDRB	R3, [R3, #0]
0x33D2	0x8023    STRH	R3, [R4, #0]
;__irgrid2_driver.c, 945 :: 		dataOUT[cnt] <<= 8;
0x33D4	0x0044    LSLS	R4, R0, #1
0x33D6	0xF8DD368C  LDR	R3, [SP, #1676]
0x33DA	0x191C    ADDS	R4, R3, R4
0x33DC	0x8823    LDRH	R3, [R4, #0]
0x33DE	0x021B    LSLS	R3, R3, #8
0x33E0	0x8023    STRH	R3, [R4, #0]
;__irgrid2_driver.c, 946 :: 		dataOUT[cnt] |= readReg[ i + 1 ];
0x33E2	0x0044    LSLS	R4, R0, #1
0x33E4	0xF8DD368C  LDR	R3, [SP, #1676]
0x33E8	0x191D    ADDS	R5, R3, R4
0x33EA	0x1C4B    ADDS	R3, R1, #1
0x33EC	0xB29B    UXTH	R3, R3
; i end address is: 4 (R1)
0x33EE	0x18F3    ADDS	R3, R6, R3
0x33F0	0x781C    LDRB	R4, [R3, #0]
0x33F2	0x882B    LDRH	R3, [R5, #0]
0x33F4	0x4323    ORRS	R3, R4
0x33F6	0x802B    STRH	R3, [R5, #0]
;__irgrid2_driver.c, 940 :: 		for(cnt=0; cnt < nBytes; cnt++)
0x33F8	0x1C43    ADDS	R3, R0, #1
; cnt end address is: 0 (R0)
; cnt start address is: 4 (R1)
0x33FA	0xB299    UXTH	R1, R3
;__irgrid2_driver.c, 947 :: 		}
0x33FC	0xB288    UXTH	R0, R1
; cnt end address is: 4 (R1)
0x33FE	0xE7D9    B	L_irgrid2_readData171
L_irgrid2_readData172:
;__irgrid2_driver.c, 948 :: 		}
L_end_irgrid2_readData:
0x3400	0xF8DDE000  LDR	LR, [SP, #0]
0x3404	0xF20D6D94  ADDW	SP, SP, #1684
0x3408	0x4770    BX	LR
0x340A	0xBF00    NOP
0x340C	0x49C00000  	?ICSirgrid2_readData_readReg_L0+0
0x3410	0x00852000  	__irgrid2_driver__slaveAddress+0
; end of _irgrid2_readData
__irgrid2_driver_hal_i2cStart:
;__hal_tiva.c, 99 :: 		static int hal_i2cStart()
;__hal_tiva.c, 101 :: 		int res = 0;
; res start address is: 8 (R2)
0x1594	0xF2400200  MOVW	R2, #0
0x1598	0xB212    SXTH	R2, R2
;__hal_tiva.c, 102 :: 		startF = 1;
0x159A	0x2101    MOVS	R1, #1
0x159C	0x4801    LDR	R0, [PC, #4]
0x159E	0x7001    STRB	R1, [R0, #0]
;__hal_tiva.c, 103 :: 		return res;
0x15A0	0xB210    SXTH	R0, R2
; res end address is: 8 (R2)
;__hal_tiva.c, 104 :: 		}
L_end_hal_i2cStart:
0x15A2	0x4770    BX	LR
0x15A4	0x007A2000  	__irgrid2_driver_startF+0
; end of __irgrid2_driver_hal_i2cStart
__irgrid2_driver_hal_i2cWrite:
;__hal_tiva.c, 106 :: 		static int hal_i2cWrite(uint8_t slaveAddress, uint8_t *pBuf, uint16_t nBytes, uint8_t endMode)
; pBuf start address is: 4 (R1)
; slaveAddress start address is: 0 (R0)
0x17BC	0xB085    SUB	SP, SP, #20
0x17BE	0xF8CDE000  STR	LR, [SP, #0]
0x17C2	0xF8AD200C  STRH	R2, [SP, #12]
0x17C6	0x460A    MOV	R2, R1
0x17C8	0xF88D3010  STRB	R3, [SP, #16]
; pBuf end address is: 4 (R1)
; slaveAddress end address is: 0 (R0)
; slaveAddress start address is: 0 (R0)
; pBuf start address is: 8 (R2)
;__hal_tiva.c, 108 :: 		int res = 0;
0x17CC	0xF2400400  MOVW	R4, #0
0x17D0	0xF8AD4008  STRH	R4, [SP, #8]
;__hal_tiva.c, 109 :: 		uint8_t *ptr = pBuf;
; ptr start address is: 4 (R1)
0x17D4	0x4611    MOV	R1, R2
; pBuf end address is: 8 (R2)
;__hal_tiva.c, 111 :: 		if( startF ) {
0x17D6	0x4C42    LDR	R4, [PC, #264]
0x17D8	0x7824    LDRB	R4, [R4, #0]
0x17DA	0xB154    CBZ	R4, L___irgrid2_driver_hal_i2cWrite0
;__hal_tiva.c, 112 :: 		fp_i2cStart(slaveAddress, _I2C_DIR_MASTER_TRANSMIT);
0x17DC	0x9101    STR	R1, [SP, #4]
0x17DE	0x2100    MOVS	R1, #0
; slaveAddress end address is: 0 (R0)
0x17E0	0x4C40    LDR	R4, [PC, #256]
0x17E2	0x6824    LDR	R4, [R4, #0]
0x17E4	0x47A0    BLX	R4
0x17E6	0x9901    LDR	R1, [SP, #4]
;__hal_tiva.c, 113 :: 		Delay_1ms();
0x17E8	0xF7FFFDD6  BL	_Delay_1ms+0
;__hal_tiva.c, 114 :: 		startF = 0;
0x17EC	0x2500    MOVS	R5, #0
0x17EE	0x4C3C    LDR	R4, [PC, #240]
0x17F0	0x7025    STRB	R5, [R4, #0]
;__hal_tiva.c, 115 :: 		}
L___irgrid2_driver_hal_i2cWrite0:
;__hal_tiva.c, 116 :: 		if(nBytes == 1) {
0x17F2	0xF8BD400C  LDRH	R4, [SP, #12]
0x17F6	0x2C01    CMP	R4, #1
0x17F8	0xD10D    BNE	L___irgrid2_driver_hal_i2cWrite1
;__hal_tiva.c, 117 :: 		res |= fp_i2cWrite( *ptr, _I2C_MASTER_MODE_SINGLE_SEND );
0x17FA	0x780C    LDRB	R4, [R1, #0]
; ptr end address is: 4 (R1)
0x17FC	0x2107    MOVS	R1, #7
0x17FE	0xB2E0    UXTB	R0, R4
0x1800	0x4C39    LDR	R4, [PC, #228]
0x1802	0x6824    LDR	R4, [R4, #0]
0x1804	0x47A0    BLX	R4
0x1806	0xF9BD4008  LDRSH	R4, [SP, #8]
0x180A	0x4304    ORRS	R4, R0
0x180C	0xF8AD4008  STRH	R4, [SP, #8]
;__hal_tiva.c, 118 :: 		Delay_1ms();
0x1810	0xF7FFFDC2  BL	_Delay_1ms+0
;__hal_tiva.c, 119 :: 		} else if(nBytes == 2) {
0x1814	0xE057    B	L___irgrid2_driver_hal_i2cWrite2
L___irgrid2_driver_hal_i2cWrite1:
; ptr start address is: 4 (R1)
0x1816	0xF8BD400C  LDRH	R4, [SP, #12]
0x181A	0x2C02    CMP	R4, #2
0x181C	0xD11C    BNE	L___irgrid2_driver_hal_i2cWrite3
;__hal_tiva.c, 120 :: 		res |= fp_i2cWrite( *ptr++, _I2C_MASTER_MODE_BURST_SEND_START );
0x181E	0x780C    LDRB	R4, [R1, #0]
0x1820	0x9101    STR	R1, [SP, #4]
0x1822	0x2103    MOVS	R1, #3
0x1824	0xB2E0    UXTB	R0, R4
0x1826	0x4C30    LDR	R4, [PC, #192]
0x1828	0x6824    LDR	R4, [R4, #0]
0x182A	0x47A0    BLX	R4
0x182C	0x9901    LDR	R1, [SP, #4]
0x182E	0xF9BD4008  LDRSH	R4, [SP, #8]
0x1832	0x4304    ORRS	R4, R0
0x1834	0xF8AD4008  STRH	R4, [SP, #8]
0x1838	0x1C4C    ADDS	R4, R1, #1
; ptr end address is: 4 (R1)
; ptr start address is: 0 (R0)
0x183A	0x4620    MOV	R0, R4
;__hal_tiva.c, 121 :: 		Delay_1ms();
0x183C	0xF7FFFDAC  BL	_Delay_1ms+0
;__hal_tiva.c, 122 :: 		res |= fp_i2cWrite( *ptr, _I2C_MASTER_MODE_BURST_SEND_FINISH );
0x1840	0x7804    LDRB	R4, [R0, #0]
; ptr end address is: 0 (R0)
0x1842	0x2105    MOVS	R1, #5
0x1844	0xB2E0    UXTB	R0, R4
0x1846	0x4C28    LDR	R4, [PC, #160]
0x1848	0x6824    LDR	R4, [R4, #0]
0x184A	0x47A0    BLX	R4
0x184C	0xF9BD4008  LDRSH	R4, [SP, #8]
0x1850	0x4304    ORRS	R4, R0
0x1852	0xF8AD4008  STRH	R4, [SP, #8]
;__hal_tiva.c, 123 :: 		} else {
0x1856	0xE036    B	L___irgrid2_driver_hal_i2cWrite4
L___irgrid2_driver_hal_i2cWrite3:
;__hal_tiva.c, 124 :: 		res |= fp_i2cWrite( *ptr++, _I2C_MASTER_MODE_BURST_SEND_START );
; ptr start address is: 4 (R1)
0x1858	0x780C    LDRB	R4, [R1, #0]
0x185A	0x9101    STR	R1, [SP, #4]
0x185C	0x2103    MOVS	R1, #3
0x185E	0xB2E0    UXTB	R0, R4
0x1860	0x4C21    LDR	R4, [PC, #132]
0x1862	0x6824    LDR	R4, [R4, #0]
0x1864	0x47A0    BLX	R4
0x1866	0x9901    LDR	R1, [SP, #4]
0x1868	0xF9BD4008  LDRSH	R4, [SP, #8]
0x186C	0x4304    ORRS	R4, R0
0x186E	0xF8AD4008  STRH	R4, [SP, #8]
0x1872	0x1C4B    ADDS	R3, R1, #1
; ptr end address is: 4 (R1)
; ptr start address is: 12 (R3)
;__hal_tiva.c, 125 :: 		Delay_1ms();
0x1874	0xF7FFFD90  BL	_Delay_1ms+0
; ptr end address is: 12 (R3)
0x1878	0x4619    MOV	R1, R3
;__hal_tiva.c, 126 :: 		while(--nBytes > 1) {
L___irgrid2_driver_hal_i2cWrite5:
; ptr start address is: 4 (R1)
0x187A	0xF8BD400C  LDRH	R4, [SP, #12]
0x187E	0x1E64    SUBS	R4, R4, #1
0x1880	0xB2A4    UXTH	R4, R4
0x1882	0xF8AD400C  STRH	R4, [SP, #12]
0x1886	0x2C01    CMP	R4, #1
0x1888	0xD912    BLS	L___irgrid2_driver_hal_i2cWrite6
;__hal_tiva.c, 127 :: 		res |= fp_i2cWrite( *ptr++, _I2C_MASTER_MODE_BURST_SEND_CONT );
0x188A	0x780C    LDRB	R4, [R1, #0]
0x188C	0x9101    STR	R1, [SP, #4]
0x188E	0x2101    MOVS	R1, #1
0x1890	0xB2E0    UXTB	R0, R4
0x1892	0x4C15    LDR	R4, [PC, #84]
0x1894	0x6824    LDR	R4, [R4, #0]
0x1896	0x47A0    BLX	R4
0x1898	0x9901    LDR	R1, [SP, #4]
0x189A	0xF9BD4008  LDRSH	R4, [SP, #8]
0x189E	0x4304    ORRS	R4, R0
0x18A0	0xF8AD4008  STRH	R4, [SP, #8]
0x18A4	0x1C4C    ADDS	R4, R1, #1
; ptr end address is: 4 (R1)
; ptr start address is: 12 (R3)
0x18A6	0x4623    MOV	R3, R4
;__hal_tiva.c, 128 :: 		Delay_1ms();
0x18A8	0xF7FFFD76  BL	_Delay_1ms+0
;__hal_tiva.c, 129 :: 		}
0x18AC	0x4619    MOV	R1, R3
; ptr end address is: 12 (R3)
0x18AE	0xE7E4    B	L___irgrid2_driver_hal_i2cWrite5
L___irgrid2_driver_hal_i2cWrite6:
;__hal_tiva.c, 130 :: 		res |= fp_i2cWrite( *ptr, _I2C_MASTER_MODE_BURST_SEND_FINISH );
; ptr start address is: 4 (R1)
0x18B0	0x780C    LDRB	R4, [R1, #0]
; ptr end address is: 4 (R1)
0x18B2	0x2105    MOVS	R1, #5
0x18B4	0xB2E0    UXTB	R0, R4
0x18B6	0x4C0C    LDR	R4, [PC, #48]
0x18B8	0x6824    LDR	R4, [R4, #0]
0x18BA	0x47A0    BLX	R4
0x18BC	0xF9BD4008  LDRSH	R4, [SP, #8]
0x18C0	0x4304    ORRS	R4, R0
0x18C2	0xF8AD4008  STRH	R4, [SP, #8]
;__hal_tiva.c, 131 :: 		}
L___irgrid2_driver_hal_i2cWrite4:
L___irgrid2_driver_hal_i2cWrite2:
;__hal_tiva.c, 132 :: 		if( endMode == END_MODE_RESTART ){
0x18C6	0xF89D4010  LDRB	R4, [SP, #16]
0x18CA	0x2C01    CMP	R4, #1
0x18CC	0xD102    BNE	L___irgrid2_driver_hal_i2cWrite7
;__hal_tiva.c, 133 :: 		startF = 1;
0x18CE	0x2501    MOVS	R5, #1
0x18D0	0x4C03    LDR	R4, [PC, #12]
0x18D2	0x7025    STRB	R5, [R4, #0]
;__hal_tiva.c, 134 :: 		}
L___irgrid2_driver_hal_i2cWrite7:
;__hal_tiva.c, 135 :: 		return res;
0x18D4	0xF9BD0008  LDRSH	R0, [SP, #8]
;__hal_tiva.c, 136 :: 		}
L_end_hal_i2cWrite:
0x18D8	0xF8DDE000  LDR	LR, [SP, #0]
0x18DC	0xB005    ADD	SP, SP, #20
0x18DE	0x4770    BX	LR
0x18E0	0x007A2000  	__irgrid2_driver_startF+0
0x18E4	0x0D182000  	__irgrid2_driver_fp_i2cStart+0
0x18E8	0x44942000  	__irgrid2_driver_fp_i2cWrite+0
; end of __irgrid2_driver_hal_i2cWrite
_I2C0_Master_Slave_Addr_Set:
;__Lib_I2C_09.c, 653 :: 		
; dir start address is: 4 (R1)
; slave_addr start address is: 0 (R0)
0x14C8	0xB081    SUB	SP, SP, #4
0x14CA	0xF8CDE000  STR	LR, [SP, #0]
; dir end address is: 4 (R1)
; slave_addr end address is: 0 (R0)
; slave_addr start address is: 0 (R0)
; dir start address is: 4 (R1)
;__Lib_I2C_09.c, 654 :: 		
0x14CE	0xB2CA    UXTB	R2, R1
; dir end address is: 4 (R1)
0x14D0	0xB2C1    UXTB	R1, R0
; slave_addr end address is: 0 (R0)
0x14D2	0x4803    LDR	R0, [PC, #12]
0x14D4	0xF7FFFB1A  BL	__Lib_I2C_09_I2Cx_Master_Slave_Addr_Set+0
;__Lib_I2C_09.c, 655 :: 		
L_end_I2C0_Master_Slave_Addr_Set:
0x14D8	0xF8DDE000  LDR	LR, [SP, #0]
0x14DC	0xB001    ADD	SP, SP, #4
0x14DE	0x4770    BX	LR
0x14E0	0x00004002  	I2C0_MSA+0
; end of _I2C0_Master_Slave_Addr_Set
__Lib_I2C_09_I2Cx_Master_Slave_Addr_Set:
;__Lib_I2C_09.c, 313 :: 		
; dir start address is: 8 (R2)
; slave_addr start address is: 4 (R1)
; i2cBase start address is: 0 (R0)
0x0B0C	0xB081    SUB	SP, SP, #4
; dir end address is: 8 (R2)
; slave_addr end address is: 4 (R1)
; i2cBase end address is: 0 (R0)
; i2cBase start address is: 0 (R0)
; slave_addr start address is: 4 (R1)
; dir start address is: 8 (R2)
;__Lib_I2C_09.c, 314 :: 		
0x0B0E	0x004B    LSLS	R3, R1, #1
0x0B10	0xB29B    UXTH	R3, R3
; slave_addr end address is: 4 (R1)
0x0B12	0x4313    ORRS	R3, R2
0x0B14	0xB29B    UXTH	R3, R3
; dir end address is: 8 (R2)
0x0B16	0x6003    STR	R3, [R0, #0]
; i2cBase end address is: 0 (R0)
;__Lib_I2C_09.c, 315 :: 		
L_end_I2Cx_Master_Slave_Addr_Set:
0x0B18	0xB001    ADD	SP, SP, #4
0x0B1A	0x4770    BX	LR
; end of __Lib_I2C_09_I2Cx_Master_Slave_Addr_Set
_I2C1_Master_Slave_Addr_Set:
;__Lib_I2C_09.c, 712 :: 		
; dir start address is: 4 (R1)
; slave_addr start address is: 0 (R0)
0x1500	0xB081    SUB	SP, SP, #4
0x1502	0xF8CDE000  STR	LR, [SP, #0]
; dir end address is: 4 (R1)
; slave_addr end address is: 0 (R0)
; slave_addr start address is: 0 (R0)
; dir start address is: 4 (R1)
;__Lib_I2C_09.c, 713 :: 		
0x1506	0xB2CA    UXTB	R2, R1
; dir end address is: 4 (R1)
0x1508	0xB2C1    UXTB	R1, R0
; slave_addr end address is: 0 (R0)
0x150A	0x4803    LDR	R0, [PC, #12]
0x150C	0xF7FFFAFE  BL	__Lib_I2C_09_I2Cx_Master_Slave_Addr_Set+0
;__Lib_I2C_09.c, 714 :: 		
L_end_I2C1_Master_Slave_Addr_Set:
0x1510	0xF8DDE000  LDR	LR, [SP, #0]
0x1514	0xB001    ADD	SP, SP, #4
0x1516	0x4770    BX	LR
0x1518	0x10004002  	I2C1_MSA+0
; end of _I2C1_Master_Slave_Addr_Set
_I2C2_Master_Slave_Addr_Set:
;__Lib_I2C_09.c, 771 :: 		
; dir start address is: 4 (R1)
; slave_addr start address is: 0 (R0)
0x14E4	0xB081    SUB	SP, SP, #4
0x14E6	0xF8CDE000  STR	LR, [SP, #0]
; dir end address is: 4 (R1)
; slave_addr end address is: 0 (R0)
; slave_addr start address is: 0 (R0)
; dir start address is: 4 (R1)
;__Lib_I2C_09.c, 772 :: 		
0x14EA	0xB2CA    UXTB	R2, R1
; dir end address is: 4 (R1)
0x14EC	0xB2C1    UXTB	R1, R0
; slave_addr end address is: 0 (R0)
0x14EE	0x4803    LDR	R0, [PC, #12]
0x14F0	0xF7FFFB0C  BL	__Lib_I2C_09_I2Cx_Master_Slave_Addr_Set+0
;__Lib_I2C_09.c, 773 :: 		
L_end_I2C2_Master_Slave_Addr_Set:
0x14F4	0xF8DDE000  LDR	LR, [SP, #0]
0x14F8	0xB001    ADD	SP, SP, #4
0x14FA	0x4770    BX	LR
0x14FC	0x20004002  	I2C2_MSA+0
; end of _I2C2_Master_Slave_Addr_Set
_I2C3_Master_Slave_Addr_Set:
;__Lib_I2C_09.c, 829 :: 		
; dir start address is: 4 (R1)
; slave_addr start address is: 0 (R0)
0x1538	0xB081    SUB	SP, SP, #4
0x153A	0xF8CDE000  STR	LR, [SP, #0]
; dir end address is: 4 (R1)
; slave_addr end address is: 0 (R0)
; slave_addr start address is: 0 (R0)
; dir start address is: 4 (R1)
;__Lib_I2C_09.c, 830 :: 		
0x153E	0xB2CA    UXTB	R2, R1
; dir end address is: 4 (R1)
0x1540	0xB2C1    UXTB	R1, R0
; slave_addr end address is: 0 (R0)
0x1542	0x4803    LDR	R0, [PC, #12]
0x1544	0xF7FFFAE2  BL	__Lib_I2C_09_I2Cx_Master_Slave_Addr_Set+0
;__Lib_I2C_09.c, 831 :: 		
L_end_I2C3_Master_Slave_Addr_Set:
0x1548	0xF8DDE000  LDR	LR, [SP, #0]
0x154C	0xB001    ADD	SP, SP, #4
0x154E	0x4770    BX	LR
0x1550	0x30004002  	I2C3_MSA+0
; end of _I2C3_Master_Slave_Addr_Set
_I2C4_Master_Slave_Addr_Set:
;__Lib_I2C_09.c, 888 :: 		
; dir start address is: 4 (R1)
; slave_addr start address is: 0 (R0)
0x151C	0xB081    SUB	SP, SP, #4
0x151E	0xF8CDE000  STR	LR, [SP, #0]
; dir end address is: 4 (R1)
; slave_addr end address is: 0 (R0)
; slave_addr start address is: 0 (R0)
; dir start address is: 4 (R1)
;__Lib_I2C_09.c, 889 :: 		
0x1522	0xB2CA    UXTB	R2, R1
; dir end address is: 4 (R1)
0x1524	0xB2C1    UXTB	R1, R0
; slave_addr end address is: 0 (R0)
0x1526	0x4803    LDR	R0, [PC, #12]
0x1528	0xF7FFFAF0  BL	__Lib_I2C_09_I2Cx_Master_Slave_Addr_Set+0
;__Lib_I2C_09.c, 890 :: 		
L_end_I2C4_Master_Slave_Addr_Set:
0x152C	0xF8DDE000  LDR	LR, [SP, #0]
0x1530	0xB001    ADD	SP, SP, #4
0x1532	0x4770    BX	LR
0x1534	0x0000400C  	I2C4_MSA+0
; end of _I2C4_Master_Slave_Addr_Set
_I2C5_Master_Slave_Addr_Set:
;__Lib_I2C_09.c, 947 :: 		
; dir start address is: 4 (R1)
; slave_addr start address is: 0 (R0)
0x1474	0xB081    SUB	SP, SP, #4
0x1476	0xF8CDE000  STR	LR, [SP, #0]
; dir end address is: 4 (R1)
; slave_addr end address is: 0 (R0)
; slave_addr start address is: 0 (R0)
; dir start address is: 4 (R1)
;__Lib_I2C_09.c, 948 :: 		
0x147A	0xB2CA    UXTB	R2, R1
; dir end address is: 4 (R1)
0x147C	0xB2C1    UXTB	R1, R0
; slave_addr end address is: 0 (R0)
0x147E	0x4803    LDR	R0, [PC, #12]
0x1480	0xF7FFFB44  BL	__Lib_I2C_09_I2Cx_Master_Slave_Addr_Set+0
;__Lib_I2C_09.c, 949 :: 		
L_end_I2C5_Master_Slave_Addr_Set:
0x1484	0xF8DDE000  LDR	LR, [SP, #0]
0x1488	0xB001    ADD	SP, SP, #4
0x148A	0x4770    BX	LR
0x148C	0x1000400C  	I2C5_MSA+0
; end of _I2C5_Master_Slave_Addr_Set
_I2C6_Master_Slave_Addr_Set:
;__Lib_I2C_09.c, 1006 :: 		
; dir start address is: 4 (R1)
; slave_addr start address is: 0 (R0)
0x1458	0xB081    SUB	SP, SP, #4
0x145A	0xF8CDE000  STR	LR, [SP, #0]
; dir end address is: 4 (R1)
; slave_addr end address is: 0 (R0)
; slave_addr start address is: 0 (R0)
; dir start address is: 4 (R1)
;__Lib_I2C_09.c, 1007 :: 		
0x145E	0xB2CA    UXTB	R2, R1
; dir end address is: 4 (R1)
0x1460	0xB2C1    UXTB	R1, R0
; slave_addr end address is: 0 (R0)
0x1462	0x4803    LDR	R0, [PC, #12]
0x1464	0xF7FFFB52  BL	__Lib_I2C_09_I2Cx_Master_Slave_Addr_Set+0
;__Lib_I2C_09.c, 1008 :: 		
L_end_I2C6_Master_Slave_Addr_Set:
0x1468	0xF8DDE000  LDR	LR, [SP, #0]
0x146C	0xB001    ADD	SP, SP, #4
0x146E	0x4770    BX	LR
0x1470	0x2000400C  	I2C6_MSA+0
; end of _I2C6_Master_Slave_Addr_Set
_I2C7_Master_Slave_Addr_Set:
;__Lib_I2C_09.c, 1065 :: 		
; dir start address is: 4 (R1)
; slave_addr start address is: 0 (R0)
0x14AC	0xB081    SUB	SP, SP, #4
0x14AE	0xF8CDE000  STR	LR, [SP, #0]
; dir end address is: 4 (R1)
; slave_addr end address is: 0 (R0)
; slave_addr start address is: 0 (R0)
; dir start address is: 4 (R1)
;__Lib_I2C_09.c, 1066 :: 		
0x14B2	0xB2CA    UXTB	R2, R1
; dir end address is: 4 (R1)
0x14B4	0xB2C1    UXTB	R1, R0
; slave_addr end address is: 0 (R0)
0x14B6	0x4803    LDR	R0, [PC, #12]
0x14B8	0xF7FFFB28  BL	__Lib_I2C_09_I2Cx_Master_Slave_Addr_Set+0
;__Lib_I2C_09.c, 1067 :: 		
L_end_I2C7_Master_Slave_Addr_Set:
0x14BC	0xF8DDE000  LDR	LR, [SP, #0]
0x14C0	0xB001    ADD	SP, SP, #4
0x14C2	0x4770    BX	LR
0x14C4	0x3000400C  	I2C7_MSA+0
; end of _I2C7_Master_Slave_Addr_Set
_I2C8_Master_Slave_Addr_Set:
;__Lib_I2C_09.c, 1124 :: 		
; dir start address is: 4 (R1)
; slave_addr start address is: 0 (R0)
0x1490	0xB081    SUB	SP, SP, #4
0x1492	0xF8CDE000  STR	LR, [SP, #0]
; dir end address is: 4 (R1)
; slave_addr end address is: 0 (R0)
; slave_addr start address is: 0 (R0)
; dir start address is: 4 (R1)
;__Lib_I2C_09.c, 1125 :: 		
0x1496	0xB2CA    UXTB	R2, R1
; dir end address is: 4 (R1)
0x1498	0xB2C1    UXTB	R1, R0
; slave_addr end address is: 0 (R0)
0x149A	0x4803    LDR	R0, [PC, #12]
0x149C	0xF7FFFB36  BL	__Lib_I2C_09_I2Cx_Master_Slave_Addr_Set+0
;__Lib_I2C_09.c, 1126 :: 		
L_end_I2C8_Master_Slave_Addr_Set:
0x14A0	0xF8DDE000  LDR	LR, [SP, #0]
0x14A4	0xB001    ADD	SP, SP, #4
0x14A6	0x4770    BX	LR
0x14A8	0x8000400B  	I2C8_MSA+0
; end of _I2C8_Master_Slave_Addr_Set
_I2C9_Master_Slave_Addr_Set:
;__Lib_I2C_09.c, 1183 :: 		
; dir start address is: 4 (R1)
; slave_addr start address is: 0 (R0)
0x1554	0xB081    SUB	SP, SP, #4
0x1556	0xF8CDE000  STR	LR, [SP, #0]
; dir end address is: 4 (R1)
; slave_addr end address is: 0 (R0)
; slave_addr start address is: 0 (R0)
; dir start address is: 4 (R1)
;__Lib_I2C_09.c, 1184 :: 		
0x155A	0xB2CA    UXTB	R2, R1
; dir end address is: 4 (R1)
0x155C	0xB2C1    UXTB	R1, R0
; slave_addr end address is: 0 (R0)
0x155E	0x4803    LDR	R0, [PC, #12]
0x1560	0xF7FFFAD4  BL	__Lib_I2C_09_I2Cx_Master_Slave_Addr_Set+0
;__Lib_I2C_09.c, 1185 :: 		
L_end_I2C9_Master_Slave_Addr_Set:
0x1564	0xF8DDE000  LDR	LR, [SP, #0]
0x1568	0xB001    ADD	SP, SP, #4
0x156A	0x4770    BX	LR
0x156C	0x9000400B  	I2C9_MSA+0
; end of _I2C9_Master_Slave_Addr_Set
_I2C0_Write:
;__Lib_I2C_09.c, 671 :: 		
; mode start address is: 4 (R1)
; dat start address is: 0 (R0)
0x143C	0xB081    SUB	SP, SP, #4
0x143E	0xF8CDE000  STR	LR, [SP, #0]
; mode end address is: 4 (R1)
; dat end address is: 0 (R0)
; dat start address is: 0 (R0)
; mode start address is: 4 (R1)
;__Lib_I2C_09.c, 672 :: 		
0x1442	0xB2CA    UXTB	R2, R1
; mode end address is: 4 (R1)
0x1444	0xB2C1    UXTB	R1, R0
; dat end address is: 0 (R0)
0x1446	0x4803    LDR	R0, [PC, #12]
0x1448	0xF7FFFC8A  BL	__Lib_I2C_09_I2Cx_Write+0
;__Lib_I2C_09.c, 673 :: 		
L_end_I2C0_Write:
0x144C	0xF8DDE000  LDR	LR, [SP, #0]
0x1450	0xB001    ADD	SP, SP, #4
0x1452	0x4770    BX	LR
0x1454	0x00004002  	I2C0_MSA+0
; end of _I2C0_Write
__Lib_I2C_09_I2Cx_Write:
;__Lib_I2C_09.c, 331 :: 		
; mode start address is: 8 (R2)
; dat start address is: 4 (R1)
; i2cBase start address is: 0 (R0)
0x0D60	0xB082    SUB	SP, SP, #8
0x0D62	0xF8CDE000  STR	LR, [SP, #0]
; mode end address is: 8 (R2)
; dat end address is: 4 (R1)
; i2cBase end address is: 0 (R0)
; i2cBase start address is: 0 (R0)
; dat start address is: 4 (R1)
; mode start address is: 8 (R2)
;__Lib_I2C_09.c, 332 :: 		
; I2Cx_TIMEOUT start address is: 16 (R4)
0x0D66	0xF04F0400  MOV	R4, #0
;__Lib_I2C_09.c, 336 :: 		
0x0D6A	0x4B5D    LDR	R3, [PC, #372]
0x0D6C	0x4298    CMP	R0, R3
0x0D6E	0xD105    BNE	L___Lib_I2C_09_I2Cx_Write0
; I2Cx_TIMEOUT end address is: 16 (R4)
;__Lib_I2C_09.c, 337 :: 		
0x0D70	0x4B5C    LDR	R3, [PC, #368]
; I2Cx_TIMEOUT start address is: 20 (R5)
0x0D72	0x681D    LDR	R5, [R3, #0]
;__Lib_I2C_09.c, 338 :: 		
0x0D74	0x4B5C    LDR	R3, [PC, #368]
0x0D76	0x681B    LDR	R3, [R3, #0]
0x0D78	0x9301    STR	R3, [SP, #4]
;__Lib_I2C_09.c, 339 :: 		
; I2Cx_TIMEOUT end address is: 20 (R5)
0x0D7A	0xE05B    B	L___Lib_I2C_09_I2Cx_Write1
L___Lib_I2C_09_I2Cx_Write0:
;__Lib_I2C_09.c, 340 :: 		
; I2Cx_TIMEOUT start address is: 16 (R4)
0x0D7C	0x4B5B    LDR	R3, [PC, #364]
0x0D7E	0x4298    CMP	R0, R3
0x0D80	0xD106    BNE	L___Lib_I2C_09_I2Cx_Write2
; I2Cx_TIMEOUT end address is: 16 (R4)
;__Lib_I2C_09.c, 341 :: 		
0x0D82	0x4B5B    LDR	R3, [PC, #364]
; I2Cx_TIMEOUT start address is: 16 (R4)
0x0D84	0x681C    LDR	R4, [R3, #0]
;__Lib_I2C_09.c, 342 :: 		
0x0D86	0x4B5B    LDR	R3, [PC, #364]
0x0D88	0x681B    LDR	R3, [R3, #0]
0x0D8A	0x9301    STR	R3, [SP, #4]
;__Lib_I2C_09.c, 343 :: 		
0x0D8C	0x4625    MOV	R5, R4
0x0D8E	0xE051    B	L___Lib_I2C_09_I2Cx_Write3
L___Lib_I2C_09_I2Cx_Write2:
;__Lib_I2C_09.c, 344 :: 		
0x0D90	0x4B59    LDR	R3, [PC, #356]
0x0D92	0x4298    CMP	R0, R3
0x0D94	0xD106    BNE	L___Lib_I2C_09_I2Cx_Write4
; I2Cx_TIMEOUT end address is: 16 (R4)
;__Lib_I2C_09.c, 345 :: 		
0x0D96	0x4B59    LDR	R3, [PC, #356]
; I2Cx_TIMEOUT start address is: 16 (R4)
0x0D98	0x681C    LDR	R4, [R3, #0]
;__Lib_I2C_09.c, 346 :: 		
0x0D9A	0x4B59    LDR	R3, [PC, #356]
0x0D9C	0x681B    LDR	R3, [R3, #0]
0x0D9E	0x9301    STR	R3, [SP, #4]
;__Lib_I2C_09.c, 347 :: 		
0x0DA0	0x4623    MOV	R3, R4
0x0DA2	0xE046    B	L___Lib_I2C_09_I2Cx_Write5
L___Lib_I2C_09_I2Cx_Write4:
;__Lib_I2C_09.c, 348 :: 		
0x0DA4	0x4B57    LDR	R3, [PC, #348]
0x0DA6	0x4298    CMP	R0, R3
0x0DA8	0xD106    BNE	L___Lib_I2C_09_I2Cx_Write6
; I2Cx_TIMEOUT end address is: 16 (R4)
;__Lib_I2C_09.c, 349 :: 		
0x0DAA	0x4B57    LDR	R3, [PC, #348]
; I2Cx_TIMEOUT start address is: 16 (R4)
0x0DAC	0x681C    LDR	R4, [R3, #0]
;__Lib_I2C_09.c, 350 :: 		
0x0DAE	0x4B57    LDR	R3, [PC, #348]
0x0DB0	0x681B    LDR	R3, [R3, #0]
0x0DB2	0x9301    STR	R3, [SP, #4]
;__Lib_I2C_09.c, 351 :: 		
0x0DB4	0x4623    MOV	R3, R4
0x0DB6	0xE03C    B	L___Lib_I2C_09_I2Cx_Write7
L___Lib_I2C_09_I2Cx_Write6:
;__Lib_I2C_09.c, 352 :: 		
0x0DB8	0x4B55    LDR	R3, [PC, #340]
0x0DBA	0x4298    CMP	R0, R3
0x0DBC	0xD106    BNE	L___Lib_I2C_09_I2Cx_Write8
; I2Cx_TIMEOUT end address is: 16 (R4)
;__Lib_I2C_09.c, 353 :: 		
0x0DBE	0x4B55    LDR	R3, [PC, #340]
; I2Cx_TIMEOUT start address is: 16 (R4)
0x0DC0	0x681C    LDR	R4, [R3, #0]
;__Lib_I2C_09.c, 354 :: 		
0x0DC2	0x4B55    LDR	R3, [PC, #340]
0x0DC4	0x681B    LDR	R3, [R3, #0]
0x0DC6	0x9301    STR	R3, [SP, #4]
;__Lib_I2C_09.c, 355 :: 		
0x0DC8	0x4623    MOV	R3, R4
0x0DCA	0xE032    B	L___Lib_I2C_09_I2Cx_Write9
L___Lib_I2C_09_I2Cx_Write8:
;__Lib_I2C_09.c, 356 :: 		
0x0DCC	0x4B53    LDR	R3, [PC, #332]
0x0DCE	0x4298    CMP	R0, R3
0x0DD0	0xD106    BNE	L___Lib_I2C_09_I2Cx_Write10
; I2Cx_TIMEOUT end address is: 16 (R4)
;__Lib_I2C_09.c, 357 :: 		
0x0DD2	0x4B53    LDR	R3, [PC, #332]
; I2Cx_TIMEOUT start address is: 16 (R4)
0x0DD4	0x681C    LDR	R4, [R3, #0]
;__Lib_I2C_09.c, 358 :: 		
0x0DD6	0x4B53    LDR	R3, [PC, #332]
0x0DD8	0x681B    LDR	R3, [R3, #0]
0x0DDA	0x9301    STR	R3, [SP, #4]
;__Lib_I2C_09.c, 359 :: 		
0x0DDC	0x4623    MOV	R3, R4
0x0DDE	0xE028    B	L___Lib_I2C_09_I2Cx_Write11
L___Lib_I2C_09_I2Cx_Write10:
;__Lib_I2C_09.c, 360 :: 		
0x0DE0	0x4B51    LDR	R3, [PC, #324]
0x0DE2	0x4298    CMP	R0, R3
0x0DE4	0xD106    BNE	L___Lib_I2C_09_I2Cx_Write12
; I2Cx_TIMEOUT end address is: 16 (R4)
;__Lib_I2C_09.c, 361 :: 		
0x0DE6	0x4B51    LDR	R3, [PC, #324]
; I2Cx_TIMEOUT start address is: 16 (R4)
0x0DE8	0x681C    LDR	R4, [R3, #0]
;__Lib_I2C_09.c, 362 :: 		
0x0DEA	0x4B51    LDR	R3, [PC, #324]
0x0DEC	0x681B    LDR	R3, [R3, #0]
0x0DEE	0x9301    STR	R3, [SP, #4]
;__Lib_I2C_09.c, 363 :: 		
0x0DF0	0x4623    MOV	R3, R4
0x0DF2	0xE01E    B	L___Lib_I2C_09_I2Cx_Write13
L___Lib_I2C_09_I2Cx_Write12:
;__Lib_I2C_09.c, 364 :: 		
0x0DF4	0x4B4F    LDR	R3, [PC, #316]
0x0DF6	0x4298    CMP	R0, R3
0x0DF8	0xD106    BNE	L___Lib_I2C_09_I2Cx_Write14
; I2Cx_TIMEOUT end address is: 16 (R4)
;__Lib_I2C_09.c, 365 :: 		
0x0DFA	0x4B4F    LDR	R3, [PC, #316]
; I2Cx_TIMEOUT start address is: 16 (R4)
0x0DFC	0x681C    LDR	R4, [R3, #0]
;__Lib_I2C_09.c, 366 :: 		
0x0DFE	0x4B4F    LDR	R3, [PC, #316]
0x0E00	0x681B    LDR	R3, [R3, #0]
0x0E02	0x9301    STR	R3, [SP, #4]
;__Lib_I2C_09.c, 367 :: 		
0x0E04	0x4623    MOV	R3, R4
0x0E06	0xE014    B	L___Lib_I2C_09_I2Cx_Write15
L___Lib_I2C_09_I2Cx_Write14:
;__Lib_I2C_09.c, 368 :: 		
0x0E08	0x4B4D    LDR	R3, [PC, #308]
0x0E0A	0x4298    CMP	R0, R3
0x0E0C	0xD106    BNE	L___Lib_I2C_09_I2Cx_Write16
; I2Cx_TIMEOUT end address is: 16 (R4)
;__Lib_I2C_09.c, 369 :: 		
0x0E0E	0x4B4D    LDR	R3, [PC, #308]
; I2Cx_TIMEOUT start address is: 16 (R4)
0x0E10	0x681C    LDR	R4, [R3, #0]
;__Lib_I2C_09.c, 370 :: 		
0x0E12	0x4B4D    LDR	R3, [PC, #308]
0x0E14	0x681B    LDR	R3, [R3, #0]
0x0E16	0x9301    STR	R3, [SP, #4]
;__Lib_I2C_09.c, 371 :: 		
0x0E18	0x4623    MOV	R3, R4
0x0E1A	0xE00A    B	L___Lib_I2C_09_I2Cx_Write17
L___Lib_I2C_09_I2Cx_Write16:
;__Lib_I2C_09.c, 372 :: 		
0x0E1C	0x4B4B    LDR	R3, [PC, #300]
0x0E1E	0x4298    CMP	R0, R3
0x0E20	0xD106    BNE	L___Lib_I2C_09_I2Cx_Write101
; I2Cx_TIMEOUT end address is: 16 (R4)
;__Lib_I2C_09.c, 373 :: 		
0x0E22	0x4B4B    LDR	R3, [PC, #300]
; I2Cx_TIMEOUT start address is: 16 (R4)
0x0E24	0x681C    LDR	R4, [R3, #0]
;__Lib_I2C_09.c, 374 :: 		
0x0E26	0x4B4B    LDR	R3, [PC, #300]
0x0E28	0x681B    LDR	R3, [R3, #0]
0x0E2A	0x9301    STR	R3, [SP, #4]
; I2Cx_TIMEOUT end address is: 16 (R4)
0x0E2C	0x4623    MOV	R3, R4
;__Lib_I2C_09.c, 375 :: 		
0x0E2E	0xE000    B	L___Lib_I2C_09_I2Cx_Write18
L___Lib_I2C_09_I2Cx_Write101:
;__Lib_I2C_09.c, 372 :: 		
0x0E30	0x4623    MOV	R3, R4
;__Lib_I2C_09.c, 375 :: 		
L___Lib_I2C_09_I2Cx_Write18:
; I2Cx_TIMEOUT start address is: 12 (R3)
; I2Cx_TIMEOUT end address is: 12 (R3)
L___Lib_I2C_09_I2Cx_Write17:
; I2Cx_TIMEOUT start address is: 12 (R3)
; I2Cx_TIMEOUT end address is: 12 (R3)
L___Lib_I2C_09_I2Cx_Write15:
; I2Cx_TIMEOUT start address is: 12 (R3)
; I2Cx_TIMEOUT end address is: 12 (R3)
L___Lib_I2C_09_I2Cx_Write13:
; I2Cx_TIMEOUT start address is: 12 (R3)
; I2Cx_TIMEOUT end address is: 12 (R3)
L___Lib_I2C_09_I2Cx_Write11:
; I2Cx_TIMEOUT start address is: 12 (R3)
; I2Cx_TIMEOUT end address is: 12 (R3)
L___Lib_I2C_09_I2Cx_Write9:
; I2Cx_TIMEOUT start address is: 12 (R3)
; I2Cx_TIMEOUT end address is: 12 (R3)
L___Lib_I2C_09_I2Cx_Write7:
; I2Cx_TIMEOUT start address is: 12 (R3)
; I2Cx_TIMEOUT end address is: 12 (R3)
L___Lib_I2C_09_I2Cx_Write5:
; I2Cx_TIMEOUT start address is: 12 (R3)
0x0E32	0x461D    MOV	R5, R3
; I2Cx_TIMEOUT end address is: 12 (R3)
L___Lib_I2C_09_I2Cx_Write3:
; I2Cx_TIMEOUT start address is: 20 (R5)
; I2Cx_TIMEOUT end address is: 20 (R5)
L___Lib_I2C_09_I2Cx_Write1:
;__Lib_I2C_09.c, 377 :: 		
; I2Cx_TIMEOUT start address is: 20 (R5)
0x0E34	0xF2000308  ADDW	R3, R0, #8
0x0E38	0x6019    STR	R1, [R3, #0]
; dat end address is: 4 (R1)
;__Lib_I2C_09.c, 378 :: 		
0x0E3A	0x2A07    CMP	R2, #7
0x0E3C	0xD005    BEQ	L___Lib_I2C_09_I2Cx_Write98
0x0E3E	0x2A03    CMP	R2, #3
0x0E40	0xD003    BEQ	L___Lib_I2C_09_I2Cx_Write97
0x0E42	0x4604    MOV	R4, R0
0x0E44	0x4628    MOV	R0, R5
0x0E46	0xB2D1    UXTB	R1, R2
0x0E48	0xE015    B	L___Lib_I2C_09_I2Cx_Write21
L___Lib_I2C_09_I2Cx_Write98:
L___Lib_I2C_09_I2Cx_Write97:
;__Lib_I2C_09.c, 380 :: 		
; timeout start address is: 24 (R6)
0x0E4A	0x462E    MOV	R6, R5
; i2cBase end address is: 0 (R0)
; mode end address is: 8 (R2)
; I2Cx_TIMEOUT end address is: 20 (R5)
; timeout end address is: 24 (R6)
0x0E4C	0xB2D1    UXTB	R1, R2
0x0E4E	0x4602    MOV	R2, R0
0x0E50	0x4628    MOV	R0, R5
;__Lib_I2C_09.c, 381 :: 		
L___Lib_I2C_09_I2Cx_Write22:
; timeout start address is: 24 (R6)
; I2Cx_TIMEOUT start address is: 0 (R0)
; mode start address is: 4 (R1)
; i2cBase start address is: 8 (R2)
0x0E52	0x1D13    ADDS	R3, R2, #4
0x0E54	0x681C    LDR	R4, [R3, #0]
0x0E56	0xF3C41380  UBFX	R3, R4, #6, #1
0x0E5A	0xB15B    CBZ	R3, L___Lib_I2C_09_I2Cx_Write23
;__Lib_I2C_09.c, 383 :: 		
0x0E5C	0xB148    CBZ	R0, L___Lib_I2C_09_I2Cx_Write102
;__Lib_I2C_09.c, 384 :: 		
0x0E5E	0xB926    CBNZ	R6, L___Lib_I2C_09_I2Cx_Write25
; i2cBase end address is: 8 (R2)
; timeout end address is: 24 (R6)
; I2Cx_TIMEOUT end address is: 0 (R0)
; mode end address is: 4 (R1)
;__Lib_I2C_09.c, 385 :: 		
0x0E60	0x2004    MOVS	R0, #4
0x0E62	0x9C01    LDR	R4, [SP, #4]
0x0E64	0x47A0    BLX	R4
;__Lib_I2C_09.c, 386 :: 		
0x0E66	0x2001    MOVS	R0, #1
0x0E68	0xE036    B	L_end_I2Cx_Write
;__Lib_I2C_09.c, 387 :: 		
L___Lib_I2C_09_I2Cx_Write25:
;__Lib_I2C_09.c, 388 :: 		
; mode start address is: 4 (R1)
; I2Cx_TIMEOUT start address is: 0 (R0)
; timeout start address is: 24 (R6)
; i2cBase start address is: 8 (R2)
0x0E6A	0x1E73    SUBS	R3, R6, #1
; timeout end address is: 24 (R6)
; timeout start address is: 16 (R4)
0x0E6C	0x461C    MOV	R4, R3
; timeout end address is: 16 (R4)
0x0E6E	0x4626    MOV	R6, R4
;__Lib_I2C_09.c, 389 :: 		
0x0E70	0xE7FF    B	L___Lib_I2C_09_I2Cx_Write24
L___Lib_I2C_09_I2Cx_Write102:
;__Lib_I2C_09.c, 383 :: 		
;__Lib_I2C_09.c, 389 :: 		
L___Lib_I2C_09_I2Cx_Write24:
;__Lib_I2C_09.c, 390 :: 		
; timeout start address is: 24 (R6)
; timeout end address is: 24 (R6)
0x0E72	0xE7EE    B	L___Lib_I2C_09_I2Cx_Write22
L___Lib_I2C_09_I2Cx_Write23:
;__Lib_I2C_09.c, 391 :: 		
; I2Cx_TIMEOUT end address is: 0 (R0)
; mode end address is: 4 (R1)
0x0E74	0x4614    MOV	R4, R2
L___Lib_I2C_09_I2Cx_Write21:
; i2cBase end address is: 8 (R2)
;__Lib_I2C_09.c, 393 :: 		
; i2cBase start address is: 16 (R4)
; mode start address is: 4 (R1)
; I2Cx_TIMEOUT start address is: 0 (R0)
0x0E76	0x1D23    ADDS	R3, R4, #4
0x0E78	0x6019    STR	R1, [R3, #0]
;__Lib_I2C_09.c, 394 :: 		
0x0E7A	0xF7FFFA25  BL	_Delay_1us+0
;__Lib_I2C_09.c, 395 :: 		
0x0E7E	0xF7FFFA23  BL	_Delay_1us+0
;__Lib_I2C_09.c, 396 :: 		
0x0E82	0xF7FFFA21  BL	_Delay_1us+0
;__Lib_I2C_09.c, 398 :: 		
; timeout start address is: 8 (R2)
0x0E86	0x4602    MOV	R2, R0
; i2cBase end address is: 16 (R4)
; mode end address is: 4 (R1)
; timeout end address is: 8 (R2)
0x0E88	0x4625    MOV	R5, R4
;__Lib_I2C_09.c, 399 :: 		
L___Lib_I2C_09_I2Cx_Write26:
; timeout start address is: 8 (R2)
; I2Cx_TIMEOUT start address is: 0 (R0)
; I2Cx_TIMEOUT end address is: 0 (R0)
; mode start address is: 4 (R1)
; i2cBase start address is: 20 (R5)
0x0E8A	0x1D2B    ADDS	R3, R5, #4
0x0E8C	0x681C    LDR	R4, [R3, #0]
0x0E8E	0xF3C40300  UBFX	R3, R4, #0, #1
0x0E92	0xB14B    CBZ	R3, L___Lib_I2C_09_I2Cx_Write27
; I2Cx_TIMEOUT end address is: 0 (R0)
;__Lib_I2C_09.c, 401 :: 		
; I2Cx_TIMEOUT start address is: 0 (R0)
0x0E94	0xB138    CBZ	R0, L___Lib_I2C_09_I2Cx_Write103
;__Lib_I2C_09.c, 402 :: 		
0x0E96	0xB922    CBNZ	R2, L___Lib_I2C_09_I2Cx_Write29
; I2Cx_TIMEOUT end address is: 0 (R0)
; mode end address is: 4 (R1)
; i2cBase end address is: 20 (R5)
; timeout end address is: 8 (R2)
;__Lib_I2C_09.c, 403 :: 		
0x0E98	0x2004    MOVS	R0, #4
0x0E9A	0x9C01    LDR	R4, [SP, #4]
0x0E9C	0x47A0    BLX	R4
;__Lib_I2C_09.c, 404 :: 		
0x0E9E	0x2001    MOVS	R0, #1
0x0EA0	0xE01A    B	L_end_I2Cx_Write
;__Lib_I2C_09.c, 405 :: 		
L___Lib_I2C_09_I2Cx_Write29:
;__Lib_I2C_09.c, 406 :: 		
; timeout start address is: 8 (R2)
; i2cBase start address is: 20 (R5)
; mode start address is: 4 (R1)
; I2Cx_TIMEOUT start address is: 0 (R0)
0x0EA2	0x1E52    SUBS	R2, R2, #1
; timeout end address is: 8 (R2)
;__Lib_I2C_09.c, 407 :: 		
0x0EA4	0xE7FF    B	L___Lib_I2C_09_I2Cx_Write28
L___Lib_I2C_09_I2Cx_Write103:
;__Lib_I2C_09.c, 401 :: 		
;__Lib_I2C_09.c, 407 :: 		
L___Lib_I2C_09_I2Cx_Write28:
;__Lib_I2C_09.c, 408 :: 		
; timeout start address is: 8 (R2)
; I2Cx_TIMEOUT end address is: 0 (R0)
; timeout end address is: 8 (R2)
0x0EA6	0xE7F0    B	L___Lib_I2C_09_I2Cx_Write26
L___Lib_I2C_09_I2Cx_Write27:
;__Lib_I2C_09.c, 410 :: 		
0x0EA8	0x1D2B    ADDS	R3, R5, #4
0x0EAA	0x681C    LDR	R4, [R3, #0]
0x0EAC	0xF3C40340  UBFX	R3, R4, #1, #1
0x0EB0	0xB16B    CBZ	R3, L___Lib_I2C_09_I2Cx_Write30
;__Lib_I2C_09.c, 411 :: 		
0x0EB2	0x2901    CMP	R1, #1
0x0EB4	0xD002    BEQ	L___Lib_I2C_09_I2Cx_Write100
0x0EB6	0x2903    CMP	R1, #3
0x0EB8	0xD000    BEQ	L___Lib_I2C_09_I2Cx_Write99
; mode end address is: 4 (R1)
0x0EBA	0xE008    B	L___Lib_I2C_09_I2Cx_Write33
L___Lib_I2C_09_I2Cx_Write100:
L___Lib_I2C_09_I2Cx_Write99:
;__Lib_I2C_09.c, 412 :: 		
0x0EBC	0x1D2B    ADDS	R3, R5, #4
0x0EBE	0x681C    LDR	R4, [R3, #0]
0x0EC0	0xF3C41300  UBFX	R3, R4, #4, #1
0x0EC4	0xB91B    CBNZ	R3, L___Lib_I2C_09_I2Cx_Write34
;__Lib_I2C_09.c, 413 :: 		
0x0EC6	0x1D2C    ADDS	R4, R5, #4
0x0EC8	0xF2400304  MOVW	R3, #4
0x0ECC	0x6023    STR	R3, [R4, #0]
L___Lib_I2C_09_I2Cx_Write34:
;__Lib_I2C_09.c, 414 :: 		
L___Lib_I2C_09_I2Cx_Write33:
;__Lib_I2C_09.c, 415 :: 		
L___Lib_I2C_09_I2Cx_Write30:
;__Lib_I2C_09.c, 417 :: 		
0x0ECE	0x1D2B    ADDS	R3, R5, #4
; i2cBase end address is: 20 (R5)
0x0ED0	0x681C    LDR	R4, [R3, #0]
0x0ED2	0xF3C40340  UBFX	R3, R4, #1, #1
0x0ED6	0xB2D8    UXTB	R0, R3
;__Lib_I2C_09.c, 418 :: 		
L_end_I2Cx_Write:
0x0ED8	0xF8DDE000  LDR	LR, [SP, #0]
0x0EDC	0xB002    ADD	SP, SP, #8
0x0EDE	0x4770    BX	LR
0x0EE0	0x00004002  	I2C0_MSA+0
0x0EE4	0x00882000  	__Lib_I2C_09__I2C0_TIMEOUT+0
0x0EE8	0x449C2000  	_I2C0_Timeout_Ptr+0
0x0EEC	0x10004002  	I2C1_MSA+0
0x0EF0	0x008C2000  	__Lib_I2C_09__I2C1_TIMEOUT+0
0x0EF4	0x44A02000  	_I2C1_Timeout_Ptr+0
0x0EF8	0x20004002  	I2C2_MSA+0
0x0EFC	0x00902000  	__Lib_I2C_09__I2C2_TIMEOUT+0
0x0F00	0x44A42000  	_I2C2_Timeout_Ptr+0
0x0F04	0x30004002  	I2C3_MSA+0
0x0F08	0x00942000  	__Lib_I2C_09__I2C3_TIMEOUT+0
0x0F0C	0x44A82000  	_I2C3_Timeout_Ptr+0
0x0F10	0x0000400C  	I2C4_MSA+0
0x0F14	0x00982000  	__Lib_I2C_09__I2C4_TIMEOUT+0
0x0F18	0x44AC2000  	_I2C4_Timeout_Ptr+0
0x0F1C	0x1000400C  	I2C5_MSA+0
0x0F20	0x009C2000  	__Lib_I2C_09__I2C5_TIMEOUT+0
0x0F24	0x44B02000  	_I2C5_Timeout_Ptr+0
0x0F28	0x2000400C  	I2C6_MSA+0
0x0F2C	0x00A02000  	__Lib_I2C_09__I2C6_TIMEOUT+0
0x0F30	0x44B42000  	_I2C6_Timeout_Ptr+0
0x0F34	0x3000400C  	I2C7_MSA+0
0x0F38	0x00A42000  	__Lib_I2C_09__I2C7_TIMEOUT+0
0x0F3C	0x44B82000  	_I2C7_Timeout_Ptr+0
0x0F40	0x8000400B  	I2C8_MSA+0
0x0F44	0x00A82000  	__Lib_I2C_09__I2C8_TIMEOUT+0
0x0F48	0x44BC2000  	_I2C8_Timeout_Ptr+0
0x0F4C	0x9000400B  	I2C9_MSA+0
0x0F50	0x00AC2000  	__Lib_I2C_09__I2C9_TIMEOUT+0
0x0F54	0x44C02000  	_I2C9_Timeout_Ptr+0
; end of __Lib_I2C_09_I2Cx_Write
easymx_v7_TM4C129XNCZAD__setAN_1:
;__em_c129_gpio.c, 43 :: 		static void _setAN_1  (uint8_t value) 	{ GPIO_PORTE_AHB_DATA.B4 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0268	0x4901    LDR	R1, [PC, #4]
0x026A	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setAN_1:
0x026C	0x4770    BX	LR
0x026E	0xBF00    NOP
0x0270	0x7F9042B8  	GPIO_PORTE_AHB_DATA+0
; end of easymx_v7_TM4C129XNCZAD__setAN_1
easymx_v7_TM4C129XNCZAD__setRST_1:
;__em_c129_gpio.c, 44 :: 		static void _setRST_1 (uint8_t value) 	{ GPIO_PORTE_AHB_DATA.B0 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x025C	0x4901    LDR	R1, [PC, #4]
0x025E	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setRST_1:
0x0260	0x4770    BX	LR
0x0262	0xBF00    NOP
0x0264	0x7F8042B8  	GPIO_PORTE_AHB_DATA+0
; end of easymx_v7_TM4C129XNCZAD__setRST_1
easymx_v7_TM4C129XNCZAD__setCS_1:
;__em_c129_gpio.c, 45 :: 		static void _setCS_1  (uint8_t value) 	{ GPIO_PORTB_AHB_DATA.B0 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0250	0x4901    LDR	R1, [PC, #4]
0x0252	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setCS_1:
0x0254	0x4770    BX	LR
0x0256	0xBF00    NOP
0x0258	0x7F8042B2  	GPIO_PORTB_AHB_DATA+0
; end of easymx_v7_TM4C129XNCZAD__setCS_1
easymx_v7_TM4C129XNCZAD__setSCK_1:
;__em_c129_gpio.c, 46 :: 		static void _setSCK_1 (uint8_t value) 	{ GPIO_PORTA_AHB_DATA.B2 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x028C	0x4901    LDR	R1, [PC, #4]
0x028E	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setSCK_1:
0x0290	0x4770    BX	LR
0x0292	0xBF00    NOP
0x0294	0x7F8842B0  	GPIO_PORTA_AHB_DATA+0
; end of easymx_v7_TM4C129XNCZAD__setSCK_1
easymx_v7_TM4C129XNCZAD__setMISO_1:
;__em_c129_gpio.c, 47 :: 		static void _setMISO_1(uint8_t value) 	{ GPIO_PORTA_AHB_DATA.B4 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0280	0x4901    LDR	R1, [PC, #4]
0x0282	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setMISO_1:
0x0284	0x4770    BX	LR
0x0286	0xBF00    NOP
0x0288	0x7F9042B0  	GPIO_PORTA_AHB_DATA+0
; end of easymx_v7_TM4C129XNCZAD__setMISO_1
easymx_v7_TM4C129XNCZAD__setMOSI_1:
;__em_c129_gpio.c, 48 :: 		static void _setMOSI_1(uint8_t value) 	{ GPIO_PORTA_AHB_DATA.B5 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0274	0x4901    LDR	R1, [PC, #4]
0x0276	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setMOSI_1:
0x0278	0x4770    BX	LR
0x027A	0xBF00    NOP
0x027C	0x7F9442B0  	GPIO_PORTA_AHB_DATA+0
; end of easymx_v7_TM4C129XNCZAD__setMOSI_1
easymx_v7_TM4C129XNCZAD__setPWM_1:
;__em_c129_gpio.c, 49 :: 		static void _setPWM_1 (uint8_t value) 	{ GPIO_PORTD_AHB_DATA.B0 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0220	0x4901    LDR	R1, [PC, #4]
0x0222	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setPWM_1:
0x0224	0x4770    BX	LR
0x0226	0xBF00    NOP
0x0228	0x7F8042B6  	GPIO_PORTD_AHB_DATA+0
; end of easymx_v7_TM4C129XNCZAD__setPWM_1
easymx_v7_TM4C129XNCZAD__setINT_1:
;__em_c129_gpio.c, 50 :: 		static void _setINT_1 (uint8_t value) 	{ GPIO_PORTF_AHB_DATA.B4 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0214	0x4901    LDR	R1, [PC, #4]
0x0216	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setINT_1:
0x0218	0x4770    BX	LR
0x021A	0xBF00    NOP
0x021C	0x7F9042BA  	GPIO_PORTF_AHB_DATA+0
; end of easymx_v7_TM4C129XNCZAD__setINT_1
easymx_v7_TM4C129XNCZAD__setRX_1:
;__em_c129_gpio.c, 51 :: 		static void _setRX_1  (uint8_t value) 	{ GPIO_PORTC_AHB_DATA.B6 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0208	0x4901    LDR	R1, [PC, #4]
0x020A	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setRX_1:
0x020C	0x4770    BX	LR
0x020E	0xBF00    NOP
0x0210	0x7F9842B4  	GPIO_PORTC_AHB_DATA+0
; end of easymx_v7_TM4C129XNCZAD__setRX_1
easymx_v7_TM4C129XNCZAD__setTX_1:
;__em_c129_gpio.c, 52 :: 		static void _setTX_1  (uint8_t value) 	{ GPIO_PORTC_AHB_DATA.B7 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0244	0x4901    LDR	R1, [PC, #4]
0x0246	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setTX_1:
0x0248	0x4770    BX	LR
0x024A	0xBF00    NOP
0x024C	0x7F9C42B4  	GPIO_PORTC_AHB_DATA+0
; end of easymx_v7_TM4C129XNCZAD__setTX_1
easymx_v7_TM4C129XNCZAD__setSCL_1:
;__em_c129_gpio.c, 53 :: 		static void _setSCL_1 (uint8_t value) 	{ GPIO_PORTB_AHB_DATA.B2 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0238	0x4901    LDR	R1, [PC, #4]
0x023A	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setSCL_1:
0x023C	0x4770    BX	LR
0x023E	0xBF00    NOP
0x0240	0x7F8842B2  	GPIO_PORTB_AHB_DATA+0
; end of easymx_v7_TM4C129XNCZAD__setSCL_1
easymx_v7_TM4C129XNCZAD__setSDA_1:
;__em_c129_gpio.c, 54 :: 		static void _setSDA_1 (uint8_t value) 	{ GPIO_PORTB_AHB_DATA.B3 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x022C	0x4901    LDR	R1, [PC, #4]
0x022E	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setSDA_1:
0x0230	0x4770    BX	LR
0x0232	0xBF00    NOP
0x0234	0x7F8C42B2  	GPIO_PORTB_AHB_DATA+0
; end of easymx_v7_TM4C129XNCZAD__setSDA_1
easymx_v7_TM4C129XNCZAD__setAN_2:
;__em_c129_gpio.c, 68 :: 		static void _setAN_2  (uint8_t value)   { GPIO_PORTE_AHB_DATA.B5 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0298	0x4901    LDR	R1, [PC, #4]
0x029A	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setAN_2:
0x029C	0x4770    BX	LR
0x029E	0xBF00    NOP
0x02A0	0x7F9442B8  	GPIO_PORTE_AHB_DATA+0
; end of easymx_v7_TM4C129XNCZAD__setAN_2
easymx_v7_TM4C129XNCZAD__setRST_2:
;__em_c129_gpio.c, 69 :: 		static void _setRST_2 (uint8_t value)   { GPIO_PORTE_AHB_DATA.B1 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0310	0x4901    LDR	R1, [PC, #4]
0x0312	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setRST_2:
0x0314	0x4770    BX	LR
0x0316	0xBF00    NOP
0x0318	0x7F8442B8  	GPIO_PORTE_AHB_DATA+0
; end of easymx_v7_TM4C129XNCZAD__setRST_2
easymx_v7_TM4C129XNCZAD__setCS_2:
;__em_c129_gpio.c, 70 :: 		static void _setCS_2  (uint8_t value)   { GPIO_PORTB_AHB_DATA.B5 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0304	0x4901    LDR	R1, [PC, #4]
0x0306	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setCS_2:
0x0308	0x4770    BX	LR
0x030A	0xBF00    NOP
0x030C	0x7F9442B2  	GPIO_PORTB_AHB_DATA+0
; end of easymx_v7_TM4C129XNCZAD__setCS_2
easymx_v7_TM4C129XNCZAD__setSCK_2:
;__em_c129_gpio.c, 71 :: 		static void _setSCK_2 (uint8_t value)   { GPIO_PORTA_AHB_DATA.B2 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x02F8	0x4901    LDR	R1, [PC, #4]
0x02FA	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setSCK_2:
0x02FC	0x4770    BX	LR
0x02FE	0xBF00    NOP
0x0300	0x7F8842B0  	GPIO_PORTA_AHB_DATA+0
; end of easymx_v7_TM4C129XNCZAD__setSCK_2
easymx_v7_TM4C129XNCZAD__setMISO_2:
;__em_c129_gpio.c, 72 :: 		static void _setMISO_2(uint8_t value)   { GPIO_PORTA_AHB_DATA.B4 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0334	0x4901    LDR	R1, [PC, #4]
0x0336	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setMISO_2:
0x0338	0x4770    BX	LR
0x033A	0xBF00    NOP
0x033C	0x7F9042B0  	GPIO_PORTA_AHB_DATA+0
; end of easymx_v7_TM4C129XNCZAD__setMISO_2
easymx_v7_TM4C129XNCZAD__setMOSI_2:
;__em_c129_gpio.c, 73 :: 		static void _setMOSI_2(uint8_t value)   { GPIO_PORTA_AHB_DATA.B5 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0328	0x4901    LDR	R1, [PC, #4]
0x032A	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setMOSI_2:
0x032C	0x4770    BX	LR
0x032E	0xBF00    NOP
0x0330	0x7F9442B0  	GPIO_PORTA_AHB_DATA+0
; end of easymx_v7_TM4C129XNCZAD__setMOSI_2
easymx_v7_TM4C129XNCZAD__setPWM_2:
;__em_c129_gpio.c, 74 :: 		static void _setPWM_2 (uint8_t value)   { GPIO_PORTD_AHB_DATA.B1 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x031C	0x4901    LDR	R1, [PC, #4]
0x031E	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setPWM_2:
0x0320	0x4770    BX	LR
0x0322	0xBF00    NOP
0x0324	0x7F8442B6  	GPIO_PORTD_AHB_DATA+0
; end of easymx_v7_TM4C129XNCZAD__setPWM_2
easymx_v7_TM4C129XNCZAD__setINT_2:
;__em_c129_gpio.c, 75 :: 		static void _setINT_2 (uint8_t value)   { GPIO_PORTD_AHB_DATA.B6 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x02BC	0x4901    LDR	R1, [PC, #4]
0x02BE	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setINT_2:
0x02C0	0x4770    BX	LR
0x02C2	0xBF00    NOP
0x02C4	0x7F9842B6  	GPIO_PORTD_AHB_DATA+0
; end of easymx_v7_TM4C129XNCZAD__setINT_2
easymx_v7_TM4C129XNCZAD__setRX_2:
;__em_c129_gpio.c, 76 :: 		static void _setRX_2  (uint8_t value)   { GPIO_PORTC_AHB_DATA.B4 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x02B0	0x4901    LDR	R1, [PC, #4]
0x02B2	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setRX_2:
0x02B4	0x4770    BX	LR
0x02B6	0xBF00    NOP
0x02B8	0x7F9042B4  	GPIO_PORTC_AHB_DATA+0
; end of easymx_v7_TM4C129XNCZAD__setRX_2
easymx_v7_TM4C129XNCZAD__setTX_2:
;__em_c129_gpio.c, 77 :: 		static void _setTX_2  (uint8_t value)   { GPIO_PORTC_AHB_DATA.B5 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x02A4	0x4901    LDR	R1, [PC, #4]
0x02A6	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setTX_2:
0x02A8	0x4770    BX	LR
0x02AA	0xBF00    NOP
0x02AC	0x7F9442B4  	GPIO_PORTC_AHB_DATA+0
; end of easymx_v7_TM4C129XNCZAD__setTX_2
easymx_v7_TM4C129XNCZAD__setSCL_2:
;__em_c129_gpio.c, 78 :: 		static void _setSCL_2 (uint8_t value)   { GPIO_PORTB_AHB_DATA.B2 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x02EC	0x4901    LDR	R1, [PC, #4]
0x02EE	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setSCL_2:
0x02F0	0x4770    BX	LR
0x02F2	0xBF00    NOP
0x02F4	0x7F8842B2  	GPIO_PORTB_AHB_DATA+0
; end of easymx_v7_TM4C129XNCZAD__setSCL_2
easymx_v7_TM4C129XNCZAD__setSDA_2:
;__em_c129_gpio.c, 79 :: 		static void _setSDA_2 (uint8_t value)   { GPIO_PORTB_AHB_DATA.B3 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x02E0	0x4901    LDR	R1, [PC, #4]
0x02E2	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setSDA_2:
0x02E4	0x4770    BX	LR
0x02E6	0xBF00    NOP
0x02E8	0x7F8C42B2  	GPIO_PORTB_AHB_DATA+0
; end of easymx_v7_TM4C129XNCZAD__setSDA_2
_Delay_1us:
;__Lib_Delays.c, 13 :: 		void Delay_1us() {
;__Lib_Delays.c, 14 :: 		Delay_us(1);
0x02C8	0xF2400726  MOVW	R7, #38
0x02CC	0xF2C00700  MOVT	R7, #0
L_Delay_1us0:
0x02D0	0x1E7F    SUBS	R7, R7, #1
0x02D2	0xD1FD    BNE	L_Delay_1us0
0x02D4	0xBF00    NOP
0x02D6	0xBF00    NOP
0x02D8	0xBF00    NOP
0x02DA	0xBF00    NOP
0x02DC	0xBF00    NOP
;__Lib_Delays.c, 15 :: 		}
L_end_Delay_1us:
0x02DE	0x4770    BX	LR
; end of _Delay_1us
_I2C1_Write:
;__Lib_I2C_09.c, 730 :: 		
; mode start address is: 4 (R1)
; dat start address is: 0 (R0)
0x1074	0xB081    SUB	SP, SP, #4
0x1076	0xF8CDE000  STR	LR, [SP, #0]
; mode end address is: 4 (R1)
; dat end address is: 0 (R0)
; dat start address is: 0 (R0)
; mode start address is: 4 (R1)
;__Lib_I2C_09.c, 731 :: 		
0x107A	0xB2CA    UXTB	R2, R1
; mode end address is: 4 (R1)
0x107C	0xB2C1    UXTB	R1, R0
; dat end address is: 0 (R0)
0x107E	0x4803    LDR	R0, [PC, #12]
0x1080	0xF7FFFE6E  BL	__Lib_I2C_09_I2Cx_Write+0
;__Lib_I2C_09.c, 732 :: 		
L_end_I2C1_Write:
0x1084	0xF8DDE000  LDR	LR, [SP, #0]
0x1088	0xB001    ADD	SP, SP, #4
0x108A	0x4770    BX	LR
0x108C	0x10004002  	I2C1_MSA+0
; end of _I2C1_Write
_I2C2_Write:
;__Lib_I2C_09.c, 789 :: 		
; mode start address is: 4 (R1)
; dat start address is: 0 (R0)
0x1168	0xB081    SUB	SP, SP, #4
0x116A	0xF8CDE000  STR	LR, [SP, #0]
; mode end address is: 4 (R1)
; dat end address is: 0 (R0)
; dat start address is: 0 (R0)
; mode start address is: 4 (R1)
;__Lib_I2C_09.c, 790 :: 		
0x116E	0xB2CA    UXTB	R2, R1
; mode end address is: 4 (R1)
0x1170	0xB2C1    UXTB	R1, R0
; dat end address is: 0 (R0)
0x1172	0x4803    LDR	R0, [PC, #12]
0x1174	0xF7FFFDF4  BL	__Lib_I2C_09_I2Cx_Write+0
;__Lib_I2C_09.c, 791 :: 		
L_end_I2C2_Write:
0x1178	0xF8DDE000  LDR	LR, [SP, #0]
0x117C	0xB001    ADD	SP, SP, #4
0x117E	0x4770    BX	LR
0x1180	0x20004002  	I2C2_MSA+0
; end of _I2C2_Write
_I2C3_Write:
;__Lib_I2C_09.c, 847 :: 		
; mode start address is: 4 (R1)
; dat start address is: 0 (R0)
0x114C	0xB081    SUB	SP, SP, #4
0x114E	0xF8CDE000  STR	LR, [SP, #0]
; mode end address is: 4 (R1)
; dat end address is: 0 (R0)
; dat start address is: 0 (R0)
; mode start address is: 4 (R1)
;__Lib_I2C_09.c, 848 :: 		
0x1152	0xB2CA    UXTB	R2, R1
; mode end address is: 4 (R1)
0x1154	0xB2C1    UXTB	R1, R0
; dat end address is: 0 (R0)
0x1156	0x4803    LDR	R0, [PC, #12]
0x1158	0xF7FFFE02  BL	__Lib_I2C_09_I2Cx_Write+0
;__Lib_I2C_09.c, 849 :: 		
L_end_I2C3_Write:
0x115C	0xF8DDE000  LDR	LR, [SP, #0]
0x1160	0xB001    ADD	SP, SP, #4
0x1162	0x4770    BX	LR
0x1164	0x30004002  	I2C3_MSA+0
; end of _I2C3_Write
_I2C4_Write:
;__Lib_I2C_09.c, 906 :: 		
; mode start address is: 4 (R1)
; dat start address is: 0 (R0)
0x1130	0xB081    SUB	SP, SP, #4
0x1132	0xF8CDE000  STR	LR, [SP, #0]
; mode end address is: 4 (R1)
; dat end address is: 0 (R0)
; dat start address is: 0 (R0)
; mode start address is: 4 (R1)
;__Lib_I2C_09.c, 907 :: 		
0x1136	0xB2CA    UXTB	R2, R1
; mode end address is: 4 (R1)
0x1138	0xB2C1    UXTB	R1, R0
; dat end address is: 0 (R0)
0x113A	0x4803    LDR	R0, [PC, #12]
0x113C	0xF7FFFE10  BL	__Lib_I2C_09_I2Cx_Write+0
;__Lib_I2C_09.c, 908 :: 		
L_end_I2C4_Write:
0x1140	0xF8DDE000  LDR	LR, [SP, #0]
0x1144	0xB001    ADD	SP, SP, #4
0x1146	0x4770    BX	LR
0x1148	0x0000400C  	I2C4_MSA+0
; end of _I2C4_Write
_I2C5_Write:
;__Lib_I2C_09.c, 965 :: 		
; mode start address is: 4 (R1)
; dat start address is: 0 (R0)
0x1004	0xB081    SUB	SP, SP, #4
0x1006	0xF8CDE000  STR	LR, [SP, #0]
; mode end address is: 4 (R1)
; dat end address is: 0 (R0)
; dat start address is: 0 (R0)
; mode start address is: 4 (R1)
;__Lib_I2C_09.c, 966 :: 		
0x100A	0xB2CA    UXTB	R2, R1
; mode end address is: 4 (R1)
0x100C	0xB2C1    UXTB	R1, R0
; dat end address is: 0 (R0)
0x100E	0x4803    LDR	R0, [PC, #12]
0x1010	0xF7FFFEA6  BL	__Lib_I2C_09_I2Cx_Write+0
;__Lib_I2C_09.c, 967 :: 		
L_end_I2C5_Write:
0x1014	0xF8DDE000  LDR	LR, [SP, #0]
0x1018	0xB001    ADD	SP, SP, #4
0x101A	0x4770    BX	LR
0x101C	0x1000400C  	I2C5_MSA+0
; end of _I2C5_Write
_I2C6_Write:
;__Lib_I2C_09.c, 1024 :: 		
; mode start address is: 4 (R1)
; dat start address is: 0 (R0)
0x1058	0xB081    SUB	SP, SP, #4
0x105A	0xF8CDE000  STR	LR, [SP, #0]
; mode end address is: 4 (R1)
; dat end address is: 0 (R0)
; dat start address is: 0 (R0)
; mode start address is: 4 (R1)
;__Lib_I2C_09.c, 1025 :: 		
0x105E	0xB2CA    UXTB	R2, R1
; mode end address is: 4 (R1)
0x1060	0xB2C1    UXTB	R1, R0
; dat end address is: 0 (R0)
0x1062	0x4803    LDR	R0, [PC, #12]
0x1064	0xF7FFFE7C  BL	__Lib_I2C_09_I2Cx_Write+0
;__Lib_I2C_09.c, 1026 :: 		
L_end_I2C6_Write:
0x1068	0xF8DDE000  LDR	LR, [SP, #0]
0x106C	0xB001    ADD	SP, SP, #4
0x106E	0x4770    BX	LR
0x1070	0x2000400C  	I2C6_MSA+0
; end of _I2C6_Write
_I2C7_Write:
;__Lib_I2C_09.c, 1083 :: 		
; mode start address is: 4 (R1)
; dat start address is: 0 (R0)
0x103C	0xB081    SUB	SP, SP, #4
0x103E	0xF8CDE000  STR	LR, [SP, #0]
; mode end address is: 4 (R1)
; dat end address is: 0 (R0)
; dat start address is: 0 (R0)
; mode start address is: 4 (R1)
;__Lib_I2C_09.c, 1084 :: 		
0x1042	0xB2CA    UXTB	R2, R1
; mode end address is: 4 (R1)
0x1044	0xB2C1    UXTB	R1, R0
; dat end address is: 0 (R0)
0x1046	0x4803    LDR	R0, [PC, #12]
0x1048	0xF7FFFE8A  BL	__Lib_I2C_09_I2Cx_Write+0
;__Lib_I2C_09.c, 1085 :: 		
L_end_I2C7_Write:
0x104C	0xF8DDE000  LDR	LR, [SP, #0]
0x1050	0xB001    ADD	SP, SP, #4
0x1052	0x4770    BX	LR
0x1054	0x3000400C  	I2C7_MSA+0
; end of _I2C7_Write
_I2C8_Write:
;__Lib_I2C_09.c, 1142 :: 		
; mode start address is: 4 (R1)
; dat start address is: 0 (R0)
0x1020	0xB081    SUB	SP, SP, #4
0x1022	0xF8CDE000  STR	LR, [SP, #0]
; mode end address is: 4 (R1)
; dat end address is: 0 (R0)
; dat start address is: 0 (R0)
; mode start address is: 4 (R1)
;__Lib_I2C_09.c, 1143 :: 		
0x1026	0xB2CA    UXTB	R2, R1
; mode end address is: 4 (R1)
0x1028	0xB2C1    UXTB	R1, R0
; dat end address is: 0 (R0)
0x102A	0x4803    LDR	R0, [PC, #12]
0x102C	0xF7FFFE98  BL	__Lib_I2C_09_I2Cx_Write+0
;__Lib_I2C_09.c, 1144 :: 		
L_end_I2C8_Write:
0x1030	0xF8DDE000  LDR	LR, [SP, #0]
0x1034	0xB001    ADD	SP, SP, #4
0x1036	0x4770    BX	LR
0x1038	0x8000400B  	I2C8_MSA+0
; end of _I2C8_Write
_I2C9_Write:
;__Lib_I2C_09.c, 1201 :: 		
; mode start address is: 4 (R1)
; dat start address is: 0 (R0)
0x13B0	0xB081    SUB	SP, SP, #4
0x13B2	0xF8CDE000  STR	LR, [SP, #0]
; mode end address is: 4 (R1)
; dat end address is: 0 (R0)
; dat start address is: 0 (R0)
; mode start address is: 4 (R1)
;__Lib_I2C_09.c, 1202 :: 		
0x13B6	0xB2CA    UXTB	R2, R1
; mode end address is: 4 (R1)
0x13B8	0xB2C1    UXTB	R1, R0
; dat end address is: 0 (R0)
0x13BA	0x4803    LDR	R0, [PC, #12]
0x13BC	0xF7FFFCD0  BL	__Lib_I2C_09_I2Cx_Write+0
;__Lib_I2C_09.c, 1203 :: 		
L_end_I2C9_Write:
0x13C0	0xF8DDE000  LDR	LR, [SP, #0]
0x13C4	0xB001    ADD	SP, SP, #4
0x13C6	0x4770    BX	LR
0x13C8	0x9000400B  	I2C9_MSA+0
; end of _I2C9_Write
_Delay_1ms:
;__Lib_Delays.c, 41 :: 		void Delay_1ms() {
;__Lib_Delays.c, 42 :: 		Delay_ms(1);
0x1398	0xF649473E  MOVW	R7, #39998
0x139C	0xF2C00700  MOVT	R7, #0
L_Delay_1ms14:
0x13A0	0x1E7F    SUBS	R7, R7, #1
0x13A2	0xD1FD    BNE	L_Delay_1ms14
0x13A4	0xBF00    NOP
0x13A6	0xBF00    NOP
0x13A8	0xBF00    NOP
0x13AA	0xBF00    NOP
0x13AC	0xBF00    NOP
;__Lib_Delays.c, 43 :: 		}
L_end_Delay_1ms:
0x13AE	0x4770    BX	LR
; end of _Delay_1ms
__irgrid2_driver_hal_i2cRead:
;__hal_tiva.c, 138 :: 		static int hal_i2cRead(uint8_t slaveAddress, uint8_t *pBuf, uint16_t nBytes, uint8_t endMode)
; pBuf start address is: 4 (R1)
; slaveAddress start address is: 0 (R0)
0x15A8	0xB085    SUB	SP, SP, #20
0x15AA	0xF8CDE000  STR	LR, [SP, #0]
0x15AE	0xF8AD200C  STRH	R2, [SP, #12]
0x15B2	0x460A    MOV	R2, R1
0x15B4	0xF88D3010  STRB	R3, [SP, #16]
; pBuf end address is: 4 (R1)
; slaveAddress end address is: 0 (R0)
; slaveAddress start address is: 0 (R0)
; pBuf start address is: 8 (R2)
;__hal_tiva.c, 140 :: 		int res = 0;
0x15B8	0xF2400400  MOVW	R4, #0
0x15BC	0xF8AD4008  STRH	R4, [SP, #8]
;__hal_tiva.c, 141 :: 		uint8_t *ptr = pBuf;
; ptr start address is: 4 (R1)
0x15C0	0x4611    MOV	R1, R2
; pBuf end address is: 8 (R2)
;__hal_tiva.c, 143 :: 		if( startF ) {
0x15C2	0x4C3F    LDR	R4, [PC, #252]
0x15C4	0x7824    LDRB	R4, [R4, #0]
0x15C6	0xB154    CBZ	R4, L___irgrid2_driver_hal_i2cRead8
;__hal_tiva.c, 144 :: 		fp_i2cStart(slaveAddress, _I2C_DIR_MASTER_RECEIVE);
0x15C8	0x9101    STR	R1, [SP, #4]
0x15CA	0x2101    MOVS	R1, #1
; slaveAddress end address is: 0 (R0)
0x15CC	0x4C3D    LDR	R4, [PC, #244]
0x15CE	0x6824    LDR	R4, [R4, #0]
0x15D0	0x47A0    BLX	R4
0x15D2	0x9901    LDR	R1, [SP, #4]
;__hal_tiva.c, 145 :: 		Delay_1ms();
0x15D4	0xF7FFFEE0  BL	_Delay_1ms+0
;__hal_tiva.c, 146 :: 		startF = 0;
0x15D8	0x2500    MOVS	R5, #0
0x15DA	0x4C39    LDR	R4, [PC, #228]
0x15DC	0x7025    STRB	R5, [R4, #0]
;__hal_tiva.c, 147 :: 		}
L___irgrid2_driver_hal_i2cRead8:
;__hal_tiva.c, 148 :: 		if(nBytes == 1) {
0x15DE	0xF8BD400C  LDRH	R4, [SP, #12]
0x15E2	0x2C01    CMP	R4, #1
0x15E4	0xD10C    BNE	L___irgrid2_driver_hal_i2cRead9
;__hal_tiva.c, 149 :: 		res |= fp_i2cRead(ptr, _I2C_MASTER_MODE_SINGLE_RECEIVE);
0x15E6	0x4608    MOV	R0, R1
0x15E8	0x2107    MOVS	R1, #7
; ptr end address is: 4 (R1)
0x15EA	0x4C37    LDR	R4, [PC, #220]
0x15EC	0x6824    LDR	R4, [R4, #0]
0x15EE	0x47A0    BLX	R4
0x15F0	0xF9BD4008  LDRSH	R4, [SP, #8]
0x15F4	0x4304    ORRS	R4, R0
0x15F6	0xF8AD4008  STRH	R4, [SP, #8]
;__hal_tiva.c, 150 :: 		Delay_1ms();
0x15FA	0xF7FFFECD  BL	_Delay_1ms+0
;__hal_tiva.c, 151 :: 		} else if(nBytes == 2) {
0x15FE	0xE051    B	L___irgrid2_driver_hal_i2cRead10
L___irgrid2_driver_hal_i2cRead9:
; ptr start address is: 4 (R1)
0x1600	0xF8BD400C  LDRH	R4, [SP, #12]
0x1604	0x2C02    CMP	R4, #2
0x1606	0xD119    BNE	L___irgrid2_driver_hal_i2cRead11
;__hal_tiva.c, 152 :: 		res |= fp_i2cRead(ptr++, _I2C_MASTER_MODE_BURST_RECEIVE_START);
0x1608	0x9101    STR	R1, [SP, #4]
0x160A	0x4608    MOV	R0, R1
0x160C	0x210B    MOVS	R1, #11
0x160E	0x4C2E    LDR	R4, [PC, #184]
0x1610	0x6824    LDR	R4, [R4, #0]
0x1612	0x47A0    BLX	R4
0x1614	0x9901    LDR	R1, [SP, #4]
0x1616	0xF9BD4008  LDRSH	R4, [SP, #8]
0x161A	0x4304    ORRS	R4, R0
0x161C	0xF8AD4008  STRH	R4, [SP, #8]
0x1620	0x1C4C    ADDS	R4, R1, #1
; ptr end address is: 4 (R1)
; ptr start address is: 0 (R0)
0x1622	0x4620    MOV	R0, R4
;__hal_tiva.c, 153 :: 		Delay_1ms();
0x1624	0xF7FFFEB8  BL	_Delay_1ms+0
;__hal_tiva.c, 154 :: 		res |= fp_i2cRead(ptr, _I2C_MASTER_MODE_BURST_RECEIVE_FINISH);
0x1628	0x2105    MOVS	R1, #5
; ptr end address is: 0 (R0)
0x162A	0x4C27    LDR	R4, [PC, #156]
0x162C	0x6824    LDR	R4, [R4, #0]
0x162E	0x47A0    BLX	R4
0x1630	0xF9BD4008  LDRSH	R4, [SP, #8]
0x1634	0x4304    ORRS	R4, R0
0x1636	0xF8AD4008  STRH	R4, [SP, #8]
;__hal_tiva.c, 155 :: 		} else {
0x163A	0xE033    B	L___irgrid2_driver_hal_i2cRead12
L___irgrid2_driver_hal_i2cRead11:
;__hal_tiva.c, 156 :: 		res |= fp_i2cRead(ptr++ , _I2C_MASTER_MODE_BURST_RECEIVE_START);
; ptr start address is: 4 (R1)
0x163C	0x9101    STR	R1, [SP, #4]
0x163E	0x4608    MOV	R0, R1
0x1640	0x210B    MOVS	R1, #11
0x1642	0x4C21    LDR	R4, [PC, #132]
0x1644	0x6824    LDR	R4, [R4, #0]
0x1646	0x47A0    BLX	R4
0x1648	0x9901    LDR	R1, [SP, #4]
0x164A	0xF9BD4008  LDRSH	R4, [SP, #8]
0x164E	0x4304    ORRS	R4, R0
0x1650	0xF8AD4008  STRH	R4, [SP, #8]
0x1654	0x1C4B    ADDS	R3, R1, #1
; ptr end address is: 4 (R1)
; ptr start address is: 12 (R3)
;__hal_tiva.c, 157 :: 		Delay_1ms();
0x1656	0xF7FFFE9F  BL	_Delay_1ms+0
; ptr end address is: 12 (R3)
0x165A	0x4619    MOV	R1, R3
;__hal_tiva.c, 158 :: 		while(--nBytes > 1) {
L___irgrid2_driver_hal_i2cRead13:
; ptr start address is: 4 (R1)
0x165C	0xF8BD400C  LDRH	R4, [SP, #12]
0x1660	0x1E64    SUBS	R4, R4, #1
0x1662	0xB2A4    UXTH	R4, R4
0x1664	0xF8AD400C  STRH	R4, [SP, #12]
0x1668	0x2C01    CMP	R4, #1
0x166A	0xD911    BLS	L___irgrid2_driver_hal_i2cRead14
;__hal_tiva.c, 159 :: 		res |= fp_i2cRead(ptr++ , _I2C_MASTER_MODE_BURST_RECEIVE_CONT);
0x166C	0x9101    STR	R1, [SP, #4]
0x166E	0x4608    MOV	R0, R1
0x1670	0x2109    MOVS	R1, #9
0x1672	0x4C15    LDR	R4, [PC, #84]
0x1674	0x6824    LDR	R4, [R4, #0]
0x1676	0x47A0    BLX	R4
0x1678	0x9901    LDR	R1, [SP, #4]
0x167A	0xF9BD4008  LDRSH	R4, [SP, #8]
0x167E	0x4304    ORRS	R4, R0
0x1680	0xF8AD4008  STRH	R4, [SP, #8]
0x1684	0x1C4C    ADDS	R4, R1, #1
; ptr end address is: 4 (R1)
; ptr start address is: 12 (R3)
0x1686	0x4623    MOV	R3, R4
;__hal_tiva.c, 160 :: 		Delay_1ms();
0x1688	0xF7FFFE86  BL	_Delay_1ms+0
;__hal_tiva.c, 161 :: 		}
0x168C	0x4619    MOV	R1, R3
; ptr end address is: 12 (R3)
0x168E	0xE7E5    B	L___irgrid2_driver_hal_i2cRead13
L___irgrid2_driver_hal_i2cRead14:
;__hal_tiva.c, 162 :: 		res |= fp_i2cRead(ptr, _I2C_MASTER_MODE_BURST_RECEIVE_FINISH);
; ptr start address is: 4 (R1)
0x1690	0x4608    MOV	R0, R1
0x1692	0x2105    MOVS	R1, #5
; ptr end address is: 4 (R1)
0x1694	0x4C0C    LDR	R4, [PC, #48]
0x1696	0x6824    LDR	R4, [R4, #0]
0x1698	0x47A0    BLX	R4
0x169A	0xF9BD4008  LDRSH	R4, [SP, #8]
0x169E	0x4304    ORRS	R4, R0
0x16A0	0xF8AD4008  STRH	R4, [SP, #8]
;__hal_tiva.c, 163 :: 		}
L___irgrid2_driver_hal_i2cRead12:
L___irgrid2_driver_hal_i2cRead10:
;__hal_tiva.c, 164 :: 		if( endMode == END_MODE_RESTART ) {
0x16A4	0xF89D4010  LDRB	R4, [SP, #16]
0x16A8	0x2C01    CMP	R4, #1
0x16AA	0xD102    BNE	L___irgrid2_driver_hal_i2cRead15
;__hal_tiva.c, 165 :: 		startF = 1;
0x16AC	0x2501    MOVS	R5, #1
0x16AE	0x4C04    LDR	R4, [PC, #16]
0x16B0	0x7025    STRB	R5, [R4, #0]
;__hal_tiva.c, 166 :: 		}
L___irgrid2_driver_hal_i2cRead15:
;__hal_tiva.c, 167 :: 		return res;
0x16B2	0xF9BD0008  LDRSH	R0, [SP, #8]
;__hal_tiva.c, 168 :: 		}
L_end_hal_i2cRead:
0x16B6	0xF8DDE000  LDR	LR, [SP, #0]
0x16BA	0xB005    ADD	SP, SP, #20
0x16BC	0x4770    BX	LR
0x16BE	0xBF00    NOP
0x16C0	0x007A2000  	__irgrid2_driver_startF+0
0x16C4	0x0D182000  	__irgrid2_driver_fp_i2cStart+0
0x16C8	0x0D1C2000  	__irgrid2_driver_fp_i2cRead+0
; end of __irgrid2_driver_hal_i2cRead
_I2C0_Read:
;__Lib_I2C_09.c, 677 :: 		
; mode start address is: 4 (R1)
; dat start address is: 0 (R0)
0x1378	0xB081    SUB	SP, SP, #4
0x137A	0xF8CDE000  STR	LR, [SP, #0]
; mode end address is: 4 (R1)
; dat end address is: 0 (R0)
; dat start address is: 0 (R0)
; mode start address is: 4 (R1)
;__Lib_I2C_09.c, 678 :: 		
0x137E	0xB2CA    UXTB	R2, R1
; mode end address is: 4 (R1)
0x1380	0x4601    MOV	R1, R0
; dat end address is: 0 (R0)
0x1382	0x4803    LDR	R0, [PC, #12]
0x1384	0xF7FFFBCA  BL	__Lib_I2C_09_I2Cx_Read+0
;__Lib_I2C_09.c, 679 :: 		
L_end_I2C0_Read:
0x1388	0xF8DDE000  LDR	LR, [SP, #0]
0x138C	0xB001    ADD	SP, SP, #4
0x138E	0x4770    BX	LR
0x1390	0x00004002  	I2C0_MSA+0
; end of _I2C0_Read
__Lib_I2C_09_I2Cx_Read:
;__Lib_I2C_09.c, 422 :: 		
; mode start address is: 8 (R2)
; i2cBase start address is: 0 (R0)
0x0B1C	0xB084    SUB	SP, SP, #16
0x0B1E	0xF8CDE000  STR	LR, [SP, #0]
0x0B22	0x4604    MOV	R4, R0
0x0B24	0x9103    STR	R1, [SP, #12]
; mode end address is: 8 (R2)
; i2cBase end address is: 0 (R0)
; i2cBase start address is: 16 (R4)
; mode start address is: 8 (R2)
;__Lib_I2C_09.c, 423 :: 		
0x0B26	0xF04F0300  MOV	R3, #0
0x0B2A	0x9302    STR	R3, [SP, #8]
;__Lib_I2C_09.c, 427 :: 		
0x0B2C	0x4B5E    LDR	R3, [PC, #376]
0x0B2E	0x429C    CMP	R4, R3
0x0B30	0xD106    BNE	L___Lib_I2C_09_I2Cx_Read35
;__Lib_I2C_09.c, 428 :: 		
0x0B32	0x4B5E    LDR	R3, [PC, #376]
0x0B34	0x681B    LDR	R3, [R3, #0]
0x0B36	0x9302    STR	R3, [SP, #8]
;__Lib_I2C_09.c, 429 :: 		
0x0B38	0x4B5D    LDR	R3, [PC, #372]
0x0B3A	0x681B    LDR	R3, [R3, #0]
0x0B3C	0x9301    STR	R3, [SP, #4]
;__Lib_I2C_09.c, 430 :: 		
0x0B3E	0xE058    B	L___Lib_I2C_09_I2Cx_Read36
L___Lib_I2C_09_I2Cx_Read35:
;__Lib_I2C_09.c, 431 :: 		
0x0B40	0x4B5C    LDR	R3, [PC, #368]
0x0B42	0x429C    CMP	R4, R3
0x0B44	0xD106    BNE	L___Lib_I2C_09_I2Cx_Read37
;__Lib_I2C_09.c, 432 :: 		
0x0B46	0x4B5C    LDR	R3, [PC, #368]
0x0B48	0x681B    LDR	R3, [R3, #0]
0x0B4A	0x9302    STR	R3, [SP, #8]
;__Lib_I2C_09.c, 433 :: 		
0x0B4C	0x4B5B    LDR	R3, [PC, #364]
0x0B4E	0x681B    LDR	R3, [R3, #0]
0x0B50	0x9301    STR	R3, [SP, #4]
;__Lib_I2C_09.c, 434 :: 		
0x0B52	0xE04E    B	L___Lib_I2C_09_I2Cx_Read38
L___Lib_I2C_09_I2Cx_Read37:
;__Lib_I2C_09.c, 435 :: 		
0x0B54	0x4B5A    LDR	R3, [PC, #360]
0x0B56	0x429C    CMP	R4, R3
0x0B58	0xD106    BNE	L___Lib_I2C_09_I2Cx_Read39
;__Lib_I2C_09.c, 436 :: 		
0x0B5A	0x4B5A    LDR	R3, [PC, #360]
0x0B5C	0x681B    LDR	R3, [R3, #0]
0x0B5E	0x9302    STR	R3, [SP, #8]
;__Lib_I2C_09.c, 437 :: 		
0x0B60	0x4B59    LDR	R3, [PC, #356]
0x0B62	0x681B    LDR	R3, [R3, #0]
0x0B64	0x9301    STR	R3, [SP, #4]
;__Lib_I2C_09.c, 438 :: 		
0x0B66	0xE044    B	L___Lib_I2C_09_I2Cx_Read40
L___Lib_I2C_09_I2Cx_Read39:
;__Lib_I2C_09.c, 439 :: 		
0x0B68	0x4B58    LDR	R3, [PC, #352]
0x0B6A	0x429C    CMP	R4, R3
0x0B6C	0xD106    BNE	L___Lib_I2C_09_I2Cx_Read41
;__Lib_I2C_09.c, 440 :: 		
0x0B6E	0x4B58    LDR	R3, [PC, #352]
0x0B70	0x681B    LDR	R3, [R3, #0]
0x0B72	0x9302    STR	R3, [SP, #8]
;__Lib_I2C_09.c, 441 :: 		
0x0B74	0x4B57    LDR	R3, [PC, #348]
0x0B76	0x681B    LDR	R3, [R3, #0]
0x0B78	0x9301    STR	R3, [SP, #4]
;__Lib_I2C_09.c, 442 :: 		
0x0B7A	0xE03A    B	L___Lib_I2C_09_I2Cx_Read42
L___Lib_I2C_09_I2Cx_Read41:
;__Lib_I2C_09.c, 443 :: 		
0x0B7C	0x4B56    LDR	R3, [PC, #344]
0x0B7E	0x429C    CMP	R4, R3
0x0B80	0xD106    BNE	L___Lib_I2C_09_I2Cx_Read43
;__Lib_I2C_09.c, 444 :: 		
0x0B82	0x4B56    LDR	R3, [PC, #344]
0x0B84	0x681B    LDR	R3, [R3, #0]
0x0B86	0x9302    STR	R3, [SP, #8]
;__Lib_I2C_09.c, 445 :: 		
0x0B88	0x4B55    LDR	R3, [PC, #340]
0x0B8A	0x681B    LDR	R3, [R3, #0]
0x0B8C	0x9301    STR	R3, [SP, #4]
;__Lib_I2C_09.c, 446 :: 		
0x0B8E	0xE030    B	L___Lib_I2C_09_I2Cx_Read44
L___Lib_I2C_09_I2Cx_Read43:
;__Lib_I2C_09.c, 447 :: 		
0x0B90	0x4B54    LDR	R3, [PC, #336]
0x0B92	0x429C    CMP	R4, R3
0x0B94	0xD106    BNE	L___Lib_I2C_09_I2Cx_Read45
;__Lib_I2C_09.c, 448 :: 		
0x0B96	0x4B54    LDR	R3, [PC, #336]
0x0B98	0x681B    LDR	R3, [R3, #0]
0x0B9A	0x9302    STR	R3, [SP, #8]
;__Lib_I2C_09.c, 449 :: 		
0x0B9C	0x4B53    LDR	R3, [PC, #332]
0x0B9E	0x681B    LDR	R3, [R3, #0]
0x0BA0	0x9301    STR	R3, [SP, #4]
;__Lib_I2C_09.c, 450 :: 		
0x0BA2	0xE026    B	L___Lib_I2C_09_I2Cx_Read46
L___Lib_I2C_09_I2Cx_Read45:
;__Lib_I2C_09.c, 451 :: 		
0x0BA4	0x4B52    LDR	R3, [PC, #328]
0x0BA6	0x429C    CMP	R4, R3
0x0BA8	0xD106    BNE	L___Lib_I2C_09_I2Cx_Read47
;__Lib_I2C_09.c, 452 :: 		
0x0BAA	0x4B52    LDR	R3, [PC, #328]
0x0BAC	0x681B    LDR	R3, [R3, #0]
0x0BAE	0x9302    STR	R3, [SP, #8]
;__Lib_I2C_09.c, 453 :: 		
0x0BB0	0x4B51    LDR	R3, [PC, #324]
0x0BB2	0x681B    LDR	R3, [R3, #0]
0x0BB4	0x9301    STR	R3, [SP, #4]
;__Lib_I2C_09.c, 454 :: 		
0x0BB6	0xE01C    B	L___Lib_I2C_09_I2Cx_Read48
L___Lib_I2C_09_I2Cx_Read47:
;__Lib_I2C_09.c, 455 :: 		
0x0BB8	0x4B50    LDR	R3, [PC, #320]
0x0BBA	0x429C    CMP	R4, R3
0x0BBC	0xD106    BNE	L___Lib_I2C_09_I2Cx_Read49
;__Lib_I2C_09.c, 456 :: 		
0x0BBE	0x4B50    LDR	R3, [PC, #320]
0x0BC0	0x681B    LDR	R3, [R3, #0]
0x0BC2	0x9302    STR	R3, [SP, #8]
;__Lib_I2C_09.c, 457 :: 		
0x0BC4	0x4B4F    LDR	R3, [PC, #316]
0x0BC6	0x681B    LDR	R3, [R3, #0]
0x0BC8	0x9301    STR	R3, [SP, #4]
;__Lib_I2C_09.c, 458 :: 		
0x0BCA	0xE012    B	L___Lib_I2C_09_I2Cx_Read50
L___Lib_I2C_09_I2Cx_Read49:
;__Lib_I2C_09.c, 459 :: 		
0x0BCC	0x4B4E    LDR	R3, [PC, #312]
0x0BCE	0x429C    CMP	R4, R3
0x0BD0	0xD106    BNE	L___Lib_I2C_09_I2Cx_Read51
;__Lib_I2C_09.c, 460 :: 		
0x0BD2	0x4B4E    LDR	R3, [PC, #312]
0x0BD4	0x681B    LDR	R3, [R3, #0]
0x0BD6	0x9302    STR	R3, [SP, #8]
;__Lib_I2C_09.c, 461 :: 		
0x0BD8	0x4B4D    LDR	R3, [PC, #308]
0x0BDA	0x681B    LDR	R3, [R3, #0]
0x0BDC	0x9301    STR	R3, [SP, #4]
;__Lib_I2C_09.c, 462 :: 		
0x0BDE	0xE008    B	L___Lib_I2C_09_I2Cx_Read52
L___Lib_I2C_09_I2Cx_Read51:
;__Lib_I2C_09.c, 463 :: 		
0x0BE0	0x4B4C    LDR	R3, [PC, #304]
0x0BE2	0x429C    CMP	R4, R3
0x0BE4	0xD105    BNE	L___Lib_I2C_09_I2Cx_Read53
;__Lib_I2C_09.c, 464 :: 		
0x0BE6	0x4B4C    LDR	R3, [PC, #304]
0x0BE8	0x681B    LDR	R3, [R3, #0]
0x0BEA	0x9302    STR	R3, [SP, #8]
;__Lib_I2C_09.c, 465 :: 		
0x0BEC	0x4B4B    LDR	R3, [PC, #300]
0x0BEE	0x681B    LDR	R3, [R3, #0]
0x0BF0	0x9301    STR	R3, [SP, #4]
;__Lib_I2C_09.c, 466 :: 		
L___Lib_I2C_09_I2Cx_Read53:
L___Lib_I2C_09_I2Cx_Read52:
L___Lib_I2C_09_I2Cx_Read50:
L___Lib_I2C_09_I2Cx_Read48:
L___Lib_I2C_09_I2Cx_Read46:
L___Lib_I2C_09_I2Cx_Read44:
L___Lib_I2C_09_I2Cx_Read42:
L___Lib_I2C_09_I2Cx_Read40:
L___Lib_I2C_09_I2Cx_Read38:
L___Lib_I2C_09_I2Cx_Read36:
;__Lib_I2C_09.c, 468 :: 		
0x0BF2	0x2A07    CMP	R2, #7
0x0BF4	0xD003    BEQ	L___Lib_I2C_09_I2Cx_Read107
0x0BF6	0x2A0B    CMP	R2, #11
0x0BF8	0xD001    BEQ	L___Lib_I2C_09_I2Cx_Read106
0x0BFA	0x4620    MOV	R0, R4
0x0BFC	0xE017    B	L___Lib_I2C_09_I2Cx_Read56
L___Lib_I2C_09_I2Cx_Read107:
L___Lib_I2C_09_I2Cx_Read106:
;__Lib_I2C_09.c, 470 :: 		
; timeout start address is: 24 (R6)
0x0BFE	0x9E02    LDR	R6, [SP, #8]
; i2cBase end address is: 16 (R4)
; timeout end address is: 24 (R6)
; mode end address is: 8 (R2)
0x0C00	0x4620    MOV	R0, R4
0x0C02	0xB2D1    UXTB	R1, R2
;__Lib_I2C_09.c, 471 :: 		
L___Lib_I2C_09_I2Cx_Read57:
; timeout start address is: 24 (R6)
; mode start address is: 4 (R1)
; i2cBase start address is: 0 (R0)
0x0C04	0x1D03    ADDS	R3, R0, #4
0x0C06	0x681C    LDR	R4, [R3, #0]
0x0C08	0xF3C41380  UBFX	R3, R4, #6, #1
0x0C0C	0xB173    CBZ	R3, L___Lib_I2C_09_I2Cx_Read58
;__Lib_I2C_09.c, 473 :: 		
0x0C0E	0x9B02    LDR	R3, [SP, #8]
0x0C10	0xB14B    CBZ	R3, L___Lib_I2C_09_I2Cx_Read110
;__Lib_I2C_09.c, 474 :: 		
0x0C12	0xB926    CBNZ	R6, L___Lib_I2C_09_I2Cx_Read60
; mode end address is: 4 (R1)
; timeout end address is: 24 (R6)
; i2cBase end address is: 0 (R0)
;__Lib_I2C_09.c, 475 :: 		
0x0C14	0x2003    MOVS	R0, #3
0x0C16	0x9C01    LDR	R4, [SP, #4]
0x0C18	0x47A0    BLX	R4
;__Lib_I2C_09.c, 476 :: 		
0x0C1A	0x2001    MOVS	R0, #1
0x0C1C	0xE040    B	L_end_I2Cx_Read
;__Lib_I2C_09.c, 477 :: 		
L___Lib_I2C_09_I2Cx_Read60:
;__Lib_I2C_09.c, 478 :: 		
; i2cBase start address is: 0 (R0)
; timeout start address is: 24 (R6)
; mode start address is: 4 (R1)
0x0C1E	0x1E73    SUBS	R3, R6, #1
; timeout end address is: 24 (R6)
; timeout start address is: 8 (R2)
0x0C20	0x461A    MOV	R2, R3
; timeout end address is: 8 (R2)
0x0C22	0x4613    MOV	R3, R2
;__Lib_I2C_09.c, 479 :: 		
0x0C24	0xE000    B	L___Lib_I2C_09_I2Cx_Read59
L___Lib_I2C_09_I2Cx_Read110:
;__Lib_I2C_09.c, 473 :: 		
0x0C26	0x4633    MOV	R3, R6
;__Lib_I2C_09.c, 479 :: 		
L___Lib_I2C_09_I2Cx_Read59:
;__Lib_I2C_09.c, 480 :: 		
; timeout start address is: 12 (R3)
; timeout end address is: 12 (R3)
0x0C28	0x461E    MOV	R6, R3
0x0C2A	0xE7EB    B	L___Lib_I2C_09_I2Cx_Read57
L___Lib_I2C_09_I2Cx_Read58:
;__Lib_I2C_09.c, 481 :: 		
0x0C2C	0xB2CA    UXTB	R2, R1
; i2cBase end address is: 0 (R0)
L___Lib_I2C_09_I2Cx_Read56:
; mode end address is: 4 (R1)
;__Lib_I2C_09.c, 483 :: 		
; i2cBase start address is: 0 (R0)
; mode start address is: 8 (R2)
0x0C2E	0x1D03    ADDS	R3, R0, #4
0x0C30	0x601A    STR	R2, [R3, #0]
;__Lib_I2C_09.c, 484 :: 		
0x0C32	0xF7FFFB49  BL	_Delay_1us+0
;__Lib_I2C_09.c, 485 :: 		
0x0C36	0xF7FFFB47  BL	_Delay_1us+0
;__Lib_I2C_09.c, 486 :: 		
0x0C3A	0xF7FFFB45  BL	_Delay_1us+0
;__Lib_I2C_09.c, 488 :: 		
; timeout start address is: 24 (R6)
0x0C3E	0x9E02    LDR	R6, [SP, #8]
; timeout end address is: 24 (R6)
; mode end address is: 8 (R2)
; i2cBase end address is: 0 (R0)
;__Lib_I2C_09.c, 489 :: 		
L___Lib_I2C_09_I2Cx_Read61:
; timeout start address is: 24 (R6)
; mode start address is: 8 (R2)
; i2cBase start address is: 0 (R0)
0x0C40	0x1D03    ADDS	R3, R0, #4
0x0C42	0x681C    LDR	R4, [R3, #0]
0x0C44	0xF3C40300  UBFX	R3, R4, #0, #1
0x0C48	0xB163    CBZ	R3, L___Lib_I2C_09_I2Cx_Read62
;__Lib_I2C_09.c, 491 :: 		
0x0C4A	0x9B02    LDR	R3, [SP, #8]
0x0C4C	0xB13B    CBZ	R3, L___Lib_I2C_09_I2Cx_Read111
;__Lib_I2C_09.c, 492 :: 		
0x0C4E	0xB926    CBNZ	R6, L___Lib_I2C_09_I2Cx_Read64
; timeout end address is: 24 (R6)
; mode end address is: 8 (R2)
; i2cBase end address is: 0 (R0)
;__Lib_I2C_09.c, 493 :: 		
0x0C50	0x2003    MOVS	R0, #3
0x0C52	0x9C01    LDR	R4, [SP, #4]
0x0C54	0x47A0    BLX	R4
;__Lib_I2C_09.c, 494 :: 		
0x0C56	0x2001    MOVS	R0, #1
0x0C58	0xE022    B	L_end_I2Cx_Read
;__Lib_I2C_09.c, 495 :: 		
L___Lib_I2C_09_I2Cx_Read64:
;__Lib_I2C_09.c, 496 :: 		
; i2cBase start address is: 0 (R0)
; mode start address is: 8 (R2)
; timeout start address is: 24 (R6)
0x0C5A	0x1E71    SUBS	R1, R6, #1
; timeout end address is: 24 (R6)
; timeout start address is: 4 (R1)
; timeout end address is: 4 (R1)
;__Lib_I2C_09.c, 497 :: 		
0x0C5C	0xE000    B	L___Lib_I2C_09_I2Cx_Read63
L___Lib_I2C_09_I2Cx_Read111:
;__Lib_I2C_09.c, 491 :: 		
0x0C5E	0x4631    MOV	R1, R6
;__Lib_I2C_09.c, 497 :: 		
L___Lib_I2C_09_I2Cx_Read63:
;__Lib_I2C_09.c, 498 :: 		
; timeout start address is: 4 (R1)
; timeout end address is: 4 (R1)
0x0C60	0x460E    MOV	R6, R1
0x0C62	0xE7ED    B	L___Lib_I2C_09_I2Cx_Read61
L___Lib_I2C_09_I2Cx_Read62:
;__Lib_I2C_09.c, 500 :: 		
0x0C64	0x1D03    ADDS	R3, R0, #4
0x0C66	0x681C    LDR	R4, [R3, #0]
0x0C68	0xF3C40340  UBFX	R3, R4, #1, #1
0x0C6C	0xB173    CBZ	R3, L___Lib_I2C_09_I2Cx_Read65
;__Lib_I2C_09.c, 501 :: 		
0x0C6E	0x2A09    CMP	R2, #9
0x0C70	0xD002    BEQ	L___Lib_I2C_09_I2Cx_Read109
0x0C72	0x2A0B    CMP	R2, #11
0x0C74	0xD000    BEQ	L___Lib_I2C_09_I2Cx_Read108
; mode end address is: 8 (R2)
0x0C76	0xE008    B	L___Lib_I2C_09_I2Cx_Read68
L___Lib_I2C_09_I2Cx_Read109:
L___Lib_I2C_09_I2Cx_Read108:
;__Lib_I2C_09.c, 502 :: 		
0x0C78	0x1D03    ADDS	R3, R0, #4
0x0C7A	0x681C    LDR	R4, [R3, #0]
0x0C7C	0xF3C41300  UBFX	R3, R4, #4, #1
0x0C80	0xB91B    CBNZ	R3, L___Lib_I2C_09_I2Cx_Read69
;__Lib_I2C_09.c, 503 :: 		
0x0C82	0x1D04    ADDS	R4, R0, #4
0x0C84	0xF2400304  MOVW	R3, #4
0x0C88	0x6023    STR	R3, [R4, #0]
L___Lib_I2C_09_I2Cx_Read69:
;__Lib_I2C_09.c, 504 :: 		
L___Lib_I2C_09_I2Cx_Read68:
;__Lib_I2C_09.c, 505 :: 		
0x0C8A	0xE004    B	L___Lib_I2C_09_I2Cx_Read70
L___Lib_I2C_09_I2Cx_Read65:
;__Lib_I2C_09.c, 507 :: 		
0x0C8C	0xF2000308  ADDW	R3, R0, #8
0x0C90	0x681C    LDR	R4, [R3, #0]
0x0C92	0x9B03    LDR	R3, [SP, #12]
0x0C94	0x701C    STRB	R4, [R3, #0]
L___Lib_I2C_09_I2Cx_Read70:
;__Lib_I2C_09.c, 509 :: 		
0x0C96	0x1D03    ADDS	R3, R0, #4
; i2cBase end address is: 0 (R0)
0x0C98	0x681C    LDR	R4, [R3, #0]
0x0C9A	0xF3C40340  UBFX	R3, R4, #1, #1
0x0C9E	0xB2D8    UXTB	R0, R3
;__Lib_I2C_09.c, 510 :: 		
L_end_I2Cx_Read:
0x0CA0	0xF8DDE000  LDR	LR, [SP, #0]
0x0CA4	0xB004    ADD	SP, SP, #16
0x0CA6	0x4770    BX	LR
0x0CA8	0x00004002  	I2C0_MSA+0
0x0CAC	0x00882000  	__Lib_I2C_09__I2C0_TIMEOUT+0
0x0CB0	0x449C2000  	_I2C0_Timeout_Ptr+0
0x0CB4	0x10004002  	I2C1_MSA+0
0x0CB8	0x008C2000  	__Lib_I2C_09__I2C1_TIMEOUT+0
0x0CBC	0x44A02000  	_I2C1_Timeout_Ptr+0
0x0CC0	0x20004002  	I2C2_MSA+0
0x0CC4	0x00902000  	__Lib_I2C_09__I2C2_TIMEOUT+0
0x0CC8	0x44A42000  	_I2C2_Timeout_Ptr+0
0x0CCC	0x30004002  	I2C3_MSA+0
0x0CD0	0x00942000  	__Lib_I2C_09__I2C3_TIMEOUT+0
0x0CD4	0x44A82000  	_I2C3_Timeout_Ptr+0
0x0CD8	0x0000400C  	I2C4_MSA+0
0x0CDC	0x00982000  	__Lib_I2C_09__I2C4_TIMEOUT+0
0x0CE0	0x44AC2000  	_I2C4_Timeout_Ptr+0
0x0CE4	0x1000400C  	I2C5_MSA+0
0x0CE8	0x009C2000  	__Lib_I2C_09__I2C5_TIMEOUT+0
0x0CEC	0x44B02000  	_I2C5_Timeout_Ptr+0
0x0CF0	0x2000400C  	I2C6_MSA+0
0x0CF4	0x00A02000  	__Lib_I2C_09__I2C6_TIMEOUT+0
0x0CF8	0x44B42000  	_I2C6_Timeout_Ptr+0
0x0CFC	0x3000400C  	I2C7_MSA+0
0x0D00	0x00A42000  	__Lib_I2C_09__I2C7_TIMEOUT+0
0x0D04	0x44B82000  	_I2C7_Timeout_Ptr+0
0x0D08	0x8000400B  	I2C8_MSA+0
0x0D0C	0x00A82000  	__Lib_I2C_09__I2C8_TIMEOUT+0
0x0D10	0x44BC2000  	_I2C8_Timeout_Ptr+0
0x0D14	0x9000400B  	I2C9_MSA+0
0x0D18	0x00AC2000  	__Lib_I2C_09__I2C9_TIMEOUT+0
0x0D1C	0x44C02000  	_I2C9_Timeout_Ptr+0
; end of __Lib_I2C_09_I2Cx_Read
_I2C1_Read:
;__Lib_I2C_09.c, 736 :: 		
; mode start address is: 4 (R1)
; dat start address is: 0 (R0)
0x13CC	0xB081    SUB	SP, SP, #4
0x13CE	0xF8CDE000  STR	LR, [SP, #0]
; mode end address is: 4 (R1)
; dat end address is: 0 (R0)
; dat start address is: 0 (R0)
; mode start address is: 4 (R1)
;__Lib_I2C_09.c, 737 :: 		
0x13D2	0xB2CA    UXTB	R2, R1
; mode end address is: 4 (R1)
0x13D4	0x4601    MOV	R1, R0
; dat end address is: 0 (R0)
0x13D6	0x4803    LDR	R0, [PC, #12]
0x13D8	0xF7FFFBA0  BL	__Lib_I2C_09_I2Cx_Read+0
;__Lib_I2C_09.c, 738 :: 		
L_end_I2C1_Read:
0x13DC	0xF8DDE000  LDR	LR, [SP, #0]
0x13E0	0xB001    ADD	SP, SP, #4
0x13E2	0x4770    BX	LR
0x13E4	0x10004002  	I2C1_MSA+0
; end of _I2C1_Read
_I2C2_Read:
;__Lib_I2C_09.c, 795 :: 		
; mode start address is: 4 (R1)
; dat start address is: 0 (R0)
0x1420	0xB081    SUB	SP, SP, #4
0x1422	0xF8CDE000  STR	LR, [SP, #0]
; mode end address is: 4 (R1)
; dat end address is: 0 (R0)
; dat start address is: 0 (R0)
; mode start address is: 4 (R1)
;__Lib_I2C_09.c, 796 :: 		
0x1426	0xB2CA    UXTB	R2, R1
; mode end address is: 4 (R1)
0x1428	0x4601    MOV	R1, R0
; dat end address is: 0 (R0)
0x142A	0x4803    LDR	R0, [PC, #12]
0x142C	0xF7FFFB76  BL	__Lib_I2C_09_I2Cx_Read+0
;__Lib_I2C_09.c, 797 :: 		
L_end_I2C2_Read:
0x1430	0xF8DDE000  LDR	LR, [SP, #0]
0x1434	0xB001    ADD	SP, SP, #4
0x1436	0x4770    BX	LR
0x1438	0x20004002  	I2C2_MSA+0
; end of _I2C2_Read
_I2C3_Read:
;__Lib_I2C_09.c, 853 :: 		
; mode start address is: 4 (R1)
; dat start address is: 0 (R0)
0x1404	0xB081    SUB	SP, SP, #4
0x1406	0xF8CDE000  STR	LR, [SP, #0]
; mode end address is: 4 (R1)
; dat end address is: 0 (R0)
; dat start address is: 0 (R0)
; mode start address is: 4 (R1)
;__Lib_I2C_09.c, 854 :: 		
0x140A	0xB2CA    UXTB	R2, R1
; mode end address is: 4 (R1)
0x140C	0x4601    MOV	R1, R0
; dat end address is: 0 (R0)
0x140E	0x4803    LDR	R0, [PC, #12]
0x1410	0xF7FFFB84  BL	__Lib_I2C_09_I2Cx_Read+0
;__Lib_I2C_09.c, 855 :: 		
L_end_I2C3_Read:
0x1414	0xF8DDE000  LDR	LR, [SP, #0]
0x1418	0xB001    ADD	SP, SP, #4
0x141A	0x4770    BX	LR
0x141C	0x30004002  	I2C3_MSA+0
; end of _I2C3_Read
_I2C4_Read:
;__Lib_I2C_09.c, 912 :: 		
; mode start address is: 4 (R1)
; dat start address is: 0 (R0)
0x13E8	0xB081    SUB	SP, SP, #4
0x13EA	0xF8CDE000  STR	LR, [SP, #0]
; mode end address is: 4 (R1)
; dat end address is: 0 (R0)
; dat start address is: 0 (R0)
; mode start address is: 4 (R1)
;__Lib_I2C_09.c, 913 :: 		
0x13EE	0xB2CA    UXTB	R2, R1
; mode end address is: 4 (R1)
0x13F0	0x4601    MOV	R1, R0
; dat end address is: 0 (R0)
0x13F2	0x4803    LDR	R0, [PC, #12]
0x13F4	0xF7FFFB92  BL	__Lib_I2C_09_I2Cx_Read+0
;__Lib_I2C_09.c, 914 :: 		
L_end_I2C4_Read:
0x13F8	0xF8DDE000  LDR	LR, [SP, #0]
0x13FC	0xB001    ADD	SP, SP, #4
0x13FE	0x4770    BX	LR
0x1400	0x0000400C  	I2C4_MSA+0
; end of _I2C4_Read
_I2C5_Read:
;__Lib_I2C_09.c, 971 :: 		
; mode start address is: 4 (R1)
; dat start address is: 0 (R0)
0x11BC	0xB081    SUB	SP, SP, #4
0x11BE	0xF8CDE000  STR	LR, [SP, #0]
; mode end address is: 4 (R1)
; dat end address is: 0 (R0)
; dat start address is: 0 (R0)
; mode start address is: 4 (R1)
;__Lib_I2C_09.c, 972 :: 		
0x11C2	0xB2CA    UXTB	R2, R1
; mode end address is: 4 (R1)
0x11C4	0x4601    MOV	R1, R0
; dat end address is: 0 (R0)
0x11C6	0x4803    LDR	R0, [PC, #12]
0x11C8	0xF7FFFCA8  BL	__Lib_I2C_09_I2Cx_Read+0
;__Lib_I2C_09.c, 973 :: 		
L_end_I2C5_Read:
0x11CC	0xF8DDE000  LDR	LR, [SP, #0]
0x11D0	0xB001    ADD	SP, SP, #4
0x11D2	0x4770    BX	LR
0x11D4	0x1000400C  	I2C5_MSA+0
; end of _I2C5_Read
_I2C6_Read:
;__Lib_I2C_09.c, 1030 :: 		
; mode start address is: 4 (R1)
; dat start address is: 0 (R0)
0x11A0	0xB081    SUB	SP, SP, #4
0x11A2	0xF8CDE000  STR	LR, [SP, #0]
; mode end address is: 4 (R1)
; dat end address is: 0 (R0)
; dat start address is: 0 (R0)
; mode start address is: 4 (R1)
;__Lib_I2C_09.c, 1031 :: 		
0x11A6	0xB2CA    UXTB	R2, R1
; mode end address is: 4 (R1)
0x11A8	0x4601    MOV	R1, R0
; dat end address is: 0 (R0)
0x11AA	0x4803    LDR	R0, [PC, #12]
0x11AC	0xF7FFFCB6  BL	__Lib_I2C_09_I2Cx_Read+0
;__Lib_I2C_09.c, 1032 :: 		
L_end_I2C6_Read:
0x11B0	0xF8DDE000  LDR	LR, [SP, #0]
0x11B4	0xB001    ADD	SP, SP, #4
0x11B6	0x4770    BX	LR
0x11B8	0x2000400C  	I2C6_MSA+0
; end of _I2C6_Read
_I2C7_Read:
;__Lib_I2C_09.c, 1089 :: 		
; mode start address is: 4 (R1)
; dat start address is: 0 (R0)
0x1184	0xB081    SUB	SP, SP, #4
0x1186	0xF8CDE000  STR	LR, [SP, #0]
; mode end address is: 4 (R1)
; dat end address is: 0 (R0)
; dat start address is: 0 (R0)
; mode start address is: 4 (R1)
;__Lib_I2C_09.c, 1090 :: 		
0x118A	0xB2CA    UXTB	R2, R1
; mode end address is: 4 (R1)
0x118C	0x4601    MOV	R1, R0
; dat end address is: 0 (R0)
0x118E	0x4803    LDR	R0, [PC, #12]
0x1190	0xF7FFFCC4  BL	__Lib_I2C_09_I2Cx_Read+0
;__Lib_I2C_09.c, 1091 :: 		
L_end_I2C7_Read:
0x1194	0xF8DDE000  LDR	LR, [SP, #0]
0x1198	0xB001    ADD	SP, SP, #4
0x119A	0x4770    BX	LR
0x119C	0x3000400C  	I2C7_MSA+0
; end of _I2C7_Read
_I2C8_Read:
;__Lib_I2C_09.c, 1148 :: 		
; mode start address is: 4 (R1)
; dat start address is: 0 (R0)
0x11D8	0xB081    SUB	SP, SP, #4
0x11DA	0xF8CDE000  STR	LR, [SP, #0]
; mode end address is: 4 (R1)
; dat end address is: 0 (R0)
; dat start address is: 0 (R0)
; mode start address is: 4 (R1)
;__Lib_I2C_09.c, 1149 :: 		
0x11DE	0xB2CA    UXTB	R2, R1
; mode end address is: 4 (R1)
0x11E0	0x4601    MOV	R1, R0
; dat end address is: 0 (R0)
0x11E2	0x4803    LDR	R0, [PC, #12]
0x11E4	0xF7FFFC9A  BL	__Lib_I2C_09_I2Cx_Read+0
;__Lib_I2C_09.c, 1150 :: 		
L_end_I2C8_Read:
0x11E8	0xF8DDE000  LDR	LR, [SP, #0]
0x11EC	0xB001    ADD	SP, SP, #4
0x11EE	0x4770    BX	LR
0x11F0	0x8000400B  	I2C8_MSA+0
; end of _I2C8_Read
_I2C9_Read:
;__Lib_I2C_09.c, 1207 :: 		
; mode start address is: 4 (R1)
; dat start address is: 0 (R0)
0x135C	0xB081    SUB	SP, SP, #4
0x135E	0xF8CDE000  STR	LR, [SP, #0]
; mode end address is: 4 (R1)
; dat end address is: 0 (R0)
; dat start address is: 0 (R0)
; mode start address is: 4 (R1)
;__Lib_I2C_09.c, 1208 :: 		
0x1362	0xB2CA    UXTB	R2, R1
; mode end address is: 4 (R1)
0x1364	0x4601    MOV	R1, R0
; dat end address is: 0 (R0)
0x1366	0x4803    LDR	R0, [PC, #12]
0x1368	0xF7FFFBD8  BL	__Lib_I2C_09_I2Cx_Read+0
;__Lib_I2C_09.c, 1209 :: 		
L_end_I2C9_Read:
0x136C	0xF8DDE000  LDR	LR, [SP, #0]
0x1370	0xB001    ADD	SP, SP, #4
0x1372	0x4770    BX	LR
0x1374	0x9000400B  	I2C9_MSA+0
; end of _I2C9_Read
_irgrid2_ExtractParameters:
;__irgrid2_driver.c, 956 :: 		int irgrid2_ExtractParameters(uint16_t *eeData, paramsMLX90640 *mlx90640)
0x4164	0xB084    SUB	SP, SP, #16
0x4166	0xF8CDE000  STR	LR, [SP, #0]
0x416A	0x9002    STR	R0, [SP, #8]
0x416C	0x9103    STR	R1, [SP, #12]
;__irgrid2_driver.c, 958 :: 		int error = CheckEEPROMValid(eeData);
0x416E	0x9802    LDR	R0, [SP, #8]
0x4170	0xF7FDFE20  BL	__irgrid2_driver_CheckEEPROMValid+0
0x4174	0xF8AD0004  STRH	R0, [SP, #4]
;__irgrid2_driver.c, 960 :: 		if(error == 0)
0x4178	0xBBC8    CBNZ	R0, L_irgrid2_ExtractParameters174
;__irgrid2_driver.c, 962 :: 		ExtractVDDParameters(eeData, mlx90640);
0x417A	0x9903    LDR	R1, [SP, #12]
0x417C	0x9802    LDR	R0, [SP, #8]
0x417E	0xF7FDFE5F  BL	__irgrid2_driver_ExtractVDDParameters+0
;__irgrid2_driver.c, 963 :: 		ExtractPTATParameters(eeData, mlx90640);
0x4182	0x9903    LDR	R1, [SP, #12]
0x4184	0x9802    LDR	R0, [SP, #8]
0x4186	0xF7FDFE7F  BL	__irgrid2_driver_ExtractPTATParameters+0
;__irgrid2_driver.c, 964 :: 		ExtractGainParameters(eeData, mlx90640);
0x418A	0x9903    LDR	R1, [SP, #12]
0x418C	0x9802    LDR	R0, [SP, #8]
0x418E	0xF7FEFC97  BL	__irgrid2_driver_ExtractGainParameters+0
;__irgrid2_driver.c, 965 :: 		ExtractTgcParameters(eeData, mlx90640);
0x4192	0x9903    LDR	R1, [SP, #12]
0x4194	0x9802    LDR	R0, [SP, #8]
0x4196	0xF7FEFC69  BL	__irgrid2_driver_ExtractTgcParameters+0
;__irgrid2_driver.c, 966 :: 		ExtractResolutionParameters(eeData, mlx90640);
0x419A	0x9903    LDR	R1, [SP, #12]
0x419C	0x9802    LDR	R0, [SP, #8]
0x419E	0xF7FEFC59  BL	__irgrid2_driver_ExtractResolutionParameters+0
;__irgrid2_driver.c, 967 :: 		ExtractKsTaParameters(eeData, mlx90640);
0x41A2	0x9903    LDR	R1, [SP, #12]
0x41A4	0x9802    LDR	R0, [SP, #8]
0x41A6	0xF7FEFC9D  BL	__irgrid2_driver_ExtractKsTaParameters+0
;__irgrid2_driver.c, 968 :: 		ExtractKsToParameters(eeData, mlx90640);
0x41AA	0x9903    LDR	R1, [SP, #12]
0x41AC	0x9802    LDR	R0, [SP, #8]
0x41AE	0xF7FEFFFF  BL	__irgrid2_driver_ExtractKsToParameters+0
;__irgrid2_driver.c, 969 :: 		ExtractAlphaParameters(eeData, mlx90640);
0x41B2	0x9903    LDR	R1, [SP, #12]
0x41B4	0x9802    LDR	R0, [SP, #8]
0x41B6	0xF7FEFE33  BL	__irgrid2_driver_ExtractAlphaParameters+0
;__irgrid2_driver.c, 970 :: 		ExtractOffsetParameters(eeData, mlx90640);
0x41BA	0x9903    LDR	R1, [SP, #12]
0x41BC	0x9802    LDR	R0, [SP, #8]
0x41BE	0xF7FEFCBD  BL	__irgrid2_driver_ExtractOffsetParameters+0
;__irgrid2_driver.c, 971 :: 		ExtractKtaPixelParameters(eeData, mlx90640);
0x41C2	0x9903    LDR	R1, [SP, #12]
0x41C4	0x9802    LDR	R0, [SP, #8]
0x41C6	0xF7FEF8F7  BL	__irgrid2_driver_ExtractKtaPixelParameters+0
;__irgrid2_driver.c, 972 :: 		ExtractKvPixelParameters(eeData, mlx90640);
0x41CA	0x9903    LDR	R1, [SP, #12]
0x41CC	0x9802    LDR	R0, [SP, #8]
0x41CE	0xF7FEF839  BL	__irgrid2_driver_ExtractKvPixelParameters+0
;__irgrid2_driver.c, 973 :: 		ExtractCPParameters(eeData, mlx90640);
0x41D2	0x9903    LDR	R1, [SP, #12]
0x41D4	0x9802    LDR	R0, [SP, #8]
0x41D6	0xF7FDFED7  BL	__irgrid2_driver_ExtractCPParameters+0
;__irgrid2_driver.c, 974 :: 		ExtractCILCParameters(eeData, mlx90640);
0x41DA	0x9903    LDR	R1, [SP, #12]
0x41DC	0x9802    LDR	R0, [SP, #8]
0x41DE	0xF7FEF9FD  BL	__irgrid2_driver_ExtractCILCParameters+0
;__irgrid2_driver.c, 975 :: 		error = ExtractDeviatingPixels(eeData, mlx90640);
0x41E2	0x9903    LDR	R1, [SP, #12]
0x41E4	0x9802    LDR	R0, [SP, #8]
0x41E6	0xF7FEFB41  BL	__irgrid2_driver_ExtractDeviatingPixels+0
0x41EA	0xF8AD0004  STRH	R0, [SP, #4]
;__irgrid2_driver.c, 976 :: 		}
L_irgrid2_ExtractParameters174:
;__irgrid2_driver.c, 977 :: 		return error;
0x41EE	0xF9BD0004  LDRSH	R0, [SP, #4]
;__irgrid2_driver.c, 978 :: 		}
L_end_irgrid2_ExtractParameters:
0x41F2	0xF8DDE000  LDR	LR, [SP, #0]
0x41F6	0xB004    ADD	SP, SP, #16
0x41F8	0x4770    BX	LR
; end of _irgrid2_ExtractParameters
__irgrid2_driver_CheckEEPROMValid:
;__irgrid2_driver.c, 243 :: 		static int CheckEEPROMValid(uint16_t *eeData)
; eeData start address is: 0 (R0)
; eeData end address is: 0 (R0)
; eeData start address is: 0 (R0)
;__irgrid2_driver.c, 246 :: 		deviceSelect = eeData[10] & 0x0040;
0x1DB4	0xF2000114  ADDW	R1, R0, #20
; eeData end address is: 0 (R0)
0x1DB8	0x8809    LDRH	R1, [R1, #0]
0x1DBA	0xF0010140  AND	R1, R1, #64
;__irgrid2_driver.c, 247 :: 		if(deviceSelect == 0)
0x1DBE	0xB209    SXTH	R1, R1
0x1DC0	0xB911    CBNZ	R1, L___irgrid2_driver_CheckEEPROMValid41
;__irgrid2_driver.c, 249 :: 		return 0;
0x1DC2	0x2000    MOVS	R0, #0
0x1DC4	0xB200    SXTH	R0, R0
0x1DC6	0xE002    B	L_end_CheckEEPROMValid
;__irgrid2_driver.c, 250 :: 		}
L___irgrid2_driver_CheckEEPROMValid41:
;__irgrid2_driver.c, 251 :: 		return -7;
0x1DC8	0xF64F70F9  MOVW	R0, #65529
0x1DCC	0xB200    SXTH	R0, R0
;__irgrid2_driver.c, 252 :: 		}
L_end_CheckEEPROMValid:
0x1DCE	0x4770    BX	LR
; end of __irgrid2_driver_CheckEEPROMValid
__irgrid2_driver_ExtractVDDParameters:
;__irgrid2_driver.c, 253 :: 		static void ExtractVDDParameters(uint16_t *eeData, paramsMLX90640 *mlx90640)
; mlx90640 start address is: 4 (R1)
; eeData start address is: 0 (R0)
; mlx90640 end address is: 4 (R1)
; eeData end address is: 0 (R0)
; eeData start address is: 0 (R0)
; mlx90640 start address is: 4 (R1)
;__irgrid2_driver.c, 260 :: 		kVdd = (eeData[51] & 0xFF00) >> 8;
0x1E40	0xF2000266  ADDW	R2, R0, #102
0x1E44	0x8812    LDRH	R2, [R2, #0]
0x1E46	0xF402427F  AND	R2, R2, #65280
0x1E4A	0xB292    UXTH	R2, R2
0x1E4C	0x0A12    LSRS	R2, R2, #8
; kVdd start address is: 12 (R3)
0x1E4E	0xB213    SXTH	R3, R2
;__irgrid2_driver.c, 261 :: 		if(kVdd > 127)
0x1E50	0xB212    SXTH	R2, R2
0x1E52	0x2A7F    CMP	R2, #127
0x1E54	0xDD04    BLE	L___irgrid2_driver_ExtractVDDParameters225
;__irgrid2_driver.c, 263 :: 		kVdd = kVdd - 256;
0x1E56	0xF5A37280  SUB	R2, R3, #256
0x1E5A	0xB213    SXTH	R3, R2
; kVdd end address is: 12 (R3)
0x1E5C	0xB21A    SXTH	R2, R3
;__irgrid2_driver.c, 264 :: 		}
0x1E5E	0xE000    B	L___irgrid2_driver_ExtractVDDParameters42
L___irgrid2_driver_ExtractVDDParameters225:
;__irgrid2_driver.c, 261 :: 		if(kVdd > 127)
0x1E60	0xB21A    SXTH	R2, R3
;__irgrid2_driver.c, 264 :: 		}
L___irgrid2_driver_ExtractVDDParameters42:
;__irgrid2_driver.c, 265 :: 		kVdd = 32 * kVdd;
; kVdd start address is: 8 (R2)
0x1E62	0x0153    LSLS	R3, R2, #5
; kVdd end address is: 8 (R2)
;__irgrid2_driver.c, 266 :: 		vdd25 = eeData[51] & 0x00FF;
0x1E64	0xF2000266  ADDW	R2, R0, #102
; eeData end address is: 0 (R0)
0x1E68	0x8812    LDRH	R2, [R2, #0]
0x1E6A	0xF00202FF  AND	R2, R2, #255
;__irgrid2_driver.c, 267 :: 		vdd25 = ((vdd25 - 256) << 5) - 8192;
0x1E6E	0xB212    SXTH	R2, R2
0x1E70	0xF5A27280  SUB	R2, R2, #256
0x1E74	0xB212    SXTH	R2, R2
0x1E76	0x0152    LSLS	R2, R2, #5
0x1E78	0xB212    SXTH	R2, R2
0x1E7A	0xF5A25200  SUB	R2, R2, #8192
; vdd25 start address is: 0 (R0)
0x1E7E	0xB210    SXTH	R0, R2
;__irgrid2_driver.c, 269 :: 		mlx90640->kVdd = kVdd;
0x1E80	0x800B    STRH	R3, [R1, #0]
;__irgrid2_driver.c, 270 :: 		mlx90640->vdd25 = vdd25;
0x1E82	0x1C8A    ADDS	R2, R1, #2
; mlx90640 end address is: 4 (R1)
0x1E84	0x8010    STRH	R0, [R2, #0]
; vdd25 end address is: 0 (R0)
;__irgrid2_driver.c, 271 :: 		}
L_end_ExtractVDDParameters:
0x1E86	0x4770    BX	LR
; end of __irgrid2_driver_ExtractVDDParameters
__irgrid2_driver_ExtractPTATParameters:
;__irgrid2_driver.c, 273 :: 		static void ExtractPTATParameters(uint16_t *eeData, paramsMLX90640 *mlx90640)
; mlx90640 start address is: 4 (R1)
; eeData start address is: 0 (R0)
0x1E88	0xB082    SUB	SP, SP, #8
0x1E8A	0xF8CDE000  STR	LR, [SP, #0]
0x1E8E	0x460E    MOV	R6, R1
; mlx90640 end address is: 4 (R1)
; eeData end address is: 0 (R0)
; eeData start address is: 0 (R0)
; mlx90640 start address is: 24 (R6)
;__irgrid2_driver.c, 280 :: 		KvPTAT = (eeData[50] & 0xFC00) >> 10;
0x1E90	0xF2000264  ADDW	R2, R0, #100
0x1E94	0x8812    LDRH	R2, [R2, #0]
0x1E96	0xF402427C  AND	R2, R2, #64512
0x1E9A	0xB292    UXTH	R2, R2
0x1E9C	0x0A92    LSRS	R2, R2, #10
0x1E9E	0xB292    UXTH	R2, R2
0x1EA0	0xEE002A90  VMOV	S1, R2
0x1EA4	0xEEF80A60  VCVT.F32.U32	S1, S1
; KvPTAT start address is: 8 (S2)
0x1EA8	0xEEB01A60  VMOV.F32	S2, S1
;__irgrid2_driver.c, 281 :: 		if(KvPTAT > 31)
0x1EAC	0xEEB30A0F  VMOV.F32	S0, #31
0x1EB0	0xEEF40AC0  VCMPE.F32	S1, S0
0x1EB4	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x1EB8	0xDD06    BLE	L___irgrid2_driver_ExtractPTATParameters226
;__irgrid2_driver.c, 283 :: 		KvPTAT = KvPTAT - 64;
0x1EBA	0xF04F4285  MOV	R2, #1115684864
0x1EBE	0xEE002A10  VMOV	S0, R2
0x1EC2	0xEE710A40  VSUB.F32	S1, S2, S0
; KvPTAT end address is: 8 (S2)
; KvPTAT start address is: 4 (S1)
; KvPTAT end address is: 4 (S1)
;__irgrid2_driver.c, 284 :: 		}
0x1EC6	0xE001    B	L___irgrid2_driver_ExtractPTATParameters43
L___irgrid2_driver_ExtractPTATParameters226:
;__irgrid2_driver.c, 281 :: 		if(KvPTAT > 31)
0x1EC8	0xEEF00A41  VMOV.F32	S1, S2
;__irgrid2_driver.c, 284 :: 		}
L___irgrid2_driver_ExtractPTATParameters43:
;__irgrid2_driver.c, 285 :: 		KvPTAT = KvPTAT/4096;
; KvPTAT start address is: 4 (S1)
0x1ECC	0xF04F428B  MOV	R2, #1166016512
0x1ED0	0xEE002A10  VMOV	S0, R2
0x1ED4	0xEE800A80  VDIV.F32	S0, S1, S0
; KvPTAT end address is: 4 (S1)
; KvPTAT start address is: 24 (S6)
0x1ED8	0xEEB03A40  VMOV.F32	S6, S0
;__irgrid2_driver.c, 287 :: 		KtPTAT = eeData[50] & 0x03FF;
0x1EDC	0xF2000264  ADDW	R2, R0, #100
0x1EE0	0x8813    LDRH	R3, [R2, #0]
0x1EE2	0xF24032FF  MOVW	R2, #1023
0x1EE6	0xEA030202  AND	R2, R3, R2, LSL #0
0x1EEA	0xB292    UXTH	R2, R2
0x1EEC	0xEE002A90  VMOV	S1, R2
0x1EF0	0xEEF80A60  VCVT.F32.U32	S1, S1
; KtPTAT start address is: 8 (S2)
0x1EF4	0xEEB01A60  VMOV.F32	S2, S1
;__irgrid2_driver.c, 288 :: 		if(KtPTAT > 511)
0x1EF8	0x4A22    LDR	R2, [PC, #136]
0x1EFA	0xEE002A10  VMOV	S0, R2
0x1EFE	0xEEF40AC0  VCMPE.F32	S1, S0
0x1F02	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x1F06	0xDD06    BLE	L___irgrid2_driver_ExtractPTATParameters227
;__irgrid2_driver.c, 290 :: 		KtPTAT = KtPTAT - 1024;
0x1F08	0xF04F4289  MOV	R2, #1149239296
0x1F0C	0xEE002A10  VMOV	S0, R2
0x1F10	0xEE710A40  VSUB.F32	S1, S2, S0
; KtPTAT end address is: 8 (S2)
; KtPTAT start address is: 4 (S1)
; KtPTAT end address is: 4 (S1)
;__irgrid2_driver.c, 291 :: 		}
0x1F14	0xE001    B	L___irgrid2_driver_ExtractPTATParameters44
L___irgrid2_driver_ExtractPTATParameters227:
;__irgrid2_driver.c, 288 :: 		if(KtPTAT > 511)
0x1F16	0xEEF00A41  VMOV.F32	S1, S2
;__irgrid2_driver.c, 291 :: 		}
L___irgrid2_driver_ExtractPTATParameters44:
;__irgrid2_driver.c, 292 :: 		KtPTAT = KtPTAT/8;
; KtPTAT start address is: 4 (S1)
0x1F1A	0xEEB20A00  VMOV.F32	S0, #8
0x1F1E	0xEE800A80  VDIV.F32	S0, S1, S0
; KtPTAT end address is: 4 (S1)
; KtPTAT start address is: 28 (S7)
0x1F22	0xEEF03A40  VMOV.F32	S7, S0
;__irgrid2_driver.c, 294 :: 		vPTAT25 = eeData[49];
0x1F26	0xF2000262  ADDW	R2, R0, #98
0x1F2A	0x8812    LDRH	R2, [R2, #0]
; vPTAT25 start address is: 28 (R7)
0x1F2C	0xB217    SXTH	R7, R2
;__irgrid2_driver.c, 296 :: 		alphaPTAT = (eeData[16] & 0xF000) / _pow(2, (double)14) + 8.0f;
0x1F2E	0xF2000220  ADDW	R2, R0, #32
; eeData end address is: 0 (R0)
0x1F32	0x8812    LDRH	R2, [R2, #0]
0x1F34	0xF4024270  AND	R2, R2, #61440
0x1F38	0xF8AD2004  STRH	R2, [SP, #4]
0x1F3C	0xEEF20A0C  VMOV.F32	S1, #14
0x1F40	0xEEB00A00  VMOV.F32	S0, #2
0x1F44	0xF7FFFBC2  BL	__irgrid2_driver__pow+0
0x1F48	0xF8BD2004  LDRH	R2, [SP, #4]
0x1F4C	0xEE002A90  VMOV	S1, R2
0x1F50	0xEEF80A60  VCVT.F32.U32	S1, S1
0x1F54	0xEEC00A80  VDIV.F32	S1, S1, S0
0x1F58	0xEEB20A00  VMOV.F32	S0, #8
0x1F5C	0xEE300A80  VADD.F32	S0, S1, S0
; alphaPTAT start address is: 0 (S0)
;__irgrid2_driver.c, 298 :: 		mlx90640->KvPTAT = KvPTAT;
0x1F60	0x1D32    ADDS	R2, R6, #4
0x1F62	0xED023A00  VSTR.32	S6, [R2, #0]
; KvPTAT end address is: 24 (S6)
;__irgrid2_driver.c, 299 :: 		mlx90640->KtPTAT = KtPTAT;
0x1F66	0xF2060208  ADDW	R2, R6, #8
0x1F6A	0xED423A00  VSTR.32	S7, [R2, #0]
; KtPTAT end address is: 28 (S7)
;__irgrid2_driver.c, 300 :: 		mlx90640->vPTAT25 = vPTAT25;
0x1F6E	0xF206020C  ADDW	R2, R6, #12
0x1F72	0x8017    STRH	R7, [R2, #0]
; vPTAT25 end address is: 28 (R7)
;__irgrid2_driver.c, 301 :: 		mlx90640->alphaPTAT = alphaPTAT;
0x1F74	0xF2060210  ADDW	R2, R6, #16
; mlx90640 end address is: 24 (R6)
0x1F78	0xED020A00  VSTR.32	S0, [R2, #0]
; alphaPTAT end address is: 0 (S0)
;__irgrid2_driver.c, 302 :: 		}
L_end_ExtractPTATParameters:
0x1F7C	0xF8DDE000  LDR	LR, [SP, #0]
0x1F80	0xB002    ADD	SP, SP, #8
0x1F82	0x4770    BX	LR
0x1F84	0x800043FF  	#1140817920
; end of __irgrid2_driver_ExtractPTATParameters
__irgrid2_driver__pow:
;__irgrid2_driver.c, 216 :: 		static double _pow(double x, double y) {
0x16CC	0xB082    SUB	SP, SP, #8
0x16CE	0xF8CDE000  STR	LR, [SP, #0]
; y start address is: 4 (S1)
; x start address is: 0 (S0)
0x16D2	0xEEF02A40  VMOV.F32	S5, S0
0x16D6	0xEEB02A60  VMOV.F32	S4, S1
; y end address is: 4 (S1)
; x end address is: 0 (S0)
; x start address is: 20 (S5)
; y start address is: 16 (S4)
;__irgrid2_driver.c, 217 :: 		unsigned char sign = 0;
; sign start address is: 0 (R0)
0x16DA	0x2000    MOVS	R0, #0
;__irgrid2_driver.c, 221 :: 		if(y == 0.0)
0x16DC	0xEEB52AC0  VCMPE.F32	S4, #0.0
0x16E0	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x16E4	0xD102    BNE	L___irgrid2_driver__pow36
; x end address is: 20 (S5)
; y end address is: 16 (S4)
; sign end address is: 0 (R0)
;__irgrid2_driver.c, 222 :: 		return 1.0;
0x16E6	0xEEB70A00  VMOV.F32	S0, #1
0x16EA	0xE03E    B	L_end__pow
L___irgrid2_driver__pow36:
;__irgrid2_driver.c, 223 :: 		if(x == 0.0)
; sign start address is: 0 (R0)
; y start address is: 16 (S4)
; x start address is: 20 (S5)
0x16EC	0xEEF52AC0  VCMPE.F32	S5, #0.0
0x16F0	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x16F4	0xD104    BNE	L___irgrid2_driver__pow37
; x end address is: 20 (S5)
; y end address is: 16 (S4)
; sign end address is: 0 (R0)
;__irgrid2_driver.c, 224 :: 		return 0.0;
0x16F6	0xF04F0200  MOV	R2, #0
0x16FA	0xEE002A10  VMOV	S0, R2
0x16FE	0xE034    B	L_end__pow
L___irgrid2_driver__pow37:
;__irgrid2_driver.c, 225 :: 		if(x < 0.0) {
; sign start address is: 0 (R0)
; y start address is: 16 (S4)
; x start address is: 20 (S5)
0x1700	0xEEF52AC0  VCMPE.F32	S5, #0.0
0x1704	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x1708	0xDA1B    BGE	L___irgrid2_driver__pow224
; sign end address is: 0 (R0)
;__irgrid2_driver.c, 226 :: 		yi = (long)y;
0x170A	0xEEBD0A42  VCVT.S32.F32	S0, S4
0x170E	0xEE102A10  VMOV	R2, S0
; yi start address is: 0 (R0)
0x1712	0x4610    MOV	R0, R2
;__irgrid2_driver.c, 227 :: 		if((double)yi != y)
0x1714	0xEE002A10  VMOV	S0, R2
0x1718	0xEEB80AC0  VCVT.F32.S32	S0, S0
0x171C	0xEEB40AC2  VCMPE.F32	S0, S4
0x1720	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x1724	0xD004    BEQ	L___irgrid2_driver__pow39
; x end address is: 20 (S5)
; y end address is: 16 (S4)
; yi end address is: 0 (R0)
;__irgrid2_driver.c, 228 :: 		return 0.0;
0x1726	0xF04F0200  MOV	R2, #0
0x172A	0xEE002A10  VMOV	S0, R2
0x172E	0xE01C    B	L_end__pow
L___irgrid2_driver__pow39:
;__irgrid2_driver.c, 229 :: 		sign = yi & 1;
; yi start address is: 0 (R0)
; y start address is: 16 (S4)
; x start address is: 20 (S5)
0x1730	0xF0000201  AND	R2, R0, #1
; yi end address is: 0 (R0)
; sign start address is: 0 (R0)
0x1734	0xB2D0    UXTB	R0, R2
;__irgrid2_driver.c, 230 :: 		x = -x;
0x1736	0xEEF10A62  VNEG.F32	S1, S5
; x end address is: 20 (S5)
; x start address is: 4 (S1)
; sign end address is: 0 (R0)
; x end address is: 4 (S1)
0x173A	0xB2C5    UXTB	R5, R0
0x173C	0xEEB00A60  VMOV.F32	S0, S1
;__irgrid2_driver.c, 231 :: 		}
0x1740	0xE005    B	L___irgrid2_driver__pow38
L___irgrid2_driver__pow224:
;__irgrid2_driver.c, 225 :: 		if(x < 0.0) {
0x1742	0xF88D0004  STRB	R0, [SP, #4]
0x1746	0xEEB00A62  VMOV.F32	S0, S5
0x174A	0xF89D5004  LDRB	R5, [SP, #4]
;__irgrid2_driver.c, 231 :: 		}
L___irgrid2_driver__pow38:
;__irgrid2_driver.c, 232 :: 		x = _log(x);
; x start address is: 0 (S0)
; sign start address is: 20 (R5)
; x end address is: 0 (S0)
0x174E	0xF7FFFDCB  BL	__irgrid2_driver__log+0
;__irgrid2_driver.c, 233 :: 		x = x*y;
0x1752	0xEE200A02  VMUL.F32	S0, S0, S4
; y end address is: 16 (S4)
;__irgrid2_driver.c, 234 :: 		x = _exp(x);
0x1756	0xF7FFFD4D  BL	__irgrid2_driver__exp+0
; x start address is: 4 (S1)
0x175A	0xEEF00A40  VMOV.F32	S1, S0
;__irgrid2_driver.c, 236 :: 		if(sign)
0x175E	0xB115    CBZ	R5, L___irgrid2_driver__pow40
; sign end address is: 20 (R5)
;__irgrid2_driver.c, 237 :: 		return -x;
0x1760	0xEEB10A60  VNEG.F32	S0, S1
; x end address is: 4 (S1)
0x1764	0xE001    B	L_end__pow
L___irgrid2_driver__pow40:
;__irgrid2_driver.c, 238 :: 		return x;
; x start address is: 4 (S1)
0x1766	0xEEB00A60  VMOV.F32	S0, S1
; x end address is: 4 (S1)
;__irgrid2_driver.c, 239 :: 		}
L_end__pow:
0x176A	0xF8DDE000  LDR	LR, [SP, #0]
0x176E	0xB002    ADD	SP, SP, #8
0x1770	0x4770    BX	LR
; end of __irgrid2_driver__pow
__irgrid2_driver__log:
;__irgrid2_driver.c, 190 :: 		static double _log(double x) {
0x12E8	0xB082    SUB	SP, SP, #8
0x12EA	0xF8CDE000  STR	LR, [SP, #0]
; x start address is: 0 (S0)
; x end address is: 0 (S0)
; x start address is: 0 (S0)
;__irgrid2_driver.c, 206 :: 		if(x <= 0.0)
0x12EE	0xEEB50AC0  VCMPE.F32	S0, #0.0
0x12F2	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x12F6	0xDC04    BGT	L___irgrid2_driver__log35
; x end address is: 0 (S0)
;__irgrid2_driver.c, 207 :: 		return 0.0;
0x12F8	0xF04F0100  MOV	R1, #0
0x12FC	0xEE001A10  VMOV	S0, R1
0x1300	0xE023    B	L_end__log
L___irgrid2_driver__log35:
;__irgrid2_driver.c, 208 :: 		x = _frexp(x, &exp) * 2.0 - 1.0;
; x start address is: 0 (S0)
0x1302	0xA901    ADD	R1, SP, #4
0x1304	0x4608    MOV	R0, R1
; x end address is: 0 (S0)
0x1306	0xF7FFFE67  BL	__irgrid2_driver__frexp+0
0x130A	0xEEF00A00  VMOV.F32	S1, #2
0x130E	0xEE600A20  VMUL.F32	S1, S0, S1
0x1312	0xEEB70A00  VMOV.F32	S0, #1
0x1316	0xEE300AC0  VSUB.F32	S0, S1, S0
;__irgrid2_driver.c, 209 :: 		exp--;
0x131A	0xF9BD1004  LDRSH	R1, [SP, #4]
0x131E	0x1E49    SUBS	R1, R1, #1
0x1320	0xF8AD1004  STRH	R1, [SP, #4]
;__irgrid2_driver.c, 210 :: 		x = _eval_poly(x, coeff, sizeof coeff/sizeof coeff[0] - 1);
0x1324	0xF2400108  MOVW	R1, #8
0x1328	0xB209    SXTH	R1, R1
0x132A	0x480A    LDR	R0, [PC, #40]
0x132C	0xF7FFFCF8  BL	__irgrid2_driver__eval_poly+0
;__irgrid2_driver.c, 211 :: 		return x + 0.69314718055995 * exp;
0x1330	0xF9BD1004  LDRSH	R1, [SP, #4]
0x1334	0xEE011A10  VMOV	S2, R1
0x1338	0xEEB81AC1  VCVT.F32.S32	S2, S2
0x133C	0x4906    LDR	R1, [PC, #24]
0x133E	0xEE001A90  VMOV	S1, R1
0x1342	0xEE600A81  VMUL.F32	S1, S1, S2
0x1346	0xEE300A20  VADD.F32	S0, S0, S1
;__irgrid2_driver.c, 213 :: 		}
L_end__log:
0x134A	0xF8DDE000  LDR	LR, [SP, #0]
0x134E	0xB002    ADD	SP, SP, #8
0x1350	0x4770    BX	LR
0x1352	0xBF00    NOP
0x1354	0x54E80000  	__irgrid2_driver__log_coeff_L0+0
0x1358	0x72183F31  	#1060205080
; end of __irgrid2_driver__log
__irgrid2_driver__frexp:
;__irgrid2_driver.c, 85 :: 		static double _frexp(double value, int * eptr) {
; eptr start address is: 0 (R0)
0x0FD8	0xB081    SUB	SP, SP, #4
; value start address is: 0 (S0)
; eptr end address is: 0 (R0)
; value end address is: 0 (S0)
; value start address is: 0 (S0)
; eptr start address is: 0 (R0)
;__irgrid2_driver.c, 89 :: 		uv.fl = value;
0x0FDA	0xED0D0A00  VSTR.32	S0, [SP, #0]
; value end address is: 0 (S0)
;__irgrid2_driver.c, 90 :: 		bb = uv.flt.exp - EXCESS;
0x0FDE	0xF8BD1002  LDRH	R1, [SP, #2]
0x0FE2	0xF3C111C7  UBFX	R1, R1, #7, #8
0x0FE6	0x397E    SUBS	R1, #126
; bb start address is: 4 (R1)
0x0FE8	0xB209    SXTH	R1, R1
;__irgrid2_driver.c, 91 :: 		*eptr = bb;
0x0FEA	0x8001    STRH	R1, [R0, #0]
; eptr end address is: 0 (R0)
; bb end address is: 4 (R1)
;__irgrid2_driver.c, 92 :: 		uv.flt.exp = EXCESS;
0x0FEC	0x227E    MOVS	R2, #126
0x0FEE	0xF8BD1002  LDRH	R1, [SP, #2]
0x0FF2	0xF36211CE  BFI	R1, R2, #7, #8
0x0FF6	0xF8AD1002  STRH	R1, [SP, #2]
;__irgrid2_driver.c, 93 :: 		return uv.fl;
0x0FFA	0xED1D0A00  VLDR.32	S0, [SP, #0]
;__irgrid2_driver.c, 94 :: 		}
L_end__frexp:
0x0FFE	0xB001    ADD	SP, SP, #4
0x1000	0x4770    BX	LR
; end of __irgrid2_driver__frexp
__irgrid2_driver__eval_poly:
;__irgrid2_driver.c, 138 :: 		static static double _eval_poly(double x, const double code * d, int n) {
; n start address is: 4 (R1)
; d start address is: 0 (R0)
0x0D20	0xB081    SUB	SP, SP, #4
; x start address is: 0 (S0)
0x0D22	0xEEF00A40  VMOV.F32	S1, S0
; n end address is: 4 (R1)
; d end address is: 0 (R0)
; x end address is: 0 (S0)
; x start address is: 4 (S1)
; d start address is: 0 (R0)
; n start address is: 4 (R1)
;__irgrid2_driver.c, 141 :: 		res = d[n];
0x0D26	0x008A    LSLS	R2, R1, #2
0x0D28	0x1882    ADDS	R2, R0, R2
0x0D2A	0xED120A00  VLDR.32	S0, [R2, #0]
; res start address is: 8 (S2)
0x0D2E	0xEEB01A40  VMOV.F32	S2, S0
; x end address is: 4 (S1)
; res end address is: 8 (S2)
; n end address is: 4 (R1)
0x0D32	0xEEB00A41  VMOV.F32	S0, S2
0x0D36	0xEEB01A60  VMOV.F32	S2, S1
;__irgrid2_driver.c, 142 :: 		while(n)
L___irgrid2_driver__eval_poly27:
; res start address is: 0 (S0)
; x start address is: 8 (S2)
; n start address is: 4 (R1)
; d start address is: 0 (R0)
; d end address is: 0 (R0)
; x start address is: 8 (S2)
; x end address is: 8 (S2)
0x0D3A	0xB179    CBZ	R1, L___irgrid2_driver__eval_poly28
; d end address is: 0 (R0)
; x end address is: 8 (S2)
;__irgrid2_driver.c, 143 :: 		res = x * res + d[--n];
; x start address is: 8 (S2)
; d start address is: 0 (R0)
0x0D3C	0xEE610A00  VMUL.F32	S1, S2, S0
; res end address is: 0 (S0)
0x0D40	0x1E4A    SUBS	R2, R1, #1
0x0D42	0xB212    SXTH	R2, R2
0x0D44	0xB211    SXTH	R1, R2
0x0D46	0x0092    LSLS	R2, R2, #2
0x0D48	0x1882    ADDS	R2, R0, R2
0x0D4A	0xED120A00  VLDR.32	S0, [R2, #0]
0x0D4E	0xEE300A80  VADD.F32	S0, S1, S0
; res start address is: 0 (S0)
0x0D52	0xED0D0A00  VSTR.32	S0, [SP, #0]
; d end address is: 0 (R0)
; x end address is: 8 (S2)
; n end address is: 4 (R1)
0x0D56	0xED1D0A00  VLDR.32	S0, [SP, #0]
0x0D5A	0xE7EE    B	L___irgrid2_driver__eval_poly27
L___irgrid2_driver__eval_poly28:
;__irgrid2_driver.c, 145 :: 		return res;
; res end address is: 0 (S0)
;__irgrid2_driver.c, 146 :: 		}
L_end__eval_poly:
0x0D5C	0xB001    ADD	SP, SP, #4
0x0D5E	0x4770    BX	LR
; end of __irgrid2_driver__eval_poly
__irgrid2_driver__exp:
;__irgrid2_driver.c, 149 :: 		static double _exp(double x) {
0x11F4	0xB081    SUB	SP, SP, #4
0x11F6	0xF8CDE000  STR	LR, [SP, #0]
; x start address is: 0 (S0)
0x11FA	0xEEF01A40  VMOV.F32	S3, S0
; x end address is: 0 (S0)
; x start address is: 12 (S3)
;__irgrid2_driver.c, 167 :: 		if(x == 0.0)
0x11FE	0xEEF51AC0  VCMPE.F32	S3, #0.0
0x1202	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x1206	0xD102    BNE	L___irgrid2_driver__exp29
; x end address is: 12 (S3)
;__irgrid2_driver.c, 168 :: 		return 1.0;
0x1208	0xEEB70A00  VMOV.F32	S0, #1
0x120C	0xE05D    B	L_end__exp
L___irgrid2_driver__exp29:
;__irgrid2_driver.c, 169 :: 		if (x > EXP_MAX)    //too big?
; x start address is: 12 (S3)
0x120E	0x4931    LDR	R1, [PC, #196]
0x1210	0xEE001A10  VMOV	S0, R1
0x1214	0xEEF41AC0  VCMPE.F32	S3, S0
0x1218	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x121C	0xDD03    BLE	L___irgrid2_driver__exp30
; x end address is: 12 (S3)
;__irgrid2_driver.c, 170 :: 		return DBL_MAX;
0x121E	0x492E    LDR	R1, [PC, #184]
0x1220	0xEE001A10  VMOV	S0, R1
0x1224	0xE051    B	L_end__exp
L___irgrid2_driver__exp30:
;__irgrid2_driver.c, 171 :: 		if (x < EXP_MIN)    //too small?
; x start address is: 12 (S3)
0x1226	0x492D    LDR	R1, [PC, #180]
0x1228	0xEE001A10  VMOV	S0, R1
0x122C	0xEEF41AC0  VCMPE.F32	S3, S0
0x1230	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x1234	0xDA04    BGE	L___irgrid2_driver__exp31
; x end address is: 12 (S3)
;__irgrid2_driver.c, 172 :: 		return 0.0;
0x1236	0xF04F0100  MOV	R1, #0
0x123A	0xEE001A10  VMOV	S0, R1
0x123E	0xE044    B	L_end__exp
L___irgrid2_driver__exp31:
;__irgrid2_driver.c, 173 :: 		sign = x < 0.0;
; x start address is: 12 (S3)
0x1240	0xEEF51AC0  VCMPE.F32	S3, #0.0
0x1244	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x1248	0xF2400100  MOVW	R1, #0
0x124C	0xDA00    BGE	L___irgrid2_driver__exp274
0x124E	0x2101    MOVS	R1, #1
L___irgrid2_driver__exp274:
; sign start address is: 12 (R3)
0x1250	0xB2CB    UXTB	R3, R1
;__irgrid2_driver.c, 174 :: 		if(sign)
0x1252	0xB2C9    UXTB	R1, R1
0x1254	0xB111    CBZ	R1, L___irgrid2_driver__exp223
;__irgrid2_driver.c, 175 :: 		x = -x;
0x1256	0xEEF10A61  VNEG.F32	S1, S3
; x end address is: 12 (S3)
; x start address is: 4 (S1)
; x end address is: 4 (S1)
0x125A	0xE001    B	L___irgrid2_driver__exp32
L___irgrid2_driver__exp223:
;__irgrid2_driver.c, 174 :: 		if(sign)
0x125C	0xEEF00A61  VMOV.F32	S1, S3
;__irgrid2_driver.c, 175 :: 		x = -x;
L___irgrid2_driver__exp32:
;__irgrid2_driver.c, 176 :: 		x *= 1.4426950409;            // convert to log2 //
; x start address is: 4 (S1)
0x1260	0x491F    LDR	R1, [PC, #124]
0x1262	0xEE001A10  VMOV	S0, R1
0x1266	0xEE200A80  VMUL.F32	S0, S1, S0
; x end address is: 4 (S1)
; x start address is: 12 (S3)
0x126A	0xEEF01A40  VMOV.F32	S3, S0
;__irgrid2_driver.c, 177 :: 		exp = (int)_floor(x);
0x126E	0xF7FFFE73  BL	__irgrid2_driver__floor+0
0x1272	0xEEBD0A40  VCVT.S32.F32	S0, S0
0x1276	0xEE101A10  VMOV	R1, S0
0x127A	0xB209    SXTH	R1, R1
; exp start address is: 16 (R4)
0x127C	0xB20C    SXTH	R4, R1
;__irgrid2_driver.c, 178 :: 		x -= (double)exp;
0x127E	0xEE001A10  VMOV	S0, R1
0x1282	0xEEB80AC0  VCVT.F32.S32	S0, S0
0x1286	0xEE310AC0  VSUB.F32	S0, S3, S0
; x end address is: 12 (S3)
;__irgrid2_driver.c, 179 :: 		x = _ldexp(_eval_poly(x, coeff, sizeof coeff/sizeof coeff[0] - 1), exp);
0x128A	0xF2400109  MOVW	R1, #9
0x128E	0xB209    SXTH	R1, R1
0x1290	0x4814    LDR	R0, [PC, #80]
0x1292	0xF7FFFD45  BL	__irgrid2_driver__eval_poly+0
0x1296	0xB220    SXTH	R0, R4
; exp end address is: 16 (R4)
0x1298	0xF7FFFC08  BL	__irgrid2_driver__ldexp+0
; x start address is: 4 (S1)
0x129C	0xEEF00A40  VMOV.F32	S1, S0
;__irgrid2_driver.c, 180 :: 		if(sign) {
0x12A0	0xB18B    CBZ	R3, L___irgrid2_driver__exp33
; sign end address is: 12 (R3)
;__irgrid2_driver.c, 181 :: 		if (x == DBL_MAX)
0x12A2	0x490D    LDR	R1, [PC, #52]
0x12A4	0xEE001A10  VMOV	S0, R1
0x12A8	0xEEF40AC0  VCMPE.F32	S1, S0
0x12AC	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x12B0	0xD104    BNE	L___irgrid2_driver__exp34
; x end address is: 4 (S1)
;__irgrid2_driver.c, 182 :: 		return 0.0;
0x12B2	0xF04F0100  MOV	R1, #0
0x12B6	0xEE001A10  VMOV	S0, R1
0x12BA	0xE006    B	L_end__exp
L___irgrid2_driver__exp34:
;__irgrid2_driver.c, 183 :: 		return 1.0/x;
; x start address is: 4 (S1)
0x12BC	0xEEB70A00  VMOV.F32	S0, #1
0x12C0	0xEE800A20  VDIV.F32	S0, S0, S1
; x end address is: 4 (S1)
0x12C4	0xE001    B	L_end__exp
;__irgrid2_driver.c, 184 :: 		}
L___irgrid2_driver__exp33:
;__irgrid2_driver.c, 185 :: 		return x;
; x start address is: 4 (S1)
0x12C6	0xEEB00A60  VMOV.F32	S0, S1
; x end address is: 4 (S1)
;__irgrid2_driver.c, 186 :: 		}
L_end__exp:
0x12CA	0xF8DDE000  LDR	LR, [SP, #0]
0x12CE	0xB001    ADD	SP, SP, #4
0x12D0	0x4770    BX	LR
0x12D2	0xBF00    NOP
0x12D4	0xD4FE42B2  	#1119016190
0x12D8	0xFFFF7F7F  	#2139095039
0x12DC	0xAC50C2AE  	#-1028740016
0x12E0	0xAA3B3FB8  	#1069066811
0x12E4	0x54C00000  	__irgrid2_driver__exp_coeff_L0+0
; end of __irgrid2_driver__exp
__irgrid2_driver__floor:
;__irgrid2_driver.c, 117 :: 		static double _floor(double x) {
0x0F58	0xB081    SUB	SP, SP, #4
0x0F5A	0xED0D0A00  VSTR.32	S0, [SP, #0]
;__irgrid2_driver.c, 121 :: 		expon = ((*(unsigned long *)&x >> 23) & 255);
0x0F5E	0xA900    ADD	R1, SP, #0
0x0F60	0x6809    LDR	R1, [R1, #0]
0x0F62	0x0DC9    LSRS	R1, R1, #23
0x0F64	0xF00101FF  AND	R1, R1, #255
;__irgrid2_driver.c, 122 :: 		expon = expon- 127;
0x0F68	0xB209    SXTH	R1, R1
0x0F6A	0x397F    SUBS	R1, #127
0x0F6C	0xB209    SXTH	R1, R1
; expon start address is: 0 (R0)
0x0F6E	0xB208    SXTH	R0, R1
;__irgrid2_driver.c, 123 :: 		if(expon < 0)
0x0F70	0x2900    CMP	R1, #0
0x0F72	0xDA0E    BGE	L___irgrid2_driver__floor22
; expon end address is: 0 (R0)
;__irgrid2_driver.c, 124 :: 		if (x < 0.0)
0x0F74	0xED1D0A00  VLDR.32	S0, [SP, #0]
0x0F78	0xEEB50AC0  VCMPE.F32	S0, #0.0
0x0F7C	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x0F80	0xDA02    BGE	L___irgrid2_driver__floor23
;__irgrid2_driver.c, 125 :: 		return -1.0;
0x0F82	0xEEBF0A00  VMOV.F32	S0, #-1
0x0F86	0xE024    B	L_end__floor
L___irgrid2_driver__floor23:
;__irgrid2_driver.c, 127 :: 		return  0.0;
0x0F88	0xF04F0100  MOV	R1, #0
0x0F8C	0xEE001A10  VMOV	S0, R1
0x0F90	0xE01F    B	L_end__floor
L___irgrid2_driver__floor22:
;__irgrid2_driver.c, 128 :: 		if((unsigned)expon > sizeof(double) * CHAR_BIT - 8)
; expon start address is: 0 (R0)
0x0F92	0xB281    UXTH	R1, R0
; expon end address is: 0 (R0)
0x0F94	0x2918    CMP	R1, #24
0x0F96	0xD902    BLS	L___irgrid2_driver__floor25
;__irgrid2_driver.c, 129 :: 		return x;           /* already an integer */
0x0F98	0xED1D0A00  VLDR.32	S0, [SP, #0]
0x0F9C	0xE019    B	L_end__floor
L___irgrid2_driver__floor25:
;__irgrid2_driver.c, 130 :: 		i = _FRNDINT(x);
0x0F9E	0xED1D0A00  VLDR.32	S0, [SP, #0]
0x0FA2	0xEEBD0A40  VCVT.S32.F32	S0, S0
0x0FA6	0xEE101A10  VMOV	R1, S0
0x0FAA	0xEE001A90  VMOV	S1, R1
0x0FAE	0xEEF80AE0  VCVT.F32.S32	S1, S1
; i start address is: 8 (S2)
0x0FB2	0xEEB01A60  VMOV.F32	S2, S1
;__irgrid2_driver.c, 132 :: 		if(i > x)
0x0FB6	0xED1D0A00  VLDR.32	S0, [SP, #0]
0x0FBA	0xEEF40AC0  VCMPE.F32	S1, S0
0x0FBE	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x0FC2	0xDD04    BLE	L___irgrid2_driver__floor26
;__irgrid2_driver.c, 133 :: 		return i - 1.0;
0x0FC4	0xEEB70A00  VMOV.F32	S0, #1
0x0FC8	0xEE310A40  VSUB.F32	S0, S2, S0
; i end address is: 8 (S2)
0x0FCC	0xE001    B	L_end__floor
L___irgrid2_driver__floor26:
;__irgrid2_driver.c, 134 :: 		return i;
; i start address is: 8 (S2)
0x0FCE	0xEEB00A41  VMOV.F32	S0, S2
; i end address is: 8 (S2)
;__irgrid2_driver.c, 135 :: 		}
L_end__floor:
0x0FD2	0xB001    ADD	SP, SP, #4
0x0FD4	0x4770    BX	LR
; end of __irgrid2_driver__floor
__irgrid2_driver__ldexp:
;__irgrid2_driver.c, 97 :: 		static double _ldexp(double value, int newexp) {
; newexp start address is: 0 (R0)
0x0AAC	0xB081    SUB	SP, SP, #4
; value start address is: 0 (S0)
; newexp end address is: 0 (R0)
; value end address is: 0 (S0)
; value start address is: 0 (S0)
; newexp start address is: 0 (R0)
;__irgrid2_driver.c, 100 :: 		uv.fl = value;
0x0AAE	0xED0D0A00  VSTR.32	S0, [SP, #0]
;__irgrid2_driver.c, 101 :: 		newexp += uv.flt.exp;
0x0AB2	0xF8BD1002  LDRH	R1, [SP, #2]
0x0AB6	0xF3C111C7  UBFX	R1, R1, #7, #8
0x0ABA	0x1841    ADDS	R1, R0, R1
0x0ABC	0xB208    SXTH	R0, R1
;__irgrid2_driver.c, 102 :: 		if (newexp < 0)
0x0ABE	0xB209    SXTH	R1, R1
0x0AC0	0x2900    CMP	R1, #0
0x0AC2	0xDA04    BGE	L___irgrid2_driver__ldexp16
; value end address is: 0 (S0)
; newexp end address is: 0 (R0)
;__irgrid2_driver.c, 103 :: 		return 0.0;
0x0AC4	0xF04F0100  MOV	R1, #0
0x0AC8	0xEE001A10  VMOV	S0, R1
0x0ACC	0xE019    B	L_end__ldexp
L___irgrid2_driver__ldexp16:
;__irgrid2_driver.c, 105 :: 		if (newexp > MAX_EXPONENT)
; newexp start address is: 0 (R0)
; value start address is: 0 (S0)
0x0ACE	0xF1B00FFF  CMP	R0, #255
0x0AD2	0xDD0D    BLE	L___irgrid2_driver__ldexp18
; newexp end address is: 0 (R0)
;__irgrid2_driver.c, 106 :: 		if (value < 0.0)
0x0AD4	0xEEB50AC0  VCMPE.F32	S0, #0.0
0x0AD8	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x0ADC	0xDA04    BGE	L___irgrid2_driver__ldexp19
; value end address is: 0 (S0)
;__irgrid2_driver.c, 107 :: 		return -DBL_MAX;
0x0ADE	0xF46F0100  MVN	R1, #8388608
0x0AE2	0xEE001A10  VMOV	S0, R1
0x0AE6	0xE00C    B	L_end__ldexp
L___irgrid2_driver__ldexp19:
;__irgrid2_driver.c, 109 :: 		return DBL_MAX;
0x0AE8	0x4907    LDR	R1, [PC, #28]
0x0AEA	0xEE001A10  VMOV	S0, R1
0x0AEE	0xE008    B	L_end__ldexp
L___irgrid2_driver__ldexp18:
;__irgrid2_driver.c, 111 :: 		uv.flt.exp = newexp;
; newexp start address is: 0 (R0)
0x0AF0	0xB282    UXTH	R2, R0
; newexp end address is: 0 (R0)
0x0AF2	0xF8BD1002  LDRH	R1, [SP, #2]
0x0AF6	0xF36211CE  BFI	R1, R2, #7, #8
0x0AFA	0xF8AD1002  STRH	R1, [SP, #2]
;__irgrid2_driver.c, 112 :: 		return uv.fl;
0x0AFE	0xED1D0A00  VLDR.32	S0, [SP, #0]
;__irgrid2_driver.c, 114 :: 		}
L_end__ldexp:
0x0B02	0xB001    ADD	SP, SP, #4
0x0B04	0x4770    BX	LR
0x0B06	0xBF00    NOP
0x0B08	0xFFFF7F7F  	#2139095039
; end of __irgrid2_driver__ldexp
__irgrid2_driver_ExtractGainParameters:
;__irgrid2_driver.c, 304 :: 		static void ExtractGainParameters(uint16_t *eeData, paramsMLX90640 *mlx90640)
; mlx90640 start address is: 4 (R1)
; eeData start address is: 0 (R0)
; mlx90640 end address is: 4 (R1)
; eeData end address is: 0 (R0)
; eeData start address is: 0 (R0)
; mlx90640 start address is: 4 (R1)
;__irgrid2_driver.c, 308 :: 		gainEE = eeData[48];
0x2AC0	0xF2000260  ADDW	R2, R0, #96
; eeData end address is: 0 (R0)
0x2AC4	0x8812    LDRH	R2, [R2, #0]
; gainEE start address is: 0 (R0)
0x2AC6	0xB210    SXTH	R0, R2
;__irgrid2_driver.c, 309 :: 		if(gainEE > 32767)
0x2AC8	0xB213    SXTH	R3, R2
0x2ACA	0xF64772FF  MOVW	R2, #32767
0x2ACE	0x4293    CMP	R3, R2
0x2AD0	0xDD03    BLE	L___irgrid2_driver_ExtractGainParameters228
;__irgrid2_driver.c, 311 :: 		gainEE = gainEE -65536;
0x2AD2	0xF5A03280  SUB	R2, R0, #65536
0x2AD6	0xB210    SXTH	R0, R2
; gainEE end address is: 0 (R0)
;__irgrid2_driver.c, 312 :: 		}
0x2AD8	0xE7FF    B	L___irgrid2_driver_ExtractGainParameters45
L___irgrid2_driver_ExtractGainParameters228:
;__irgrid2_driver.c, 309 :: 		if(gainEE > 32767)
;__irgrid2_driver.c, 312 :: 		}
L___irgrid2_driver_ExtractGainParameters45:
;__irgrid2_driver.c, 314 :: 		mlx90640->gainEE = gainEE;
; gainEE start address is: 0 (R0)
0x2ADA	0xF2010214  ADDW	R2, R1, #20
; mlx90640 end address is: 4 (R1)
0x2ADE	0x8010    STRH	R0, [R2, #0]
; gainEE end address is: 0 (R0)
;__irgrid2_driver.c, 315 :: 		}
L_end_ExtractGainParameters:
0x2AE0	0x4770    BX	LR
; end of __irgrid2_driver_ExtractGainParameters
__irgrid2_driver_ExtractTgcParameters:
;__irgrid2_driver.c, 317 :: 		static void ExtractTgcParameters(uint16_t *eeData, paramsMLX90640 *mlx90640)
; mlx90640 start address is: 4 (R1)
; eeData start address is: 0 (R0)
; mlx90640 end address is: 4 (R1)
; eeData end address is: 0 (R0)
; eeData start address is: 0 (R0)
; mlx90640 start address is: 4 (R1)
;__irgrid2_driver.c, 320 :: 		tgc = eeData[60] & 0x00FF;
0x2A6C	0xF2000278  ADDW	R2, R0, #120
; eeData end address is: 0 (R0)
0x2A70	0x8812    LDRH	R2, [R2, #0]
0x2A72	0xF00202FF  AND	R2, R2, #255
0x2A76	0xB292    UXTH	R2, R2
0x2A78	0xEE002A90  VMOV	S1, R2
0x2A7C	0xEEF80A60  VCVT.F32.U32	S1, S1
; tgc start address is: 8 (S2)
0x2A80	0xEEB01A60  VMOV.F32	S2, S1
;__irgrid2_driver.c, 321 :: 		if(tgc > 127)
0x2A84	0x4A0D    LDR	R2, [PC, #52]
0x2A86	0xEE002A10  VMOV	S0, R2
0x2A8A	0xEEF40AC0  VCMPE.F32	S1, S0
0x2A8E	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x2A92	0xDD06    BLE	L___irgrid2_driver_ExtractTgcParameters229
;__irgrid2_driver.c, 323 :: 		tgc = tgc - 256;
0x2A94	0xF04F4287  MOV	R2, #1132462080
0x2A98	0xEE002A10  VMOV	S0, R2
0x2A9C	0xEE710A40  VSUB.F32	S1, S2, S0
; tgc end address is: 8 (S2)
; tgc start address is: 4 (S1)
; tgc end address is: 4 (S1)
;__irgrid2_driver.c, 324 :: 		}
0x2AA0	0xE001    B	L___irgrid2_driver_ExtractTgcParameters46
L___irgrid2_driver_ExtractTgcParameters229:
;__irgrid2_driver.c, 321 :: 		if(tgc > 127)
0x2AA2	0xEEF00A41  VMOV.F32	S1, S2
;__irgrid2_driver.c, 324 :: 		}
L___irgrid2_driver_ExtractTgcParameters46:
;__irgrid2_driver.c, 325 :: 		tgc = tgc / 32.0f;
; tgc start address is: 4 (S1)
0x2AA6	0xF04F4284  MOV	R2, #1107296256
0x2AAA	0xEE002A10  VMOV	S0, R2
0x2AAE	0xEE800A80  VDIV.F32	S0, S1, S0
; tgc end address is: 4 (S1)
;__irgrid2_driver.c, 327 :: 		mlx90640->tgc = tgc;
0x2AB2	0xF2010218  ADDW	R2, R1, #24
; mlx90640 end address is: 4 (R1)
0x2AB6	0xED020A00  VSTR.32	S0, [R2, #0]
;__irgrid2_driver.c, 328 :: 		}
L_end_ExtractTgcParameters:
0x2ABA	0x4770    BX	LR
0x2ABC	0x000042FE  	#1123942400
; end of __irgrid2_driver_ExtractTgcParameters
__irgrid2_driver_ExtractResolutionParameters:
;__irgrid2_driver.c, 330 :: 		static void ExtractResolutionParameters(uint16_t *eeData, paramsMLX90640 *mlx90640)
; mlx90640 start address is: 4 (R1)
; eeData start address is: 0 (R0)
; mlx90640 end address is: 4 (R1)
; eeData end address is: 0 (R0)
; eeData start address is: 0 (R0)
; mlx90640 start address is: 4 (R1)
;__irgrid2_driver.c, 333 :: 		resolutionEE = (eeData[56] & 0x3000) >> 12;
0x2A54	0xF2000270  ADDW	R2, R0, #112
; eeData end address is: 0 (R0)
0x2A58	0x8812    LDRH	R2, [R2, #0]
0x2A5A	0xF4025240  AND	R2, R2, #12288
0x2A5E	0xB292    UXTH	R2, R2
0x2A60	0x0B12    LSRS	R2, R2, #12
;__irgrid2_driver.c, 335 :: 		mlx90640->resolutionEE = resolutionEE;
0x2A62	0xF2010324  ADDW	R3, R1, #36
; mlx90640 end address is: 4 (R1)
0x2A66	0xB2D2    UXTB	R2, R2
0x2A68	0x701A    STRB	R2, [R3, #0]
;__irgrid2_driver.c, 336 :: 		}
L_end_ExtractResolutionParameters:
0x2A6A	0x4770    BX	LR
; end of __irgrid2_driver_ExtractResolutionParameters
__irgrid2_driver_ExtractKsTaParameters:
;__irgrid2_driver.c, 338 :: 		static void ExtractKsTaParameters(uint16_t *eeData, paramsMLX90640 *mlx90640)
; mlx90640 start address is: 4 (R1)
; eeData start address is: 0 (R0)
; mlx90640 end address is: 4 (R1)
; eeData end address is: 0 (R0)
; eeData start address is: 0 (R0)
; mlx90640 start address is: 4 (R1)
;__irgrid2_driver.c, 341 :: 		KsTa = (eeData[60] & 0xFF00) >> 8;
0x2AE4	0xF2000278  ADDW	R2, R0, #120
; eeData end address is: 0 (R0)
0x2AE8	0x8812    LDRH	R2, [R2, #0]
0x2AEA	0xF402427F  AND	R2, R2, #65280
0x2AEE	0xB292    UXTH	R2, R2
0x2AF0	0x0A12    LSRS	R2, R2, #8
0x2AF2	0xB292    UXTH	R2, R2
0x2AF4	0xEE002A90  VMOV	S1, R2
0x2AF8	0xEEF80A60  VCVT.F32.U32	S1, S1
; KsTa start address is: 8 (S2)
0x2AFC	0xEEB01A60  VMOV.F32	S2, S1
;__irgrid2_driver.c, 342 :: 		if(KsTa > 127)
0x2B00	0x4A0D    LDR	R2, [PC, #52]
0x2B02	0xEE002A10  VMOV	S0, R2
0x2B06	0xEEF40AC0  VCMPE.F32	S1, S0
0x2B0A	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x2B0E	0xDD06    BLE	L___irgrid2_driver_ExtractKsTaParameters230
;__irgrid2_driver.c, 344 :: 		KsTa = KsTa -256;
0x2B10	0xF04F4287  MOV	R2, #1132462080
0x2B14	0xEE002A10  VMOV	S0, R2
0x2B18	0xEE710A40  VSUB.F32	S1, S2, S0
; KsTa end address is: 8 (S2)
; KsTa start address is: 4 (S1)
; KsTa end address is: 4 (S1)
;__irgrid2_driver.c, 345 :: 		}
0x2B1C	0xE001    B	L___irgrid2_driver_ExtractKsTaParameters47
L___irgrid2_driver_ExtractKsTaParameters230:
;__irgrid2_driver.c, 342 :: 		if(KsTa > 127)
0x2B1E	0xEEF00A41  VMOV.F32	S1, S2
;__irgrid2_driver.c, 345 :: 		}
L___irgrid2_driver_ExtractKsTaParameters47:
;__irgrid2_driver.c, 346 :: 		KsTa = KsTa / 8192.0f;
; KsTa start address is: 4 (S1)
0x2B22	0xF04F428C  MOV	R2, #1174405120
0x2B26	0xEE002A10  VMOV	S0, R2
0x2B2A	0xEE800A80  VDIV.F32	S0, S1, S0
; KsTa end address is: 4 (S1)
;__irgrid2_driver.c, 348 :: 		mlx90640->KsTa = KsTa;
0x2B2E	0xF2010228  ADDW	R2, R1, #40
; mlx90640 end address is: 4 (R1)
0x2B32	0xED020A00  VSTR.32	S0, [R2, #0]
;__irgrid2_driver.c, 349 :: 		}
L_end_ExtractKsTaParameters:
0x2B36	0x4770    BX	LR
0x2B38	0x000042FE  	#1123942400
; end of __irgrid2_driver_ExtractKsTaParameters
__irgrid2_driver_ExtractKsToParameters:
;__irgrid2_driver.c, 351 :: 		static void ExtractKsToParameters(uint16_t *eeData, paramsMLX90640 *mlx90640)
; mlx90640 start address is: 4 (R1)
; eeData start address is: 0 (R0)
; mlx90640 end address is: 4 (R1)
; eeData end address is: 0 (R0)
; eeData start address is: 0 (R0)
; mlx90640 start address is: 4 (R1)
;__irgrid2_driver.c, 357 :: 		step = ((eeData[63] & 0x3000) >> 12) * 10;
0x31B0	0xF200027E  ADDW	R2, R0, #126
0x31B4	0x8812    LDRH	R2, [R2, #0]
0x31B6	0xF4025240  AND	R2, R2, #12288
0x31BA	0xB292    UXTH	R2, R2
0x31BC	0x0B13    LSRS	R3, R2, #12
0x31BE	0xB29B    UXTH	R3, R3
0x31C0	0x220A    MOVS	R2, #10
0x31C2	0x435A    MULS	R2, R3, R2
; step start address is: 24 (R6)
0x31C4	0xB256    SXTB	R6, R2
;__irgrid2_driver.c, 359 :: 		mlx90640->ct[0] = -40;
0x31C6	0xF201033C  ADDW	R3, R1, #60
0x31CA	0xF64F72D8  MOVW	R2, #65496
0x31CE	0xB212    SXTH	R2, R2
0x31D0	0x801A    STRH	R2, [R3, #0]
;__irgrid2_driver.c, 360 :: 		mlx90640->ct[1] = 0;
0x31D2	0xF201023C  ADDW	R2, R1, #60
0x31D6	0x1C93    ADDS	R3, R2, #2
0x31D8	0x2200    MOVS	R2, #0
0x31DA	0xB212    SXTH	R2, R2
0x31DC	0x801A    STRH	R2, [R3, #0]
;__irgrid2_driver.c, 361 :: 		mlx90640->ct[2] = (eeData[63] & 0x00F0) >> 4;
0x31DE	0xF201023C  ADDW	R2, R1, #60
0x31E2	0x1D13    ADDS	R3, R2, #4
0x31E4	0xF200027E  ADDW	R2, R0, #126
0x31E8	0x8812    LDRH	R2, [R2, #0]
0x31EA	0xF00202F0  AND	R2, R2, #240
0x31EE	0xB292    UXTH	R2, R2
0x31F0	0x0912    LSRS	R2, R2, #4
0x31F2	0x801A    STRH	R2, [R3, #0]
;__irgrid2_driver.c, 362 :: 		mlx90640->ct[3] = (eeData[63] & 0x0F00) >> 8;
0x31F4	0xF201023C  ADDW	R2, R1, #60
0x31F8	0x1D93    ADDS	R3, R2, #6
0x31FA	0xF200027E  ADDW	R2, R0, #126
0x31FE	0x8812    LDRH	R2, [R2, #0]
0x3200	0xF4026270  AND	R2, R2, #3840
0x3204	0xB292    UXTH	R2, R2
0x3206	0x0A12    LSRS	R2, R2, #8
0x3208	0x801A    STRH	R2, [R3, #0]
;__irgrid2_driver.c, 364 :: 		mlx90640->ct[2] = mlx90640->ct[2]*step;
0x320A	0xF201023C  ADDW	R2, R1, #60
0x320E	0x1D13    ADDS	R3, R2, #4
0x3210	0x1D12    ADDS	R2, R2, #4
0x3212	0xF9B22000  LDRSH	R2, [R2, #0]
0x3216	0x4372    MULS	R2, R6, R2
0x3218	0x801A    STRH	R2, [R3, #0]
;__irgrid2_driver.c, 365 :: 		mlx90640->ct[3] = mlx90640->ct[2] + mlx90640->ct[3]*step;
0x321A	0xF201053C  ADDW	R5, R1, #60
0x321E	0x1DAC    ADDS	R4, R5, #6
0x3220	0x1D2A    ADDS	R2, R5, #4
0x3222	0xF9B23000  LDRSH	R3, [R2, #0]
0x3226	0x1DAA    ADDS	R2, R5, #6
0x3228	0xF9B22000  LDRSH	R2, [R2, #0]
0x322C	0x4372    MULS	R2, R6, R2
0x322E	0xB212    SXTH	R2, R2
; step end address is: 24 (R6)
0x3230	0x189A    ADDS	R2, R3, R2
0x3232	0x8022    STRH	R2, [R4, #0]
;__irgrid2_driver.c, 367 :: 		KsToScale = 12;
; KsToScale start address is: 12 (R3)
0x3234	0x230C    MOVS	R3, #12
0x3236	0xB21B    SXTH	R3, R3
;__irgrid2_driver.c, 368 :: 		KsToScale = 1 << KsToScale;
0x3238	0x2201    MOVS	R2, #1
0x323A	0xB212    SXTH	R2, R2
0x323C	0x409A    LSLS	R2, R3
; KsToScale end address is: 12 (R3)
; KsToScale start address is: 16 (R4)
0x323E	0xB214    SXTH	R4, R2
;__irgrid2_driver.c, 370 :: 		mlx90640->ksTo[0] = eeData[61] & 0x00FF;
0x3240	0xF201032C  ADDW	R3, R1, #44
0x3244	0xF200027A  ADDW	R2, R0, #122
0x3248	0x8812    LDRH	R2, [R2, #0]
0x324A	0xF00202FF  AND	R2, R2, #255
0x324E	0xB292    UXTH	R2, R2
0x3250	0xEE002A10  VMOV	S0, R2
0x3254	0xEEB80A40  VCVT.F32.U32	S0, S0
0x3258	0xED030A00  VSTR.32	S0, [R3, #0]
;__irgrid2_driver.c, 371 :: 		mlx90640->ksTo[1] = (eeData[61] & 0xFF00) >> 8;
0x325C	0xF201022C  ADDW	R2, R1, #44
0x3260	0x1D13    ADDS	R3, R2, #4
0x3262	0xF200027A  ADDW	R2, R0, #122
0x3266	0x8812    LDRH	R2, [R2, #0]
0x3268	0xF402427F  AND	R2, R2, #65280
0x326C	0xB292    UXTH	R2, R2
0x326E	0x0A12    LSRS	R2, R2, #8
0x3270	0xB292    UXTH	R2, R2
0x3272	0xEE002A10  VMOV	S0, R2
0x3276	0xEEB80A40  VCVT.F32.U32	S0, S0
0x327A	0xED030A00  VSTR.32	S0, [R3, #0]
;__irgrid2_driver.c, 372 :: 		mlx90640->ksTo[2] = eeData[62] & 0x00FF;
0x327E	0xF201022C  ADDW	R2, R1, #44
0x3282	0xF2020308  ADDW	R3, R2, #8
0x3286	0xF200027C  ADDW	R2, R0, #124
0x328A	0x8812    LDRH	R2, [R2, #0]
0x328C	0xF00202FF  AND	R2, R2, #255
0x3290	0xB292    UXTH	R2, R2
0x3292	0xEE002A10  VMOV	S0, R2
0x3296	0xEEB80A40  VCVT.F32.U32	S0, S0
0x329A	0xED030A00  VSTR.32	S0, [R3, #0]
;__irgrid2_driver.c, 373 :: 		mlx90640->ksTo[3] = (eeData[62] & 0xFF00) >> 8;
0x329E	0xF201022C  ADDW	R2, R1, #44
0x32A2	0xF202030C  ADDW	R3, R2, #12
0x32A6	0xF200027C  ADDW	R2, R0, #124
; eeData end address is: 0 (R0)
0x32AA	0x8812    LDRH	R2, [R2, #0]
0x32AC	0xF402427F  AND	R2, R2, #65280
0x32B0	0xB292    UXTH	R2, R2
0x32B2	0x0A12    LSRS	R2, R2, #8
0x32B4	0xB292    UXTH	R2, R2
0x32B6	0xEE002A10  VMOV	S0, R2
0x32BA	0xEEB80A40  VCVT.F32.U32	S0, S0
0x32BE	0xED030A00  VSTR.32	S0, [R3, #0]
;__irgrid2_driver.c, 376 :: 		for( i = 0; i < 4; i++)
; i start address is: 20 (R5)
0x32C2	0x2500    MOVS	R5, #0
0x32C4	0xB22D    SXTH	R5, R5
; KsToScale end address is: 16 (R4)
; i end address is: 20 (R5)
0x32C6	0xB220    SXTH	R0, R4
L___irgrid2_driver_ExtractKsToParameters48:
; i start address is: 20 (R5)
; KsToScale start address is: 0 (R0)
; KsToScale start address is: 0 (R0)
; KsToScale end address is: 0 (R0)
; mlx90640 start address is: 4 (R1)
; mlx90640 end address is: 4 (R1)
0x32C8	0x2D04    CMP	R5, #4
0x32CA	0xDA2C    BGE	L___irgrid2_driver_ExtractKsToParameters49
; KsToScale end address is: 0 (R0)
; mlx90640 end address is: 4 (R1)
;__irgrid2_driver.c, 378 :: 		if(mlx90640->ksTo[i] > 127)
; mlx90640 start address is: 4 (R1)
; KsToScale start address is: 0 (R0)
0x32CC	0xF201032C  ADDW	R3, R1, #44
0x32D0	0x00AA    LSLS	R2, R5, #2
0x32D2	0x189A    ADDS	R2, R3, R2
0x32D4	0xED520A00  VLDR.32	S1, [R2, #0]
0x32D8	0x4A13    LDR	R2, [PC, #76]
0x32DA	0xEE002A10  VMOV	S0, R2
0x32DE	0xEEF40AC0  VCMPE.F32	S1, S0
0x32E2	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x32E6	0xDD0D    BLE	L___irgrid2_driver_ExtractKsToParameters51
;__irgrid2_driver.c, 380 :: 		mlx90640->ksTo[i] = mlx90640->ksTo[i] -256;
0x32E8	0xF201032C  ADDW	R3, R1, #44
0x32EC	0x00AA    LSLS	R2, R5, #2
0x32EE	0x189C    ADDS	R4, R3, R2
0x32F0	0xED540A00  VLDR.32	S1, [R4, #0]
0x32F4	0xF04F4287  MOV	R2, #1132462080
0x32F8	0xEE002A10  VMOV	S0, R2
0x32FC	0xEE300AC0  VSUB.F32	S0, S1, S0
0x3300	0xED040A00  VSTR.32	S0, [R4, #0]
;__irgrid2_driver.c, 381 :: 		}
L___irgrid2_driver_ExtractKsToParameters51:
;__irgrid2_driver.c, 382 :: 		mlx90640->ksTo[i] = mlx90640->ksTo[i] / KsToScale;
0x3304	0xF201032C  ADDW	R3, R1, #44
0x3308	0x00AA    LSLS	R2, R5, #2
0x330A	0x189B    ADDS	R3, R3, R2
0x330C	0xED530A00  VLDR.32	S1, [R3, #0]
0x3310	0xEE000A10  VMOV	S0, R0
0x3314	0xEEB80AC0  VCVT.F32.S32	S0, S0
0x3318	0xEE800A80  VDIV.F32	S0, S1, S0
0x331C	0xED030A00  VSTR.32	S0, [R3, #0]
;__irgrid2_driver.c, 376 :: 		for( i = 0; i < 4; i++)
0x3320	0x1C6D    ADDS	R5, R5, #1
0x3322	0xB22D    SXTH	R5, R5
;__irgrid2_driver.c, 383 :: 		}
; KsToScale end address is: 0 (R0)
; mlx90640 end address is: 4 (R1)
; i end address is: 20 (R5)
0x3324	0xE7D0    B	L___irgrid2_driver_ExtractKsToParameters48
L___irgrid2_driver_ExtractKsToParameters49:
;__irgrid2_driver.c, 384 :: 		}
L_end_ExtractKsToParameters:
0x3326	0x4770    BX	LR
0x3328	0x000042FE  	#1123942400
; end of __irgrid2_driver_ExtractKsToParameters
__irgrid2_driver_ExtractAlphaParameters:
;__irgrid2_driver.c, 386 :: 		static void ExtractAlphaParameters(uint16_t *eeData, paramsMLX90640 *mlx90640)
0x2E20	0xB0A7    SUB	SP, SP, #156
0x2E22	0xF8CDE000  STR	LR, [SP, #0]
0x2E26	0x901E    STR	R0, [SP, #120]
0x2E28	0x911F    STR	R1, [SP, #124]
;__irgrid2_driver.c, 390 :: 		int p = 0;
;__irgrid2_driver.c, 401 :: 		accRemScale = eeData[32] & 0x000F;
0x2E2A	0x9A1E    LDR	R2, [SP, #120]
0x2E2C	0x3240    ADDS	R2, #64
0x2E2E	0x8812    LDRH	R2, [R2, #0]
0x2E30	0xF002020F  AND	R2, R2, #15
; accRemScale start address is: 28 (R7)
0x2E34	0xB2D7    UXTB	R7, R2
;__irgrid2_driver.c, 402 :: 		accColumnScale = (eeData[32] & 0x00F0) >> 4;
0x2E36	0x9A1E    LDR	R2, [SP, #120]
0x2E38	0x3240    ADDS	R2, #64
0x2E3A	0x8812    LDRH	R2, [R2, #0]
0x2E3C	0xF00202F0  AND	R2, R2, #240
0x2E40	0xB292    UXTH	R2, R2
0x2E42	0x0912    LSRS	R2, R2, #4
0x2E44	0xF88D2075  STRB	R2, [SP, #117]
;__irgrid2_driver.c, 403 :: 		accRowScale = (eeData[32] & 0x0F00) >> 8;
0x2E48	0x9A1E    LDR	R2, [SP, #120]
0x2E4A	0x3240    ADDS	R2, #64
0x2E4C	0x8812    LDRH	R2, [R2, #0]
0x2E4E	0xF4026270  AND	R2, R2, #3840
0x2E52	0xB292    UXTH	R2, R2
0x2E54	0x0A12    LSRS	R2, R2, #8
0x2E56	0xF88D2074  STRB	R2, [SP, #116]
;__irgrid2_driver.c, 404 :: 		alphaScale = ((eeData[32] & 0xF000) >> 12) + 30;
0x2E5A	0x9A1E    LDR	R2, [SP, #120]
0x2E5C	0x3240    ADDS	R2, #64
0x2E5E	0x8812    LDRH	R2, [R2, #0]
0x2E60	0xF4024270  AND	R2, R2, #61440
0x2E64	0xB292    UXTH	R2, R2
0x2E66	0x0B12    LSRS	R2, R2, #12
0x2E68	0xB292    UXTH	R2, R2
0x2E6A	0x321E    ADDS	R2, #30
; alphaScale start address is: 4 (R1)
0x2E6C	0xB2D1    UXTB	R1, R2
;__irgrid2_driver.c, 405 :: 		alphaRef = eeData[33];
0x2E6E	0x9A1E    LDR	R2, [SP, #120]
0x2E70	0x3242    ADDS	R2, #66
0x2E72	0x8810    LDRH	R0, [R2, #0]
; alphaRef start address is: 0 (R0)
;__irgrid2_driver.c, 407 :: 		for(i = 0; i < 6; i++)
; i start address is: 36 (R9)
0x2E74	0xF2400900  MOVW	R9, #0
0x2E78	0xFA0FF989  SXTH	R9, R9
; i end address is: 36 (R9)
; accRemScale end address is: 28 (R7)
; alphaRef end address is: 0 (R0)
; alphaScale end address is: 4 (R1)
0x2E7C	0xFA0FF689  SXTH	R6, R9
L___irgrid2_driver_ExtractAlphaParameters52:
; i start address is: 24 (R6)
; alphaRef start address is: 0 (R0)
; alphaScale start address is: 4 (R1)
; accRemScale start address is: 28 (R7)
0x2E80	0x2E06    CMP	R6, #6
0x2E82	0xDA4A    BGE	L___irgrid2_driver_ExtractAlphaParameters53
;__irgrid2_driver.c, 409 :: 		p = i * 4;
0x2E84	0x00B2    LSLS	R2, R6, #2
0x2E86	0xB212    SXTH	R2, R2
0x2E88	0xF8AD2080  STRH	R2, [SP, #128]
;__irgrid2_driver.c, 410 :: 		accRow[p + 0] = (eeData[34 + i] & 0x000F);
0x2E8C	0xAD01    ADD	R5, SP, #4
0x2E8E	0x0052    LSLS	R2, R2, #1
0x2E90	0x18AC    ADDS	R4, R5, R2
0x2E92	0xF2060222  ADDW	R2, R6, #34
0x2E96	0xB212    SXTH	R2, R2
0x2E98	0x0053    LSLS	R3, R2, #1
0x2E9A	0x9A1E    LDR	R2, [SP, #120]
0x2E9C	0x18D2    ADDS	R2, R2, R3
0x2E9E	0x8812    LDRH	R2, [R2, #0]
0x2EA0	0xF002020F  AND	R2, R2, #15
0x2EA4	0x8022    STRH	R2, [R4, #0]
;__irgrid2_driver.c, 411 :: 		accRow[p + 1] = (eeData[34 + i] & 0x00F0) >> 4;
0x2EA6	0xF9BD2080  LDRSH	R2, [SP, #128]
0x2EAA	0x1C52    ADDS	R2, R2, #1
0x2EAC	0xB212    SXTH	R2, R2
0x2EAE	0x0052    LSLS	R2, R2, #1
0x2EB0	0x18AC    ADDS	R4, R5, R2
0x2EB2	0xF2060222  ADDW	R2, R6, #34
0x2EB6	0xB212    SXTH	R2, R2
0x2EB8	0x0053    LSLS	R3, R2, #1
0x2EBA	0x9A1E    LDR	R2, [SP, #120]
0x2EBC	0x18D2    ADDS	R2, R2, R3
0x2EBE	0x8812    LDRH	R2, [R2, #0]
0x2EC0	0xF00202F0  AND	R2, R2, #240
0x2EC4	0xB292    UXTH	R2, R2
0x2EC6	0x0912    LSRS	R2, R2, #4
0x2EC8	0x8022    STRH	R2, [R4, #0]
;__irgrid2_driver.c, 412 :: 		accRow[p + 2] = (eeData[34 + i] & 0x0F00) >> 8;
0x2ECA	0xF9BD2080  LDRSH	R2, [SP, #128]
0x2ECE	0x1C92    ADDS	R2, R2, #2
0x2ED0	0xB212    SXTH	R2, R2
0x2ED2	0x0052    LSLS	R2, R2, #1
0x2ED4	0x18AC    ADDS	R4, R5, R2
0x2ED6	0xF2060222  ADDW	R2, R6, #34
0x2EDA	0xB212    SXTH	R2, R2
0x2EDC	0x0053    LSLS	R3, R2, #1
0x2EDE	0x9A1E    LDR	R2, [SP, #120]
0x2EE0	0x18D2    ADDS	R2, R2, R3
0x2EE2	0x8812    LDRH	R2, [R2, #0]
0x2EE4	0xF4026270  AND	R2, R2, #3840
0x2EE8	0xB292    UXTH	R2, R2
0x2EEA	0x0A12    LSRS	R2, R2, #8
0x2EEC	0x8022    STRH	R2, [R4, #0]
;__irgrid2_driver.c, 413 :: 		accRow[p + 3] = (eeData[34 + i] & 0xF000) >> 12;
0x2EEE	0xF9BD2080  LDRSH	R2, [SP, #128]
0x2EF2	0x1CD2    ADDS	R2, R2, #3
0x2EF4	0xB212    SXTH	R2, R2
0x2EF6	0x0052    LSLS	R2, R2, #1
0x2EF8	0x18AC    ADDS	R4, R5, R2
0x2EFA	0xF2060222  ADDW	R2, R6, #34
0x2EFE	0xB212    SXTH	R2, R2
0x2F00	0x0053    LSLS	R3, R2, #1
0x2F02	0x9A1E    LDR	R2, [SP, #120]
0x2F04	0x18D2    ADDS	R2, R2, R3
0x2F06	0x8812    LDRH	R2, [R2, #0]
0x2F08	0xF4024270  AND	R2, R2, #61440
0x2F0C	0xB292    UXTH	R2, R2
0x2F0E	0x0B12    LSRS	R2, R2, #12
0x2F10	0x8022    STRH	R2, [R4, #0]
;__irgrid2_driver.c, 407 :: 		for(i = 0; i < 6; i++)
0x2F12	0x1C72    ADDS	R2, R6, #1
0x2F14	0xB212    SXTH	R2, R2
; i end address is: 24 (R6)
; i start address is: 8 (R2)
;__irgrid2_driver.c, 414 :: 		}
; i end address is: 8 (R2)
0x2F16	0xB216    SXTH	R6, R2
0x2F18	0xE7B2    B	L___irgrid2_driver_ExtractAlphaParameters52
L___irgrid2_driver_ExtractAlphaParameters53:
;__irgrid2_driver.c, 416 :: 		for( i = 0; i < 24; i++)
; i start address is: 16 (R4)
0x2F1A	0x2400    MOVS	R4, #0
0x2F1C	0xB224    SXTH	R4, R4
; accRemScale end address is: 28 (R7)
; i end address is: 16 (R4)
; alphaRef end address is: 0 (R0)
; alphaScale end address is: 4 (R1)
0x2F1E	0xB2CD    UXTB	R5, R1
0x2F20	0xFA5FF887  UXTB	R8, R7
L___irgrid2_driver_ExtractAlphaParameters55:
; i start address is: 16 (R4)
; accRemScale start address is: 32 (R8)
; alphaScale start address is: 20 (R5)
; alphaRef start address is: 0 (R0)
0x2F24	0x2C18    CMP	R4, #24
0x2F26	0xDA11    BGE	L___irgrid2_driver_ExtractAlphaParameters56
;__irgrid2_driver.c, 418 :: 		if (accRow[i] > 7)
0x2F28	0xAB01    ADD	R3, SP, #4
0x2F2A	0x0062    LSLS	R2, R4, #1
0x2F2C	0x189A    ADDS	R2, R3, R2
0x2F2E	0xF9B22000  LDRSH	R2, [R2, #0]
0x2F32	0x2A07    CMP	R2, #7
0x2F34	0xDD06    BLE	L___irgrid2_driver_ExtractAlphaParameters58
;__irgrid2_driver.c, 420 :: 		accRow[i] = accRow[i] - 16;
0x2F36	0xAB01    ADD	R3, SP, #4
0x2F38	0x0062    LSLS	R2, R4, #1
0x2F3A	0x189B    ADDS	R3, R3, R2
0x2F3C	0xF9B32000  LDRSH	R2, [R3, #0]
0x2F40	0x3A10    SUBS	R2, #16
0x2F42	0x801A    STRH	R2, [R3, #0]
;__irgrid2_driver.c, 421 :: 		}
L___irgrid2_driver_ExtractAlphaParameters58:
;__irgrid2_driver.c, 416 :: 		for( i = 0; i < 24; i++)
0x2F44	0x1C62    ADDS	R2, R4, #1
0x2F46	0xB212    SXTH	R2, R2
; i end address is: 16 (R4)
; i start address is: 8 (R2)
;__irgrid2_driver.c, 422 :: 		}
; i end address is: 8 (R2)
0x2F48	0xB214    SXTH	R4, R2
0x2F4A	0xE7EB    B	L___irgrid2_driver_ExtractAlphaParameters55
L___irgrid2_driver_ExtractAlphaParameters56:
;__irgrid2_driver.c, 424 :: 		for( i = 0; i < 8; i++)
; i start address is: 40 (R10)
0x2F4C	0xF2400A00  MOVW	R10, #0
0x2F50	0xFA0FFA8A  SXTH	R10, R10
; i end address is: 40 (R10)
; alphaRef end address is: 0 (R0)
; alphaScale end address is: 20 (R5)
; accRemScale end address is: 32 (R8)
0x2F54	0xB2E9    UXTB	R1, R5
0x2F56	0xFA0FF68A  SXTH	R6, R10
L___irgrid2_driver_ExtractAlphaParameters59:
; i start address is: 24 (R6)
; alphaRef start address is: 0 (R0)
; alphaScale start address is: 4 (R1)
; accRemScale start address is: 32 (R8)
0x2F5A	0x2E08    CMP	R6, #8
0x2F5C	0xDA4A    BGE	L___irgrid2_driver_ExtractAlphaParameters60
;__irgrid2_driver.c, 426 :: 		p = i * 4;
0x2F5E	0x00B2    LSLS	R2, R6, #2
0x2F60	0xB212    SXTH	R2, R2
0x2F62	0xF8AD2080  STRH	R2, [SP, #128]
;__irgrid2_driver.c, 427 :: 		accColumn[p + 0] = (eeData[40 + i] & 0x000F);
0x2F66	0xAD0D    ADD	R5, SP, #52
0x2F68	0x0052    LSLS	R2, R2, #1
0x2F6A	0x18AC    ADDS	R4, R5, R2
0x2F6C	0xF2060228  ADDW	R2, R6, #40
0x2F70	0xB212    SXTH	R2, R2
0x2F72	0x0053    LSLS	R3, R2, #1
0x2F74	0x9A1E    LDR	R2, [SP, #120]
0x2F76	0x18D2    ADDS	R2, R2, R3
0x2F78	0x8812    LDRH	R2, [R2, #0]
0x2F7A	0xF002020F  AND	R2, R2, #15
0x2F7E	0x8022    STRH	R2, [R4, #0]
;__irgrid2_driver.c, 428 :: 		accColumn[p + 1] = (eeData[40 + i] & 0x00F0) >> 4;
0x2F80	0xF9BD2080  LDRSH	R2, [SP, #128]
0x2F84	0x1C52    ADDS	R2, R2, #1
0x2F86	0xB212    SXTH	R2, R2
0x2F88	0x0052    LSLS	R2, R2, #1
0x2F8A	0x18AC    ADDS	R4, R5, R2
0x2F8C	0xF2060228  ADDW	R2, R6, #40
0x2F90	0xB212    SXTH	R2, R2
0x2F92	0x0053    LSLS	R3, R2, #1
0x2F94	0x9A1E    LDR	R2, [SP, #120]
0x2F96	0x18D2    ADDS	R2, R2, R3
0x2F98	0x8812    LDRH	R2, [R2, #0]
0x2F9A	0xF00202F0  AND	R2, R2, #240
0x2F9E	0xB292    UXTH	R2, R2
0x2FA0	0x0912    LSRS	R2, R2, #4
0x2FA2	0x8022    STRH	R2, [R4, #0]
;__irgrid2_driver.c, 429 :: 		accColumn[p + 2] = (eeData[40 + i] & 0x0F00) >> 8;
0x2FA4	0xF9BD2080  LDRSH	R2, [SP, #128]
0x2FA8	0x1C92    ADDS	R2, R2, #2
0x2FAA	0xB212    SXTH	R2, R2
0x2FAC	0x0052    LSLS	R2, R2, #1
0x2FAE	0x18AC    ADDS	R4, R5, R2
0x2FB0	0xF2060228  ADDW	R2, R6, #40
0x2FB4	0xB212    SXTH	R2, R2
0x2FB6	0x0053    LSLS	R3, R2, #1
0x2FB8	0x9A1E    LDR	R2, [SP, #120]
0x2FBA	0x18D2    ADDS	R2, R2, R3
0x2FBC	0x8812    LDRH	R2, [R2, #0]
0x2FBE	0xF4026270  AND	R2, R2, #3840
0x2FC2	0xB292    UXTH	R2, R2
0x2FC4	0x0A12    LSRS	R2, R2, #8
0x2FC6	0x8022    STRH	R2, [R4, #0]
;__irgrid2_driver.c, 430 :: 		accColumn[p + 3] = (eeData[40 + i] & 0xF000) >> 12;
0x2FC8	0xF9BD2080  LDRSH	R2, [SP, #128]
0x2FCC	0x1CD2    ADDS	R2, R2, #3
0x2FCE	0xB212    SXTH	R2, R2
0x2FD0	0x0052    LSLS	R2, R2, #1
0x2FD2	0x18AC    ADDS	R4, R5, R2
0x2FD4	0xF2060228  ADDW	R2, R6, #40
0x2FD8	0xB212    SXTH	R2, R2
0x2FDA	0x0053    LSLS	R3, R2, #1
0x2FDC	0x9A1E    LDR	R2, [SP, #120]
0x2FDE	0x18D2    ADDS	R2, R2, R3
0x2FE0	0x8812    LDRH	R2, [R2, #0]
0x2FE2	0xF4024270  AND	R2, R2, #61440
0x2FE6	0xB292    UXTH	R2, R2
0x2FE8	0x0B12    LSRS	R2, R2, #12
0x2FEA	0x8022    STRH	R2, [R4, #0]
;__irgrid2_driver.c, 424 :: 		for( i = 0; i < 8; i++)
0x2FEC	0x1C72    ADDS	R2, R6, #1
0x2FEE	0xB212    SXTH	R2, R2
; i end address is: 24 (R6)
; i start address is: 8 (R2)
;__irgrid2_driver.c, 431 :: 		}
; i end address is: 8 (R2)
0x2FF0	0xB216    SXTH	R6, R2
0x2FF2	0xE7B2    B	L___irgrid2_driver_ExtractAlphaParameters59
L___irgrid2_driver_ExtractAlphaParameters60:
;__irgrid2_driver.c, 433 :: 		for( i = 0; i < 32; i ++)
; i start address is: 44 (R11)
0x2FF4	0xF2400B00  MOVW	R11, #0
0x2FF8	0xFA0FFB8B  SXTH	R11, R11
; alphaRef end address is: 0 (R0)
; alphaScale end address is: 4 (R1)
; i end address is: 44 (R11)
; accRemScale end address is: 32 (R8)
0x2FFC	0xFA0FFC80  SXTH	R12, R0
0x3000	0xB2CD    UXTB	R5, R1
0x3002	0xFA5FF488  UXTB	R4, R8
0x3006	0xFA0FF68B  SXTH	R6, R11
L___irgrid2_driver_ExtractAlphaParameters62:
; i start address is: 24 (R6)
; accRemScale start address is: 16 (R4)
; alphaScale start address is: 20 (R5)
; alphaRef start address is: 48 (R12)
0x300A	0x2E20    CMP	R6, #32
0x300C	0xDA10    BGE	L___irgrid2_driver_ExtractAlphaParameters63
;__irgrid2_driver.c, 435 :: 		if (accColumn[i] > 7)
0x300E	0xAB0D    ADD	R3, SP, #52
0x3010	0x0072    LSLS	R2, R6, #1
0x3012	0x189A    ADDS	R2, R3, R2
0x3014	0xF9B22000  LDRSH	R2, [R2, #0]
0x3018	0x2A07    CMP	R2, #7
0x301A	0xDD06    BLE	L___irgrid2_driver_ExtractAlphaParameters65
;__irgrid2_driver.c, 437 :: 		accColumn[i] = accColumn[i] - 16;
0x301C	0xAB0D    ADD	R3, SP, #52
0x301E	0x0072    LSLS	R2, R6, #1
0x3020	0x189B    ADDS	R3, R3, R2
0x3022	0xF9B32000  LDRSH	R2, [R3, #0]
0x3026	0x3A10    SUBS	R2, #16
0x3028	0x801A    STRH	R2, [R3, #0]
;__irgrid2_driver.c, 438 :: 		}
L___irgrid2_driver_ExtractAlphaParameters65:
;__irgrid2_driver.c, 433 :: 		for( i = 0; i < 32; i ++)
0x302A	0x1C72    ADDS	R2, R6, #1
; i end address is: 24 (R6)
; i start address is: 8 (R2)
;__irgrid2_driver.c, 439 :: 		}
; i end address is: 8 (R2)
0x302C	0xB216    SXTH	R6, R2
0x302E	0xE7EC    B	L___irgrid2_driver_ExtractAlphaParameters62
L___irgrid2_driver_ExtractAlphaParameters63:
;__irgrid2_driver.c, 441 :: 		for( i = 0; i < 24; i++)
; i start address is: 0 (R0)
0x3030	0x2000    MOVS	R0, #0
0x3032	0xB200    SXTH	R0, R0
; alphaScale end address is: 20 (R5)
; accRemScale end address is: 16 (R4)
; alphaRef end address is: 48 (R12)
; i end address is: 0 (R0)
0x3034	0xB2EB    UXTB	R3, R5
0x3036	0xFA0FF18C  SXTH	R1, R12
L___irgrid2_driver_ExtractAlphaParameters66:
; i start address is: 0 (R0)
; alphaRef start address is: 4 (R1)
; alphaScale start address is: 12 (R3)
; accRemScale start address is: 16 (R4)
0x303A	0x2818    CMP	R0, #24
0x303C	0xF28080B3  BGE	L___irgrid2_driver_ExtractAlphaParameters67
;__irgrid2_driver.c, 443 :: 		for( j = 0; j < 32; j ++)
; j start address is: 24 (R6)
0x3040	0x2600    MOVS	R6, #0
0x3042	0xB236    SXTH	R6, R6
; alphaRef end address is: 4 (R1)
; alphaScale end address is: 12 (R3)
; accRemScale end address is: 16 (R4)
; j end address is: 24 (R6)
; i end address is: 0 (R0)
0x3044	0xB207    SXTH	R7, R0
0x3046	0xFA0FFC81  SXTH	R12, R1
0x304A	0xFA5FFB83  UXTB	R11, R3
0x304E	0xFA5FF884  UXTB	R8, R4
L___irgrid2_driver_ExtractAlphaParameters69:
; j start address is: 24 (R6)
; accRemScale start address is: 32 (R8)
; alphaScale start address is: 44 (R11)
; alphaRef start address is: 48 (R12)
; i start address is: 28 (R7)
0x3052	0x2E20    CMP	R6, #32
0x3054	0xF280809E  BGE	L___irgrid2_driver_ExtractAlphaParameters70
;__irgrid2_driver.c, 445 :: 		p = 32 * i +j;
0x3058	0x017A    LSLS	R2, R7, #5
0x305A	0xB212    SXTH	R2, R2
0x305C	0x1995    ADDS	R5, R2, R6
0x305E	0xB22D    SXTH	R5, R5
0x3060	0xF8AD5080  STRH	R5, [SP, #128]
;__irgrid2_driver.c, 446 :: 		mlx90640->alpha[p] = (eeData[64 + p] & 0x03F0) >> 4;
0x3064	0x9A1F    LDR	R2, [SP, #124]
0x3066	0xF2020344  ADDW	R3, R2, #68
0x306A	0x00AA    LSLS	R2, R5, #2
0x306C	0x189C    ADDS	R4, R3, R2
0x306E	0xF2050240  ADDW	R2, R5, #64
0x3072	0xB212    SXTH	R2, R2
0x3074	0x0053    LSLS	R3, R2, #1
0x3076	0x9A1E    LDR	R2, [SP, #120]
0x3078	0x18D2    ADDS	R2, R2, R3
0x307A	0x8812    LDRH	R2, [R2, #0]
0x307C	0xF402727C  AND	R2, R2, #1008
0x3080	0xB292    UXTH	R2, R2
0x3082	0x0912    LSRS	R2, R2, #4
0x3084	0xB292    UXTH	R2, R2
0x3086	0xEE002A10  VMOV	S0, R2
0x308A	0xEEB80A40  VCVT.F32.U32	S0, S0
0x308E	0xED040A00  VSTR.32	S0, [R4, #0]
;__irgrid2_driver.c, 447 :: 		if (mlx90640->alpha[p] > 31)
0x3092	0x9A1F    LDR	R2, [SP, #124]
0x3094	0xF2020344  ADDW	R3, R2, #68
0x3098	0xF9BD2080  LDRSH	R2, [SP, #128]
0x309C	0x0092    LSLS	R2, R2, #2
0x309E	0x189A    ADDS	R2, R3, R2
0x30A0	0xED520A00  VLDR.32	S1, [R2, #0]
0x30A4	0xEEB30A0F  VMOV.F32	S0, #31
0x30A8	0xEEF40AC0  VCMPE.F32	S1, S0
0x30AC	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x30B0	0xDD10    BLE	L___irgrid2_driver_ExtractAlphaParameters72
;__irgrid2_driver.c, 449 :: 		mlx90640->alpha[p] = mlx90640->alpha[p] - 64;
0x30B2	0x9A1F    LDR	R2, [SP, #124]
0x30B4	0xF2020344  ADDW	R3, R2, #68
0x30B8	0xF9BD2080  LDRSH	R2, [SP, #128]
0x30BC	0x0092    LSLS	R2, R2, #2
0x30BE	0x189C    ADDS	R4, R3, R2
0x30C0	0xED540A00  VLDR.32	S1, [R4, #0]
0x30C4	0xF04F4285  MOV	R2, #1115684864
0x30C8	0xEE002A10  VMOV	S0, R2
0x30CC	0xEE300AC0  VSUB.F32	S0, S1, S0
0x30D0	0xED040A00  VSTR.32	S0, [R4, #0]
;__irgrid2_driver.c, 450 :: 		}
L___irgrid2_driver_ExtractAlphaParameters72:
;__irgrid2_driver.c, 451 :: 		mlx90640->alpha[p] = mlx90640->alpha[p]*(1 << accRemScale);
0x30D4	0x9A1F    LDR	R2, [SP, #124]
0x30D6	0xF2020344  ADDW	R3, R2, #68
0x30DA	0xF9BD2080  LDRSH	R2, [SP, #128]
0x30DE	0x0092    LSLS	R2, R2, #2
0x30E0	0x189C    ADDS	R4, R3, R2
0x30E2	0xED540A00  VLDR.32	S1, [R4, #0]
0x30E6	0x2201    MOVS	R2, #1
0x30E8	0xB212    SXTH	R2, R2
0x30EA	0xFA02F208  LSL	R2, R2, R8
0x30EE	0xB212    SXTH	R2, R2
0x30F0	0xEE002A10  VMOV	S0, R2
0x30F4	0xEEB80AC0  VCVT.F32.S32	S0, S0
0x30F8	0xEE200A80  VMUL.F32	S0, S1, S0
0x30FC	0xED040A00  VSTR.32	S0, [R4, #0]
;__irgrid2_driver.c, 452 :: 		mlx90640->alpha[p] = (alphaRef + (accRow[i] << accRowScale) + (accColumn[j] << accColumnScale) + mlx90640->alpha[p]);
0x3100	0x9A1F    LDR	R2, [SP, #124]
0x3102	0xF2020344  ADDW	R3, R2, #68
0x3106	0xF9BD2080  LDRSH	R2, [SP, #128]
0x310A	0x0092    LSLS	R2, R2, #2
0x310C	0x189D    ADDS	R5, R3, R2
0x310E	0xAB01    ADD	R3, SP, #4
0x3110	0x007A    LSLS	R2, R7, #1
0x3112	0x189A    ADDS	R2, R3, R2
0x3114	0xF9B23000  LDRSH	R3, [R2, #0]
0x3118	0xF89D2074  LDRB	R2, [SP, #116]
0x311C	0xFA03F202  LSL	R2, R3, R2
0x3120	0xB212    SXTH	R2, R2
0x3122	0xEB0C0402  ADD	R4, R12, R2, LSL #0
0x3126	0xB224    SXTH	R4, R4
0x3128	0xAB0D    ADD	R3, SP, #52
0x312A	0x0072    LSLS	R2, R6, #1
0x312C	0x189A    ADDS	R2, R3, R2
0x312E	0xF9B23000  LDRSH	R3, [R2, #0]
0x3132	0xF89D2075  LDRB	R2, [SP, #117]
0x3136	0xFA03F202  LSL	R2, R3, R2
0x313A	0xB212    SXTH	R2, R2
0x313C	0x18A2    ADDS	R2, R4, R2
0x313E	0xB212    SXTH	R2, R2
0x3140	0xEE002A90  VMOV	S1, R2
0x3144	0xEEF80AE0  VCVT.F32.S32	S1, S1
0x3148	0xED150A00  VLDR.32	S0, [R5, #0]
0x314C	0xEE300A80  VADD.F32	S0, S1, S0
0x3150	0xED050A00  VSTR.32	S0, [R5, #0]
;__irgrid2_driver.c, 453 :: 		mlx90640->alpha[p] = mlx90640->alpha[p] / _pow(2,(double)alphaScale);
0x3154	0x9A1F    LDR	R2, [SP, #124]
0x3156	0xF2020344  ADDW	R3, R2, #68
0x315A	0xF9BD2080  LDRSH	R2, [SP, #128]
0x315E	0x0092    LSLS	R2, R2, #2
0x3160	0x189A    ADDS	R2, R3, R2
0x3162	0x9226    STR	R2, [SP, #152]
0x3164	0xED120A00  VLDR.32	S0, [R2, #0]
0x3168	0xED8D0A25  VSTR.32	S0, [SP, #148]
0x316C	0xEE00BA10  VMOV	S0, R11
0x3170	0xEEB80A40  VCVT.F32.U32	S0, S0
0x3174	0xEEF00A40  VMOV.F32	S1, S0
0x3178	0xEEB00A00  VMOV.F32	S0, #2
0x317C	0xF7FEFAA6  BL	__irgrid2_driver__pow+0
0x3180	0xEDDD0A25  VLDR.32	S1, [SP, #148]
0x3184	0xEE800A80  VDIV.F32	S0, S1, S0
0x3188	0x9A26    LDR	R2, [SP, #152]
0x318A	0xED020A00  VSTR.32	S0, [R2, #0]
;__irgrid2_driver.c, 443 :: 		for( j = 0; j < 32; j ++)
0x318E	0x1C72    ADDS	R2, R6, #1
; j end address is: 24 (R6)
; j start address is: 8 (R2)
;__irgrid2_driver.c, 454 :: 		}
; j end address is: 8 (R2)
0x3190	0xB216    SXTH	R6, R2
0x3192	0xE75E    B	L___irgrid2_driver_ExtractAlphaParameters69
L___irgrid2_driver_ExtractAlphaParameters70:
;__irgrid2_driver.c, 441 :: 		for( i = 0; i < 24; i++)
0x3194	0x1C7A    ADDS	R2, R7, #1
; i end address is: 28 (R7)
; i start address is: 0 (R0)
0x3196	0xB210    SXTH	R0, R2
;__irgrid2_driver.c, 455 :: 		}
0x3198	0xFA5FF488  UXTB	R4, R8
; accRemScale end address is: 32 (R8)
; alphaScale end address is: 44 (R11)
; alphaRef end address is: 48 (R12)
; i end address is: 0 (R0)
0x319C	0xFA5FF38B  UXTB	R3, R11
0x31A0	0xFA0FF18C  SXTH	R1, R12
0x31A4	0xE749    B	L___irgrid2_driver_ExtractAlphaParameters66
L___irgrid2_driver_ExtractAlphaParameters67:
;__irgrid2_driver.c, 456 :: 		}
L_end_ExtractAlphaParameters:
0x31A6	0xF8DDE000  LDR	LR, [SP, #0]
0x31AA	0xB027    ADD	SP, SP, #156
0x31AC	0x4770    BX	LR
; end of __irgrid2_driver_ExtractAlphaParameters
__irgrid2_driver_ExtractOffsetParameters:
;__irgrid2_driver.c, 458 :: 		static void ExtractOffsetParameters(uint16_t *eeData, paramsMLX90640 *mlx90640)
; mlx90640 start address is: 4 (R1)
; eeData start address is: 0 (R0)
0x2B3C	0xB09C    SUB	SP, SP, #112
; mlx90640 end address is: 4 (R1)
; eeData end address is: 0 (R0)
; eeData start address is: 0 (R0)
; mlx90640 start address is: 4 (R1)
;__irgrid2_driver.c, 462 :: 		int p = 0;
;__irgrid2_driver.c, 471 :: 		occRemScale = (eeData[16] & 0x000F);
0x2B3E	0xF2000220  ADDW	R2, R0, #32
0x2B42	0x8812    LDRH	R2, [R2, #0]
0x2B44	0xF002020F  AND	R2, R2, #15
; occRemScale start address is: 24 (R6)
0x2B48	0xB2D6    UXTB	R6, R2
;__irgrid2_driver.c, 472 :: 		occColumnScale = (eeData[16] & 0x00F0) >> 4;
0x2B4A	0xF2000220  ADDW	R2, R0, #32
0x2B4E	0x8812    LDRH	R2, [R2, #0]
0x2B50	0xF00202F0  AND	R2, R2, #240
0x2B54	0xB292    UXTH	R2, R2
0x2B56	0x0912    LSRS	R2, R2, #4
; occColumnScale start address is: 20 (R5)
0x2B58	0xB2D5    UXTB	R5, R2
;__irgrid2_driver.c, 473 :: 		occRowScale = (eeData[16] & 0x0F00) >> 8;
0x2B5A	0xF2000220  ADDW	R2, R0, #32
0x2B5E	0x8812    LDRH	R2, [R2, #0]
0x2B60	0xF4026270  AND	R2, R2, #3840
0x2B64	0xB292    UXTH	R2, R2
0x2B66	0x0A12    LSRS	R2, R2, #8
; occRowScale start address is: 16 (R4)
0x2B68	0xB2D4    UXTB	R4, R2
;__irgrid2_driver.c, 474 :: 		offsetRef = eeData[17];
0x2B6A	0xF2000222  ADDW	R2, R0, #34
0x2B6E	0x8812    LDRH	R2, [R2, #0]
; offsetRef start address is: 28 (R7)
0x2B70	0xB217    SXTH	R7, R2
;__irgrid2_driver.c, 475 :: 		if (offsetRef > 32767)
0x2B72	0xB213    SXTH	R3, R2
0x2B74	0xF64772FF  MOVW	R2, #32767
0x2B78	0x4293    CMP	R3, R2
0x2B7A	0xDD04    BLE	L___irgrid2_driver_ExtractOffsetParameters231
;__irgrid2_driver.c, 477 :: 		offsetRef = offsetRef - 65536;
0x2B7C	0xF5A73280  SUB	R2, R7, #65536
; offsetRef end address is: 28 (R7)
; offsetRef start address is: 12 (R3)
0x2B80	0xB213    SXTH	R3, R2
; offsetRef end address is: 12 (R3)
0x2B82	0xB21A    SXTH	R2, R3
;__irgrid2_driver.c, 478 :: 		}
0x2B84	0xE000    B	L___irgrid2_driver_ExtractOffsetParameters73
L___irgrid2_driver_ExtractOffsetParameters231:
;__irgrid2_driver.c, 475 :: 		if (offsetRef > 32767)
0x2B86	0xB23A    SXTH	R2, R7
;__irgrid2_driver.c, 478 :: 		}
L___irgrid2_driver_ExtractOffsetParameters73:
;__irgrid2_driver.c, 480 :: 		for( i = 0; i < 6; i++)
; offsetRef start address is: 8 (R2)
; i start address is: 36 (R9)
0x2B88	0xF2400900  MOVW	R9, #0
0x2B8C	0xFA0FF989  SXTH	R9, R9
; occRowScale end address is: 16 (R4)
; offsetRef end address is: 8 (R2)
; i end address is: 36 (R9)
; occColumnScale end address is: 20 (R5)
; eeData end address is: 0 (R0)
; mlx90640 end address is: 4 (R1)
; occRemScale end address is: 24 (R6)
0x2B90	0x4680    MOV	R8, R0
0x2B92	0xB210    SXTH	R0, R2
0x2B94	0x460F    MOV	R7, R1
0x2B96	0xB2E1    UXTB	R1, R4
L___irgrid2_driver_ExtractOffsetParameters74:
; i start address is: 36 (R9)
; offsetRef start address is: 0 (R0)
; occRowScale start address is: 4 (R1)
; occColumnScale start address is: 20 (R5)
; occRemScale start address is: 24 (R6)
; mlx90640 start address is: 28 (R7)
; eeData start address is: 32 (R8)
0x2B98	0xF1B90F06  CMP	R9, #6
0x2B9C	0xDA49    BGE	L___irgrid2_driver_ExtractOffsetParameters75
;__irgrid2_driver.c, 482 :: 		p = i * 4;
0x2B9E	0xEA4F0289  LSL	R2, R9, #2
0x2BA2	0xB212    SXTH	R2, R2
; p start address is: 40 (R10)
0x2BA4	0xFA0FFA82  SXTH	R10, R2
;__irgrid2_driver.c, 483 :: 		occRow[p + 0] = (eeData[18 + i] & 0x000F);
0x2BA8	0xAC00    ADD	R4, SP, #0
0x2BAA	0x0052    LSLS	R2, R2, #1
0x2BAC	0x18A3    ADDS	R3, R4, R2
0x2BAE	0xF1090212  ADD	R2, R9, #18
0x2BB2	0xB212    SXTH	R2, R2
0x2BB4	0x0052    LSLS	R2, R2, #1
0x2BB6	0xEB080202  ADD	R2, R8, R2, LSL #0
0x2BBA	0x8812    LDRH	R2, [R2, #0]
0x2BBC	0xF002020F  AND	R2, R2, #15
0x2BC0	0x801A    STRH	R2, [R3, #0]
;__irgrid2_driver.c, 484 :: 		occRow[p + 1] = (eeData[18 + i] & 0x00F0) >> 4;
0x2BC2	0xF10A0201  ADD	R2, R10, #1
0x2BC6	0xB212    SXTH	R2, R2
0x2BC8	0x0052    LSLS	R2, R2, #1
0x2BCA	0x18A3    ADDS	R3, R4, R2
0x2BCC	0xF1090212  ADD	R2, R9, #18
0x2BD0	0xB212    SXTH	R2, R2
0x2BD2	0x0052    LSLS	R2, R2, #1
0x2BD4	0xEB080202  ADD	R2, R8, R2, LSL #0
0x2BD8	0x8812    LDRH	R2, [R2, #0]
0x2BDA	0xF00202F0  AND	R2, R2, #240
0x2BDE	0xB292    UXTH	R2, R2
0x2BE0	0x0912    LSRS	R2, R2, #4
0x2BE2	0x801A    STRH	R2, [R3, #0]
;__irgrid2_driver.c, 485 :: 		occRow[p + 2] = (eeData[18 + i] & 0x0F00) >> 8;
0x2BE4	0xF10A0202  ADD	R2, R10, #2
0x2BE8	0xB212    SXTH	R2, R2
0x2BEA	0x0052    LSLS	R2, R2, #1
0x2BEC	0x18A3    ADDS	R3, R4, R2
0x2BEE	0xF1090212  ADD	R2, R9, #18
0x2BF2	0xB212    SXTH	R2, R2
0x2BF4	0x0052    LSLS	R2, R2, #1
0x2BF6	0xEB080202  ADD	R2, R8, R2, LSL #0
0x2BFA	0x8812    LDRH	R2, [R2, #0]
0x2BFC	0xF4026270  AND	R2, R2, #3840
0x2C00	0xB292    UXTH	R2, R2
0x2C02	0x0A12    LSRS	R2, R2, #8
0x2C04	0x801A    STRH	R2, [R3, #0]
;__irgrid2_driver.c, 486 :: 		occRow[p + 3] = (eeData[18 + i] & 0xF000) >> 12;
0x2C06	0xF10A0203  ADD	R2, R10, #3
0x2C0A	0xB212    SXTH	R2, R2
; p end address is: 40 (R10)
0x2C0C	0x0052    LSLS	R2, R2, #1
0x2C0E	0x18A3    ADDS	R3, R4, R2
0x2C10	0xF1090212  ADD	R2, R9, #18
0x2C14	0xB212    SXTH	R2, R2
0x2C16	0x0052    LSLS	R2, R2, #1
0x2C18	0xEB080202  ADD	R2, R8, R2, LSL #0
0x2C1C	0x8812    LDRH	R2, [R2, #0]
0x2C1E	0xF4024270  AND	R2, R2, #61440
0x2C22	0xB292    UXTH	R2, R2
0x2C24	0x0B12    LSRS	R2, R2, #12
0x2C26	0x801A    STRH	R2, [R3, #0]
;__irgrid2_driver.c, 480 :: 		for( i = 0; i < 6; i++)
0x2C28	0xF1090901  ADD	R9, R9, #1
0x2C2C	0xFA0FF989  SXTH	R9, R9
;__irgrid2_driver.c, 487 :: 		}
; i end address is: 36 (R9)
0x2C30	0xE7B2    B	L___irgrid2_driver_ExtractOffsetParameters74
L___irgrid2_driver_ExtractOffsetParameters75:
;__irgrid2_driver.c, 489 :: 		for( i = 0; i < 24; i++)
; i start address is: 16 (R4)
0x2C32	0x2400    MOVS	R4, #0
0x2C34	0xB224    SXTH	R4, R4
; i end address is: 16 (R4)
; offsetRef end address is: 0 (R0)
; occRowScale end address is: 4 (R1)
; mlx90640 end address is: 28 (R7)
; eeData end address is: 32 (R8)
; occColumnScale end address is: 20 (R5)
; occRemScale end address is: 24 (R6)
L___irgrid2_driver_ExtractOffsetParameters77:
; i start address is: 16 (R4)
; eeData start address is: 32 (R8)
; mlx90640 start address is: 28 (R7)
; occRemScale start address is: 24 (R6)
; occColumnScale start address is: 20 (R5)
; occRowScale start address is: 4 (R1)
; offsetRef start address is: 0 (R0)
0x2C36	0x2C18    CMP	R4, #24
0x2C38	0xDA10    BGE	L___irgrid2_driver_ExtractOffsetParameters78
;__irgrid2_driver.c, 491 :: 		if (occRow[i] > 7)
0x2C3A	0xAB00    ADD	R3, SP, #0
0x2C3C	0x0062    LSLS	R2, R4, #1
0x2C3E	0x189A    ADDS	R2, R3, R2
0x2C40	0xF9B22000  LDRSH	R2, [R2, #0]
0x2C44	0x2A07    CMP	R2, #7
0x2C46	0xDD06    BLE	L___irgrid2_driver_ExtractOffsetParameters80
;__irgrid2_driver.c, 493 :: 		occRow[i] = occRow[i] - 16;
0x2C48	0xAB00    ADD	R3, SP, #0
0x2C4A	0x0062    LSLS	R2, R4, #1
0x2C4C	0x189B    ADDS	R3, R3, R2
0x2C4E	0xF9B32000  LDRSH	R2, [R3, #0]
0x2C52	0x3A10    SUBS	R2, #16
0x2C54	0x801A    STRH	R2, [R3, #0]
;__irgrid2_driver.c, 494 :: 		}
L___irgrid2_driver_ExtractOffsetParameters80:
;__irgrid2_driver.c, 489 :: 		for( i = 0; i < 24; i++)
0x2C56	0x1C64    ADDS	R4, R4, #1
0x2C58	0xB224    SXTH	R4, R4
;__irgrid2_driver.c, 495 :: 		}
; i end address is: 16 (R4)
0x2C5A	0xE7EC    B	L___irgrid2_driver_ExtractOffsetParameters77
L___irgrid2_driver_ExtractOffsetParameters78:
;__irgrid2_driver.c, 497 :: 		for( i = 0; i < 8; i++)
; i start address is: 36 (R9)
0x2C5C	0xF2400900  MOVW	R9, #0
0x2C60	0xFA0FF989  SXTH	R9, R9
; offsetRef end address is: 0 (R0)
; occRowScale end address is: 4 (R1)
; mlx90640 end address is: 28 (R7)
; eeData end address is: 32 (R8)
; i end address is: 36 (R9)
; occColumnScale end address is: 20 (R5)
; occRemScale end address is: 24 (R6)
L___irgrid2_driver_ExtractOffsetParameters81:
; i start address is: 36 (R9)
; offsetRef start address is: 0 (R0)
; occRowScale start address is: 4 (R1)
; occColumnScale start address is: 20 (R5)
; occRemScale start address is: 24 (R6)
; mlx90640 start address is: 28 (R7)
; eeData start address is: 32 (R8)
0x2C64	0xF1B90F08  CMP	R9, #8
0x2C68	0xDA49    BGE	L___irgrid2_driver_ExtractOffsetParameters82
;__irgrid2_driver.c, 499 :: 		p = i * 4;
0x2C6A	0xEA4F0289  LSL	R2, R9, #2
0x2C6E	0xB212    SXTH	R2, R2
; p start address is: 40 (R10)
0x2C70	0xFA0FFA82  SXTH	R10, R2
;__irgrid2_driver.c, 500 :: 		occColumn[p + 0] = (eeData[24 + i] & 0x000F);
0x2C74	0xAC0C    ADD	R4, SP, #48
0x2C76	0x0052    LSLS	R2, R2, #1
0x2C78	0x18A3    ADDS	R3, R4, R2
0x2C7A	0xF1090218  ADD	R2, R9, #24
0x2C7E	0xB212    SXTH	R2, R2
0x2C80	0x0052    LSLS	R2, R2, #1
0x2C82	0xEB080202  ADD	R2, R8, R2, LSL #0
0x2C86	0x8812    LDRH	R2, [R2, #0]
0x2C88	0xF002020F  AND	R2, R2, #15
0x2C8C	0x801A    STRH	R2, [R3, #0]
;__irgrid2_driver.c, 501 :: 		occColumn[p + 1] = (eeData[24 + i] & 0x00F0) >> 4;
0x2C8E	0xF10A0201  ADD	R2, R10, #1
0x2C92	0xB212    SXTH	R2, R2
0x2C94	0x0052    LSLS	R2, R2, #1
0x2C96	0x18A3    ADDS	R3, R4, R2
0x2C98	0xF1090218  ADD	R2, R9, #24
0x2C9C	0xB212    SXTH	R2, R2
0x2C9E	0x0052    LSLS	R2, R2, #1
0x2CA0	0xEB080202  ADD	R2, R8, R2, LSL #0
0x2CA4	0x8812    LDRH	R2, [R2, #0]
0x2CA6	0xF00202F0  AND	R2, R2, #240
0x2CAA	0xB292    UXTH	R2, R2
0x2CAC	0x0912    LSRS	R2, R2, #4
0x2CAE	0x801A    STRH	R2, [R3, #0]
;__irgrid2_driver.c, 502 :: 		occColumn[p + 2] = (eeData[24 + i] & 0x0F00) >> 8;
0x2CB0	0xF10A0202  ADD	R2, R10, #2
0x2CB4	0xB212    SXTH	R2, R2
0x2CB6	0x0052    LSLS	R2, R2, #1
0x2CB8	0x18A3    ADDS	R3, R4, R2
0x2CBA	0xF1090218  ADD	R2, R9, #24
0x2CBE	0xB212    SXTH	R2, R2
0x2CC0	0x0052    LSLS	R2, R2, #1
0x2CC2	0xEB080202  ADD	R2, R8, R2, LSL #0
0x2CC6	0x8812    LDRH	R2, [R2, #0]
0x2CC8	0xF4026270  AND	R2, R2, #3840
0x2CCC	0xB292    UXTH	R2, R2
0x2CCE	0x0A12    LSRS	R2, R2, #8
0x2CD0	0x801A    STRH	R2, [R3, #0]
;__irgrid2_driver.c, 503 :: 		occColumn[p + 3] = (eeData[24 + i] & 0xF000) >> 12;
0x2CD2	0xF10A0203  ADD	R2, R10, #3
0x2CD6	0xB212    SXTH	R2, R2
; p end address is: 40 (R10)
0x2CD8	0x0052    LSLS	R2, R2, #1
0x2CDA	0x18A3    ADDS	R3, R4, R2
0x2CDC	0xF1090218  ADD	R2, R9, #24
0x2CE0	0xB212    SXTH	R2, R2
0x2CE2	0x0052    LSLS	R2, R2, #1
0x2CE4	0xEB080202  ADD	R2, R8, R2, LSL #0
0x2CE8	0x8812    LDRH	R2, [R2, #0]
0x2CEA	0xF4024270  AND	R2, R2, #61440
0x2CEE	0xB292    UXTH	R2, R2
0x2CF0	0x0B12    LSRS	R2, R2, #12
0x2CF2	0x801A    STRH	R2, [R3, #0]
;__irgrid2_driver.c, 497 :: 		for( i = 0; i < 8; i++)
0x2CF4	0xF1090901  ADD	R9, R9, #1
0x2CF8	0xFA0FF989  SXTH	R9, R9
;__irgrid2_driver.c, 504 :: 		}
; i end address is: 36 (R9)
0x2CFC	0xE7B2    B	L___irgrid2_driver_ExtractOffsetParameters81
L___irgrid2_driver_ExtractOffsetParameters82:
;__irgrid2_driver.c, 506 :: 		for( i = 0; i < 32; i ++)
; i start address is: 8 (R2)
0x2CFE	0x2200    MOVS	R2, #0
0x2D00	0xB212    SXTH	R2, R2
; offsetRef end address is: 0 (R0)
; occRowScale end address is: 4 (R1)
; mlx90640 end address is: 28 (R7)
; eeData end address is: 32 (R8)
; i end address is: 8 (R2)
; occColumnScale end address is: 20 (R5)
; occRemScale end address is: 24 (R6)
0x2D02	0xB2F4    UXTB	R4, R6
0x2D04	0xB2CE    UXTB	R6, R1
0x2D06	0x4639    MOV	R1, R7
0x2D08	0xB207    SXTH	R7, R0
0x2D0A	0x4640    MOV	R0, R8
0x2D0C	0xFA0FF882  SXTH	R8, R2
L___irgrid2_driver_ExtractOffsetParameters84:
; i start address is: 32 (R8)
; eeData start address is: 0 (R0)
; mlx90640 start address is: 4 (R1)
; occRemScale start address is: 16 (R4)
; occColumnScale start address is: 20 (R5)
; occRowScale start address is: 24 (R6)
; offsetRef start address is: 28 (R7)
0x2D10	0xF1B80F20  CMP	R8, #32
0x2D14	0xDA14    BGE	L___irgrid2_driver_ExtractOffsetParameters85
;__irgrid2_driver.c, 508 :: 		if (occColumn[i] > 7)
0x2D16	0xAB0C    ADD	R3, SP, #48
0x2D18	0xEA4F0248  LSL	R2, R8, #1
0x2D1C	0x189A    ADDS	R2, R3, R2
0x2D1E	0xF9B22000  LDRSH	R2, [R2, #0]
0x2D22	0x2A07    CMP	R2, #7
0x2D24	0xDD07    BLE	L___irgrid2_driver_ExtractOffsetParameters87
;__irgrid2_driver.c, 510 :: 		occColumn[i] = occColumn[i] - 16;
0x2D26	0xAB0C    ADD	R3, SP, #48
0x2D28	0xEA4F0248  LSL	R2, R8, #1
0x2D2C	0x189B    ADDS	R3, R3, R2
0x2D2E	0xF9B32000  LDRSH	R2, [R3, #0]
0x2D32	0x3A10    SUBS	R2, #16
0x2D34	0x801A    STRH	R2, [R3, #0]
;__irgrid2_driver.c, 511 :: 		}
L___irgrid2_driver_ExtractOffsetParameters87:
;__irgrid2_driver.c, 506 :: 		for( i = 0; i < 32; i ++)
0x2D36	0xF1080801  ADD	R8, R8, #1
0x2D3A	0xFA0FF888  SXTH	R8, R8
;__irgrid2_driver.c, 512 :: 		}
; i end address is: 32 (R8)
0x2D3E	0xE7E7    B	L___irgrid2_driver_ExtractOffsetParameters84
L___irgrid2_driver_ExtractOffsetParameters85:
;__irgrid2_driver.c, 514 :: 		for( i = 0; i < 24; i++)
; i start address is: 40 (R10)
0x2D40	0xF2400A00  MOVW	R10, #0
0x2D44	0xFA0FFA8A  SXTH	R10, R10
; occRemScale end address is: 16 (R4)
; occColumnScale end address is: 20 (R5)
; occRowScale end address is: 24 (R6)
; offsetRef end address is: 28 (R7)
; eeData end address is: 0 (R0)
; mlx90640 end address is: 4 (R1)
; i end address is: 40 (R10)
0x2D48	0xFA5FF886  UXTB	R8, R6
0x2D4C	0xB2E6    UXTB	R6, R4
0x2D4E	0xFA0FF987  SXTH	R9, R7
0x2D52	0xB2EF    UXTB	R7, R5
L___irgrid2_driver_ExtractOffsetParameters88:
; i start address is: 40 (R10)
; offsetRef start address is: 36 (R9)
; occRowScale start address is: 32 (R8)
; occColumnScale start address is: 28 (R7)
; occRemScale start address is: 24 (R6)
; mlx90640 start address is: 4 (R1)
; eeData start address is: 0 (R0)
0x2D54	0xF1BA0F18  CMP	R10, #24
0x2D58	0xDA60    BGE	L___irgrid2_driver_ExtractOffsetParameters89
;__irgrid2_driver.c, 516 :: 		for( j = 0; j < 32; j ++)
; j start address is: 44 (R11)
0x2D5A	0xF2400B00  MOVW	R11, #0
0x2D5E	0xFA0FFB8B  SXTH	R11, R11
; eeData end address is: 0 (R0)
; mlx90640 end address is: 4 (R1)
; occRemScale end address is: 24 (R6)
; occColumnScale end address is: 28 (R7)
; occRowScale end address is: 32 (R8)
; offsetRef end address is: 36 (R9)
; j end address is: 44 (R11)
; i end address is: 40 (R10)
L___irgrid2_driver_ExtractOffsetParameters91:
; j start address is: 44 (R11)
; eeData start address is: 0 (R0)
; mlx90640 start address is: 4 (R1)
; occRemScale start address is: 24 (R6)
; occColumnScale start address is: 28 (R7)
; occRowScale start address is: 32 (R8)
; offsetRef start address is: 36 (R9)
; i start address is: 40 (R10)
0x2D62	0xF1BB0F20  CMP	R11, #32
0x2D66	0xDA54    BGE	L___irgrid2_driver_ExtractOffsetParameters92
;__irgrid2_driver.c, 518 :: 		p = 32 * i +j;
0x2D68	0xEA4F124A  LSL	R2, R10, #5
0x2D6C	0xB212    SXTH	R2, R2
0x2D6E	0xEB02040B  ADD	R4, R2, R11, LSL #0
0x2D72	0xB224    SXTH	R4, R4
; p start address is: 20 (R5)
0x2D74	0xB225    SXTH	R5, R4
;__irgrid2_driver.c, 519 :: 		mlx90640->offset[p] = (eeData[64 + p] & 0xFC00) >> 10;
0x2D76	0xF6014344  ADDW	R3, R1, #3140
0x2D7A	0x0062    LSLS	R2, R4, #1
0x2D7C	0x189B    ADDS	R3, R3, R2
0x2D7E	0xF2040240  ADDW	R2, R4, #64
0x2D82	0xB212    SXTH	R2, R2
0x2D84	0x0052    LSLS	R2, R2, #1
0x2D86	0x1882    ADDS	R2, R0, R2
0x2D88	0x8812    LDRH	R2, [R2, #0]
0x2D8A	0xF402427C  AND	R2, R2, #64512
0x2D8E	0xB292    UXTH	R2, R2
0x2D90	0x0A92    LSRS	R2, R2, #10
0x2D92	0x801A    STRH	R2, [R3, #0]
;__irgrid2_driver.c, 520 :: 		if (mlx90640->offset[p] > 31)
0x2D94	0xF6014344  ADDW	R3, R1, #3140
0x2D98	0x006A    LSLS	R2, R5, #1
0x2D9A	0x189A    ADDS	R2, R3, R2
0x2D9C	0xF9B22000  LDRSH	R2, [R2, #0]
0x2DA0	0x2A1F    CMP	R2, #31
0x2DA2	0xDD07    BLE	L___irgrid2_driver_ExtractOffsetParameters94
;__irgrid2_driver.c, 522 :: 		mlx90640->offset[p] = mlx90640->offset[p] - 64;
0x2DA4	0xF6014344  ADDW	R3, R1, #3140
0x2DA8	0x006A    LSLS	R2, R5, #1
0x2DAA	0x189B    ADDS	R3, R3, R2
0x2DAC	0xF9B32000  LDRSH	R2, [R3, #0]
0x2DB0	0x3A40    SUBS	R2, #64
0x2DB2	0x801A    STRH	R2, [R3, #0]
;__irgrid2_driver.c, 523 :: 		}
L___irgrid2_driver_ExtractOffsetParameters94:
;__irgrid2_driver.c, 524 :: 		mlx90640->offset[p] = mlx90640->offset[p]*(1 << occRemScale);
0x2DB4	0xF6014344  ADDW	R3, R1, #3140
0x2DB8	0x006A    LSLS	R2, R5, #1
0x2DBA	0x189C    ADDS	R4, R3, R2
0x2DBC	0xF9B43000  LDRSH	R3, [R4, #0]
0x2DC0	0x2201    MOVS	R2, #1
0x2DC2	0xB212    SXTH	R2, R2
0x2DC4	0x40B2    LSLS	R2, R6
0x2DC6	0xB212    SXTH	R2, R2
0x2DC8	0x435A    MULS	R2, R3, R2
0x2DCA	0x8022    STRH	R2, [R4, #0]
;__irgrid2_driver.c, 525 :: 		mlx90640->offset[p] = (offsetRef + (occRow[i] << occRowScale) + (occColumn[j] << occColumnScale) + mlx90640->offset[p]);
0x2DCC	0xF6014344  ADDW	R3, R1, #3140
0x2DD0	0x006A    LSLS	R2, R5, #1
; p end address is: 20 (R5)
0x2DD2	0x189D    ADDS	R5, R3, R2
0x2DD4	0xAB00    ADD	R3, SP, #0
0x2DD6	0xEA4F024A  LSL	R2, R10, #1
0x2DDA	0x189A    ADDS	R2, R3, R2
0x2DDC	0xF9B22000  LDRSH	R2, [R2, #0]
0x2DE0	0xFA02F208  LSL	R2, R2, R8
0x2DE4	0xB212    SXTH	R2, R2
0x2DE6	0xEB090402  ADD	R4, R9, R2, LSL #0
0x2DEA	0xB224    SXTH	R4, R4
0x2DEC	0xAB0C    ADD	R3, SP, #48
0x2DEE	0xEA4F024B  LSL	R2, R11, #1
0x2DF2	0x189A    ADDS	R2, R3, R2
0x2DF4	0xF9B22000  LDRSH	R2, [R2, #0]
0x2DF8	0x40BA    LSLS	R2, R7
0x2DFA	0xB212    SXTH	R2, R2
0x2DFC	0x18A3    ADDS	R3, R4, R2
0x2DFE	0xB21B    SXTH	R3, R3
0x2E00	0xF9B52000  LDRSH	R2, [R5, #0]
0x2E04	0x189A    ADDS	R2, R3, R2
0x2E06	0x802A    STRH	R2, [R5, #0]
;__irgrid2_driver.c, 516 :: 		for( j = 0; j < 32; j ++)
0x2E08	0xF10B0B01  ADD	R11, R11, #1
0x2E0C	0xFA0FFB8B  SXTH	R11, R11
;__irgrid2_driver.c, 526 :: 		}
; j end address is: 44 (R11)
0x2E10	0xE7A7    B	L___irgrid2_driver_ExtractOffsetParameters91
L___irgrid2_driver_ExtractOffsetParameters92:
;__irgrid2_driver.c, 514 :: 		for( i = 0; i < 24; i++)
0x2E12	0xF10A0A01  ADD	R10, R10, #1
0x2E16	0xFA0FFA8A  SXTH	R10, R10
;__irgrid2_driver.c, 527 :: 		}
; eeData end address is: 0 (R0)
; mlx90640 end address is: 4 (R1)
; occRemScale end address is: 24 (R6)
; occColumnScale end address is: 28 (R7)
; occRowScale end address is: 32 (R8)
; offsetRef end address is: 36 (R9)
; i end address is: 40 (R10)
0x2E1A	0xE79B    B	L___irgrid2_driver_ExtractOffsetParameters88
L___irgrid2_driver_ExtractOffsetParameters89:
;__irgrid2_driver.c, 528 :: 		}
L_end_ExtractOffsetParameters:
0x2E1C	0xB01C    ADD	SP, SP, #112
0x2E1E	0x4770    BX	LR
; end of __irgrid2_driver_ExtractOffsetParameters
__irgrid2_driver_ExtractKtaPixelParameters:
;__irgrid2_driver.c, 530 :: 		static void ExtractKtaPixelParameters(uint16_t *eeData, paramsMLX90640 *mlx90640)
; mlx90640 start address is: 4 (R1)
; eeData start address is: 0 (R0)
0x23B8	0xB084    SUB	SP, SP, #16
0x23BA	0xF8CDE000  STR	LR, [SP, #0]
; mlx90640 end address is: 4 (R1)
; eeData end address is: 0 (R0)
; eeData start address is: 0 (R0)
; mlx90640 start address is: 4 (R1)
;__irgrid2_driver.c, 532 :: 		int p = 0;
;__irgrid2_driver.c, 545 :: 		KtaRoCo = (eeData[54] & 0xFF00) >> 8;
0x23BE	0xF200026C  ADDW	R2, R0, #108
0x23C2	0x8812    LDRH	R2, [R2, #0]
0x23C4	0xF402427F  AND	R2, R2, #65280
0x23C8	0xB292    UXTH	R2, R2
0x23CA	0x0A12    LSRS	R2, R2, #8
; KtaRoCo start address is: 12 (R3)
0x23CC	0xB253    SXTB	R3, R2
;__irgrid2_driver.c, 546 :: 		if (KtaRoCo > 127)
0x23CE	0xB252    SXTB	R2, R2
0x23D0	0x2A7F    CMP	R2, #127
0x23D2	0xDD03    BLE	L___irgrid2_driver_ExtractKtaPixelParameters232
;__irgrid2_driver.c, 548 :: 		KtaRoCo = KtaRoCo - 256;
0x23D4	0xF5A37280  SUB	R2, R3, #256
0x23D8	0xB253    SXTB	R3, R2
; KtaRoCo end address is: 12 (R3)
;__irgrid2_driver.c, 549 :: 		}
0x23DA	0xE7FF    B	L___irgrid2_driver_ExtractKtaPixelParameters95
L___irgrid2_driver_ExtractKtaPixelParameters232:
;__irgrid2_driver.c, 546 :: 		if (KtaRoCo > 127)
;__irgrid2_driver.c, 549 :: 		}
L___irgrid2_driver_ExtractKtaPixelParameters95:
;__irgrid2_driver.c, 550 :: 		KtaRC[0] = KtaRoCo;
; KtaRoCo start address is: 12 (R3)
0x23DC	0xAA01    ADD	R2, SP, #4
0x23DE	0x7013    STRB	R3, [R2, #0]
; KtaRoCo end address is: 12 (R3)
;__irgrid2_driver.c, 552 :: 		KtaReCo = (eeData[54] & 0x00FF);
0x23E0	0xF200026C  ADDW	R2, R0, #108
0x23E4	0x8812    LDRH	R2, [R2, #0]
0x23E6	0xF00202FF  AND	R2, R2, #255
; KtaReCo start address is: 12 (R3)
0x23EA	0xB253    SXTB	R3, R2
;__irgrid2_driver.c, 553 :: 		if (KtaReCo > 127)
0x23EC	0xB252    SXTB	R2, R2
0x23EE	0x2A7F    CMP	R2, #127
0x23F0	0xDD03    BLE	L___irgrid2_driver_ExtractKtaPixelParameters233
;__irgrid2_driver.c, 555 :: 		KtaReCo = KtaReCo - 256;
0x23F2	0xF5A37280  SUB	R2, R3, #256
0x23F6	0xB253    SXTB	R3, R2
; KtaReCo end address is: 12 (R3)
;__irgrid2_driver.c, 556 :: 		}
0x23F8	0xE7FF    B	L___irgrid2_driver_ExtractKtaPixelParameters96
L___irgrid2_driver_ExtractKtaPixelParameters233:
;__irgrid2_driver.c, 553 :: 		if (KtaReCo > 127)
;__irgrid2_driver.c, 556 :: 		}
L___irgrid2_driver_ExtractKtaPixelParameters96:
;__irgrid2_driver.c, 557 :: 		KtaRC[2] = KtaReCo;
; KtaReCo start address is: 12 (R3)
0x23FA	0xAA01    ADD	R2, SP, #4
0x23FC	0x1C92    ADDS	R2, R2, #2
0x23FE	0x7013    STRB	R3, [R2, #0]
; KtaReCo end address is: 12 (R3)
;__irgrid2_driver.c, 559 :: 		KtaRoCe = (eeData[55] & 0xFF00) >> 8;
0x2400	0xF200026E  ADDW	R2, R0, #110
0x2404	0x8812    LDRH	R2, [R2, #0]
0x2406	0xF402427F  AND	R2, R2, #65280
0x240A	0xB292    UXTH	R2, R2
0x240C	0x0A12    LSRS	R2, R2, #8
; KtaRoCe start address is: 12 (R3)
0x240E	0xB253    SXTB	R3, R2
;__irgrid2_driver.c, 560 :: 		if (KtaRoCe > 127)
0x2410	0xB252    SXTB	R2, R2
0x2412	0x2A7F    CMP	R2, #127
0x2414	0xDD03    BLE	L___irgrid2_driver_ExtractKtaPixelParameters234
;__irgrid2_driver.c, 562 :: 		KtaRoCe = KtaRoCe - 256;
0x2416	0xF5A37280  SUB	R2, R3, #256
0x241A	0xB253    SXTB	R3, R2
; KtaRoCe end address is: 12 (R3)
;__irgrid2_driver.c, 563 :: 		}
0x241C	0xE7FF    B	L___irgrid2_driver_ExtractKtaPixelParameters97
L___irgrid2_driver_ExtractKtaPixelParameters234:
;__irgrid2_driver.c, 560 :: 		if (KtaRoCe > 127)
;__irgrid2_driver.c, 563 :: 		}
L___irgrid2_driver_ExtractKtaPixelParameters97:
;__irgrid2_driver.c, 564 :: 		KtaRC[1] = KtaRoCe;
; KtaRoCe start address is: 12 (R3)
0x241E	0xAA01    ADD	R2, SP, #4
0x2420	0x1C52    ADDS	R2, R2, #1
0x2422	0x7013    STRB	R3, [R2, #0]
; KtaRoCe end address is: 12 (R3)
;__irgrid2_driver.c, 566 :: 		KtaReCe = (eeData[55] & 0x00FF);
0x2424	0xF200026E  ADDW	R2, R0, #110
0x2428	0x8812    LDRH	R2, [R2, #0]
0x242A	0xF00202FF  AND	R2, R2, #255
; KtaReCe start address is: 12 (R3)
0x242E	0xB253    SXTB	R3, R2
;__irgrid2_driver.c, 567 :: 		if (KtaReCe > 127)
0x2430	0xB252    SXTB	R2, R2
0x2432	0x2A7F    CMP	R2, #127
0x2434	0xDD03    BLE	L___irgrid2_driver_ExtractKtaPixelParameters235
;__irgrid2_driver.c, 569 :: 		KtaReCe = KtaReCe - 256;
0x2436	0xF5A37280  SUB	R2, R3, #256
0x243A	0xB253    SXTB	R3, R2
; KtaReCe end address is: 12 (R3)
;__irgrid2_driver.c, 570 :: 		}
0x243C	0xE7FF    B	L___irgrid2_driver_ExtractKtaPixelParameters98
L___irgrid2_driver_ExtractKtaPixelParameters235:
;__irgrid2_driver.c, 567 :: 		if (KtaReCe > 127)
;__irgrid2_driver.c, 570 :: 		}
L___irgrid2_driver_ExtractKtaPixelParameters98:
;__irgrid2_driver.c, 571 :: 		KtaRC[3] = KtaReCe;
; KtaReCe start address is: 12 (R3)
0x243E	0xAA01    ADD	R2, SP, #4
0x2440	0x1CD2    ADDS	R2, R2, #3
0x2442	0x7013    STRB	R3, [R2, #0]
; KtaReCe end address is: 12 (R3)
;__irgrid2_driver.c, 573 :: 		ktaScale1 = ((eeData[56] & 0x00F0) >> 4) + 8;
0x2444	0xF2000270  ADDW	R2, R0, #112
0x2448	0x8812    LDRH	R2, [R2, #0]
0x244A	0xF00202F0  AND	R2, R2, #240
0x244E	0xB292    UXTH	R2, R2
0x2450	0x0912    LSRS	R2, R2, #4
0x2452	0xB292    UXTH	R2, R2
0x2454	0x3208    ADDS	R2, #8
; ktaScale1 start address is: 32 (R8)
0x2456	0xFA5FF882  UXTB	R8, R2
;__irgrid2_driver.c, 574 :: 		ktaScale2 = (eeData[56] & 0x000F);
0x245A	0xF2000270  ADDW	R2, R0, #112
0x245E	0x8812    LDRH	R2, [R2, #0]
0x2460	0xF002020F  AND	R2, R2, #15
; ktaScale2 start address is: 36 (R9)
0x2464	0xFA5FF982  UXTB	R9, R2
;__irgrid2_driver.c, 576 :: 		for(i = 0; i < 24; i++)
; i start address is: 40 (R10)
0x2468	0xF2400A00  MOVW	R10, #0
0x246C	0xFA0FFA8A  SXTH	R10, R10
; eeData end address is: 0 (R0)
; mlx90640 end address is: 4 (R1)
; ktaScale1 end address is: 32 (R8)
; ktaScale2 end address is: 36 (R9)
; i end address is: 40 (R10)
0x2470	0x4606    MOV	R6, R0
0x2472	0x460F    MOV	R7, R1
L___irgrid2_driver_ExtractKtaPixelParameters99:
; i start address is: 40 (R10)
; ktaScale2 start address is: 36 (R9)
; ktaScale1 start address is: 32 (R8)
; mlx90640 start address is: 28 (R7)
; eeData start address is: 24 (R6)
0x2474	0xF1BA0F18  CMP	R10, #24
0x2478	0xF28080AB  BGE	L___irgrid2_driver_ExtractKtaPixelParameters100
;__irgrid2_driver.c, 578 :: 		for( j = 0; j < 32; j ++)
; j start address is: 44 (R11)
0x247C	0xF2400B00  MOVW	R11, #0
0x2480	0xFA0FFB8B  SXTH	R11, R11
; eeData end address is: 24 (R6)
; mlx90640 end address is: 28 (R7)
; ktaScale1 end address is: 32 (R8)
; ktaScale2 end address is: 36 (R9)
; j end address is: 44 (R11)
; i end address is: 40 (R10)
L___irgrid2_driver_ExtractKtaPixelParameters102:
; j start address is: 44 (R11)
; eeData start address is: 24 (R6)
; mlx90640 start address is: 28 (R7)
; ktaScale1 start address is: 32 (R8)
; ktaScale2 start address is: 36 (R9)
; i start address is: 40 (R10)
0x2484	0xF1BB0F20  CMP	R11, #32
0x2488	0xF280809E  BGE	L___irgrid2_driver_ExtractKtaPixelParameters103
;__irgrid2_driver.c, 580 :: 		p = 32 * i +j;
0x248C	0xEA4F124A  LSL	R2, R10, #5
0x2490	0xB212    SXTH	R2, R2
0x2492	0xEB02050B  ADD	R5, R2, R11, LSL #0
0x2496	0xB22D    SXTH	R5, R5
; p start address is: 48 (R12)
0x2498	0xFA0FFC85  SXTH	R12, R5
;__irgrid2_driver.c, 581 :: 		split = 2*(p/32 - (p/64)*2) + p%2;
0x249C	0x2220    MOVS	R2, #32
0x249E	0xB212    SXTH	R2, R2
0x24A0	0xFB95F3F2  SDIV	R3, R5, R2
0x24A4	0xB21B    SXTH	R3, R3
0x24A6	0x2240    MOVS	R2, #64
0x24A8	0xB212    SXTH	R2, R2
0x24AA	0xFB95F2F2  SDIV	R2, R5, R2
0x24AE	0xB212    SXTH	R2, R2
0x24B0	0x0052    LSLS	R2, R2, #1
0x24B2	0xB212    SXTH	R2, R2
0x24B4	0x1A9A    SUB	R2, R3, R2
0x24B6	0xB212    SXTH	R2, R2
0x24B8	0x0054    LSLS	R4, R2, #1
0x24BA	0xB224    SXTH	R4, R4
0x24BC	0x2302    MOVS	R3, #2
0x24BE	0xB21B    SXTH	R3, R3
0x24C0	0xFB95F2F3  SDIV	R2, R5, R3
0x24C4	0xFB035212  MLS	R2, R3, R2, R5
0x24C8	0xB212    SXTH	R2, R2
0x24CA	0x18A2    ADDS	R2, R4, R2
; split start address is: 0 (R0)
0x24CC	0xB2D0    UXTB	R0, R2
;__irgrid2_driver.c, 582 :: 		mlx90640->kta[p] = (eeData[64 + p] & 0x000E) >> 1;
0x24CE	0xF2412244  MOVW	R2, #4676
0x24D2	0x18BB    ADDS	R3, R7, R2
0x24D4	0x00AA    LSLS	R2, R5, #2
0x24D6	0x189B    ADDS	R3, R3, R2
0x24D8	0xF2050240  ADDW	R2, R5, #64
0x24DC	0xB212    SXTH	R2, R2
0x24DE	0x0052    LSLS	R2, R2, #1
0x24E0	0x18B2    ADDS	R2, R6, R2
0x24E2	0x8812    LDRH	R2, [R2, #0]
0x24E4	0xF002020E  AND	R2, R2, #14
0x24E8	0xB292    UXTH	R2, R2
0x24EA	0x0852    LSRS	R2, R2, #1
0x24EC	0xB292    UXTH	R2, R2
0x24EE	0xEE002A10  VMOV	S0, R2
0x24F2	0xEEB80A40  VCVT.F32.U32	S0, S0
0x24F6	0xED030A00  VSTR.32	S0, [R3, #0]
;__irgrid2_driver.c, 583 :: 		if (mlx90640->kta[p] > 3)
0x24FA	0xF2412244  MOVW	R2, #4676
0x24FE	0x18BB    ADDS	R3, R7, R2
0x2500	0xEA4F028C  LSL	R2, R12, #2
0x2504	0x189A    ADDS	R2, R3, R2
0x2506	0xED520A00  VLDR.32	S1, [R2, #0]
0x250A	0xEEB00A08  VMOV.F32	S0, #3
0x250E	0xEEF40AC0  VCMPE.F32	S1, S0
0x2512	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x2516	0xDD0D    BLE	L___irgrid2_driver_ExtractKtaPixelParameters105
;__irgrid2_driver.c, 585 :: 		mlx90640->kta[p] = mlx90640->kta[p] - 8;
0x2518	0xF2412244  MOVW	R2, #4676
0x251C	0x18BB    ADDS	R3, R7, R2
0x251E	0xEA4F028C  LSL	R2, R12, #2
0x2522	0x189B    ADDS	R3, R3, R2
0x2524	0xED530A00  VLDR.32	S1, [R3, #0]
0x2528	0xEEB20A00  VMOV.F32	S0, #8
0x252C	0xEE300AC0  VSUB.F32	S0, S1, S0
0x2530	0xED030A00  VSTR.32	S0, [R3, #0]
;__irgrid2_driver.c, 586 :: 		}
L___irgrid2_driver_ExtractKtaPixelParameters105:
;__irgrid2_driver.c, 587 :: 		mlx90640->kta[p] = mlx90640->kta[p] * (1 << ktaScale2);
0x2534	0xF2412244  MOVW	R2, #4676
0x2538	0x18BB    ADDS	R3, R7, R2
0x253A	0xEA4F028C  LSL	R2, R12, #2
0x253E	0x189C    ADDS	R4, R3, R2
0x2540	0xED540A00  VLDR.32	S1, [R4, #0]
0x2544	0x2201    MOVS	R2, #1
0x2546	0xB212    SXTH	R2, R2
0x2548	0xFA02F209  LSL	R2, R2, R9
0x254C	0xB212    SXTH	R2, R2
0x254E	0xEE002A10  VMOV	S0, R2
0x2552	0xEEB80AC0  VCVT.F32.S32	S0, S0
0x2556	0xEE200A80  VMUL.F32	S0, S1, S0
0x255A	0xED040A00  VSTR.32	S0, [R4, #0]
;__irgrid2_driver.c, 588 :: 		mlx90640->kta[p] = KtaRC[split] + mlx90640->kta[p];
0x255E	0xF2412244  MOVW	R2, #4676
0x2562	0x18BB    ADDS	R3, R7, R2
0x2564	0xEA4F028C  LSL	R2, R12, #2
0x2568	0x189C    ADDS	R4, R3, R2
0x256A	0xAA01    ADD	R2, SP, #4
0x256C	0x1812    ADDS	R2, R2, R0
; split end address is: 0 (R0)
0x256E	0xF9922000  LDRSB	R2, [R2, #0]
0x2572	0xEE002A90  VMOV	S1, R2
0x2576	0xEEF80AE0  VCVT.F32.S32	S1, S1
0x257A	0xED140A00  VLDR.32	S0, [R4, #0]
0x257E	0xEE300A80  VADD.F32	S0, S1, S0
0x2582	0xED040A00  VSTR.32	S0, [R4, #0]
;__irgrid2_driver.c, 589 :: 		mlx90640->kta[p] = mlx90640->kta[p] / _pow(2,(double)ktaScale1);
0x2586	0xF2412244  MOVW	R2, #4676
0x258A	0x18BB    ADDS	R3, R7, R2
0x258C	0xEA4F028C  LSL	R2, R12, #2
; p end address is: 48 (R12)
0x2590	0x189A    ADDS	R2, R3, R2
0x2592	0x9203    STR	R2, [SP, #12]
0x2594	0xED120A00  VLDR.32	S0, [R2, #0]
0x2598	0xED8D0A02  VSTR.32	S0, [SP, #8]
0x259C	0xEE008A10  VMOV	S0, R8
0x25A0	0xEEB80A40  VCVT.F32.U32	S0, S0
0x25A4	0xEEF00A40  VMOV.F32	S1, S0
0x25A8	0xEEB00A00  VMOV.F32	S0, #2
0x25AC	0xF7FFF88E  BL	__irgrid2_driver__pow+0
0x25B0	0xEDDD0A02  VLDR.32	S1, [SP, #8]
0x25B4	0xEE800A80  VDIV.F32	S0, S1, S0
0x25B8	0x9A03    LDR	R2, [SP, #12]
0x25BA	0xED020A00  VSTR.32	S0, [R2, #0]
;__irgrid2_driver.c, 578 :: 		for( j = 0; j < 32; j ++)
0x25BE	0xF10B0B01  ADD	R11, R11, #1
0x25C2	0xFA0FFB8B  SXTH	R11, R11
;__irgrid2_driver.c, 590 :: 		}
; j end address is: 44 (R11)
0x25C6	0xE75D    B	L___irgrid2_driver_ExtractKtaPixelParameters102
L___irgrid2_driver_ExtractKtaPixelParameters103:
;__irgrid2_driver.c, 576 :: 		for(i = 0; i < 24; i++)
0x25C8	0xF10A0A01  ADD	R10, R10, #1
0x25CC	0xFA0FFA8A  SXTH	R10, R10
;__irgrid2_driver.c, 591 :: 		}
; eeData end address is: 24 (R6)
; mlx90640 end address is: 28 (R7)
; ktaScale1 end address is: 32 (R8)
; ktaScale2 end address is: 36 (R9)
; i end address is: 40 (R10)
0x25D0	0xE750    B	L___irgrid2_driver_ExtractKtaPixelParameters99
L___irgrid2_driver_ExtractKtaPixelParameters100:
;__irgrid2_driver.c, 592 :: 		}
L_end_ExtractKtaPixelParameters:
0x25D2	0xF8DDE000  LDR	LR, [SP, #0]
0x25D6	0xB004    ADD	SP, SP, #16
0x25D8	0x4770    BX	LR
; end of __irgrid2_driver_ExtractKtaPixelParameters
__irgrid2_driver_ExtractKvPixelParameters:
;__irgrid2_driver.c, 594 :: 		static void ExtractKvPixelParameters(uint16_t *eeData, paramsMLX90640 *mlx90640)
; mlx90640 start address is: 4 (R1)
; eeData start address is: 0 (R0)
0x2244	0xB084    SUB	SP, SP, #16
0x2246	0xF8CDE000  STR	LR, [SP, #0]
; mlx90640 end address is: 4 (R1)
; eeData end address is: 0 (R0)
; eeData start address is: 0 (R0)
; mlx90640 start address is: 4 (R1)
;__irgrid2_driver.c, 596 :: 		int p = 0;
;__irgrid2_driver.c, 608 :: 		KvRoCo = (eeData[52] & 0xF000) >> 12;
0x224A	0xF2000268  ADDW	R2, R0, #104
0x224E	0x8812    LDRH	R2, [R2, #0]
0x2250	0xF4024270  AND	R2, R2, #61440
0x2254	0xB292    UXTH	R2, R2
0x2256	0x0B12    LSRS	R2, R2, #12
; KvRoCo start address is: 12 (R3)
0x2258	0xB253    SXTB	R3, R2
;__irgrid2_driver.c, 609 :: 		if (KvRoCo > 7)
0x225A	0xB252    SXTB	R2, R2
0x225C	0x2A07    CMP	R2, #7
0x225E	0xDD03    BLE	L___irgrid2_driver_ExtractKvPixelParameters236
;__irgrid2_driver.c, 611 :: 		KvRoCo = KvRoCo - 16;
0x2260	0xF2A30210  SUBW	R2, R3, #16
0x2264	0xB253    SXTB	R3, R2
; KvRoCo end address is: 12 (R3)
;__irgrid2_driver.c, 612 :: 		}
0x2266	0xE7FF    B	L___irgrid2_driver_ExtractKvPixelParameters106
L___irgrid2_driver_ExtractKvPixelParameters236:
;__irgrid2_driver.c, 609 :: 		if (KvRoCo > 7)
;__irgrid2_driver.c, 612 :: 		}
L___irgrid2_driver_ExtractKvPixelParameters106:
;__irgrid2_driver.c, 613 :: 		KvT[0] = KvRoCo;
; KvRoCo start address is: 12 (R3)
0x2268	0xAA01    ADD	R2, SP, #4
0x226A	0x7013    STRB	R3, [R2, #0]
; KvRoCo end address is: 12 (R3)
;__irgrid2_driver.c, 615 :: 		KvReCo = (eeData[52] & 0x0F00) >> 8;
0x226C	0xF2000268  ADDW	R2, R0, #104
0x2270	0x8812    LDRH	R2, [R2, #0]
0x2272	0xF4026270  AND	R2, R2, #3840
0x2276	0xB292    UXTH	R2, R2
0x2278	0x0A12    LSRS	R2, R2, #8
; KvReCo start address is: 12 (R3)
0x227A	0xB253    SXTB	R3, R2
;__irgrid2_driver.c, 616 :: 		if (KvReCo > 7)
0x227C	0xB252    SXTB	R2, R2
0x227E	0x2A07    CMP	R2, #7
0x2280	0xDD03    BLE	L___irgrid2_driver_ExtractKvPixelParameters237
;__irgrid2_driver.c, 618 :: 		KvReCo = KvReCo - 16;
0x2282	0xF2A30210  SUBW	R2, R3, #16
0x2286	0xB253    SXTB	R3, R2
; KvReCo end address is: 12 (R3)
;__irgrid2_driver.c, 619 :: 		}
0x2288	0xE7FF    B	L___irgrid2_driver_ExtractKvPixelParameters107
L___irgrid2_driver_ExtractKvPixelParameters237:
;__irgrid2_driver.c, 616 :: 		if (KvReCo > 7)
;__irgrid2_driver.c, 619 :: 		}
L___irgrid2_driver_ExtractKvPixelParameters107:
;__irgrid2_driver.c, 620 :: 		KvT[2] = KvReCo;
; KvReCo start address is: 12 (R3)
0x228A	0xAA01    ADD	R2, SP, #4
0x228C	0x1C92    ADDS	R2, R2, #2
0x228E	0x7013    STRB	R3, [R2, #0]
; KvReCo end address is: 12 (R3)
;__irgrid2_driver.c, 622 :: 		KvRoCe = (eeData[52] & 0x00F0) >> 4;
0x2290	0xF2000268  ADDW	R2, R0, #104
0x2294	0x8812    LDRH	R2, [R2, #0]
0x2296	0xF00202F0  AND	R2, R2, #240
0x229A	0xB292    UXTH	R2, R2
0x229C	0x0912    LSRS	R2, R2, #4
; KvRoCe start address is: 12 (R3)
0x229E	0xB253    SXTB	R3, R2
;__irgrid2_driver.c, 623 :: 		if (KvRoCe > 7)
0x22A0	0xB252    SXTB	R2, R2
0x22A2	0x2A07    CMP	R2, #7
0x22A4	0xDD03    BLE	L___irgrid2_driver_ExtractKvPixelParameters238
;__irgrid2_driver.c, 625 :: 		KvRoCe = KvRoCe - 16;
0x22A6	0xF2A30210  SUBW	R2, R3, #16
0x22AA	0xB253    SXTB	R3, R2
; KvRoCe end address is: 12 (R3)
;__irgrid2_driver.c, 626 :: 		}
0x22AC	0xE7FF    B	L___irgrid2_driver_ExtractKvPixelParameters108
L___irgrid2_driver_ExtractKvPixelParameters238:
;__irgrid2_driver.c, 623 :: 		if (KvRoCe > 7)
;__irgrid2_driver.c, 626 :: 		}
L___irgrid2_driver_ExtractKvPixelParameters108:
;__irgrid2_driver.c, 627 :: 		KvT[1] = KvRoCe;
; KvRoCe start address is: 12 (R3)
0x22AE	0xAA01    ADD	R2, SP, #4
0x22B0	0x1C52    ADDS	R2, R2, #1
0x22B2	0x7013    STRB	R3, [R2, #0]
; KvRoCe end address is: 12 (R3)
;__irgrid2_driver.c, 629 :: 		KvReCe = (eeData[52] & 0x000F);
0x22B4	0xF2000268  ADDW	R2, R0, #104
0x22B8	0x8812    LDRH	R2, [R2, #0]
0x22BA	0xF002020F  AND	R2, R2, #15
; KvReCe start address is: 12 (R3)
0x22BE	0xB253    SXTB	R3, R2
;__irgrid2_driver.c, 630 :: 		if (KvReCe > 7)
0x22C0	0xB252    SXTB	R2, R2
0x22C2	0x2A07    CMP	R2, #7
0x22C4	0xDD03    BLE	L___irgrid2_driver_ExtractKvPixelParameters239
;__irgrid2_driver.c, 632 :: 		KvReCe = KvReCe - 16;
0x22C6	0xF2A30210  SUBW	R2, R3, #16
0x22CA	0xB253    SXTB	R3, R2
; KvReCe end address is: 12 (R3)
;__irgrid2_driver.c, 633 :: 		}
0x22CC	0xE7FF    B	L___irgrid2_driver_ExtractKvPixelParameters109
L___irgrid2_driver_ExtractKvPixelParameters239:
;__irgrid2_driver.c, 630 :: 		if (KvReCe > 7)
;__irgrid2_driver.c, 633 :: 		}
L___irgrid2_driver_ExtractKvPixelParameters109:
;__irgrid2_driver.c, 634 :: 		KvT[3] = KvReCe;
; KvReCe start address is: 12 (R3)
0x22CE	0xAA01    ADD	R2, SP, #4
0x22D0	0x1CD2    ADDS	R2, R2, #3
0x22D2	0x7013    STRB	R3, [R2, #0]
; KvReCe end address is: 12 (R3)
;__irgrid2_driver.c, 636 :: 		kvScale = (eeData[56] & 0x0F00) >> 8;
0x22D4	0xF2000270  ADDW	R2, R0, #112
; eeData end address is: 0 (R0)
0x22D8	0x8812    LDRH	R2, [R2, #0]
0x22DA	0xF4026270  AND	R2, R2, #3840
0x22DE	0xB292    UXTH	R2, R2
0x22E0	0x0A12    LSRS	R2, R2, #8
; kvScale start address is: 32 (R8)
0x22E2	0xFA5FF882  UXTB	R8, R2
;__irgrid2_driver.c, 639 :: 		for(i = 0; i < 24; i++)
; i start address is: 36 (R9)
0x22E6	0xF2400900  MOVW	R9, #0
0x22EA	0xFA0FF989  SXTH	R9, R9
; mlx90640 end address is: 4 (R1)
; kvScale end address is: 32 (R8)
; i end address is: 36 (R9)
0x22EE	0x460F    MOV	R7, R1
L___irgrid2_driver_ExtractKvPixelParameters110:
; i start address is: 36 (R9)
; kvScale start address is: 32 (R8)
; mlx90640 start address is: 28 (R7)
0x22F0	0xF1B90F18  CMP	R9, #24
0x22F4	0xDA5B    BGE	L___irgrid2_driver_ExtractKvPixelParameters111
;__irgrid2_driver.c, 641 :: 		for(j = 0; j < 32; j ++)
; j start address is: 40 (R10)
0x22F6	0xF2400A00  MOVW	R10, #0
0x22FA	0xFA0FFA8A  SXTH	R10, R10
; mlx90640 end address is: 28 (R7)
; kvScale end address is: 32 (R8)
; j end address is: 40 (R10)
; i end address is: 36 (R9)
L___irgrid2_driver_ExtractKvPixelParameters113:
; j start address is: 40 (R10)
; mlx90640 start address is: 28 (R7)
; kvScale start address is: 32 (R8)
; i start address is: 36 (R9)
0x22FE	0xF1BA0F20  CMP	R10, #32
0x2302	0xDA4F    BGE	L___irgrid2_driver_ExtractKvPixelParameters114
;__irgrid2_driver.c, 643 :: 		p = 32 * i +j;
0x2304	0xEA4F1249  LSL	R2, R9, #5
0x2308	0xB212    SXTH	R2, R2
0x230A	0xEB02060A  ADD	R6, R2, R10, LSL #0
0x230E	0xB236    SXTH	R6, R6
; p start address is: 0 (R0)
0x2310	0xB230    SXTH	R0, R6
;__irgrid2_driver.c, 644 :: 		split = 2*(p/32 - (p/64)*2) + p%2;
0x2312	0x2220    MOVS	R2, #32
0x2314	0xB212    SXTH	R2, R2
0x2316	0xFB96F3F2  SDIV	R3, R6, R2
0x231A	0xB21B    SXTH	R3, R3
0x231C	0x2240    MOVS	R2, #64
0x231E	0xB212    SXTH	R2, R2
0x2320	0xFB96F2F2  SDIV	R2, R6, R2
0x2324	0xB212    SXTH	R2, R2
0x2326	0x0052    LSLS	R2, R2, #1
0x2328	0xB212    SXTH	R2, R2
0x232A	0x1A9A    SUB	R2, R3, R2
0x232C	0xB212    SXTH	R2, R2
0x232E	0x0054    LSLS	R4, R2, #1
0x2330	0xB224    SXTH	R4, R4
0x2332	0x2302    MOVS	R3, #2
0x2334	0xB21B    SXTH	R3, R3
0x2336	0xFB96F2F3  SDIV	R2, R6, R3
0x233A	0xFB036212  MLS	R2, R3, R2, R6
0x233E	0xB212    SXTH	R2, R2
0x2340	0x18A5    ADDS	R5, R4, R2
0x2342	0xB22D    SXTH	R5, R5
;__irgrid2_driver.c, 645 :: 		mlx90640->kv[p] = KvT[split];
0x2344	0xF6416244  MOVW	R2, #7748
0x2348	0x18BB    ADDS	R3, R7, R2
0x234A	0x00B2    LSLS	R2, R6, #2
0x234C	0x189C    ADDS	R4, R3, R2
0x234E	0xAB01    ADD	R3, SP, #4
0x2350	0xB2EA    UXTB	R2, R5
0x2352	0x189A    ADDS	R2, R3, R2
0x2354	0xF9922000  LDRSB	R2, [R2, #0]
0x2358	0xEE002A10  VMOV	S0, R2
0x235C	0xEEB80AC0  VCVT.F32.S32	S0, S0
0x2360	0xED040A00  VSTR.32	S0, [R4, #0]
;__irgrid2_driver.c, 646 :: 		mlx90640->kv[p] = mlx90640->kv[p] / _pow(2,(double)kvScale);
0x2364	0xF6416244  MOVW	R2, #7748
0x2368	0x18BB    ADDS	R3, R7, R2
0x236A	0x0082    LSLS	R2, R0, #2
; p end address is: 0 (R0)
0x236C	0x189A    ADDS	R2, R3, R2
0x236E	0x9203    STR	R2, [SP, #12]
0x2370	0xED120A00  VLDR.32	S0, [R2, #0]
0x2374	0xED8D0A02  VSTR.32	S0, [SP, #8]
0x2378	0xEE008A10  VMOV	S0, R8
0x237C	0xEEB80A40  VCVT.F32.U32	S0, S0
0x2380	0xEEF00A40  VMOV.F32	S1, S0
0x2384	0xEEB00A00  VMOV.F32	S0, #2
0x2388	0xF7FFF9A0  BL	__irgrid2_driver__pow+0
0x238C	0xEDDD0A02  VLDR.32	S1, [SP, #8]
0x2390	0xEE800A80  VDIV.F32	S0, S1, S0
0x2394	0x9A03    LDR	R2, [SP, #12]
0x2396	0xED020A00  VSTR.32	S0, [R2, #0]
;__irgrid2_driver.c, 641 :: 		for(j = 0; j < 32; j ++)
0x239A	0xF10A0A01  ADD	R10, R10, #1
0x239E	0xFA0FFA8A  SXTH	R10, R10
;__irgrid2_driver.c, 647 :: 		}
; j end address is: 40 (R10)
0x23A2	0xE7AC    B	L___irgrid2_driver_ExtractKvPixelParameters113
L___irgrid2_driver_ExtractKvPixelParameters114:
;__irgrid2_driver.c, 639 :: 		for(i = 0; i < 24; i++)
0x23A4	0xF1090901  ADD	R9, R9, #1
0x23A8	0xFA0FF989  SXTH	R9, R9
;__irgrid2_driver.c, 648 :: 		}
; mlx90640 end address is: 28 (R7)
; kvScale end address is: 32 (R8)
; i end address is: 36 (R9)
0x23AC	0xE7A0    B	L___irgrid2_driver_ExtractKvPixelParameters110
L___irgrid2_driver_ExtractKvPixelParameters111:
;__irgrid2_driver.c, 649 :: 		}
L_end_ExtractKvPixelParameters:
0x23AE	0xF8DDE000  LDR	LR, [SP, #0]
0x23B2	0xB004    ADD	SP, SP, #16
0x23B4	0x4770    BX	LR
; end of __irgrid2_driver_ExtractKvPixelParameters
__irgrid2_driver_ExtractCPParameters:
;__irgrid2_driver.c, 651 :: 		static void ExtractCPParameters(uint16_t *eeData, paramsMLX90640 *mlx90640)
; mlx90640 start address is: 4 (R1)
; eeData start address is: 0 (R0)
0x1F88	0xB086    SUB	SP, SP, #24
0x1F8A	0xF8CDE000  STR	LR, [SP, #0]
0x1F8E	0x4606    MOV	R6, R0
0x1F90	0x460F    MOV	R7, R1
; mlx90640 end address is: 4 (R1)
; eeData end address is: 0 (R0)
; eeData start address is: 24 (R6)
; mlx90640 start address is: 28 (R7)
;__irgrid2_driver.c, 661 :: 		alphaScale = ((eeData[32] & 0xF000) >> 12) + 27;
0x1F92	0xF2060240  ADDW	R2, R6, #64
0x1F96	0x8812    LDRH	R2, [R2, #0]
0x1F98	0xF4024270  AND	R2, R2, #61440
0x1F9C	0xB292    UXTH	R2, R2
0x1F9E	0x0B12    LSRS	R2, R2, #12
0x1FA0	0xB292    UXTH	R2, R2
0x1FA2	0x321B    ADDS	R2, #27
; alphaScale start address is: 0 (R0)
0x1FA4	0xB2D0    UXTB	R0, R2
;__irgrid2_driver.c, 663 :: 		offsetSP[0] = (eeData[58] & 0x03FF);
0x1FA6	0xAC03    ADD	R4, SP, #12
0x1FA8	0xF2060274  ADDW	R2, R6, #116
0x1FAC	0x8813    LDRH	R3, [R2, #0]
0x1FAE	0xF24032FF  MOVW	R2, #1023
0x1FB2	0xEA030202  AND	R2, R3, R2, LSL #0
0x1FB6	0x8022    STRH	R2, [R4, #0]
;__irgrid2_driver.c, 664 :: 		if (offsetSP[0] > 511)
0x1FB8	0xF9B43000  LDRSH	R3, [R4, #0]
0x1FBC	0xF24012FF  MOVW	R2, #511
0x1FC0	0x4293    CMP	R3, R2
0x1FC2	0xDD05    BLE	L___irgrid2_driver_ExtractCPParameters116
;__irgrid2_driver.c, 666 :: 		offsetSP[0] = offsetSP[0] - 1024;
0x1FC4	0xAB03    ADD	R3, SP, #12
0x1FC6	0xF9B32000  LDRSH	R2, [R3, #0]
0x1FCA	0xF5A26280  SUB	R2, R2, #1024
0x1FCE	0x801A    STRH	R2, [R3, #0]
;__irgrid2_driver.c, 667 :: 		}
L___irgrid2_driver_ExtractCPParameters116:
;__irgrid2_driver.c, 669 :: 		offsetSP[1] = (eeData[58] & 0xFC00) >> 10;
0x1FD0	0xAC03    ADD	R4, SP, #12
0x1FD2	0x1CA3    ADDS	R3, R4, #2
0x1FD4	0xF2060274  ADDW	R2, R6, #116
0x1FD8	0x8812    LDRH	R2, [R2, #0]
0x1FDA	0xF402427C  AND	R2, R2, #64512
0x1FDE	0xB292    UXTH	R2, R2
0x1FE0	0x0A92    LSRS	R2, R2, #10
0x1FE2	0x801A    STRH	R2, [R3, #0]
;__irgrid2_driver.c, 670 :: 		if (offsetSP[1] > 31)
0x1FE4	0x1CA2    ADDS	R2, R4, #2
0x1FE6	0xF9B22000  LDRSH	R2, [R2, #0]
0x1FEA	0x2A1F    CMP	R2, #31
0x1FEC	0xDD06    BLE	L___irgrid2_driver_ExtractCPParameters117
;__irgrid2_driver.c, 672 :: 		offsetSP[1] = offsetSP[1] - 64;
0x1FEE	0xAA03    ADD	R2, SP, #12
0x1FF0	0x1C93    ADDS	R3, R2, #2
0x1FF2	0x1C92    ADDS	R2, R2, #2
0x1FF4	0xF9B22000  LDRSH	R2, [R2, #0]
0x1FF8	0x3A40    SUBS	R2, #64
0x1FFA	0x801A    STRH	R2, [R3, #0]
;__irgrid2_driver.c, 673 :: 		}
L___irgrid2_driver_ExtractCPParameters117:
;__irgrid2_driver.c, 674 :: 		offsetSP[1] = offsetSP[1] + offsetSP[0];
0x1FFC	0xAD03    ADD	R5, SP, #12
0x1FFE	0x1CAC    ADDS	R4, R5, #2
0x2000	0x1CAA    ADDS	R2, R5, #2
0x2002	0xF9B23000  LDRSH	R3, [R2, #0]
0x2006	0xF9B52000  LDRSH	R2, [R5, #0]
0x200A	0x189A    ADDS	R2, R3, R2
0x200C	0x8022    STRH	R2, [R4, #0]
;__irgrid2_driver.c, 676 :: 		alphaSP[0] = (eeData[57] & 0x03FF);
0x200E	0xAC01    ADD	R4, SP, #4
0x2010	0xF2060272  ADDW	R2, R6, #114
0x2014	0x8813    LDRH	R3, [R2, #0]
0x2016	0xF24032FF  MOVW	R2, #1023
0x201A	0xEA030202  AND	R2, R3, R2, LSL #0
0x201E	0xB292    UXTH	R2, R2
0x2020	0xEE002A10  VMOV	S0, R2
0x2024	0xEEB80A40  VCVT.F32.U32	S0, S0
0x2028	0xED040A00  VSTR.32	S0, [R4, #0]
;__irgrid2_driver.c, 677 :: 		if (alphaSP[0] > 511)
0x202C	0xED540A00  VLDR.32	S1, [R4, #0]
0x2030	0x4A82    LDR	R2, [PC, #520]
0x2032	0xEE002A10  VMOV	S0, R2
0x2036	0xEEF40AC0  VCMPE.F32	S1, S0
0x203A	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x203E	0xDD0A    BLE	L___irgrid2_driver_ExtractCPParameters118
;__irgrid2_driver.c, 679 :: 		alphaSP[0] = alphaSP[0] - 1024;
0x2040	0xAB01    ADD	R3, SP, #4
0x2042	0xED530A00  VLDR.32	S1, [R3, #0]
0x2046	0xF04F4289  MOV	R2, #1149239296
0x204A	0xEE002A10  VMOV	S0, R2
0x204E	0xEE300AC0  VSUB.F32	S0, S1, S0
0x2052	0xED030A00  VSTR.32	S0, [R3, #0]
;__irgrid2_driver.c, 680 :: 		}
L___irgrid2_driver_ExtractCPParameters118:
;__irgrid2_driver.c, 681 :: 		alphaSP[0] = alphaSP[0] /  _pow(2,(double)alphaScale);
0x2056	0xAB01    ADD	R3, SP, #4
0x2058	0x461A    MOV	R2, R3
0x205A	0x9205    STR	R2, [SP, #20]
0x205C	0xED130A00  VLDR.32	S0, [R3, #0]
0x2060	0xED8D0A04  VSTR.32	S0, [SP, #16]
0x2064	0xEE000A10  VMOV	S0, R0
0x2068	0xEEB80A40  VCVT.F32.U32	S0, S0
; alphaScale end address is: 0 (R0)
0x206C	0xEEF00A40  VMOV.F32	S1, S0
0x2070	0xEEB00A00  VMOV.F32	S0, #2
0x2074	0xF7FFFB2A  BL	__irgrid2_driver__pow+0
0x2078	0xEDDD0A04  VLDR.32	S1, [SP, #16]
0x207C	0xEE800A80  VDIV.F32	S0, S1, S0
0x2080	0x9A05    LDR	R2, [SP, #20]
0x2082	0xED020A00  VSTR.32	S0, [R2, #0]
;__irgrid2_driver.c, 683 :: 		alphaSP[1] = (eeData[57] & 0xFC00) >> 10;
0x2086	0xAC01    ADD	R4, SP, #4
0x2088	0x1D23    ADDS	R3, R4, #4
0x208A	0xF2060272  ADDW	R2, R6, #114
0x208E	0x8812    LDRH	R2, [R2, #0]
0x2090	0xF402427C  AND	R2, R2, #64512
0x2094	0xB292    UXTH	R2, R2
0x2096	0x0A92    LSRS	R2, R2, #10
0x2098	0xB292    UXTH	R2, R2
0x209A	0xEE002A10  VMOV	S0, R2
0x209E	0xEEB80A40  VCVT.F32.U32	S0, S0
0x20A2	0xED030A00  VSTR.32	S0, [R3, #0]
;__irgrid2_driver.c, 684 :: 		if (alphaSP[1] > 31)
0x20A6	0x1D22    ADDS	R2, R4, #4
0x20A8	0xED520A00  VLDR.32	S1, [R2, #0]
0x20AC	0xEEB30A0F  VMOV.F32	S0, #31
0x20B0	0xEEF40AC0  VCMPE.F32	S1, S0
0x20B4	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x20B8	0xDD0C    BLE	L___irgrid2_driver_ExtractCPParameters119
;__irgrid2_driver.c, 686 :: 		alphaSP[1] = alphaSP[1] - 64;
0x20BA	0xAA01    ADD	R2, SP, #4
0x20BC	0x1D13    ADDS	R3, R2, #4
0x20BE	0x1D12    ADDS	R2, R2, #4
0x20C0	0xED520A00  VLDR.32	S1, [R2, #0]
0x20C4	0xF04F4285  MOV	R2, #1115684864
0x20C8	0xEE002A10  VMOV	S0, R2
0x20CC	0xEE300AC0  VSUB.F32	S0, S1, S0
0x20D0	0xED030A00  VSTR.32	S0, [R3, #0]
;__irgrid2_driver.c, 687 :: 		}
L___irgrid2_driver_ExtractCPParameters119:
;__irgrid2_driver.c, 688 :: 		alphaSP[1] = (1 + alphaSP[1]/128) * alphaSP[0];
0x20D4	0xAC01    ADD	R4, SP, #4
0x20D6	0x1D23    ADDS	R3, R4, #4
0x20D8	0x1D22    ADDS	R2, R4, #4
0x20DA	0xED520A00  VLDR.32	S1, [R2, #0]
0x20DE	0xF04F4286  MOV	R2, #1124073472
0x20E2	0xEE002A10  VMOV	S0, R2
0x20E6	0xEEC00A80  VDIV.F32	S1, S1, S0
0x20EA	0xEEB70A00  VMOV.F32	S0, #1
0x20EE	0xEE700A20  VADD.F32	S1, S0, S1
0x20F2	0xED140A00  VLDR.32	S0, [R4, #0]
0x20F6	0xEE200A80  VMUL.F32	S0, S1, S0
0x20FA	0xED030A00  VSTR.32	S0, [R3, #0]
;__irgrid2_driver.c, 690 :: 		cpKta = (eeData[59] & 0x00FF);
0x20FE	0xF2060276  ADDW	R2, R6, #118
0x2102	0x8812    LDRH	R2, [R2, #0]
0x2104	0xF00202FF  AND	R2, R2, #255
0x2108	0xB292    UXTH	R2, R2
0x210A	0xEE002A90  VMOV	S1, R2
0x210E	0xEEF80A60  VCVT.F32.U32	S1, S1
; cpKta start address is: 8 (S2)
0x2112	0xEEB01A60  VMOV.F32	S2, S1
;__irgrid2_driver.c, 691 :: 		if (cpKta > 127)
0x2116	0x4A4A    LDR	R2, [PC, #296]
0x2118	0xEE002A10  VMOV	S0, R2
0x211C	0xEEF40AC0  VCMPE.F32	S1, S0
0x2120	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x2124	0xDD0A    BLE	L___irgrid2_driver_ExtractCPParameters240
;__irgrid2_driver.c, 693 :: 		cpKta = cpKta - 256;
0x2126	0xF04F4287  MOV	R2, #1132462080
0x212A	0xEE002A10  VMOV	S0, R2
0x212E	0xEE310A40  VSUB.F32	S0, S2, S0
; cpKta end address is: 8 (S2)
; cpKta start address is: 4 (S1)
0x2132	0xEEF00A40  VMOV.F32	S1, S0
; cpKta end address is: 4 (S1)
0x2136	0xEEB03A60  VMOV.F32	S6, S1
;__irgrid2_driver.c, 694 :: 		}
0x213A	0xE001    B	L___irgrid2_driver_ExtractCPParameters120
L___irgrid2_driver_ExtractCPParameters240:
;__irgrid2_driver.c, 691 :: 		if (cpKta > 127)
0x213C	0xEEB03A41  VMOV.F32	S6, S2
;__irgrid2_driver.c, 694 :: 		}
L___irgrid2_driver_ExtractCPParameters120:
;__irgrid2_driver.c, 695 :: 		ktaScale1 = ((eeData[56] & 0x00F0) >> 4) + 8;
; cpKta start address is: 24 (S6)
0x2140	0xF2060270  ADDW	R2, R6, #112
0x2144	0x8812    LDRH	R2, [R2, #0]
0x2146	0xF00202F0  AND	R2, R2, #240
0x214A	0xB292    UXTH	R2, R2
0x214C	0x0912    LSRS	R2, R2, #4
0x214E	0xB292    UXTH	R2, R2
0x2150	0xF2020308  ADDW	R3, R2, #8
0x2154	0xB29B    UXTH	R3, R3
;__irgrid2_driver.c, 696 :: 		mlx90640->cpKta = cpKta / _pow(2,(double)ktaScale1);
0x2156	0xF2070220  ADDW	R2, R7, #32
0x215A	0x9204    STR	R2, [SP, #16]
0x215C	0xEE003A10  VMOV	S0, R3
0x2160	0xEEB80A40  VCVT.F32.U32	S0, S0
0x2164	0xEEF00A40  VMOV.F32	S1, S0
0x2168	0xEEB00A00  VMOV.F32	S0, #2
0x216C	0xF7FFFAAE  BL	__irgrid2_driver__pow+0
0x2170	0xEE830A00  VDIV.F32	S0, S6, S0
; cpKta end address is: 24 (S6)
0x2174	0x9A04    LDR	R2, [SP, #16]
0x2176	0xED020A00  VSTR.32	S0, [R2, #0]
;__irgrid2_driver.c, 698 :: 		cpKv = (eeData[59] & 0xFF00) >> 8;
0x217A	0xF2060276  ADDW	R2, R6, #118
0x217E	0x8812    LDRH	R2, [R2, #0]
0x2180	0xF402427F  AND	R2, R2, #65280
0x2184	0xB292    UXTH	R2, R2
0x2186	0x0A12    LSRS	R2, R2, #8
0x2188	0xB292    UXTH	R2, R2
0x218A	0xEE002A90  VMOV	S1, R2
0x218E	0xEEF80A60  VCVT.F32.U32	S1, S1
; cpKv start address is: 8 (S2)
0x2192	0xEEB01A60  VMOV.F32	S2, S1
;__irgrid2_driver.c, 699 :: 		if (cpKv > 127)
0x2196	0x4A2A    LDR	R2, [PC, #168]
0x2198	0xEE002A10  VMOV	S0, R2
0x219C	0xEEF40AC0  VCMPE.F32	S1, S0
0x21A0	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x21A4	0xDD0A    BLE	L___irgrid2_driver_ExtractCPParameters241
;__irgrid2_driver.c, 701 :: 		cpKv = cpKv - 256;
0x21A6	0xF04F4287  MOV	R2, #1132462080
0x21AA	0xEE002A10  VMOV	S0, R2
0x21AE	0xEE310A40  VSUB.F32	S0, S2, S0
; cpKv end address is: 8 (S2)
; cpKv start address is: 4 (S1)
0x21B2	0xEEF00A40  VMOV.F32	S1, S0
; cpKv end address is: 4 (S1)
0x21B6	0xEEB03A60  VMOV.F32	S6, S1
;__irgrid2_driver.c, 702 :: 		}
0x21BA	0xE001    B	L___irgrid2_driver_ExtractCPParameters121
L___irgrid2_driver_ExtractCPParameters241:
;__irgrid2_driver.c, 699 :: 		if (cpKv > 127)
0x21BC	0xEEB03A41  VMOV.F32	S6, S2
;__irgrid2_driver.c, 702 :: 		}
L___irgrid2_driver_ExtractCPParameters121:
;__irgrid2_driver.c, 703 :: 		kvScale = (eeData[56] & 0x0F00) >> 8;
; cpKv start address is: 24 (S6)
0x21C0	0xF2060270  ADDW	R2, R6, #112
; eeData end address is: 24 (R6)
0x21C4	0x8812    LDRH	R2, [R2, #0]
0x21C6	0xF4026270  AND	R2, R2, #3840
0x21CA	0xB292    UXTH	R2, R2
0x21CC	0x0A13    LSRS	R3, R2, #8
0x21CE	0xB29B    UXTH	R3, R3
;__irgrid2_driver.c, 704 :: 		mlx90640->cpKv = cpKv / _pow(2,(double)kvScale);
0x21D0	0xF207021C  ADDW	R2, R7, #28
0x21D4	0x9204    STR	R2, [SP, #16]
0x21D6	0xEE003A10  VMOV	S0, R3
0x21DA	0xEEB80A40  VCVT.F32.U32	S0, S0
0x21DE	0xEEF00A40  VMOV.F32	S1, S0
0x21E2	0xEEB00A00  VMOV.F32	S0, #2
0x21E6	0xF7FFFA71  BL	__irgrid2_driver__pow+0
0x21EA	0xEE830A00  VDIV.F32	S0, S6, S0
; cpKv end address is: 24 (S6)
0x21EE	0x9A04    LDR	R2, [SP, #16]
0x21F0	0xED020A00  VSTR.32	S0, [R2, #0]
;__irgrid2_driver.c, 706 :: 		mlx90640->cpAlpha[0] = alphaSP[0];
0x21F4	0xF6422244  MOVW	R2, #10820
0x21F8	0x18BB    ADDS	R3, R7, R2
0x21FA	0xAC01    ADD	R4, SP, #4
0x21FC	0xED140A00  VLDR.32	S0, [R4, #0]
0x2200	0xED030A00  VSTR.32	S0, [R3, #0]
;__irgrid2_driver.c, 707 :: 		mlx90640->cpAlpha[1] = alphaSP[1];
0x2204	0xF6422244  MOVW	R2, #10820
0x2208	0x18BA    ADDS	R2, R7, R2
0x220A	0x1D13    ADDS	R3, R2, #4
0x220C	0x1D22    ADDS	R2, R4, #4
0x220E	0xED120A00  VLDR.32	S0, [R2, #0]
0x2212	0xED030A00  VSTR.32	S0, [R3, #0]
;__irgrid2_driver.c, 708 :: 		mlx90640->cpOffset[0] = offsetSP[0];
0x2216	0xF642224C  MOVW	R2, #10828
0x221A	0x18BB    ADDS	R3, R7, R2
0x221C	0xAC03    ADD	R4, SP, #12
0x221E	0xF9B42000  LDRSH	R2, [R4, #0]
0x2222	0x801A    STRH	R2, [R3, #0]
;__irgrid2_driver.c, 709 :: 		mlx90640->cpOffset[1] = offsetSP[1];
0x2224	0xF642224C  MOVW	R2, #10828
0x2228	0x18BA    ADDS	R2, R7, R2
; mlx90640 end address is: 28 (R7)
0x222A	0x1C93    ADDS	R3, R2, #2
0x222C	0x1CA2    ADDS	R2, R4, #2
0x222E	0xF9B22000  LDRSH	R2, [R2, #0]
0x2232	0x801A    STRH	R2, [R3, #0]
;__irgrid2_driver.c, 710 :: 		}
L_end_ExtractCPParameters:
0x2234	0xF8DDE000  LDR	LR, [SP, #0]
0x2238	0xB006    ADD	SP, SP, #24
0x223A	0x4770    BX	LR
0x223C	0x800043FF  	#1140817920
0x2240	0x000042FE  	#1123942400
; end of __irgrid2_driver_ExtractCPParameters
__irgrid2_driver_ExtractCILCParameters:
;__irgrid2_driver.c, 712 :: 		static void ExtractCILCParameters(uint16_t *eeData, paramsMLX90640 *mlx90640)
; mlx90640 start address is: 4 (R1)
; eeData start address is: 0 (R0)
0x25DC	0xB083    SUB	SP, SP, #12
; mlx90640 end address is: 4 (R1)
; eeData end address is: 0 (R0)
; eeData start address is: 0 (R0)
; mlx90640 start address is: 4 (R1)
;__irgrid2_driver.c, 717 :: 		calibrationModeEE = (eeData[10] & 0x0800) >> 4;
0x25DE	0xF2000214  ADDW	R2, R0, #20
0x25E2	0x8812    LDRH	R2, [R2, #0]
0x25E4	0xF4026200  AND	R2, R2, #2048
0x25E8	0xB292    UXTH	R2, R2
0x25EA	0x0912    LSRS	R2, R2, #4
;__irgrid2_driver.c, 718 :: 		calibrationModeEE = calibrationModeEE ^ 0x80;
0x25EC	0xB2D2    UXTB	R2, R2
0x25EE	0xF0820280  EOR	R2, R2, #128
; calibrationModeEE start address is: 20 (R5)
0x25F2	0xB2D5    UXTB	R5, R2
;__irgrid2_driver.c, 720 :: 		ilChessC[0] = (eeData[53] & 0x003F);
0x25F4	0xAB00    ADD	R3, SP, #0
0x25F6	0xF200026A  ADDW	R2, R0, #106
0x25FA	0x8812    LDRH	R2, [R2, #0]
0x25FC	0xF002023F  AND	R2, R2, #63
0x2600	0xB292    UXTH	R2, R2
0x2602	0xEE002A10  VMOV	S0, R2
0x2606	0xEEB80A40  VCVT.F32.U32	S0, S0
0x260A	0xED030A00  VSTR.32	S0, [R3, #0]
;__irgrid2_driver.c, 721 :: 		if (ilChessC[0] > 31)
0x260E	0xED530A00  VLDR.32	S1, [R3, #0]
0x2612	0xEEB30A0F  VMOV.F32	S0, #31
0x2616	0xEEF40AC0  VCMPE.F32	S1, S0
0x261A	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x261E	0xDD0A    BLE	L___irgrid2_driver_ExtractCILCParameters122
;__irgrid2_driver.c, 723 :: 		ilChessC[0] = ilChessC[0] - 64;
0x2620	0xAB00    ADD	R3, SP, #0
0x2622	0xED530A00  VLDR.32	S1, [R3, #0]
0x2626	0xF04F4285  MOV	R2, #1115684864
0x262A	0xEE002A10  VMOV	S0, R2
0x262E	0xEE300AC0  VSUB.F32	S0, S1, S0
0x2632	0xED030A00  VSTR.32	S0, [R3, #0]
;__irgrid2_driver.c, 724 :: 		}
L___irgrid2_driver_ExtractCILCParameters122:
;__irgrid2_driver.c, 725 :: 		ilChessC[0] = ilChessC[0] / 16.0f;
0x2636	0xAC00    ADD	R4, SP, #0
0x2638	0xED540A00  VLDR.32	S1, [R4, #0]
0x263C	0xEEB30A00  VMOV.F32	S0, #16
0x2640	0xEE800A80  VDIV.F32	S0, S1, S0
0x2644	0xED040A00  VSTR.32	S0, [R4, #0]
;__irgrid2_driver.c, 727 :: 		ilChessC[1] = (eeData[53] & 0x07C0) >> 6;
0x2648	0x1D23    ADDS	R3, R4, #4
0x264A	0xF200026A  ADDW	R2, R0, #106
0x264E	0x8812    LDRH	R2, [R2, #0]
0x2650	0xF40262F8  AND	R2, R2, #1984
0x2654	0xB292    UXTH	R2, R2
0x2656	0x0992    LSRS	R2, R2, #6
0x2658	0xB292    UXTH	R2, R2
0x265A	0xEE002A10  VMOV	S0, R2
0x265E	0xEEB80A40  VCVT.F32.U32	S0, S0
0x2662	0xED030A00  VSTR.32	S0, [R3, #0]
;__irgrid2_driver.c, 728 :: 		if (ilChessC[1] > 15)
0x2666	0x1D22    ADDS	R2, R4, #4
0x2668	0xED520A00  VLDR.32	S1, [R2, #0]
0x266C	0xEEB20A0E  VMOV.F32	S0, #15
0x2670	0xEEF40AC0  VCMPE.F32	S1, S0
0x2674	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x2678	0xDD0C    BLE	L___irgrid2_driver_ExtractCILCParameters123
;__irgrid2_driver.c, 730 :: 		ilChessC[1] = ilChessC[1] - 32;
0x267A	0xAA00    ADD	R2, SP, #0
0x267C	0x1D13    ADDS	R3, R2, #4
0x267E	0x1D12    ADDS	R2, R2, #4
0x2680	0xED520A00  VLDR.32	S1, [R2, #0]
0x2684	0xF04F4284  MOV	R2, #1107296256
0x2688	0xEE002A10  VMOV	S0, R2
0x268C	0xEE300AC0  VSUB.F32	S0, S1, S0
0x2690	0xED030A00  VSTR.32	S0, [R3, #0]
;__irgrid2_driver.c, 731 :: 		}
L___irgrid2_driver_ExtractCILCParameters123:
;__irgrid2_driver.c, 732 :: 		ilChessC[1] = ilChessC[1] / 2.0f;
0x2694	0xAC00    ADD	R4, SP, #0
0x2696	0x1D23    ADDS	R3, R4, #4
0x2698	0x1D22    ADDS	R2, R4, #4
0x269A	0xED520A00  VLDR.32	S1, [R2, #0]
0x269E	0xEEB00A00  VMOV.F32	S0, #2
0x26A2	0xEE800A80  VDIV.F32	S0, S1, S0
0x26A6	0xED030A00  VSTR.32	S0, [R3, #0]
;__irgrid2_driver.c, 734 :: 		ilChessC[2] = (eeData[53] & 0xF800) >> 11;
0x26AA	0xF2040308  ADDW	R3, R4, #8
0x26AE	0xF200026A  ADDW	R2, R0, #106
; eeData end address is: 0 (R0)
0x26B2	0x8812    LDRH	R2, [R2, #0]
0x26B4	0xF4024278  AND	R2, R2, #63488
0x26B8	0xB292    UXTH	R2, R2
0x26BA	0x0AD2    LSRS	R2, R2, #11
0x26BC	0xB292    UXTH	R2, R2
0x26BE	0xEE002A10  VMOV	S0, R2
0x26C2	0xEEB80A40  VCVT.F32.U32	S0, S0
0x26C6	0xED030A00  VSTR.32	S0, [R3, #0]
;__irgrid2_driver.c, 735 :: 		if (ilChessC[2] > 15)
0x26CA	0xF2040208  ADDW	R2, R4, #8
0x26CE	0xED520A00  VLDR.32	S1, [R2, #0]
0x26D2	0xEEB20A0E  VMOV.F32	S0, #15
0x26D6	0xEEF40AC0  VCMPE.F32	S1, S0
0x26DA	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x26DE	0xDD0D    BLE	L___irgrid2_driver_ExtractCILCParameters124
;__irgrid2_driver.c, 737 :: 		ilChessC[2] = ilChessC[2] - 32;
0x26E0	0xAA00    ADD	R2, SP, #0
0x26E2	0xF2020308  ADDW	R3, R2, #8
0x26E6	0x3208    ADDS	R2, #8
0x26E8	0xED520A00  VLDR.32	S1, [R2, #0]
0x26EC	0xF04F4284  MOV	R2, #1107296256
0x26F0	0xEE002A10  VMOV	S0, R2
0x26F4	0xEE300AC0  VSUB.F32	S0, S1, S0
0x26F8	0xED030A00  VSTR.32	S0, [R3, #0]
;__irgrid2_driver.c, 738 :: 		}
L___irgrid2_driver_ExtractCILCParameters124:
;__irgrid2_driver.c, 739 :: 		ilChessC[2] = ilChessC[2] / 8.0f;
0x26FC	0xAC00    ADD	R4, SP, #0
0x26FE	0xF2040308  ADDW	R3, R4, #8
0x2702	0xF2040208  ADDW	R2, R4, #8
0x2706	0xED520A00  VLDR.32	S1, [R2, #0]
0x270A	0xEEB20A00  VMOV.F32	S0, #8
0x270E	0xEE800A80  VDIV.F32	S0, S1, S0
0x2712	0xED030A00  VSTR.32	S0, [R3, #0]
;__irgrid2_driver.c, 741 :: 		mlx90640->calibrationModeEE = calibrationModeEE;
0x2716	0xF2010225  ADDW	R2, R1, #37
0x271A	0x7015    STRB	R5, [R2, #0]
; calibrationModeEE end address is: 20 (R5)
;__irgrid2_driver.c, 742 :: 		mlx90640->ilChessC[0] = ilChessC[0];
0x271C	0xF6422250  MOVW	R2, #10832
0x2720	0x188B    ADDS	R3, R1, R2
0x2722	0xED140A00  VLDR.32	S0, [R4, #0]
0x2726	0xED030A00  VSTR.32	S0, [R3, #0]
;__irgrid2_driver.c, 743 :: 		mlx90640->ilChessC[1] = ilChessC[1];
0x272A	0xF6422250  MOVW	R2, #10832
0x272E	0x188A    ADDS	R2, R1, R2
0x2730	0x1D13    ADDS	R3, R2, #4
0x2732	0x1D22    ADDS	R2, R4, #4
0x2734	0xED120A00  VLDR.32	S0, [R2, #0]
0x2738	0xED030A00  VSTR.32	S0, [R3, #0]
;__irgrid2_driver.c, 744 :: 		mlx90640->ilChessC[2] = ilChessC[2];
0x273C	0xF6422250  MOVW	R2, #10832
0x2740	0x188A    ADDS	R2, R1, R2
; mlx90640 end address is: 4 (R1)
0x2742	0xF2020308  ADDW	R3, R2, #8
0x2746	0xF2040208  ADDW	R2, R4, #8
0x274A	0xED120A00  VLDR.32	S0, [R2, #0]
0x274E	0xED030A00  VSTR.32	S0, [R3, #0]
;__irgrid2_driver.c, 745 :: 		}
L_end_ExtractCILCParameters:
0x2752	0xB003    ADD	SP, SP, #12
0x2754	0x4770    BX	LR
; end of __irgrid2_driver_ExtractCILCParameters
__irgrid2_driver_ExtractDeviatingPixels:
;__irgrid2_driver.c, 768 :: 		static int ExtractDeviatingPixels(uint16_t *eeData, paramsMLX90640 *mlx90640)
; mlx90640 start address is: 4 (R1)
; eeData start address is: 0 (R0)
0x286C	0xB082    SUB	SP, SP, #8
0x286E	0xF8CDE000  STR	LR, [SP, #0]
; mlx90640 end address is: 4 (R1)
; eeData end address is: 0 (R0)
; eeData start address is: 0 (R0)
; mlx90640 start address is: 4 (R1)
;__irgrid2_driver.c, 770 :: 		uint16_t pixCnt = 0;
;__irgrid2_driver.c, 771 :: 		uint16_t brokenPixCnt = 0;
; brokenPixCnt start address is: 24 (R6)
0x2872	0xF2400600  MOVW	R6, #0
;__irgrid2_driver.c, 772 :: 		uint16_t outlierPixCnt = 0;
; outlierPixCnt start address is: 8 (R2)
0x2876	0xF2400200  MOVW	R2, #0
;__irgrid2_driver.c, 773 :: 		int warn = 0;
; warn start address is: 12 (R3)
0x287A	0xF2400300  MOVW	R3, #0
0x287E	0xB21B    SXTH	R3, R3
;__irgrid2_driver.c, 776 :: 		for(pixCnt = 0; pixCnt<5; pixCnt++)
; pixCnt start address is: 28 (R7)
0x2880	0x2700    MOVS	R7, #0
; eeData end address is: 0 (R0)
; mlx90640 end address is: 4 (R1)
; outlierPixCnt end address is: 8 (R2)
; warn end address is: 12 (R3)
; pixCnt end address is: 28 (R7)
; brokenPixCnt end address is: 24 (R6)
0x2882	0x4605    MOV	R5, R0
0x2884	0xB290    UXTH	R0, R2
0x2886	0x460C    MOV	R4, R1
0x2888	0xB219    SXTH	R1, R3
L___irgrid2_driver_ExtractDeviatingPixels134:
; pixCnt start address is: 28 (R7)
; warn start address is: 4 (R1)
; outlierPixCnt start address is: 0 (R0)
; brokenPixCnt start address is: 24 (R6)
; mlx90640 start address is: 16 (R4)
; eeData start address is: 20 (R5)
0x288A	0x2F05    CMP	R7, #5
0x288C	0xD212    BCS	L___irgrid2_driver_ExtractDeviatingPixels135
;__irgrid2_driver.c, 778 :: 		mlx90640->brokenPixels[pixCnt] = 0xFFFF;
0x288E	0xF642225C  MOVW	R2, #10844
0x2892	0x18A3    ADDS	R3, R4, R2
0x2894	0x007A    LSLS	R2, R7, #1
0x2896	0x189B    ADDS	R3, R3, R2
0x2898	0xF64F72FF  MOVW	R2, #65535
0x289C	0x801A    STRH	R2, [R3, #0]
;__irgrid2_driver.c, 779 :: 		mlx90640->outlierPixels[pixCnt] = 0xFFFF;
0x289E	0xF6422266  MOVW	R2, #10854
0x28A2	0x18A3    ADDS	R3, R4, R2
0x28A4	0x007A    LSLS	R2, R7, #1
0x28A6	0x189B    ADDS	R3, R3, R2
0x28A8	0xF64F72FF  MOVW	R2, #65535
0x28AC	0x801A    STRH	R2, [R3, #0]
;__irgrid2_driver.c, 776 :: 		for(pixCnt = 0; pixCnt<5; pixCnt++)
0x28AE	0x1C7F    ADDS	R7, R7, #1
0x28B0	0xB2BF    UXTH	R7, R7
;__irgrid2_driver.c, 780 :: 		}
; pixCnt end address is: 28 (R7)
0x28B2	0xE7EA    B	L___irgrid2_driver_ExtractDeviatingPixels134
L___irgrid2_driver_ExtractDeviatingPixels135:
;__irgrid2_driver.c, 782 :: 		pixCnt = 0;
; pixCnt start address is: 8 (R2)
0x28B4	0x2200    MOVS	R2, #0
; outlierPixCnt end address is: 0 (R0)
; mlx90640 end address is: 16 (R4)
; eeData end address is: 20 (R5)
; pixCnt end address is: 8 (R2)
; brokenPixCnt end address is: 24 (R6)
; warn end address is: 4 (R1)
0x28B6	0xB287    UXTH	R7, R0
0x28B8	0x4620    MOV	R0, R4
0x28BA	0x462C    MOV	R4, R5
0x28BC	0xB295    UXTH	R5, R2
;__irgrid2_driver.c, 783 :: 		while (pixCnt < 768 && brokenPixCnt < 5 && outlierPixCnt < 5)
L___irgrid2_driver_ExtractDeviatingPixels137:
; pixCnt start address is: 20 (R5)
; eeData start address is: 16 (R4)
; eeData start address is: 16 (R4)
; eeData end address is: 16 (R4)
; mlx90640 start address is: 0 (R0)
; brokenPixCnt start address is: 24 (R6)
; outlierPixCnt start address is: 28 (R7)
; warn start address is: 4 (R1)
0x28BE	0xF5B57F40  CMP	R5, #768
0x28C2	0xD22A    BCS	L___irgrid2_driver_ExtractDeviatingPixels254
; eeData end address is: 16 (R4)
; eeData start address is: 16 (R4)
0x28C4	0x2E05    CMP	R6, #5
0x28C6	0xD228    BCS	L___irgrid2_driver_ExtractDeviatingPixels253
0x28C8	0x2F05    CMP	R7, #5
0x28CA	0xD226    BCS	L___irgrid2_driver_ExtractDeviatingPixels252
L___irgrid2_driver_ExtractDeviatingPixels251:
;__irgrid2_driver.c, 785 :: 		if(eeData[pixCnt+64] == 0)
0x28CC	0xF2050240  ADDW	R2, R5, #64
0x28D0	0xB292    UXTH	R2, R2
0x28D2	0x0052    LSLS	R2, R2, #1
0x28D4	0x18A2    ADDS	R2, R4, R2
0x28D6	0x8812    LDRH	R2, [R2, #0]
0x28D8	0xB942    CBNZ	R2, L___irgrid2_driver_ExtractDeviatingPixels141
;__irgrid2_driver.c, 787 :: 		mlx90640->brokenPixels[brokenPixCnt] = pixCnt;
0x28DA	0xF642225C  MOVW	R2, #10844
0x28DE	0x1883    ADDS	R3, R0, R2
0x28E0	0x0072    LSLS	R2, R6, #1
0x28E2	0x189A    ADDS	R2, R3, R2
0x28E4	0x8015    STRH	R5, [R2, #0]
;__irgrid2_driver.c, 788 :: 		brokenPixCnt = brokenPixCnt + 1;
0x28E6	0x1C76    ADDS	R6, R6, #1
0x28E8	0xB2B6    UXTH	R6, R6
;__irgrid2_driver.c, 789 :: 		}
0x28EA	0xE013    B	L___irgrid2_driver_ExtractDeviatingPixels142
L___irgrid2_driver_ExtractDeviatingPixels141:
;__irgrid2_driver.c, 790 :: 		else if((eeData[pixCnt+64] & 0x0001) != 0)
0x28EC	0xF2050240  ADDW	R2, R5, #64
0x28F0	0xB292    UXTH	R2, R2
0x28F2	0x0052    LSLS	R2, R2, #1
0x28F4	0x18A2    ADDS	R2, R4, R2
0x28F6	0x8812    LDRH	R2, [R2, #0]
0x28F8	0xF0020201  AND	R2, R2, #1
0x28FC	0xB292    UXTH	R2, R2
0x28FE	0xB14A    CBZ	R2, L___irgrid2_driver_ExtractDeviatingPixels255
;__irgrid2_driver.c, 792 :: 		mlx90640->outlierPixels[outlierPixCnt] = pixCnt;
0x2900	0xF6422266  MOVW	R2, #10854
0x2904	0x1883    ADDS	R3, R0, R2
0x2906	0x007A    LSLS	R2, R7, #1
0x2908	0x189A    ADDS	R2, R3, R2
0x290A	0x8015    STRH	R5, [R2, #0]
;__irgrid2_driver.c, 793 :: 		outlierPixCnt = outlierPixCnt + 1;
0x290C	0x1C7A    ADDS	R2, R7, #1
; outlierPixCnt end address is: 28 (R7)
; outlierPixCnt start address is: 12 (R3)
0x290E	0xB293    UXTH	R3, R2
; outlierPixCnt end address is: 12 (R3)
0x2910	0xB29F    UXTH	R7, R3
;__irgrid2_driver.c, 794 :: 		}
0x2912	0xE7FF    B	L___irgrid2_driver_ExtractDeviatingPixels143
L___irgrid2_driver_ExtractDeviatingPixels255:
;__irgrid2_driver.c, 790 :: 		else if((eeData[pixCnt+64] & 0x0001) != 0)
;__irgrid2_driver.c, 794 :: 		}
L___irgrid2_driver_ExtractDeviatingPixels143:
; outlierPixCnt start address is: 28 (R7)
; brokenPixCnt end address is: 24 (R6)
; outlierPixCnt end address is: 28 (R7)
L___irgrid2_driver_ExtractDeviatingPixels142:
;__irgrid2_driver.c, 796 :: 		pixCnt = pixCnt + 1;
; outlierPixCnt start address is: 28 (R7)
; brokenPixCnt start address is: 24 (R6)
0x2914	0x1C6D    ADDS	R5, R5, #1
0x2916	0xB2AD    UXTH	R5, R5
;__irgrid2_driver.c, 798 :: 		}
; eeData end address is: 16 (R4)
; pixCnt end address is: 20 (R5)
0x2918	0xE7D1    B	L___irgrid2_driver_ExtractDeviatingPixels137
;__irgrid2_driver.c, 783 :: 		while (pixCnt < 768 && brokenPixCnt < 5 && outlierPixCnt < 5)
L___irgrid2_driver_ExtractDeviatingPixels254:
L___irgrid2_driver_ExtractDeviatingPixels253:
L___irgrid2_driver_ExtractDeviatingPixels252:
;__irgrid2_driver.c, 800 :: 		if(brokenPixCnt > 4)
0x291A	0x2E04    CMP	R6, #4
0x291C	0xD903    BLS	L___irgrid2_driver_ExtractDeviatingPixels144
; mlx90640 end address is: 0 (R0)
; brokenPixCnt end address is: 24 (R6)
; outlierPixCnt end address is: 28 (R7)
; warn end address is: 4 (R1)
;__irgrid2_driver.c, 802 :: 		warn = -3;
; warn start address is: 0 (R0)
0x291E	0xF64F70FD  MOVW	R0, #65533
0x2922	0xB200    SXTH	R0, R0
;__irgrid2_driver.c, 803 :: 		}
; warn end address is: 0 (R0)
0x2924	0xE091    B	L___irgrid2_driver_ExtractDeviatingPixels145
L___irgrid2_driver_ExtractDeviatingPixels144:
;__irgrid2_driver.c, 804 :: 		else if(outlierPixCnt > 4)
; warn start address is: 4 (R1)
; outlierPixCnt start address is: 28 (R7)
; brokenPixCnt start address is: 24 (R6)
; mlx90640 start address is: 0 (R0)
0x2926	0x2F04    CMP	R7, #4
0x2928	0xD903    BLS	L___irgrid2_driver_ExtractDeviatingPixels146
; mlx90640 end address is: 0 (R0)
; brokenPixCnt end address is: 24 (R6)
; outlierPixCnt end address is: 28 (R7)
; warn end address is: 4 (R1)
;__irgrid2_driver.c, 806 :: 		warn = -4;
; warn start address is: 0 (R0)
0x292A	0xF64F70FC  MOVW	R0, #65532
0x292E	0xB200    SXTH	R0, R0
;__irgrid2_driver.c, 807 :: 		}
; warn end address is: 0 (R0)
0x2930	0xE08B    B	L___irgrid2_driver_ExtractDeviatingPixels147
L___irgrid2_driver_ExtractDeviatingPixels146:
;__irgrid2_driver.c, 808 :: 		else if((brokenPixCnt + outlierPixCnt) > 4)
; warn start address is: 4 (R1)
; outlierPixCnt start address is: 28 (R7)
; brokenPixCnt start address is: 24 (R6)
; mlx90640 start address is: 0 (R0)
0x2932	0x19F2    ADDS	R2, R6, R7
0x2934	0xB292    UXTH	R2, R2
0x2936	0x2A04    CMP	R2, #4
0x2938	0xD903    BLS	L___irgrid2_driver_ExtractDeviatingPixels148
; mlx90640 end address is: 0 (R0)
; brokenPixCnt end address is: 24 (R6)
; outlierPixCnt end address is: 28 (R7)
; warn end address is: 4 (R1)
;__irgrid2_driver.c, 810 :: 		warn = -5;
; warn start address is: 0 (R0)
0x293A	0xF64F70FB  MOVW	R0, #65531
0x293E	0xB200    SXTH	R0, R0
;__irgrid2_driver.c, 811 :: 		}
; warn end address is: 0 (R0)
0x2940	0xE083    B	L___irgrid2_driver_ExtractDeviatingPixels149
L___irgrid2_driver_ExtractDeviatingPixels148:
;__irgrid2_driver.c, 814 :: 		for(pixCnt=0; pixCnt<brokenPixCnt; pixCnt++)
; warn start address is: 4 (R1)
; outlierPixCnt start address is: 28 (R7)
; brokenPixCnt start address is: 24 (R6)
; pixCnt start address is: 8 (R2)
; mlx90640 start address is: 0 (R0)
0x2942	0x2200    MOVS	R2, #0
; mlx90640 end address is: 0 (R0)
; pixCnt end address is: 8 (R2)
; brokenPixCnt end address is: 24 (R6)
; outlierPixCnt end address is: 28 (R7)
; warn end address is: 4 (R1)
0x2944	0xFA1FF887  UXTH	R8, R7
0x2948	0xB2B7    UXTH	R7, R6
0x294A	0x4606    MOV	R6, R0
0x294C	0xB290    UXTH	R0, R2
L___irgrid2_driver_ExtractDeviatingPixels150:
; pixCnt start address is: 0 (R0)
; warn start address is: 4 (R1)
; outlierPixCnt start address is: 32 (R8)
; brokenPixCnt start address is: 28 (R7)
; mlx90640 start address is: 24 (R6)
0x294E	0x42B8    CMP	R0, R7
0x2950	0xD21F    BCS	L___irgrid2_driver_ExtractDeviatingPixels151
;__irgrid2_driver.c, 816 :: 		for(i=pixCnt+1; i<brokenPixCnt; i++)
0x2952	0x1C45    ADDS	R5, R0, #1
0x2954	0xB22D    SXTH	R5, R5
; i start address is: 20 (R5)
; mlx90640 end address is: 24 (R6)
; outlierPixCnt end address is: 32 (R8)
; brokenPixCnt end address is: 28 (R7)
; i end address is: 20 (R5)
; pixCnt end address is: 0 (R0)
; warn end address is: 4 (R1)
0x2956	0xFA1FF980  UXTH	R9, R0
L___irgrid2_driver_ExtractDeviatingPixels153:
; i start address is: 20 (R5)
; mlx90640 start address is: 24 (R6)
; brokenPixCnt start address is: 28 (R7)
; outlierPixCnt start address is: 32 (R8)
; warn start address is: 4 (R1)
; pixCnt start address is: 36 (R9)
0x295A	0x42BD    CMP	R5, R7
0x295C	0xD215    BCS	L___irgrid2_driver_ExtractDeviatingPixels154
; warn end address is: 4 (R1)
;__irgrid2_driver.c, 818 :: 		warn = CheckAdjacentPixels(mlx90640->brokenPixels[pixCnt],mlx90640->brokenPixels[i]);
0x295E	0xF642225C  MOVW	R2, #10844
0x2962	0x18B4    ADDS	R4, R6, R2
0x2964	0x006A    LSLS	R2, R5, #1
0x2966	0x18A2    ADDS	R2, R4, R2
0x2968	0x8812    LDRH	R2, [R2, #0]
0x296A	0xB293    UXTH	R3, R2
0x296C	0xEA4F0249  LSL	R2, R9, #1
0x2970	0x18A2    ADDS	R2, R4, R2
0x2972	0x8812    LDRH	R2, [R2, #0]
0x2974	0xB299    UXTH	R1, R3
0x2976	0xB290    UXTH	R0, R2
0x2978	0xF7FEFFEE  BL	__irgrid2_driver_CheckAdjacentPixels+0
; warn start address is: 4 (R1)
0x297C	0xB201    SXTH	R1, R0
;__irgrid2_driver.c, 819 :: 		if(warn != 0)
0x297E	0xB108    CBZ	R0, L___irgrid2_driver_ExtractDeviatingPixels156
; mlx90640 end address is: 24 (R6)
; outlierPixCnt end address is: 32 (R8)
; brokenPixCnt end address is: 28 (R7)
; i end address is: 20 (R5)
; pixCnt end address is: 36 (R9)
;__irgrid2_driver.c, 821 :: 		return warn;
0x2980	0xB208    SXTH	R0, R1
; warn end address is: 4 (R1)
0x2982	0xE062    B	L_end_ExtractDeviatingPixels
;__irgrid2_driver.c, 822 :: 		}
L___irgrid2_driver_ExtractDeviatingPixels156:
;__irgrid2_driver.c, 816 :: 		for(i=pixCnt+1; i<brokenPixCnt; i++)
; pixCnt start address is: 36 (R9)
; warn start address is: 4 (R1)
; i start address is: 20 (R5)
; brokenPixCnt start address is: 28 (R7)
; outlierPixCnt start address is: 32 (R8)
; mlx90640 start address is: 24 (R6)
0x2984	0x1C6D    ADDS	R5, R5, #1
0x2986	0xB22D    SXTH	R5, R5
;__irgrid2_driver.c, 823 :: 		}
; i end address is: 20 (R5)
0x2988	0xE7E7    B	L___irgrid2_driver_ExtractDeviatingPixels153
L___irgrid2_driver_ExtractDeviatingPixels154:
;__irgrid2_driver.c, 814 :: 		for(pixCnt=0; pixCnt<brokenPixCnt; pixCnt++)
0x298A	0xF1090001  ADD	R0, R9, #1
0x298E	0xB280    UXTH	R0, R0
; pixCnt end address is: 36 (R9)
; pixCnt start address is: 0 (R0)
;__irgrid2_driver.c, 824 :: 		}
; pixCnt end address is: 0 (R0)
0x2990	0xE7DD    B	L___irgrid2_driver_ExtractDeviatingPixels150
L___irgrid2_driver_ExtractDeviatingPixels151:
;__irgrid2_driver.c, 826 :: 		for(pixCnt=0; pixCnt<outlierPixCnt; pixCnt++)
; pixCnt start address is: 0 (R0)
0x2992	0x2000    MOVS	R0, #0
; mlx90640 end address is: 24 (R6)
; outlierPixCnt end address is: 32 (R8)
; brokenPixCnt end address is: 28 (R7)
; pixCnt end address is: 0 (R0)
; warn end address is: 4 (R1)
0x2994	0x9601    STR	R6, [SP, #4]
0x2996	0xFA1FF688  UXTH	R6, R8
0x299A	0xF8DD8004  LDR	R8, [SP, #4]
L___irgrid2_driver_ExtractDeviatingPixels157:
; pixCnt start address is: 0 (R0)
; mlx90640 start address is: 32 (R8)
; brokenPixCnt start address is: 28 (R7)
; outlierPixCnt start address is: 24 (R6)
; warn start address is: 4 (R1)
0x299E	0x42B0    CMP	R0, R6
0x29A0	0xD220    BCS	L___irgrid2_driver_ExtractDeviatingPixels158
;__irgrid2_driver.c, 828 :: 		for(i=pixCnt+1; i<outlierPixCnt; i++)
0x29A2	0x1C45    ADDS	R5, R0, #1
0x29A4	0xB22D    SXTH	R5, R5
; i start address is: 20 (R5)
; outlierPixCnt end address is: 24 (R6)
; brokenPixCnt end address is: 28 (R7)
; mlx90640 end address is: 32 (R8)
; i end address is: 20 (R5)
; pixCnt end address is: 0 (R0)
; warn end address is: 4 (R1)
0x29A6	0xFA1FF980  UXTH	R9, R0
L___irgrid2_driver_ExtractDeviatingPixels160:
; i start address is: 20 (R5)
; warn start address is: 4 (R1)
; outlierPixCnt start address is: 24 (R6)
; brokenPixCnt start address is: 28 (R7)
; mlx90640 start address is: 32 (R8)
; pixCnt start address is: 36 (R9)
0x29AA	0x42B5    CMP	R5, R6
0x29AC	0xD216    BCS	L___irgrid2_driver_ExtractDeviatingPixels161
; warn end address is: 4 (R1)
;__irgrid2_driver.c, 830 :: 		warn = CheckAdjacentPixels(mlx90640->outlierPixels[pixCnt],mlx90640->outlierPixels[i]);
0x29AE	0xF6422266  MOVW	R2, #10854
0x29B2	0xEB080402  ADD	R4, R8, R2, LSL #0
0x29B6	0x006A    LSLS	R2, R5, #1
0x29B8	0x18A2    ADDS	R2, R4, R2
0x29BA	0x8812    LDRH	R2, [R2, #0]
0x29BC	0xB293    UXTH	R3, R2
0x29BE	0xEA4F0249  LSL	R2, R9, #1
0x29C2	0x18A2    ADDS	R2, R4, R2
0x29C4	0x8812    LDRH	R2, [R2, #0]
0x29C6	0xB299    UXTH	R1, R3
0x29C8	0xB290    UXTH	R0, R2
0x29CA	0xF7FEFFC5  BL	__irgrid2_driver_CheckAdjacentPixels+0
; warn start address is: 4 (R1)
0x29CE	0xB201    SXTH	R1, R0
;__irgrid2_driver.c, 831 :: 		if(warn != 0)
0x29D0	0xB108    CBZ	R0, L___irgrid2_driver_ExtractDeviatingPixels163
; outlierPixCnt end address is: 24 (R6)
; brokenPixCnt end address is: 28 (R7)
; mlx90640 end address is: 32 (R8)
; i end address is: 20 (R5)
; pixCnt end address is: 36 (R9)
;__irgrid2_driver.c, 833 :: 		return warn;
0x29D2	0xB208    SXTH	R0, R1
; warn end address is: 4 (R1)
0x29D4	0xE039    B	L_end_ExtractDeviatingPixels
;__irgrid2_driver.c, 834 :: 		}
L___irgrid2_driver_ExtractDeviatingPixels163:
;__irgrid2_driver.c, 828 :: 		for(i=pixCnt+1; i<outlierPixCnt; i++)
; pixCnt start address is: 36 (R9)
; warn start address is: 4 (R1)
; i start address is: 20 (R5)
; mlx90640 start address is: 32 (R8)
; brokenPixCnt start address is: 28 (R7)
; outlierPixCnt start address is: 24 (R6)
0x29D6	0x1C6D    ADDS	R5, R5, #1
0x29D8	0xB22D    SXTH	R5, R5
;__irgrid2_driver.c, 835 :: 		}
; i end address is: 20 (R5)
0x29DA	0xE7E6    B	L___irgrid2_driver_ExtractDeviatingPixels160
L___irgrid2_driver_ExtractDeviatingPixels161:
;__irgrid2_driver.c, 826 :: 		for(pixCnt=0; pixCnt<outlierPixCnt; pixCnt++)
0x29DC	0xF1090201  ADD	R2, R9, #1
; pixCnt end address is: 36 (R9)
; pixCnt start address is: 0 (R0)
0x29E0	0xB290    UXTH	R0, R2
;__irgrid2_driver.c, 836 :: 		}
; pixCnt end address is: 0 (R0)
0x29E2	0xE7DC    B	L___irgrid2_driver_ExtractDeviatingPixels157
L___irgrid2_driver_ExtractDeviatingPixels158:
;__irgrid2_driver.c, 838 :: 		for(pixCnt=0; pixCnt<brokenPixCnt; pixCnt++)
; pixCnt start address is: 36 (R9)
0x29E4	0xF2400900  MOVW	R9, #0
; outlierPixCnt end address is: 24 (R6)
; brokenPixCnt end address is: 28 (R7)
; mlx90640 end address is: 32 (R8)
; warn end address is: 4 (R1)
; pixCnt end address is: 36 (R9)
0x29E8	0xF8AD6004  STRH	R6, [SP, #4]
0x29EC	0x4645    MOV	R5, R8
0x29EE	0xB2BE    UXTH	R6, R7
0x29F0	0xB208    SXTH	R0, R1
0x29F2	0xF8BD7004  LDRH	R7, [SP, #4]
L___irgrid2_driver_ExtractDeviatingPixels164:
; pixCnt start address is: 36 (R9)
; warn start address is: 0 (R0)
; outlierPixCnt start address is: 28 (R7)
; brokenPixCnt start address is: 24 (R6)
; mlx90640 start address is: 20 (R5)
0x29F6	0x45B1    CMP	R9, R6
0x29F8	0xD227    BCS	L___irgrid2_driver_ExtractDeviatingPixels165
;__irgrid2_driver.c, 840 :: 		for(i=0; i<outlierPixCnt; i++)
; i start address is: 32 (R8)
0x29FA	0xF2400800  MOVW	R8, #0
0x29FE	0xFA0FF888  SXTH	R8, R8
; mlx90640 end address is: 20 (R5)
; brokenPixCnt end address is: 24 (R6)
; outlierPixCnt end address is: 28 (R7)
; i end address is: 32 (R8)
; pixCnt end address is: 36 (R9)
; warn end address is: 0 (R0)
L___irgrid2_driver_ExtractDeviatingPixels167:
; i start address is: 32 (R8)
; mlx90640 start address is: 20 (R5)
; brokenPixCnt start address is: 24 (R6)
; outlierPixCnt start address is: 28 (R7)
; warn start address is: 0 (R0)
; pixCnt start address is: 36 (R9)
0x2A02	0x45B8    CMP	R8, R7
0x2A04	0xD21C    BCS	L___irgrid2_driver_ExtractDeviatingPixels168
; warn end address is: 0 (R0)
;__irgrid2_driver.c, 842 :: 		warn = CheckAdjacentPixels(mlx90640->brokenPixels[pixCnt],mlx90640->outlierPixels[i]);
0x2A06	0xF6422266  MOVW	R2, #10854
0x2A0A	0x18AB    ADDS	R3, R5, R2
0x2A0C	0xEA4F0248  LSL	R2, R8, #1
0x2A10	0x189A    ADDS	R2, R3, R2
0x2A12	0x8812    LDRH	R2, [R2, #0]
0x2A14	0xB294    UXTH	R4, R2
0x2A16	0xF642225C  MOVW	R2, #10844
0x2A1A	0x18AB    ADDS	R3, R5, R2
0x2A1C	0xEA4F0249  LSL	R2, R9, #1
0x2A20	0x189A    ADDS	R2, R3, R2
0x2A22	0x8812    LDRH	R2, [R2, #0]
0x2A24	0xB2A1    UXTH	R1, R4
0x2A26	0xB290    UXTH	R0, R2
0x2A28	0xF7FEFF96  BL	__irgrid2_driver_CheckAdjacentPixels+0
; warn start address is: 4 (R1)
0x2A2C	0xB201    SXTH	R1, R0
;__irgrid2_driver.c, 843 :: 		if(warn != 0)
0x2A2E	0xB108    CBZ	R0, L___irgrid2_driver_ExtractDeviatingPixels170
; mlx90640 end address is: 20 (R5)
; brokenPixCnt end address is: 24 (R6)
; outlierPixCnt end address is: 28 (R7)
; i end address is: 32 (R8)
; pixCnt end address is: 36 (R9)
;__irgrid2_driver.c, 845 :: 		return warn;
0x2A30	0xB208    SXTH	R0, R1
; warn end address is: 4 (R1)
0x2A32	0xE00A    B	L_end_ExtractDeviatingPixels
;__irgrid2_driver.c, 846 :: 		}
L___irgrid2_driver_ExtractDeviatingPixels170:
;__irgrid2_driver.c, 840 :: 		for(i=0; i<outlierPixCnt; i++)
; pixCnt start address is: 36 (R9)
; i start address is: 32 (R8)
; warn start address is: 4 (R1)
; outlierPixCnt start address is: 28 (R7)
; brokenPixCnt start address is: 24 (R6)
; mlx90640 start address is: 20 (R5)
0x2A34	0xF1080801  ADD	R8, R8, #1
0x2A38	0xFA0FF888  SXTH	R8, R8
;__irgrid2_driver.c, 847 :: 		}
; warn end address is: 4 (R1)
; i end address is: 32 (R8)
0x2A3C	0xB208    SXTH	R0, R1
0x2A3E	0xE7E0    B	L___irgrid2_driver_ExtractDeviatingPixels167
L___irgrid2_driver_ExtractDeviatingPixels168:
;__irgrid2_driver.c, 838 :: 		for(pixCnt=0; pixCnt<brokenPixCnt; pixCnt++)
; warn start address is: 0 (R0)
0x2A40	0xF1090901  ADD	R9, R9, #1
0x2A44	0xFA1FF989  UXTH	R9, R9
;__irgrid2_driver.c, 848 :: 		}
; mlx90640 end address is: 20 (R5)
; brokenPixCnt end address is: 24 (R6)
; outlierPixCnt end address is: 28 (R7)
; pixCnt end address is: 36 (R9)
0x2A48	0xE7D5    B	L___irgrid2_driver_ExtractDeviatingPixels164
L___irgrid2_driver_ExtractDeviatingPixels165:
;__irgrid2_driver.c, 850 :: 		}
L___irgrid2_driver_ExtractDeviatingPixels149:
; warn end address is: 0 (R0)
; warn start address is: 0 (R0)
; warn end address is: 0 (R0)
L___irgrid2_driver_ExtractDeviatingPixels147:
; warn start address is: 0 (R0)
; warn end address is: 0 (R0)
L___irgrid2_driver_ExtractDeviatingPixels145:
;__irgrid2_driver.c, 851 :: 		return warn;
; warn start address is: 0 (R0)
; warn end address is: 0 (R0)
;__irgrid2_driver.c, 852 :: 		}
L_end_ExtractDeviatingPixels:
0x2A4A	0xF8DDE000  LDR	LR, [SP, #0]
0x2A4E	0xB002    ADD	SP, SP, #8
0x2A50	0x4770    BX	LR
; end of __irgrid2_driver_ExtractDeviatingPixels
__irgrid2_driver_CheckAdjacentPixels:
;__irgrid2_driver.c, 747 :: 		static int CheckAdjacentPixels(uint16_t pix1, uint16_t pix2)
; pix2 start address is: 4 (R1)
; pix1 start address is: 0 (R0)
; pix2 end address is: 4 (R1)
; pix1 end address is: 0 (R0)
; pix1 start address is: 0 (R0)
; pix2 start address is: 4 (R1)
;__irgrid2_driver.c, 751 :: 		pixPosDif = pix1 - pix2;
0x1958	0x1A42    SUB	R2, R0, R1
; pix1 end address is: 0 (R0)
; pix2 end address is: 4 (R1)
; pixPosDif start address is: 0 (R0)
0x195A	0xB210    SXTH	R0, R2
;__irgrid2_driver.c, 752 :: 		if(pixPosDif > -34 && pixPosDif < -30)
0x195C	0xB213    SXTH	R3, R2
0x195E	0xF06F0221  MVN	R2, #33
0x1962	0x4293    CMP	R3, R2
0x1964	0xDD07    BLE	L___irgrid2_driver_CheckAdjacentPixels246
0x1966	0xF06F021D  MVN	R2, #29
0x196A	0x4290    CMP	R0, R2
0x196C	0xDA03    BGE	L___irgrid2_driver_CheckAdjacentPixels245
; pixPosDif end address is: 0 (R0)
L___irgrid2_driver_CheckAdjacentPixels244:
;__irgrid2_driver.c, 754 :: 		return -6;
0x196E	0xF64F70FA  MOVW	R0, #65530
0x1972	0xB200    SXTH	R0, R0
0x1974	0xE013    B	L_end_CheckAdjacentPixels
;__irgrid2_driver.c, 752 :: 		if(pixPosDif > -34 && pixPosDif < -30)
L___irgrid2_driver_CheckAdjacentPixels246:
; pixPosDif start address is: 0 (R0)
L___irgrid2_driver_CheckAdjacentPixels245:
;__irgrid2_driver.c, 756 :: 		if(pixPosDif > -2 && pixPosDif < 2)
0x1976	0xF06F0201  MVN	R2, #1
0x197A	0x4290    CMP	R0, R2
0x197C	0xDD05    BLE	L___irgrid2_driver_CheckAdjacentPixels248
0x197E	0x2802    CMP	R0, #2
0x1980	0xDA03    BGE	L___irgrid2_driver_CheckAdjacentPixels247
; pixPosDif end address is: 0 (R0)
L___irgrid2_driver_CheckAdjacentPixels243:
;__irgrid2_driver.c, 758 :: 		return -6;
0x1982	0xF64F70FA  MOVW	R0, #65530
0x1986	0xB200    SXTH	R0, R0
0x1988	0xE009    B	L_end_CheckAdjacentPixels
;__irgrid2_driver.c, 756 :: 		if(pixPosDif > -2 && pixPosDif < 2)
L___irgrid2_driver_CheckAdjacentPixels248:
; pixPosDif start address is: 0 (R0)
L___irgrid2_driver_CheckAdjacentPixels247:
;__irgrid2_driver.c, 760 :: 		if(pixPosDif > 30 && pixPosDif < 34)
0x198A	0x281E    CMP	R0, #30
0x198C	0xDD05    BLE	L___irgrid2_driver_CheckAdjacentPixels250
0x198E	0x2822    CMP	R0, #34
0x1990	0xDA03    BGE	L___irgrid2_driver_CheckAdjacentPixels249
; pixPosDif end address is: 0 (R0)
L___irgrid2_driver_CheckAdjacentPixels242:
;__irgrid2_driver.c, 762 :: 		return -6;
0x1992	0xF64F70FA  MOVW	R0, #65530
0x1996	0xB200    SXTH	R0, R0
0x1998	0xE001    B	L_end_CheckAdjacentPixels
;__irgrid2_driver.c, 760 :: 		if(pixPosDif > 30 && pixPosDif < 34)
L___irgrid2_driver_CheckAdjacentPixels250:
L___irgrid2_driver_CheckAdjacentPixels249:
;__irgrid2_driver.c, 765 :: 		return 0;
0x199A	0x2000    MOVS	R0, #0
0x199C	0xB200    SXTH	R0, R0
;__irgrid2_driver.c, 766 :: 		}
L_end_CheckAdjacentPixels:
0x199E	0x4770    BX	LR
; end of __irgrid2_driver_CheckAdjacentPixels
_irgrid2_setRefreshRate:
;__irgrid2_driver.c, 1056 :: 		void irgrid2_setRefreshRate(uint8_t refreshRate)
; refreshRate start address is: 0 (R0)
0x3748	0xB082    SUB	SP, SP, #8
0x374A	0xF8CDE000  STR	LR, [SP, #0]
; refreshRate end address is: 0 (R0)
; refreshRate start address is: 0 (R0)
;__irgrid2_driver.c, 1061 :: 		value = (refreshRate & 0x07)<<7;
0x374E	0xF0000107  AND	R1, R0, #7
0x3752	0xB2C9    UXTB	R1, R1
; refreshRate end address is: 0 (R0)
0x3754	0x01C9    LSLS	R1, R1, #7
0x3756	0xF8AD1006  STRH	R1, [SP, #6]
;__irgrid2_driver.c, 1062 :: 		irgrid2_readData(0x800D, 1, &controlRegister1);
0x375A	0xA901    ADD	R1, SP, #4
0x375C	0x460A    MOV	R2, R1
0x375E	0x2101    MOVS	R1, #1
0x3760	0xF248000D  MOVW	R0, #32781
0x3764	0xF7FFFDF0  BL	_irgrid2_readData+0
;__irgrid2_driver.c, 1063 :: 		value = (controlRegister1 & 0xFC7F) | value;
0x3768	0xF8BD2004  LDRH	R2, [SP, #4]
0x376C	0xF64F417F  MOVW	R1, #64639
0x3770	0x400A    ANDS	R2, R1
0x3772	0xB292    UXTH	R2, R2
0x3774	0xF9BD1006  LDRSH	R1, [SP, #6]
0x3778	0xEA420101  ORR	R1, R2, R1, LSL #0
;__irgrid2_driver.c, 1064 :: 		irgrid2_writeByte(0x800D, value);
0x377C	0xB289    UXTH	R1, R1
0x377E	0xF248000D  MOVW	R0, #32781
0x3782	0xF7FFF84D  BL	_irgrid2_writeByte+0
;__irgrid2_driver.c, 1065 :: 		}
L_end_irgrid2_setRefreshRate:
0x3786	0xF8DDE000  LDR	LR, [SP, #0]
0x378A	0xB002    ADD	SP, SP, #8
0x378C	0x4770    BX	LR
; end of _irgrid2_setRefreshRate
_irgrid2_writeByte:
;__irgrid2_driver.c, 888 :: 		void irgrid2_writeByte(uint16_t reg, uint16_t _data)
; _data start address is: 4 (R1)
; reg start address is: 0 (R0)
0x2820	0xB082    SUB	SP, SP, #8
0x2822	0xF8CDE000  STR	LR, [SP, #0]
; _data end address is: 4 (R1)
; reg end address is: 0 (R0)
; reg start address is: 0 (R0)
; _data start address is: 4 (R1)
;__irgrid2_driver.c, 892 :: 		writeReg[ 0 ] = (uint8_t)(reg >> 8);
0x2826	0xAC01    ADD	R4, SP, #4
0x2828	0x0A02    LSRS	R2, R0, #8
0x282A	0xB2D2    UXTB	R2, R2
0x282C	0x7022    STRB	R2, [R4, #0]
;__irgrid2_driver.c, 893 :: 		writeReg[ 1 ] = (uint8_t)(reg & 0x00FF);
0x282E	0x1C63    ADDS	R3, R4, #1
0x2830	0xF00002FF  AND	R2, R0, #255
; reg end address is: 0 (R0)
0x2834	0xB2D2    UXTB	R2, R2
0x2836	0x701A    STRB	R2, [R3, #0]
;__irgrid2_driver.c, 894 :: 		writeReg[ 2 ] = (uint8_t)(_data >> 8);
0x2838	0x1CA3    ADDS	R3, R4, #2
0x283A	0x0A0A    LSRS	R2, R1, #8
0x283C	0xB2D2    UXTB	R2, R2
0x283E	0x701A    STRB	R2, [R3, #0]
;__irgrid2_driver.c, 895 :: 		writeReg[ 3 ] = (uint8_t)(_data & 0x00FF);
0x2840	0x1CE3    ADDS	R3, R4, #3
0x2842	0xF00102FF  AND	R2, R1, #255
; _data end address is: 4 (R1)
0x2846	0xB2D2    UXTB	R2, R2
0x2848	0x701A    STRB	R2, [R3, #0]
;__irgrid2_driver.c, 897 :: 		hal_i2cStart();
0x284A	0xF7FEFEA3  BL	__irgrid2_driver_hal_i2cStart+0
;__irgrid2_driver.c, 898 :: 		hal_i2cWrite(_slaveAddress, writeReg, 4, END_MODE_STOP);
0x284E	0xAB01    ADD	R3, SP, #4
0x2850	0x4A05    LDR	R2, [PC, #20]
0x2852	0x7812    LDRB	R2, [R2, #0]
0x2854	0x4619    MOV	R1, R3
0x2856	0x2300    MOVS	R3, #0
0x2858	0xB2D0    UXTB	R0, R2
0x285A	0x2204    MOVS	R2, #4
0x285C	0xF7FEFFAE  BL	__irgrid2_driver_hal_i2cWrite+0
;__irgrid2_driver.c, 899 :: 		}
L_end_irgrid2_writeByte:
0x2860	0xF8DDE000  LDR	LR, [SP, #0]
0x2864	0xB002    ADD	SP, SP, #8
0x2866	0x4770    BX	LR
0x2868	0x00852000  	__irgrid2_driver__slaveAddress+0
; end of _irgrid2_writeByte
_Delay_100ms:
;__Lib_Delays.c, 53 :: 		void Delay_100ms() {
;__Lib_Delays.c, 54 :: 		Delay_ms(100);
0x4098	0xF64007FE  MOVW	R7, #2302
0x409C	0xF2C0073D  MOVT	R7, #61
L_Delay_100ms20:
0x40A0	0x1E7F    SUBS	R7, R7, #1
0x40A2	0xD1FD    BNE	L_Delay_100ms20
0x40A4	0xBF00    NOP
0x40A6	0xBF00    NOP
0x40A8	0xBF00    NOP
0x40AA	0xBF00    NOP
0x40AC	0xBF00    NOP
;__Lib_Delays.c, 55 :: 		}
L_end_Delay_100ms:
0x40AE	0x4770    BX	LR
; end of _Delay_100ms
_applicationTask:
;Click_IR_Grid2_TIVA.c, 52 :: 		void applicationTask()
0x4720	0xB081    SUB	SP, SP, #4
0x4722	0xF8CDE000  STR	LR, [SP, #0]
;Click_IR_Grid2_TIVA.c, 54 :: 		irgrid2_getPixelTemperature(&Ta,&pixelTemp[0]);
0x4726	0x492F    LDR	R1, [PC, #188]
0x4728	0x482F    LDR	R0, [PC, #188]
0x472A	0xF7FFFDE9  BL	_irgrid2_getPixelTemperature+0
;Click_IR_Grid2_TIVA.c, 55 :: 		mikrobus_logWrite("Ambient temperature:  ",_LOG_TEXT);
0x472E	0x482F    LDR	R0, [PC, #188]
0x4730	0x2101    MOVS	R1, #1
0x4732	0xF7FFFE23  BL	_mikrobus_logWrite+0
;Click_IR_Grid2_TIVA.c, 56 :: 		FloatToStr(Ta,demoText);
0x4736	0x482C    LDR	R0, [PC, #176]
0x4738	0xED100A00  VLDR.32	S0, [R0, #0]
0x473C	0x482C    LDR	R0, [PC, #176]
0x473E	0xF7FFFE79  BL	_FloatToStr+0
;Click_IR_Grid2_TIVA.c, 57 :: 		mikrobus_logWrite(demoText,_LOG_LINE);
0x4742	0x2102    MOVS	R1, #2
0x4744	0x482A    LDR	R0, [PC, #168]
0x4746	0xF7FFFE19  BL	_mikrobus_logWrite+0
;Click_IR_Grid2_TIVA.c, 58 :: 		mikrobus_logWrite(" ", _LOG_LINE);
0x474A	0x482A    LDR	R0, [PC, #168]
0x474C	0x2102    MOVS	R1, #2
0x474E	0xF7FFFE15  BL	_mikrobus_logWrite+0
;Click_IR_Grid2_TIVA.c, 60 :: 		mikrobus_logWrite("--- Pixel temperature matrix 32x24 ---", _LOG_LINE);
0x4752	0x4829    LDR	R0, [PC, #164]
0x4754	0x2102    MOVS	R1, #2
0x4756	0xF7FFFE11  BL	_mikrobus_logWrite+0
;Click_IR_Grid2_TIVA.c, 62 :: 		for ( cnt = 0 ; cnt < 768 ; cnt++)
0x475A	0x2100    MOVS	R1, #0
0x475C	0x4827    LDR	R0, [PC, #156]
0x475E	0x8001    STRH	R1, [R0, #0]
L_applicationTask2:
0x4760	0x4826    LDR	R0, [PC, #152]
0x4762	0x8800    LDRH	R0, [R0, #0]
0x4764	0xF5B07F40  CMP	R0, #768
0x4768	0xD229    BCS	L_applicationTask3
;Click_IR_Grid2_TIVA.c, 64 :: 		FloatToStr(pixelTemp[cnt],demoText);
0x476A	0x4824    LDR	R0, [PC, #144]
0x476C	0x8800    LDRH	R0, [R0, #0]
0x476E	0x0081    LSLS	R1, R0, #2
0x4770	0x481C    LDR	R0, [PC, #112]
0x4772	0x1840    ADDS	R0, R0, R1
0x4774	0xED100A00  VLDR.32	S0, [R0, #0]
0x4778	0x481D    LDR	R0, [PC, #116]
0x477A	0xF7FFFE5B  BL	_FloatToStr+0
;Click_IR_Grid2_TIVA.c, 65 :: 		demoText[ 5 ] = 0 ;
0x477E	0x2100    MOVS	R1, #0
0x4780	0x481F    LDR	R0, [PC, #124]
0x4782	0x7001    STRB	R1, [R0, #0]
;Click_IR_Grid2_TIVA.c, 66 :: 		mikrobus_logWrite(demoText, _LOG_TEXT);
0x4784	0x2101    MOVS	R1, #1
0x4786	0x481A    LDR	R0, [PC, #104]
0x4788	0xF7FFFDF8  BL	_mikrobus_logWrite+0
;Click_IR_Grid2_TIVA.c, 67 :: 		mikrobus_logWrite("|", _LOG_TEXT);
0x478C	0x481D    LDR	R0, [PC, #116]
0x478E	0x2101    MOVS	R1, #1
0x4790	0xF7FFFDF4  BL	_mikrobus_logWrite+0
;Click_IR_Grid2_TIVA.c, 68 :: 		Delay_1ms();
0x4794	0xF7FCFE00  BL	_Delay_1ms+0
;Click_IR_Grid2_TIVA.c, 69 :: 		if(((cnt % 32) == 0) && (cnt > 0))
0x4798	0x4818    LDR	R0, [PC, #96]
0x479A	0x8800    LDRH	R0, [R0, #0]
0x479C	0xF000001F  AND	R0, R0, #31
0x47A0	0xB280    UXTH	R0, R0
0x47A2	0xB938    CBNZ	R0, L__applicationTask14
0x47A4	0x4815    LDR	R0, [PC, #84]
0x47A6	0x8800    LDRH	R0, [R0, #0]
0x47A8	0x2800    CMP	R0, #0
0x47AA	0xD903    BLS	L__applicationTask13
L__applicationTask12:
;Click_IR_Grid2_TIVA.c, 71 :: 		mikrobus_logWrite(" ", _LOG_LINE);
0x47AC	0x4816    LDR	R0, [PC, #88]
0x47AE	0x2102    MOVS	R1, #2
0x47B0	0xF7FFFDE4  BL	_mikrobus_logWrite+0
;Click_IR_Grid2_TIVA.c, 69 :: 		if(((cnt % 32) == 0) && (cnt > 0))
L__applicationTask14:
L__applicationTask13:
;Click_IR_Grid2_TIVA.c, 62 :: 		for ( cnt = 0 ; cnt < 768 ; cnt++)
0x47B4	0x4911    LDR	R1, [PC, #68]
0x47B6	0x8808    LDRH	R0, [R1, #0]
0x47B8	0x1C40    ADDS	R0, R0, #1
0x47BA	0x8008    STRH	R0, [R1, #0]
;Click_IR_Grid2_TIVA.c, 73 :: 		}
0x47BC	0xE7D0    B	L_applicationTask2
L_applicationTask3:
;Click_IR_Grid2_TIVA.c, 74 :: 		mikrobus_logWrite(" ", _LOG_LINE);
0x47BE	0x4813    LDR	R0, [PC, #76]
0x47C0	0x2102    MOVS	R1, #2
0x47C2	0xF7FFFDDB  BL	_mikrobus_logWrite+0
;Click_IR_Grid2_TIVA.c, 75 :: 		Delay_ms( 500 );
0x47C6	0xF64247FE  MOVW	R7, #11518
0x47CA	0xF2C01731  MOVT	R7, #305
0x47CE	0xBF00    NOP
0x47D0	0xBF00    NOP
L_applicationTask8:
0x47D2	0x1E7F    SUBS	R7, R7, #1
0x47D4	0xD1FD    BNE	L_applicationTask8
0x47D6	0xBF00    NOP
0x47D8	0xBF00    NOP
0x47DA	0xBF00    NOP
;Click_IR_Grid2_TIVA.c, 76 :: 		}
L_end_applicationTask:
0x47DC	0xF8DDE000  LDR	LR, [SP, #0]
0x47E0	0xB001    ADD	SP, SP, #4
0x47E2	0x4770    BX	LR
0x47E4	0x00B02000  	_pixelTemp+0
0x47E8	0x00302000  	_Ta+0
0x47EC	0x00342000  	?lstr3_Click_IR_Grid2_TIVA+0
0x47F0	0x0CB02000  	_demoText+0
0x47F4	0x004B2000  	?lstr4_Click_IR_Grid2_TIVA+0
0x47F8	0x004D2000  	?lstr5_Click_IR_Grid2_TIVA+0
0x47FC	0x00862000  	_cnt+0
0x4800	0x0CB52000  	_demoText+5
0x4804	0x00742000  	?lstr6_Click_IR_Grid2_TIVA+0
0x4808	0x00762000  	?lstr7_Click_IR_Grid2_TIVA+0
0x480C	0x00782000  	?lstr8_Click_IR_Grid2_TIVA+0
; end of _applicationTask
_irgrid2_getPixelTemperature:
;__irgrid2_driver.c, 980 :: 		void irgrid2_getPixelTemperature(float *Ta, float *pixelTemp)
0x4300	0xB085    SUB	SP, SP, #20
0x4302	0xF8CDE000  STR	LR, [SP, #0]
0x4306	0x9003    STR	R0, [SP, #12]
0x4308	0x9104    STR	R1, [SP, #16]
;__irgrid2_driver.c, 983 :: 		float _Ta = 0;
;__irgrid2_driver.c, 984 :: 		float _tr = 0;
; _tr start address is: 0 (S0)
0x430A	0xF04F0200  MOV	R2, #0
0x430E	0xEE002A10  VMOV	S0, R2
;__irgrid2_driver.c, 985 :: 		float _emissivity = 0.95;
0x4312	0x4A17    LDR	R2, [PC, #92]
0x4314	0x9202    STR	R2, [SP, #8]
;__irgrid2_driver.c, 987 :: 		for ( x = 0 ; x < 2 ; x++)
0x4316	0x2200    MOVS	R2, #0
0x4318	0xF8AD2004  STRH	R2, [SP, #4]
; _tr end address is: 0 (S0)
L_irgrid2_getPixelTemperature175:
; _tr start address is: 0 (S0)
0x431C	0xF8BD2004  LDRH	R2, [SP, #4]
0x4320	0x2A02    CMP	R2, #2
0x4322	0xD21D    BCS	L_irgrid2_getPixelTemperature176
; _tr end address is: 0 (S0)
;__irgrid2_driver.c, 989 :: 		irgrid2_getFrameData(mlx90640Frame);
0x4324	0x4813    LDR	R0, [PC, #76]
0x4326	0xF7FFFEC3  BL	_irgrid2_getFrameData+0
;__irgrid2_driver.c, 990 :: 		_Ta = irgrid2_GetTa(mlx90640Frame, &mlx90640);
0x432A	0x4913    LDR	R1, [PC, #76]
0x432C	0x4811    LDR	R0, [PC, #68]
0x432E	0xF7FFFA2F  BL	_irgrid2_GetTa+0
;__irgrid2_driver.c, 991 :: 		_tr = _Ta - TA_SHIFT;
0x4332	0xEEF20A00  VMOV.F32	S1, #8
0x4336	0xEE300A60  VSUB.F32	S0, S0, S1
; _tr start address is: 44 (S11)
0x433A	0xEEF05A40  VMOV.F32	S11, S0
;__irgrid2_driver.c, 992 :: 		irgrid2_CalculateTo(mlx90640Frame, &mlx90640, _emissivity, _tr, pixelTemp);
0x433E	0x9A04    LDR	R2, [SP, #16]
0x4340	0xEEF00A40  VMOV.F32	S1, S0
0x4344	0xED9D0A02  VLDR.32	S0, [SP, #8]
0x4348	0x490B    LDR	R1, [PC, #44]
0x434A	0x480A    LDR	R0, [PC, #40]
0x434C	0xF7FFFAA2  BL	_irgrid2_CalculateTo+0
;__irgrid2_driver.c, 987 :: 		for ( x = 0 ; x < 2 ; x++)
0x4350	0xF8BD2004  LDRH	R2, [SP, #4]
0x4354	0x1C52    ADDS	R2, R2, #1
0x4356	0xF8AD2004  STRH	R2, [SP, #4]
;__irgrid2_driver.c, 993 :: 		}
0x435A	0xEEB00A65  VMOV.F32	S0, S11
; _tr end address is: 44 (S11)
0x435E	0xE7DD    B	L_irgrid2_getPixelTemperature175
L_irgrid2_getPixelTemperature176:
;__irgrid2_driver.c, 994 :: 		*Ta = _tr;
; _tr start address is: 0 (S0)
0x4360	0x9A03    LDR	R2, [SP, #12]
0x4362	0xED020A00  VSTR.32	S0, [R2, #0]
; _tr end address is: 0 (S0)
;__irgrid2_driver.c, 995 :: 		}
L_end_irgrid2_getPixelTemperature:
0x4366	0xF8DDE000  LDR	LR, [SP, #0]
0x436A	0xB005    ADD	SP, SP, #20
0x436C	0x4770    BX	LR
0x436E	0xBF00    NOP
0x4370	0x33333F73  	#1064514355
0x4374	0x3E102000  	__irgrid2_driver_mlx90640Frame+0
0x4378	0x13A02000  	__irgrid2_driver_mlx90640+0
; end of _irgrid2_getPixelTemperature
_irgrid2_getFrameData:
;__irgrid2_driver.c, 1005 :: 		int irgrid2_getFrameData(uint16_t *frameData)
0x40B0	0xB084    SUB	SP, SP, #16
0x40B2	0xF8CDE000  STR	LR, [SP, #0]
0x40B6	0x9003    STR	R0, [SP, #12]
;__irgrid2_driver.c, 1007 :: 		uint16_t dataReady = 1;
;__irgrid2_driver.c, 1010 :: 		uint8_t cnt = 0;
0x40B8	0x2100    MOVS	R1, #0
0x40BA	0xF88D1008  STRB	R1, [SP, #8]
;__irgrid2_driver.c, 1012 :: 		dataReady = 0;
; dataReady start address is: 4 (R1)
0x40BE	0x2100    MOVS	R1, #0
; dataReady end address is: 4 (R1)
;__irgrid2_driver.c, 1014 :: 		while(dataReady == 0)
L_irgrid2_getFrameData178:
; dataReady start address is: 4 (R1)
0x40C0	0xB961    CBNZ	R1, L_irgrid2_getFrameData179
; dataReady end address is: 4 (R1)
;__irgrid2_driver.c, 1016 :: 		irgrid2_readData(0x8000, 1, &statusRegister);
0x40C2	0xF10D0106  ADD	R1, SP, #6
0x40C6	0x460A    MOV	R2, R1
0x40C8	0x2101    MOVS	R1, #1
0x40CA	0xF2480000  MOVW	R0, #32768
0x40CE	0xF7FFF93B  BL	_irgrid2_readData+0
;__irgrid2_driver.c, 1017 :: 		dataReady = statusRegister & 0x0008;
0x40D2	0xF8BD1006  LDRH	R1, [SP, #6]
0x40D6	0xF0010108  AND	R1, R1, #8
; dataReady start address is: 4 (R1)
;__irgrid2_driver.c, 1018 :: 		}
0x40DA	0xE7F1    B	L_irgrid2_getFrameData178
L_irgrid2_getFrameData179:
;__irgrid2_driver.c, 1020 :: 		while(dataReady != 0 && cnt < 5)
0x40DC	0xB288    UXTH	R0, R1
L_irgrid2_getFrameData180:
; dataReady end address is: 4 (R1)
; dataReady start address is: 0 (R0)
0x40DE	0xB310    CBZ	R0, L__irgrid2_getFrameData258
; dataReady end address is: 0 (R0)
0x40E0	0xF89D1008  LDRB	R1, [SP, #8]
0x40E4	0x2905    CMP	R1, #5
0x40E6	0xD21E    BCS	L__irgrid2_getFrameData257
L__irgrid2_getFrameData256:
;__irgrid2_driver.c, 1022 :: 		irgrid2_writeByte(0x8000, 0x0030);
0x40E8	0x2130    MOVS	R1, #48
0x40EA	0xF2480000  MOVW	R0, #32768
0x40EE	0xF7FEFB97  BL	_irgrid2_writeByte+0
;__irgrid2_driver.c, 1023 :: 		irgrid2_readData(0x0400, 832, frameData);
0x40F2	0x9A03    LDR	R2, [SP, #12]
0x40F4	0xF2403140  MOVW	R1, #832
0x40F8	0xF2404000  MOVW	R0, #1024
0x40FC	0xF7FFF924  BL	_irgrid2_readData+0
;__irgrid2_driver.c, 1024 :: 		irgrid2_readData(0x8000, 1, &statusRegister);
0x4100	0xF10D0106  ADD	R1, SP, #6
0x4104	0x460A    MOV	R2, R1
0x4106	0x2101    MOVS	R1, #1
0x4108	0xF2480000  MOVW	R0, #32768
0x410C	0xF7FFF91C  BL	_irgrid2_readData+0
;__irgrid2_driver.c, 1025 :: 		dataReady = statusRegister & 0x0008;
0x4110	0xF8BD1006  LDRH	R1, [SP, #6]
0x4114	0xF0010108  AND	R1, R1, #8
; dataReady start address is: 0 (R0)
0x4118	0xB288    UXTH	R0, R1
;__irgrid2_driver.c, 1026 :: 		cnt = cnt + 1;
0x411A	0xF89D1008  LDRB	R1, [SP, #8]
0x411E	0x1C49    ADDS	R1, R1, #1
0x4120	0xF88D1008  STRB	R1, [SP, #8]
;__irgrid2_driver.c, 1027 :: 		}
; dataReady end address is: 0 (R0)
0x4124	0xE7DB    B	L_irgrid2_getFrameData180
;__irgrid2_driver.c, 1020 :: 		while(dataReady != 0 && cnt < 5)
L__irgrid2_getFrameData258:
L__irgrid2_getFrameData257:
;__irgrid2_driver.c, 1029 :: 		irgrid2_readData(0x800D, 1, &controlRegister1);
0x4126	0xA901    ADD	R1, SP, #4
0x4128	0x460A    MOV	R2, R1
0x412A	0x2101    MOVS	R1, #1
0x412C	0xF248000D  MOVW	R0, #32781
0x4130	0xF7FFF90A  BL	_irgrid2_readData+0
;__irgrid2_driver.c, 1030 :: 		frameData[832] = controlRegister1;
0x4134	0x9903    LDR	R1, [SP, #12]
0x4136	0xF50162D0  ADD	R2, R1, #1664
0x413A	0xF8BD1004  LDRH	R1, [SP, #4]
0x413E	0x8011    STRH	R1, [R2, #0]
;__irgrid2_driver.c, 1031 :: 		frameData[833] = statusRegister & 0x0001;
0x4140	0x9903    LDR	R1, [SP, #12]
0x4142	0xF2016282  ADDW	R2, R1, #1666
0x4146	0xF8BD1006  LDRH	R1, [SP, #6]
0x414A	0xF0010101  AND	R1, R1, #1
0x414E	0x8011    STRH	R1, [R2, #0]
;__irgrid2_driver.c, 1032 :: 		return frameData[833];
0x4150	0x9903    LDR	R1, [SP, #12]
0x4152	0xF2016182  ADDW	R1, R1, #1666
0x4156	0x8809    LDRH	R1, [R1, #0]
0x4158	0xB208    SXTH	R0, R1
;__irgrid2_driver.c, 1033 :: 		}
L_end_irgrid2_getFrameData:
0x415A	0xF8DDE000  LDR	LR, [SP, #0]
0x415E	0xB004    ADD	SP, SP, #16
0x4160	0x4770    BX	LR
; end of _irgrid2_getFrameData
_irgrid2_GetTa:
;__irgrid2_driver.c, 1109 :: 		float irgrid2_GetTa(uint16_t *frameData,  paramsMLX90640 *params)
; params start address is: 4 (R1)
; frameData start address is: 0 (R0)
0x3790	0xB082    SUB	SP, SP, #8
0x3792	0xF8CDE000  STR	LR, [SP, #0]
0x3796	0x4681    MOV	R9, R0
0x3798	0x4688    MOV	R8, R1
; params end address is: 4 (R1)
; frameData end address is: 0 (R0)
; frameData start address is: 36 (R9)
; params start address is: 32 (R8)
;__irgrid2_driver.c, 1116 :: 		vdd = irgrid2_GetVdd(frameData, params);
0x379A	0x4641    MOV	R1, R8
0x379C	0x4648    MOV	R0, R9
0x379E	0xF7FEFFDB  BL	_irgrid2_GetVdd+0
; vdd start address is: 24 (S6)
0x37A2	0xEEB03A40  VMOV.F32	S6, S0
;__irgrid2_driver.c, 1118 :: 		ptat = frameData[800];
0x37A6	0xF50962C8  ADD	R2, R9, #1600
0x37AA	0x8812    LDRH	R2, [R2, #0]
0x37AC	0xEE002A90  VMOV	S1, R2
0x37B0	0xEEF80A60  VCVT.F32.U32	S1, S1
; ptat start address is: 8 (S2)
0x37B4	0xEEB01A60  VMOV.F32	S2, S1
;__irgrid2_driver.c, 1119 :: 		if(ptat > 32767)
0x37B8	0x4A34    LDR	R2, [PC, #208]
0x37BA	0xEE002A10  VMOV	S0, R2
0x37BE	0xEEF40AC0  VCMPE.F32	S1, S0
0x37C2	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x37C6	0xDD06    BLE	L__irgrid2_GetTa260
;__irgrid2_driver.c, 1121 :: 		ptat = ptat - 65536;
0x37C8	0xF04F428F  MOV	R2, #1199570944
0x37CC	0xEE002A10  VMOV	S0, R2
0x37D0	0xEE311A40  VSUB.F32	S2, S2, S0
; ptat end address is: 8 (S2)
;__irgrid2_driver.c, 1122 :: 		}
0x37D4	0xE7FF    B	L_irgrid2_GetTa184
L__irgrid2_GetTa260:
;__irgrid2_driver.c, 1119 :: 		if(ptat > 32767)
;__irgrid2_driver.c, 1122 :: 		}
L_irgrid2_GetTa184:
;__irgrid2_driver.c, 1124 :: 		ptatArt = frameData[768];
; ptat start address is: 8 (S2)
0x37D6	0xF50962C0  ADD	R2, R9, #1536
; frameData end address is: 36 (R9)
0x37DA	0x8812    LDRH	R2, [R2, #0]
0x37DC	0xEE002A90  VMOV	S1, R2
0x37E0	0xEEF80A60  VCVT.F32.U32	S1, S1
; ptatArt start address is: 12 (S3)
0x37E4	0xEEF01A60  VMOV.F32	S3, S1
;__irgrid2_driver.c, 1125 :: 		if(ptatArt > 32767)
0x37E8	0x4A28    LDR	R2, [PC, #160]
0x37EA	0xEE002A10  VMOV	S0, R2
0x37EE	0xEEF40AC0  VCMPE.F32	S1, S0
0x37F2	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x37F6	0xDD06    BLE	L__irgrid2_GetTa261
;__irgrid2_driver.c, 1127 :: 		ptatArt = ptatArt - 65536;
0x37F8	0xF04F428F  MOV	R2, #1199570944
0x37FC	0xEE002A10  VMOV	S0, R2
0x3800	0xEE710AC0  VSUB.F32	S1, S3, S0
; ptatArt end address is: 12 (S3)
; ptatArt start address is: 4 (S1)
; ptatArt end address is: 4 (S1)
;__irgrid2_driver.c, 1128 :: 		}
0x3804	0xE001    B	L_irgrid2_GetTa185
L__irgrid2_GetTa261:
;__irgrid2_driver.c, 1125 :: 		if(ptatArt > 32767)
0x3806	0xEEF00A61  VMOV.F32	S1, S3
;__irgrid2_driver.c, 1128 :: 		}
L_irgrid2_GetTa185:
;__irgrid2_driver.c, 1129 :: 		ptatArt = (ptat / (ptat * params->alphaPTAT + ptatArt)) * _pow(2, (double)18);
; ptatArt start address is: 4 (S1)
0x380A	0xF1080210  ADD	R2, R8, #16
0x380E	0xED120A00  VLDR.32	S0, [R2, #0]
0x3812	0xEE210A00  VMUL.F32	S0, S2, S0
0x3816	0xEE300A20  VADD.F32	S0, S0, S1
; ptatArt end address is: 4 (S1)
0x381A	0xEE810A00  VDIV.F32	S0, S2, S0
; ptat end address is: 8 (S2)
0x381E	0xED8D0A01  VSTR.32	S0, [SP, #4]
0x3822	0xEEF30A02  VMOV.F32	S1, #18
0x3826	0xEEB00A00  VMOV.F32	S0, #2
0x382A	0xF7FDFF4F  BL	__irgrid2_driver__pow+0
0x382E	0xEDDD0A01  VLDR.32	S1, [SP, #4]
0x3832	0xEE201A80  VMUL.F32	S2, S1, S0
;__irgrid2_driver.c, 1131 :: 		ta = (ptatArt / (1 + params->KvPTAT * (vdd - 3.3)) - params->vPTAT25);
0x3836	0xF1080304  ADD	R3, R8, #4
0x383A	0x4A15    LDR	R2, [PC, #84]
0x383C	0xEE002A10  VMOV	S0, R2
0x3840	0xEE730A40  VSUB.F32	S1, S6, S0
; vdd end address is: 24 (S6)
0x3844	0xED130A00  VLDR.32	S0, [R3, #0]
0x3848	0xEE600A20  VMUL.F32	S1, S0, S1
0x384C	0xEEB70A00  VMOV.F32	S0, #1
0x3850	0xEE300A20  VADD.F32	S0, S0, S1
0x3854	0xEEC10A00  VDIV.F32	S1, S2, S0
0x3858	0xF108020C  ADD	R2, R8, #12
0x385C	0x8812    LDRH	R2, [R2, #0]
0x385E	0xEE002A10  VMOV	S0, R2
0x3862	0xEEB80A40  VCVT.F32.U32	S0, S0
0x3866	0xEE700AC0  VSUB.F32	S1, S1, S0
;__irgrid2_driver.c, 1132 :: 		ta = ta / params->KtPTAT + 25;
0x386A	0xF1080208  ADD	R2, R8, #8
; params end address is: 32 (R8)
0x386E	0xED120A00  VLDR.32	S0, [R2, #0]
0x3872	0xEEC00A80  VDIV.F32	S1, S1, S0
0x3876	0xEEB30A09  VMOV.F32	S0, #25
0x387A	0xEE300A80  VADD.F32	S0, S1, S0
;__irgrid2_driver.c, 1134 :: 		return ta;
0x387E	0xEEB00A40  VMOV.F32	S0, S0
;__irgrid2_driver.c, 1135 :: 		}
L_end_irgrid2_GetTa:
0x3882	0xF8DDE000  LDR	LR, [SP, #0]
0x3886	0xB002    ADD	SP, SP, #8
0x3888	0x4770    BX	LR
0x388A	0xBF00    NOP
0x388C	0xFE0046FF  	#1191181824
0x3890	0x33334053  	#1079194419
; end of _irgrid2_GetTa
_irgrid2_GetVdd:
;__irgrid2_driver.c, 1372 :: 		float irgrid2_GetVdd(uint16_t *frameData, const paramsMLX90640 *params)
; params start address is: 4 (R1)
; frameData start address is: 0 (R0)
0x2758	0xB082    SUB	SP, SP, #8
0x275A	0xF8CDE000  STR	LR, [SP, #0]
0x275E	0x460E    MOV	R6, R1
; params end address is: 4 (R1)
; frameData end address is: 0 (R0)
; frameData start address is: 0 (R0)
; params start address is: 24 (R6)
;__irgrid2_driver.c, 1379 :: 		vdd = frameData[810];
0x2760	0xF2006254  ADDW	R2, R0, #1620
0x2764	0x8812    LDRH	R2, [R2, #0]
0x2766	0xEE002A90  VMOV	S1, R2
0x276A	0xEEF80A60  VCVT.F32.U32	S1, S1
; vdd start address is: 24 (S6)
0x276E	0xEEB03A60  VMOV.F32	S6, S1
;__irgrid2_driver.c, 1380 :: 		if(vdd > 32767)
0x2772	0x4A29    LDR	R2, [PC, #164]
0x2774	0xEE002A10  VMOV	S0, R2
0x2778	0xEEF40AC0  VCMPE.F32	S1, S0
0x277C	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x2780	0xDD06    BLE	L__irgrid2_GetVdd259
;__irgrid2_driver.c, 1382 :: 		vdd = vdd - 65536;
0x2782	0xF04F428F  MOV	R2, #1199570944
0x2786	0xEE002A10  VMOV	S0, R2
0x278A	0xEE333A40  VSUB.F32	S6, S6, S0
; vdd end address is: 24 (S6)
;__irgrid2_driver.c, 1383 :: 		}
0x278E	0xE7FF    B	L_irgrid2_GetVdd222
L__irgrid2_GetVdd259:
;__irgrid2_driver.c, 1380 :: 		if(vdd > 32767)
;__irgrid2_driver.c, 1383 :: 		}
L_irgrid2_GetVdd222:
;__irgrid2_driver.c, 1384 :: 		resolutionRAM = (frameData[832] & 0x0C00) >> 10;
; vdd start address is: 24 (S6)
0x2790	0xF50062D0  ADD	R2, R0, #1664
; frameData end address is: 0 (R0)
0x2794	0x8812    LDRH	R2, [R2, #0]
0x2796	0xF4026240  AND	R2, R2, #3072
0x279A	0xB292    UXTH	R2, R2
0x279C	0x0A92    LSRS	R2, R2, #10
; resolutionRAM start address is: 28 (R7)
0x279E	0xB217    SXTH	R7, R2
;__irgrid2_driver.c, 1385 :: 		resolutionCorrection = _pow(2, (double)params->resolutionEE) / _pow(2, (double)resolutionRAM);
0x27A0	0xF2060224  ADDW	R2, R6, #36
0x27A4	0x7812    LDRB	R2, [R2, #0]
0x27A6	0xEE002A10  VMOV	S0, R2
0x27AA	0xEEB80A40  VCVT.F32.U32	S0, S0
0x27AE	0xEEF00A40  VMOV.F32	S1, S0
0x27B2	0xEEB00A00  VMOV.F32	S0, #2
0x27B6	0xF7FEFF89  BL	__irgrid2_driver__pow+0
0x27BA	0xED8D0A01  VSTR.32	S0, [SP, #4]
0x27BE	0xEE007A10  VMOV	S0, R7
0x27C2	0xEEB80AC0  VCVT.F32.S32	S0, S0
; resolutionRAM end address is: 28 (R7)
0x27C6	0xEEF00A40  VMOV.F32	S1, S0
0x27CA	0xEEB00A00  VMOV.F32	S0, #2
0x27CE	0xF7FEFF7D  BL	__irgrid2_driver__pow+0
0x27D2	0xEDDD0A01  VLDR.32	S1, [SP, #4]
0x27D6	0xEE800A80  VDIV.F32	S0, S1, S0
;__irgrid2_driver.c, 1386 :: 		vdd = (resolutionCorrection * vdd - params->vdd25) / params->kVdd + 3.3;
0x27DA	0xEE600A03  VMUL.F32	S1, S0, S6
; vdd end address is: 24 (S6)
0x27DE	0x1CB2    ADDS	R2, R6, #2
0x27E0	0xF9B22000  LDRSH	R2, [R2, #0]
0x27E4	0xEE002A10  VMOV	S0, R2
0x27E8	0xEEB80AC0  VCVT.F32.S32	S0, S0
0x27EC	0xEE700AC0  VSUB.F32	S1, S1, S0
0x27F0	0x4632    MOV	R2, R6
; params end address is: 24 (R6)
0x27F2	0xF9B22000  LDRSH	R2, [R2, #0]
0x27F6	0xEE002A10  VMOV	S0, R2
0x27FA	0xEEB80AC0  VCVT.F32.S32	S0, S0
0x27FE	0xEEC00A80  VDIV.F32	S1, S1, S0
0x2802	0x4A06    LDR	R2, [PC, #24]
0x2804	0xEE002A10  VMOV	S0, R2
0x2808	0xEE300A80  VADD.F32	S0, S1, S0
;__irgrid2_driver.c, 1388 :: 		return vdd;
0x280C	0xEEB00A40  VMOV.F32	S0, S0
;__irgrid2_driver.c, 1389 :: 		}
L_end_irgrid2_GetVdd:
0x2810	0xF8DDE000  LDR	LR, [SP, #0]
0x2814	0xB002    ADD	SP, SP, #8
0x2816	0x4770    BX	LR
0x2818	0xFE0046FF  	#1191181824
0x281C	0x33334053  	#1079194419
; end of _irgrid2_GetVdd
_irgrid2_CalculateTo:
;__irgrid2_driver.c, 1137 :: 		void irgrid2_CalculateTo(uint16_t *frameData,  paramsMLX90640 *params, float emissivity, float tr, float *result)
; result start address is: 8 (R2)
; tr start address is: 4 (S1)
; emissivity start address is: 0 (S0)
0x3894	0xB08F    SUB	SP, SP, #60
0x3896	0xF8CDE000  STR	LR, [SP, #0]
; params start address is: 4 (R1)
; frameData start address is: 0 (R0)
0x389A	0x4682    MOV	R10, R0
0x389C	0x468B    MOV	R11, R1
0x389E	0xEEF03A40  VMOV.F32	S7, S0
0x38A2	0xEEF04A60  VMOV.F32	S9, S1
0x38A6	0x4694    MOV	R12, R2
; result end address is: 8 (R2)
; tr end address is: 4 (S1)
; emissivity end address is: 0 (S0)
; params end address is: 4 (R1)
; frameData end address is: 0 (R0)
; frameData start address is: 40 (R10)
; params start address is: 44 (R11)
; emissivity start address is: 28 (S7)
; tr start address is: 36 (S9)
; result start address is: 48 (R12)
;__irgrid2_driver.c, 1162 :: 		subPage = frameData[833];
0x38A8	0xF20A6382  ADDW	R3, R10, #1666
0x38AC	0x881B    LDRH	R3, [R3, #0]
; subPage start address is: 0 (R0)
0x38AE	0xB298    UXTH	R0, R3
;__irgrid2_driver.c, 1163 :: 		vdd = irgrid2_GetVdd(frameData, params);
0x38B0	0xF8AD0004  STRH	R0, [SP, #4]
0x38B4	0x4659    MOV	R1, R11
0x38B6	0x4650    MOV	R0, R10
0x38B8	0xF7FEFF4E  BL	_irgrid2_GetVdd+0
0x38BC	0xF8BD0004  LDRH	R0, [SP, #4]
; vdd start address is: 32 (S8)
0x38C0	0xEEB04A40  VMOV.F32	S8, S0
;__irgrid2_driver.c, 1164 :: 		ta = irgrid2_GetTa(frameData, params);
0x38C4	0xF8AD0004  STRH	R0, [SP, #4]
0x38C8	0x4659    MOV	R1, R11
0x38CA	0x4650    MOV	R0, R10
0x38CC	0xF7FFFF60  BL	_irgrid2_GetTa+0
0x38D0	0xF8BD0004  LDRH	R0, [SP, #4]
; ta start address is: 24 (S6)
0x38D4	0xEEB03A40  VMOV.F32	S6, S0
;__irgrid2_driver.c, 1165 :: 		ta4 = _pow((ta + 273.15), (double)4);
0x38D8	0x4BF3    LDR	R3, [PC, #972]
0x38DA	0xEE003A90  VMOV	S1, R3
0x38DE	0xEE300A20  VADD.F32	S0, S0, S1
0x38E2	0xF8AD0004  STRH	R0, [SP, #4]
0x38E6	0xEEF10A00  VMOV.F32	S1, #4
0x38EA	0xF7FDFEEF  BL	__irgrid2_driver__pow+0
0x38EE	0xF8BD0004  LDRH	R0, [SP, #4]
; ta4 start address is: 40 (S10)
0x38F2	0xEEB05A40  VMOV.F32	S10, S0
;__irgrid2_driver.c, 1166 :: 		tr4 = _pow((tr + 273.15), (double)4);
0x38F6	0x4BEC    LDR	R3, [PC, #944]
0x38F8	0xEE003A10  VMOV	S0, R3
0x38FC	0xEE340A80  VADD.F32	S0, S9, S0
; tr end address is: 36 (S9)
0x3900	0xF8AD0004  STRH	R0, [SP, #4]
0x3904	0xEEF10A00  VMOV.F32	S1, #4
0x3908	0xF7FDFEE0  BL	__irgrid2_driver__pow+0
0x390C	0xF8BD0004  LDRH	R0, [SP, #4]
;__irgrid2_driver.c, 1167 :: 		taTr = tr4 - (tr4-ta4)/emissivity;
0x3910	0xEE700A45  VSUB.F32	S1, S0, S10
; ta4 end address is: 40 (S10)
0x3914	0xEEC00AA3  VDIV.F32	S1, S1, S7
0x3918	0xEE702A60  VSUB.F32	S5, S0, S1
; taTr start address is: 20 (S5)
;__irgrid2_driver.c, 1169 :: 		alphaCorrR[0] = 1 / (1 + params->ksTo[0] * 40);
0x391C	0xAE0A    ADD	R6, SP, #40
0x391E	0xF10B032C  ADD	R3, R11, #44
0x3922	0xED530A00  VLDR.32	S1, [R3, #0]
0x3926	0x4BE1    LDR	R3, [PC, #900]
0x3928	0xEE003A10  VMOV	S0, R3
0x392C	0xEE600A80  VMUL.F32	S1, S1, S0
0x3930	0xEEB70A00  VMOV.F32	S0, #1
0x3934	0xEE700A20  VADD.F32	S1, S0, S1
0x3938	0xEEB70A00  VMOV.F32	S0, #1
0x393C	0xEE800A20  VDIV.F32	S0, S0, S1
0x3940	0xED060A00  VSTR.32	S0, [R6, #0]
;__irgrid2_driver.c, 1170 :: 		alphaCorrR[1] = 1 ;
0x3944	0x1D33    ADDS	R3, R6, #4
0x3946	0xEEB70A00  VMOV.F32	S0, #1
0x394A	0xED030A00  VSTR.32	S0, [R3, #0]
;__irgrid2_driver.c, 1171 :: 		alphaCorrR[2] = (1 + params->ksTo[2] * params->ct[2]);
0x394E	0xF2060508  ADDW	R5, R6, #8
0x3952	0xF10B032C  ADD	R3, R11, #44
0x3956	0xF2030408  ADDW	R4, R3, #8
0x395A	0xF10B033C  ADD	R3, R11, #60
0x395E	0x1D1B    ADDS	R3, R3, #4
0x3960	0xF9B33000  LDRSH	R3, [R3, #0]
0x3964	0xEE003A90  VMOV	S1, R3
0x3968	0xEEF80AE0  VCVT.F32.S32	S1, S1
0x396C	0xED140A00  VLDR.32	S0, [R4, #0]
0x3970	0xEE600A20  VMUL.F32	S1, S0, S1
0x3974	0xEEB70A00  VMOV.F32	S0, #1
0x3978	0xEE300A20  VADD.F32	S0, S0, S1
0x397C	0xED050A00  VSTR.32	S0, [R5, #0]
;__irgrid2_driver.c, 1172 :: 		alphaCorrR[3] = alphaCorrR[2] * (1 + params->ksTo[3] * (params->ct[3] - params->ct[2]));
0x3980	0xF206070C  ADDW	R7, R6, #12
0x3984	0xF2060308  ADDW	R3, R6, #8
0x3988	0xED131A00  VLDR.32	S2, [R3, #0]
0x398C	0xF10B032C  ADD	R3, R11, #44
0x3990	0xF203060C  ADDW	R6, R3, #12
0x3994	0xF10B053C  ADD	R5, R11, #60
0x3998	0x1DAB    ADDS	R3, R5, #6
0x399A	0xF9B34000  LDRSH	R4, [R3, #0]
0x399E	0x1D2B    ADDS	R3, R5, #4
0x39A0	0xF9B33000  LDRSH	R3, [R3, #0]
0x39A4	0x1AE3    SUB	R3, R4, R3
0x39A6	0xB21B    SXTH	R3, R3
0x39A8	0xEE003A90  VMOV	S1, R3
0x39AC	0xEEF80AE0  VCVT.F32.S32	S1, S1
0x39B0	0xED160A00  VLDR.32	S0, [R6, #0]
0x39B4	0xEE600A20  VMUL.F32	S1, S0, S1
0x39B8	0xEEB70A00  VMOV.F32	S0, #1
0x39BC	0xEE300A20  VADD.F32	S0, S0, S1
0x39C0	0xEE210A00  VMUL.F32	S0, S2, S0
0x39C4	0xED070A00  VSTR.32	S0, [R7, #0]
;__irgrid2_driver.c, 1175 :: 		gain = frameData[778];
0x39C8	0xF20A6314  ADDW	R3, R10, #1556
0x39CC	0x881B    LDRH	R3, [R3, #0]
0x39CE	0xEE003A90  VMOV	S1, R3
0x39D2	0xEEF80A60  VCVT.F32.U32	S1, S1
; gain start address is: 8 (S2)
0x39D6	0xEEB01A60  VMOV.F32	S2, S1
;__irgrid2_driver.c, 1176 :: 		if(gain > 32767)
0x39DA	0x4BB5    LDR	R3, [PC, #724]
0x39DC	0xEE003A10  VMOV	S0, R3
0x39E0	0xEEF40AC0  VCMPE.F32	S1, S0
0x39E4	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x39E8	0xDD06    BLE	L__irgrid2_CalculateTo262
;__irgrid2_driver.c, 1178 :: 		gain = gain - 65536;
0x39EA	0xF04F438F  MOV	R3, #1199570944
0x39EE	0xEE003A10  VMOV	S0, R3
0x39F2	0xEE710A40  VSUB.F32	S1, S2, S0
; gain end address is: 8 (S2)
; gain start address is: 4 (S1)
; gain end address is: 4 (S1)
;__irgrid2_driver.c, 1179 :: 		}
0x39F6	0xE001    B	L_irgrid2_CalculateTo186
L__irgrid2_CalculateTo262:
;__irgrid2_driver.c, 1176 :: 		if(gain > 32767)
0x39F8	0xEEF00A41  VMOV.F32	S1, S2
;__irgrid2_driver.c, 1179 :: 		}
L_irgrid2_CalculateTo186:
;__irgrid2_driver.c, 1181 :: 		gain = params->gainEE / gain;
; gain start address is: 4 (S1)
0x39FC	0xF10B0314  ADD	R3, R11, #20
0x3A00	0xF9B33000  LDRSH	R3, [R3, #0]
0x3A04	0xEE023A10  VMOV	S4, R3
0x3A08	0xEEB82AC2  VCVT.F32.S32	S4, S4
0x3A0C	0xEE822A20  VDIV.F32	S4, S4, S1
; gain end address is: 4 (S1)
; gain start address is: 16 (S4)
;__irgrid2_driver.c, 1184 :: 		mode = (frameData[832] & 0x1000) >> 5;
0x3A10	0xF50A63D0  ADD	R3, R10, #1664
0x3A14	0x881B    LDRH	R3, [R3, #0]
0x3A16	0xF4035380  AND	R3, R3, #4096
0x3A1A	0xB29B    UXTH	R3, R3
0x3A1C	0x095B    LSRS	R3, R3, #5
; mode start address is: 4 (R1)
0x3A1E	0xB2D9    UXTB	R1, R3
;__irgrid2_driver.c, 1186 :: 		irDataCP[0] = frameData[776];
0x3A20	0xAC05    ADD	R4, SP, #20
0x3A22	0xF50A63C2  ADD	R3, R10, #1552
0x3A26	0x881B    LDRH	R3, [R3, #0]
0x3A28	0xEE003A10  VMOV	S0, R3
0x3A2C	0xEEB80A40  VCVT.F32.U32	S0, S0
0x3A30	0xED040A00  VSTR.32	S0, [R4, #0]
;__irgrid2_driver.c, 1187 :: 		irDataCP[1] = frameData[808];
0x3A34	0x1D24    ADDS	R4, R4, #4
0x3A36	0xF50A63CA  ADD	R3, R10, #1616
0x3A3A	0x881B    LDRH	R3, [R3, #0]
0x3A3C	0xEE003A10  VMOV	S0, R3
0x3A40	0xEEB80A40  VCVT.F32.U32	S0, S0
0x3A44	0xED040A00  VSTR.32	S0, [R4, #0]
;__irgrid2_driver.c, 1188 :: 		for(i = 0; i < 2; i++)
; i start address is: 24 (R6)
0x3A48	0x2600    MOVS	R6, #0
0x3A4A	0xB236    SXTH	R6, R6
; frameData end address is: 40 (R10)
; params end address is: 44 (R11)
; emissivity end address is: 28 (S7)
; result end address is: 48 (R12)
; subPage end address is: 0 (R0)
; vdd end address is: 32 (S8)
; mode end address is: 4 (R1)
; gain end address is: 16 (S4)
; taTr end address is: 20 (S5)
; ta end address is: 24 (S6)
; i end address is: 24 (R6)
0x3A4C	0xF8AD6004  STRH	R6, [SP, #4]
0x3A50	0xF88D1006  STRB	R1, [SP, #6]
0x3A54	0xEEF03A44  VMOV.F32	S7, S8
0x3A58	0xEEB04A63  VMOV.F32	S8, S7
0x3A5C	0x4657    MOV	R7, R10
0x3A5E	0x46D8    MOV	R8, R11
0x3A60	0x4662    MOV	R2, R12
0x3A62	0xB281    UXTH	R1, R0
0x3A64	0xF89D0006  LDRB	R0, [SP, #6]
0x3A68	0xF9BD6004  LDRSH	R6, [SP, #4]
L_irgrid2_CalculateTo187:
; i start address is: 24 (R6)
; mode start address is: 0 (R0)
; gain start address is: 16 (S4)
; taTr start address is: 20 (S5)
; ta start address is: 24 (S6)
; vdd start address is: 28 (S7)
; subPage start address is: 4 (R1)
; result start address is: 8 (R2)
; emissivity start address is: 32 (S8)
; params start address is: 32 (R8)
; frameData start address is: 28 (R7)
0x3A6C	0x2E02    CMP	R6, #2
0x3A6E	0xDA31    BGE	L_irgrid2_CalculateTo188
;__irgrid2_driver.c, 1190 :: 		if(irDataCP[i] > 32767)
0x3A70	0xAC05    ADD	R4, SP, #20
0x3A72	0x00B3    LSLS	R3, R6, #2
0x3A74	0x18E3    ADDS	R3, R4, R3
0x3A76	0xED530A00  VLDR.32	S1, [R3, #0]
0x3A7A	0x4B8D    LDR	R3, [PC, #564]
0x3A7C	0xEE003A10  VMOV	S0, R3
0x3A80	0xEEF40AC0  VCMPE.F32	S1, S0
0x3A84	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x3A88	0xDD0C    BLE	L_irgrid2_CalculateTo190
;__irgrid2_driver.c, 1192 :: 		irDataCP[i] = irDataCP[i] - 65536;
0x3A8A	0xAC05    ADD	R4, SP, #20
0x3A8C	0x00B3    LSLS	R3, R6, #2
0x3A8E	0x18E5    ADDS	R5, R4, R3
0x3A90	0xED550A00  VLDR.32	S1, [R5, #0]
0x3A94	0xF04F438F  MOV	R3, #1199570944
0x3A98	0xEE003A10  VMOV	S0, R3
0x3A9C	0xEE300AC0  VSUB.F32	S0, S1, S0
0x3AA0	0xED050A00  VSTR.32	S0, [R5, #0]
;__irgrid2_driver.c, 1193 :: 		}
L_irgrid2_CalculateTo190:
;__irgrid2_driver.c, 1194 :: 		irDataCP[i] = irDataCP[i] * gain;
0x3AA4	0xAC05    ADD	R4, SP, #20
0x3AA6	0x00B3    LSLS	R3, R6, #2
0x3AA8	0x18E4    ADDS	R4, R4, R3
0x3AAA	0xED140A00  VLDR.32	S0, [R4, #0]
0x3AAE	0xEE200A02  VMUL.F32	S0, S0, S4
0x3AB2	0xED040A00  VSTR.32	S0, [R4, #0]
;__irgrid2_driver.c, 1188 :: 		for(i = 0; i < 2; i++)
0x3AB6	0x1C76    ADDS	R6, R6, #1
0x3AB8	0xB236    SXTH	R6, R6
;__irgrid2_driver.c, 1195 :: 		}
0x3ABA	0xF8AD6004  STRH	R6, [SP, #4]
; i end address is: 24 (R6)
0x3ABE	0xED8D4A02  VSTR.32	S8, [SP, #8]
0x3AC2	0xEDCD3A03  VSTR.32	S7, [SP, #12]
0x3AC6	0xEDDD3A03  VLDR.32	S7, [SP, #12]
0x3ACA	0xED9D4A02  VLDR.32	S8, [SP, #8]
0x3ACE	0xF9BD6004  LDRSH	R6, [SP, #4]
0x3AD2	0xE7CB    B	L_irgrid2_CalculateTo187
L_irgrid2_CalculateTo188:
;__irgrid2_driver.c, 1196 :: 		irDataCP[0] = irDataCP[0] - params->cpOffset[0] * (1 + params->cpKta * (ta - 25)) * (1 + params->cpKv * (vdd - 3.3));
0x3AD4	0xAD05    ADD	R5, SP, #20
0x3AD6	0xED551A00  VLDR.32	S3, [R5, #0]
0x3ADA	0xF642234C  MOVW	R3, #10828
0x3ADE	0xEB080303  ADD	R3, R8, R3, LSL #0
0x3AE2	0x461C    MOV	R4, R3
0x3AE4	0xF1080320  ADD	R3, R8, #32
0x3AE8	0xEEB30A09  VMOV.F32	S0, #25
0x3AEC	0xEE730A40  VSUB.F32	S1, S6, S0
0x3AF0	0xED130A00  VLDR.32	S0, [R3, #0]
0x3AF4	0xEE600A20  VMUL.F32	S1, S0, S1
0x3AF8	0xEEB70A00  VMOV.F32	S0, #1
0x3AFC	0xEE700A20  VADD.F32	S1, S0, S1
0x3B00	0xF9B43000  LDRSH	R3, [R4, #0]
0x3B04	0xEE003A10  VMOV	S0, R3
0x3B08	0xEEB80AC0  VCVT.F32.S32	S0, S0
0x3B0C	0xEE201A20  VMUL.F32	S2, S0, S1
0x3B10	0xF108041C  ADD	R4, R8, #28
0x3B14	0x4B67    LDR	R3, [PC, #412]
0x3B16	0xEE003A10  VMOV	S0, R3
0x3B1A	0xEE730AC0  VSUB.F32	S1, S7, S0
0x3B1E	0xED140A00  VLDR.32	S0, [R4, #0]
0x3B22	0xEE600A20  VMUL.F32	S1, S0, S1
0x3B26	0xEEB70A00  VMOV.F32	S0, #1
0x3B2A	0xEE300A20  VADD.F32	S0, S0, S1
0x3B2E	0xEE210A00  VMUL.F32	S0, S2, S0
0x3B32	0xEE310AC0  VSUB.F32	S0, S3, S0
0x3B36	0xED050A00  VSTR.32	S0, [R5, #0]
;__irgrid2_driver.c, 1197 :: 		if( mode ==  params->calibrationModeEE)
0x3B3A	0xF1080325  ADD	R3, R8, #37
0x3B3E	0x781B    LDRB	R3, [R3, #0]
0x3B40	0x4298    CMP	R0, R3
0x3B42	0xD135    BNE	L_irgrid2_CalculateTo191
;__irgrid2_driver.c, 1199 :: 		irDataCP[1] = irDataCP[1] - params->cpOffset[1] * (1 + params->cpKta * (ta - 25)) * (1 + params->cpKv * (vdd - 3.3));
0x3B44	0xAB05    ADD	R3, SP, #20
0x3B46	0x1D1D    ADDS	R5, R3, #4
0x3B48	0x1D1B    ADDS	R3, R3, #4
0x3B4A	0xED531A00  VLDR.32	S3, [R3, #0]
0x3B4E	0xF642234C  MOVW	R3, #10828
0x3B52	0xEB080303  ADD	R3, R8, R3, LSL #0
0x3B56	0x1C9C    ADDS	R4, R3, #2
0x3B58	0xF1080320  ADD	R3, R8, #32
0x3B5C	0xEEB30A09  VMOV.F32	S0, #25
0x3B60	0xEE730A40  VSUB.F32	S1, S6, S0
0x3B64	0xED130A00  VLDR.32	S0, [R3, #0]
0x3B68	0xEE600A20  VMUL.F32	S1, S0, S1
0x3B6C	0xEEB70A00  VMOV.F32	S0, #1
0x3B70	0xEE700A20  VADD.F32	S1, S0, S1
0x3B74	0xF9B43000  LDRSH	R3, [R4, #0]
0x3B78	0xEE003A10  VMOV	S0, R3
0x3B7C	0xEEB80AC0  VCVT.F32.S32	S0, S0
0x3B80	0xEE201A20  VMUL.F32	S2, S0, S1
0x3B84	0xF108041C  ADD	R4, R8, #28
0x3B88	0x4B4A    LDR	R3, [PC, #296]
0x3B8A	0xEE003A10  VMOV	S0, R3
0x3B8E	0xEE730AC0  VSUB.F32	S1, S7, S0
0x3B92	0xED140A00  VLDR.32	S0, [R4, #0]
0x3B96	0xEE600A20  VMUL.F32	S1, S0, S1
0x3B9A	0xEEB70A00  VMOV.F32	S0, #1
0x3B9E	0xEE300A20  VADD.F32	S0, S0, S1
0x3BA2	0xEE210A00  VMUL.F32	S0, S2, S0
0x3BA6	0xEE310AC0  VSUB.F32	S0, S3, S0
0x3BAA	0xED050A00  VSTR.32	S0, [R5, #0]
;__irgrid2_driver.c, 1200 :: 		}
0x3BAE	0xE03C    B	L_irgrid2_CalculateTo192
L_irgrid2_CalculateTo191:
;__irgrid2_driver.c, 1203 :: 		irDataCP[1] = irDataCP[1] - (params->cpOffset[1] + params->ilChessC[0]) * (1 + params->cpKta * (ta - 25)) * (1 + params->cpKv * (vdd - 3.3));
0x3BB0	0xAB05    ADD	R3, SP, #20
0x3BB2	0x1D1D    ADDS	R5, R3, #4
0x3BB4	0x1D1B    ADDS	R3, R3, #4
0x3BB6	0xED531A00  VLDR.32	S3, [R3, #0]
0x3BBA	0xF642234C  MOVW	R3, #10828
0x3BBE	0xEB080303  ADD	R3, R8, R3, LSL #0
0x3BC2	0x1C9B    ADDS	R3, R3, #2
0x3BC4	0xF9B34000  LDRSH	R4, [R3, #0]
0x3BC8	0xF6422350  MOVW	R3, #10832
0x3BCC	0xEB080303  ADD	R3, R8, R3, LSL #0
0x3BD0	0xEE004A90  VMOV	S1, R4
0x3BD4	0xEEF80AE0  VCVT.F32.S32	S1, S1
0x3BD8	0xED130A00  VLDR.32	S0, [R3, #0]
0x3BDC	0xEE301A80  VADD.F32	S2, S1, S0
0x3BE0	0xF1080320  ADD	R3, R8, #32
0x3BE4	0xEEB30A09  VMOV.F32	S0, #25
0x3BE8	0xEE730A40  VSUB.F32	S1, S6, S0
0x3BEC	0xED130A00  VLDR.32	S0, [R3, #0]
0x3BF0	0xEE600A20  VMUL.F32	S1, S0, S1
0x3BF4	0xEEB70A00  VMOV.F32	S0, #1
0x3BF8	0xEE300A20  VADD.F32	S0, S0, S1
0x3BFC	0xEE211A00  VMUL.F32	S2, S2, S0
0x3C00	0xF108041C  ADD	R4, R8, #28
0x3C04	0x4B2B    LDR	R3, [PC, #172]
0x3C06	0xEE003A10  VMOV	S0, R3
0x3C0A	0xEE730AC0  VSUB.F32	S1, S7, S0
0x3C0E	0xED140A00  VLDR.32	S0, [R4, #0]
0x3C12	0xEE600A20  VMUL.F32	S1, S0, S1
0x3C16	0xEEB70A00  VMOV.F32	S0, #1
0x3C1A	0xEE300A20  VADD.F32	S0, S0, S1
0x3C1E	0xEE210A00  VMUL.F32	S0, S2, S0
0x3C22	0xEE310AC0  VSUB.F32	S0, S3, S0
0x3C26	0xED050A00  VSTR.32	S0, [R5, #0]
;__irgrid2_driver.c, 1204 :: 		}
L_irgrid2_CalculateTo192:
;__irgrid2_driver.c, 1206 :: 		for(pixelNumber = 0; pixelNumber < 768; pixelNumber++)
; pixelNumber start address is: 48 (R12)
0x3C2A	0xF2400C00  MOVW	R12, #0
0x3C2E	0xFA0FFC8C  SXTH	R12, R12
; mode end address is: 0 (R0)
; gain end address is: 16 (S4)
; taTr end address is: 20 (S5)
; ta end address is: 24 (S6)
; subPage end address is: 4 (R1)
; result end address is: 8 (R2)
; emissivity end address is: 32 (S8)
; pixelNumber end address is: 48 (R12)
0x3C32	0x9701    STR	R7, [SP, #4]
0x3C34	0xED8D4A02  VSTR.32	S8, [SP, #8]
0x3C38	0xFA5FFB80  UXTB	R11, R0
0x3C3C	0xEEB05A42  VMOV.F32	S10, S4
0x3C40	0xEEF04A62  VMOV.F32	S9, S5
0x3C44	0xEEB04A43  VMOV.F32	S8, S6
0x3C48	0xFA1FFA81  UXTH	R10, R1
0x3C4C	0x4691    MOV	R9, R2
0x3C4E	0xED9D3A02  VLDR.32	S6, [SP, #8]
0x3C52	0x9F01    LDR	R7, [SP, #4]
L_irgrid2_CalculateTo193:
; pixelNumber start address is: 48 (R12)
; mode start address is: 44 (R11)
; gain start address is: 40 (S10)
; taTr start address is: 36 (S9)
; ta start address is: 32 (S8)
; subPage start address is: 40 (R10)
; result start address is: 36 (R9)
; emissivity start address is: 24 (S6)
; frameData start address is: 28 (R7)
; frameData end address is: 28 (R7)
; params start address is: 32 (R8)
; params end address is: 32 (R8)
; emissivity start address is: 24 (S6)
; emissivity end address is: 24 (S6)
; result start address is: 36 (R9)
; result end address is: 36 (R9)
; subPage start address is: 40 (R10)
; subPage end address is: 40 (R10)
; vdd start address is: 28 (S7)
; vdd end address is: 28 (S7)
; ta start address is: 32 (S8)
; ta end address is: 32 (S8)
; taTr start address is: 36 (S9)
; taTr end address is: 36 (S9)
; gain start address is: 40 (S10)
; gain end address is: 40 (S10)
; mode start address is: 44 (R11)
; mode end address is: 44 (R11)
0x3C54	0xF5BC7F40  CMP	R12, #768
0x3C58	0xF28081ED  BGE	L_irgrid2_CalculateTo194
; frameData end address is: 28 (R7)
; params end address is: 32 (R8)
; emissivity end address is: 24 (S6)
; result end address is: 36 (R9)
; subPage end address is: 40 (R10)
; vdd end address is: 28 (S7)
; ta end address is: 32 (S8)
; taTr end address is: 36 (S9)
; gain end address is: 40 (S10)
; mode end address is: 44 (R11)
;__irgrid2_driver.c, 1208 :: 		ilPattern = pixelNumber / 32 - (pixelNumber / 64) * 2;
; mode start address is: 44 (R11)
; gain start address is: 40 (S10)
; taTr start address is: 36 (S9)
; ta start address is: 32 (S8)
; vdd start address is: 28 (S7)
; subPage start address is: 40 (R10)
; result start address is: 36 (R9)
; emissivity start address is: 24 (S6)
; params start address is: 32 (R8)
; frameData start address is: 28 (R7)
0x3C5C	0x2320    MOVS	R3, #32
0x3C5E	0xB21B    SXTH	R3, R3
0x3C60	0xFB9CF4F3  SDIV	R4, R12, R3
0x3C64	0xB224    SXTH	R4, R4
0x3C66	0x2340    MOVS	R3, #64
0x3C68	0xB21B    SXTH	R3, R3
0x3C6A	0xFB9CF3F3  SDIV	R3, R12, R3
0x3C6E	0xB21B    SXTH	R3, R3
0x3C70	0x005B    LSLS	R3, R3, #1
0x3C72	0xB21B    SXTH	R3, R3
0x3C74	0x1AE6    SUB	R6, R4, R3
; ilPattern start address is: 0 (R0)
0x3C76	0xB270    SXTB	R0, R6
;__irgrid2_driver.c, 1209 :: 		chessPattern = ilPattern ^ (pixelNumber - (pixelNumber/2)*2);
0x3C78	0x2302    MOVS	R3, #2
0x3C7A	0xB21B    SXTH	R3, R3
0x3C7C	0xFB9CF3F3  SDIV	R3, R12, R3
0x3C80	0xB21B    SXTH	R3, R3
0x3C82	0x005B    LSLS	R3, R3, #1
0x3C84	0xB21B    SXTH	R3, R3
0x3C86	0xEBAC0403  SUB	R4, R12, R3, LSL #0
0x3C8A	0xB224    SXTH	R4, R4
0x3C8C	0xB273    SXTB	R3, R6
0x3C8E	0x4063    EORS	R3, R4
; chessPattern start address is: 8 (R2)
0x3C90	0xB25A    SXTB	R2, R3
;__irgrid2_driver.c, 1210 :: 		conversionPattern = ((pixelNumber + 2) / 4 - (pixelNumber + 3) / 4 + (pixelNumber + 1) / 4 - pixelNumber / 4) * (1 - 2 * ilPattern);
0x3C92	0xF10C0402  ADD	R4, R12, #2
0x3C96	0xB224    SXTH	R4, R4
0x3C98	0x2304    MOVS	R3, #4
0x3C9A	0xB21B    SXTH	R3, R3
0x3C9C	0xFB94F5F3  SDIV	R5, R4, R3
0x3CA0	0xB22D    SXTH	R5, R5
0x3CA2	0xF10C0403  ADD	R4, R12, #3
0x3CA6	0xE007    B	#14
0x3CA8	0x93334388  	#1133024051
0x3CAC	0x00004220  	#1109393408
0x3CB0	0xFE0046FF  	#1191181824
0x3CB4	0x33334053  	#1079194419
0x3CB8	0xB224    SXTH	R4, R4
0x3CBA	0x2304    MOVS	R3, #4
0x3CBC	0xB21B    SXTH	R3, R3
0x3CBE	0xFB94F3F3  SDIV	R3, R4, R3
0x3CC2	0xB21B    SXTH	R3, R3
0x3CC4	0x1AED    SUB	R5, R5, R3
0x3CC6	0xB22D    SXTH	R5, R5
0x3CC8	0xF10C0401  ADD	R4, R12, #1
0x3CCC	0xB224    SXTH	R4, R4
0x3CCE	0x2304    MOVS	R3, #4
0x3CD0	0xB21B    SXTH	R3, R3
0x3CD2	0xFB94F3F3  SDIV	R3, R4, R3
0x3CD6	0xB21B    SXTH	R3, R3
0x3CD8	0x18EC    ADDS	R4, R5, R3
0x3CDA	0xB224    SXTH	R4, R4
0x3CDC	0x2304    MOVS	R3, #4
0x3CDE	0xB21B    SXTH	R3, R3
0x3CE0	0xFB9CF3F3  SDIV	R3, R12, R3
0x3CE4	0xB21B    SXTH	R3, R3
0x3CE6	0x1AE4    SUB	R4, R4, R3
0x3CE8	0xB224    SXTH	R4, R4
0x3CEA	0xB273    SXTB	R3, R6
0x3CEC	0x005B    LSLS	R3, R3, #1
0x3CEE	0xB21B    SXTH	R3, R3
0x3CF0	0xF1C30301  RSB	R3, R3, #1
0x3CF4	0xB21B    SXTH	R3, R3
0x3CF6	0x4363    MULS	R3, R4, R3
; conversionPattern start address is: 4 (R1)
0x3CF8	0xB259    SXTB	R1, R3
;__irgrid2_driver.c, 1212 :: 		if(mode == 0)
0x3CFA	0xF1BB0F00  CMP	R11, #0
0x3CFE	0xD101    BNE	L_irgrid2_CalculateTo196
; chessPattern end address is: 8 (R2)
;__irgrid2_driver.c, 1214 :: 		pattern = ilPattern;
; pattern start address is: 8 (R2)
0x3D00	0xB242    SXTB	R2, R0
;__irgrid2_driver.c, 1215 :: 		}
; pattern end address is: 8 (R2)
0x3D02	0xE001    B	L_irgrid2_CalculateTo197
L_irgrid2_CalculateTo196:
;__irgrid2_driver.c, 1218 :: 		pattern = chessPattern;
; pattern start address is: 12 (R3)
; chessPattern start address is: 8 (R2)
0x3D04	0xB253    SXTB	R3, R2
; chessPattern end address is: 8 (R2)
; pattern end address is: 12 (R3)
0x3D06	0xB25A    SXTB	R2, R3
;__irgrid2_driver.c, 1219 :: 		}
L_irgrid2_CalculateTo197:
;__irgrid2_driver.c, 1221 :: 		if(pattern == frameData[833])
; pattern start address is: 8 (R2)
0x3D08	0xF2076382  ADDW	R3, R7, #1666
0x3D0C	0x881B    LDRH	R3, [R3, #0]
0x3D0E	0x429A    CMP	R2, R3
0x3D10	0xF040817E  BNE	L_irgrid2_CalculateTo198
; pattern end address is: 8 (R2)
;__irgrid2_driver.c, 1223 :: 		irData = frameData[pixelNumber];
0x3D14	0xEA4F034C  LSL	R3, R12, #1
0x3D18	0x18FB    ADDS	R3, R7, R3
0x3D1A	0x881B    LDRH	R3, [R3, #0]
0x3D1C	0xEE003A90  VMOV	S1, R3
0x3D20	0xEEF80A60  VCVT.F32.U32	S1, S1
0x3D24	0xEDCD0A07  VSTR.32	S1, [SP, #28]
;__irgrid2_driver.c, 1224 :: 		if(irData > 32767)
0x3D28	0x4BC5    LDR	R3, [PC, #788]
0x3D2A	0xEE003A10  VMOV	S0, R3
0x3D2E	0xEEF40AC0  VCMPE.F32	S1, S0
0x3D32	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x3D36	0xDD09    BLE	L_irgrid2_CalculateTo199
;__irgrid2_driver.c, 1226 :: 		irData = irData - 65536;
0x3D38	0xEDDD0A07  VLDR.32	S1, [SP, #28]
0x3D3C	0xF04F438F  MOV	R3, #1199570944
0x3D40	0xEE003A10  VMOV	S0, R3
0x3D44	0xEE300AC0  VSUB.F32	S0, S1, S0
0x3D48	0xED8D0A07  VSTR.32	S0, [SP, #28]
;__irgrid2_driver.c, 1227 :: 		}
L_irgrid2_CalculateTo199:
;__irgrid2_driver.c, 1228 :: 		irData = irData * gain;
0x3D4C	0xED9D0A07  VLDR.32	S0, [SP, #28]
0x3D50	0xEE601A05  VMUL.F32	S3, S0, S10
0x3D54	0xEDCD1A07  VSTR.32	S3, [SP, #28]
;__irgrid2_driver.c, 1230 :: 		irData = irData - params->offset[pixelNumber]*(1 + params->kta[pixelNumber]*(ta - 25))*(1 + params->kv[pixelNumber]*(vdd - 3.3));
0x3D58	0xF6084444  ADDW	R4, R8, #3140
0x3D5C	0xEA4F034C  LSL	R3, R12, #1
0x3D60	0x18E5    ADDS	R5, R4, R3
0x3D62	0xF2412344  MOVW	R3, #4676
0x3D66	0xEB080303  ADD	R3, R8, R3, LSL #0
0x3D6A	0xEA4F068C  LSL	R6, R12, #2
0x3D6E	0x199C    ADDS	R4, R3, R6
0x3D70	0xEEB30A09  VMOV.F32	S0, #25
0x3D74	0xEE740A40  VSUB.F32	S1, S8, S0
0x3D78	0xED140A00  VLDR.32	S0, [R4, #0]
0x3D7C	0xEE600A20  VMUL.F32	S1, S0, S1
0x3D80	0xEEB70A00  VMOV.F32	S0, #1
0x3D84	0xEE700A20  VADD.F32	S1, S0, S1
0x3D88	0xF9B53000  LDRSH	R3, [R5, #0]
0x3D8C	0xEE003A10  VMOV	S0, R3
0x3D90	0xEEB80AC0  VCVT.F32.S32	S0, S0
0x3D94	0xEE201A20  VMUL.F32	S2, S0, S1
0x3D98	0xF6416344  MOVW	R3, #7748
0x3D9C	0xEB080303  ADD	R3, R8, R3, LSL #0
0x3DA0	0x199C    ADDS	R4, R3, R6
0x3DA2	0x4BA8    LDR	R3, [PC, #672]
0x3DA4	0xEE003A10  VMOV	S0, R3
0x3DA8	0xEE730AC0  VSUB.F32	S1, S7, S0
0x3DAC	0xED140A00  VLDR.32	S0, [R4, #0]
0x3DB0	0xEE600A20  VMUL.F32	S1, S0, S1
0x3DB4	0xEEB70A00  VMOV.F32	S0, #1
0x3DB8	0xEE300A20  VADD.F32	S0, S0, S1
0x3DBC	0xEE210A00  VMUL.F32	S0, S2, S0
0x3DC0	0xEE310AC0  VSUB.F32	S0, S3, S0
0x3DC4	0xED8D0A07  VSTR.32	S0, [SP, #28]
;__irgrid2_driver.c, 1231 :: 		if(mode !=  params->calibrationModeEE)
0x3DC8	0xF1080325  ADD	R3, R8, #37
0x3DCC	0x781B    LDRB	R3, [R3, #0]
0x3DCE	0x459B    CMP	R11, R3
0x3DD0	0xD022    BEQ	L_irgrid2_CalculateTo200
;__irgrid2_driver.c, 1233 :: 		irData = irData + params->ilChessC[2] * (2 * ilPattern - 1) - params->ilChessC[1] * conversionPattern;
0x3DD2	0xF6422350  MOVW	R3, #10832
0x3DD6	0xEB080503  ADD	R5, R8, R3, LSL #0
0x3DDA	0xF2050408  ADDW	R4, R5, #8
0x3DDE	0x0043    LSLS	R3, R0, #1
0x3DE0	0xB21B    SXTH	R3, R3
; ilPattern end address is: 0 (R0)
0x3DE2	0x1E5B    SUBS	R3, R3, #1
0x3DE4	0xB21B    SXTH	R3, R3
0x3DE6	0xEE003A90  VMOV	S1, R3
0x3DEA	0xEEF80AE0  VCVT.F32.S32	S1, S1
0x3DEE	0xED140A00  VLDR.32	S0, [R4, #0]
0x3DF2	0xEE600A20  VMUL.F32	S1, S0, S1
0x3DF6	0xED9D0A07  VLDR.32	S0, [SP, #28]
0x3DFA	0xEE301A20  VADD.F32	S2, S0, S1
0x3DFE	0x1D2B    ADDS	R3, R5, #4
0x3E00	0xEE001A90  VMOV	S1, R1
0x3E04	0xEEF80AE0  VCVT.F32.S32	S1, S1
; conversionPattern end address is: 4 (R1)
0x3E08	0xED130A00  VLDR.32	S0, [R3, #0]
0x3E0C	0xEE200A20  VMUL.F32	S0, S0, S1
0x3E10	0xEE310A40  VSUB.F32	S0, S2, S0
0x3E14	0xED8D0A07  VSTR.32	S0, [SP, #28]
;__irgrid2_driver.c, 1234 :: 		}
L_irgrid2_CalculateTo200:
;__irgrid2_driver.c, 1236 :: 		irData = irData / emissivity;
0x3E18	0xED9D0A07  VLDR.32	S0, [SP, #28]
0x3E1C	0xEE801A03  VDIV.F32	S2, S0, S6
0x3E20	0xED8D1A07  VSTR.32	S2, [SP, #28]
;__irgrid2_driver.c, 1238 :: 		irData = irData - params->tgc * irDataCP[subPage];
0x3E24	0xF1080618  ADD	R6, R8, #24
0x3E28	0xAB05    ADD	R3, SP, #20
0x3E2A	0xEA4F058A  LSL	R5, R10, #2
0x3E2E	0x195B    ADDS	R3, R3, R5
0x3E30	0xED530A00  VLDR.32	S1, [R3, #0]
0x3E34	0xED160A00  VLDR.32	S0, [R6, #0]
0x3E38	0xEE200A20  VMUL.F32	S0, S0, S1
0x3E3C	0xEE310A40  VSUB.F32	S0, S2, S0
0x3E40	0xED8D0A07  VSTR.32	S0, [SP, #28]
;__irgrid2_driver.c, 1240 :: 		alphaCompensated = (params->alpha[pixelNumber] - params->tgc * params->cpAlpha[subPage])*(1 + params->KsTa * (ta - 25));
0x3E44	0xF1080444  ADD	R4, R8, #68
0x3E48	0xEA4F038C  LSL	R3, R12, #2
0x3E4C	0x18E3    ADDS	R3, R4, R3
0x3E4E	0xED131A00  VLDR.32	S2, [R3, #0]
0x3E52	0xF6422344  MOVW	R3, #10820
0x3E56	0xEB080303  ADD	R3, R8, R3, LSL #0
0x3E5A	0x195B    ADDS	R3, R3, R5
0x3E5C	0xED530A00  VLDR.32	S1, [R3, #0]
0x3E60	0xED160A00  VLDR.32	S0, [R6, #0]
0x3E64	0xEE200A20  VMUL.F32	S0, S0, S1
0x3E68	0xEE311A40  VSUB.F32	S2, S2, S0
0x3E6C	0xF1080328  ADD	R3, R8, #40
0x3E70	0xEEB30A09  VMOV.F32	S0, #25
0x3E74	0xEE740A40  VSUB.F32	S1, S8, S0
0x3E78	0xED130A00  VLDR.32	S0, [R3, #0]
0x3E7C	0xEE600A20  VMUL.F32	S1, S0, S1
0x3E80	0xEEB70A00  VMOV.F32	S0, #1
0x3E84	0xEE300A20  VADD.F32	S0, S0, S1
0x3E88	0xEE210A00  VMUL.F32	S0, S2, S0
0x3E8C	0xED8D0A08  VSTR.32	S0, [SP, #32]
;__irgrid2_driver.c, 1242 :: 		Sx = _pow(alphaCompensated, 3) * (irData + alphaCompensated * taTr);
0x3E90	0xEEF00A08  VMOV.F32	S1, #3
0x3E94	0xEEB00A40  VMOV.F32	S0, S0
0x3E98	0xF7FDFC18  BL	__irgrid2_driver__pow+0
0x3E9C	0xEDDD0A08  VLDR.32	S1, [SP, #32]
0x3EA0	0xEE201AA4  VMUL.F32	S2, S1, S9
0x3EA4	0xEDDD0A07  VLDR.32	S1, [SP, #28]
0x3EA8	0xEE700A81  VADD.F32	S1, S1, S2
0x3EAC	0xEE200A20  VMUL.F32	S0, S0, S1
;__irgrid2_driver.c, 1243 :: 		Sx = _pow(Sx,0.25) * params->ksTo[1];
0x3EB0	0xEEF50A00  VMOV.F32	S1, #0.25
0x3EB4	0xEEB00A40  VMOV.F32	S0, S0
0x3EB8	0xF7FDFC08  BL	__irgrid2_driver__pow+0
0x3EBC	0xF108042C  ADD	R4, R8, #44
0x3EC0	0x1D23    ADDS	R3, R4, #4
0x3EC2	0xED530A00  VLDR.32	S1, [R3, #0]
0x3EC6	0xEE201A20  VMUL.F32	S2, S0, S1
;__irgrid2_driver.c, 1245 :: 		To = _pow((irData/(alphaCompensated * (1 - params->ksTo[1] * 273.15) + Sx) + taTr),0.25) - 273.15;
0x3ECA	0x1D23    ADDS	R3, R4, #4
0x3ECC	0xED530A00  VLDR.32	S1, [R3, #0]
0x3ED0	0x4B5D    LDR	R3, [PC, #372]
0x3ED2	0xEE003A10  VMOV	S0, R3
0x3ED6	0xEE600A80  VMUL.F32	S1, S1, S0
0x3EDA	0xEEB70A00  VMOV.F32	S0, #1
0x3EDE	0xEE700A60  VSUB.F32	S1, S0, S1
0x3EE2	0xED9D0A08  VLDR.32	S0, [SP, #32]
0x3EE6	0xEE200A20  VMUL.F32	S0, S0, S1
0x3EEA	0xEE700A01  VADD.F32	S1, S0, S2
0x3EEE	0xED9D0A07  VLDR.32	S0, [SP, #28]
0x3EF2	0xEE800A20  VDIV.F32	S0, S0, S1
0x3EF6	0xEE300A24  VADD.F32	S0, S0, S9
0x3EFA	0xEEF50A00  VMOV.F32	S1, #0.25
0x3EFE	0xF7FDFBE5  BL	__irgrid2_driver__pow+0
0x3F02	0x4B51    LDR	R3, [PC, #324]
0x3F04	0xEE003A90  VMOV	S1, R3
0x3F08	0xEE700A60  VSUB.F32	S1, S0, S1
0x3F0C	0xEDCD0A09  VSTR.32	S1, [SP, #36]
;__irgrid2_driver.c, 1247 :: 		if(To < params->ct[1])
0x3F10	0xF108033C  ADD	R3, R8, #60
0x3F14	0x1C9B    ADDS	R3, R3, #2
0x3F16	0xF9B33000  LDRSH	R3, [R3, #0]
0x3F1A	0xEE003A10  VMOV	S0, R3
0x3F1E	0xEEB80AC0  VCVT.F32.S32	S0, S0
0x3F22	0xEEF40AC0  VCMPE.F32	S1, S0
0x3F26	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x3F2A	0xDA04    BGE	L_irgrid2_CalculateTo201
;__irgrid2_driver.c, 1249 :: 		range = 0;
0x3F2C	0x2300    MOVS	R3, #0
0x3F2E	0xB25B    SXTB	R3, R3
0x3F30	0xF88D3038  STRB	R3, [SP, #56]
;__irgrid2_driver.c, 1250 :: 		}
0x3F34	0xE02D    B	L_irgrid2_CalculateTo202
L_irgrid2_CalculateTo201:
;__irgrid2_driver.c, 1251 :: 		else if(To < params->ct[2])
0x3F36	0xF108033C  ADD	R3, R8, #60
0x3F3A	0x1D1B    ADDS	R3, R3, #4
0x3F3C	0xF9B33000  LDRSH	R3, [R3, #0]
0x3F40	0xEE003A90  VMOV	S1, R3
0x3F44	0xEEF80AE0  VCVT.F32.S32	S1, S1
0x3F48	0xED9D0A09  VLDR.32	S0, [SP, #36]
0x3F4C	0xEEB40AE0  VCMPE.F32	S0, S1
0x3F50	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x3F54	0xDA04    BGE	L_irgrid2_CalculateTo203
;__irgrid2_driver.c, 1253 :: 		range = 1;
0x3F56	0x2301    MOVS	R3, #1
0x3F58	0xB25B    SXTB	R3, R3
0x3F5A	0xF88D3038  STRB	R3, [SP, #56]
;__irgrid2_driver.c, 1254 :: 		}
0x3F5E	0xE018    B	L_irgrid2_CalculateTo204
L_irgrid2_CalculateTo203:
;__irgrid2_driver.c, 1255 :: 		else if(To < params->ct[3])
0x3F60	0xF108033C  ADD	R3, R8, #60
0x3F64	0x1D9B    ADDS	R3, R3, #6
0x3F66	0xF9B33000  LDRSH	R3, [R3, #0]
0x3F6A	0xEE003A90  VMOV	S1, R3
0x3F6E	0xEEF80AE0  VCVT.F32.S32	S1, S1
0x3F72	0xED9D0A09  VLDR.32	S0, [SP, #36]
0x3F76	0xEEB40AE0  VCMPE.F32	S0, S1
0x3F7A	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x3F7E	0xDA04    BGE	L_irgrid2_CalculateTo205
;__irgrid2_driver.c, 1257 :: 		range = 2;
0x3F80	0x2302    MOVS	R3, #2
0x3F82	0xB25B    SXTB	R3, R3
0x3F84	0xF88D3038  STRB	R3, [SP, #56]
;__irgrid2_driver.c, 1258 :: 		}
0x3F88	0xE003    B	L_irgrid2_CalculateTo206
L_irgrid2_CalculateTo205:
;__irgrid2_driver.c, 1261 :: 		range = 3;
0x3F8A	0x2303    MOVS	R3, #3
0x3F8C	0xB25B    SXTB	R3, R3
0x3F8E	0xF88D3038  STRB	R3, [SP, #56]
;__irgrid2_driver.c, 1262 :: 		}
L_irgrid2_CalculateTo206:
L_irgrid2_CalculateTo204:
L_irgrid2_CalculateTo202:
;__irgrid2_driver.c, 1264 :: 		To = _pow((irData / (alphaCompensated * alphaCorrR[range] * (1 + params->ksTo[range] * (To - params->ct[range]))) + taTr),0.25) - 273.15;
0x3F92	0xAC0A    ADD	R4, SP, #40
0x3F94	0xF99D3038  LDRSB	R3, [SP, #56]
0x3F98	0x009D    LSLS	R5, R3, #2
0x3F9A	0x1963    ADDS	R3, R4, R5
0x3F9C	0xED530A00  VLDR.32	S1, [R3, #0]
0x3FA0	0xED9D0A08  VLDR.32	S0, [SP, #32]
0x3FA4	0xEE201A20  VMUL.F32	S2, S0, S1
0x3FA8	0xF108032C  ADD	R3, R8, #44
0x3FAC	0x195D    ADDS	R5, R3, R5
0x3FAE	0xF108043C  ADD	R4, R8, #60
0x3FB2	0xF99D3038  LDRSB	R3, [SP, #56]
0x3FB6	0x005B    LSLS	R3, R3, #1
0x3FB8	0x18E3    ADDS	R3, R4, R3
0x3FBA	0xF9B33000  LDRSH	R3, [R3, #0]
0x3FBE	0xEE003A90  VMOV	S1, R3
0x3FC2	0xEEF80AE0  VCVT.F32.S32	S1, S1
0x3FC6	0xED9D0A09  VLDR.32	S0, [SP, #36]
0x3FCA	0xEE700A60  VSUB.F32	S1, S0, S1
0x3FCE	0xED150A00  VLDR.32	S0, [R5, #0]
0x3FD2	0xEE600A20  VMUL.F32	S1, S0, S1
0x3FD6	0xEEB70A00  VMOV.F32	S0, #1
0x3FDA	0xEE300A20  VADD.F32	S0, S0, S1
0x3FDE	0xEE610A00  VMUL.F32	S1, S2, S0
0x3FE2	0xED9D0A07  VLDR.32	S0, [SP, #28]
0x3FE6	0xEE800A20  VDIV.F32	S0, S0, S1
0x3FEA	0xEE300A24  VADD.F32	S0, S0, S9
0x3FEE	0xEEF50A00  VMOV.F32	S1, #0.25
0x3FF2	0xF7FDFB6B  BL	__irgrid2_driver__pow+0
0x3FF6	0x4B14    LDR	R3, [PC, #80]
0x3FF8	0xEE003A90  VMOV	S1, R3
0x3FFC	0xEE300A60  VSUB.F32	S0, S0, S1
0x4000	0xED8D0A09  VSTR.32	S0, [SP, #36]
;__irgrid2_driver.c, 1266 :: 		result[pixelNumber] = To;
0x4004	0xEA4F038C  LSL	R3, R12, #2
0x4008	0xEB090303  ADD	R3, R9, R3, LSL #0
0x400C	0xED030A00  VSTR.32	S0, [R3, #0]
;__irgrid2_driver.c, 1267 :: 		}
L_irgrid2_CalculateTo198:
;__irgrid2_driver.c, 1206 :: 		for(pixelNumber = 0; pixelNumber < 768; pixelNumber++)
0x4010	0xF10C0C01  ADD	R12, R12, #1
0x4014	0xFA0FFC8C  SXTH	R12, R12
;__irgrid2_driver.c, 1268 :: 		}
0x4018	0x9701    STR	R7, [SP, #4]
; frameData end address is: 28 (R7)
; params end address is: 32 (R8)
; emissivity end address is: 24 (S6)
; result end address is: 36 (R9)
; subPage end address is: 40 (R10)
; vdd end address is: 28 (S7)
; ta end address is: 32 (S8)
; taTr end address is: 36 (S9)
; gain end address is: 40 (S10)
; mode end address is: 44 (R11)
; pixelNumber end address is: 48 (R12)
0x401A	0xF8CD8008  STR	R8, [SP, #8]
0x401E	0xF8CD900C  STR	R9, [SP, #12]
0x4022	0xF8ADA010  STRH	R10, [SP, #16]
0x4026	0xF8BDA010  LDRH	R10, [SP, #16]
0x402A	0xF8DD900C  LDR	R9, [SP, #12]
0x402E	0xF8DD8008  LDR	R8, [SP, #8]
0x4032	0x9F01    LDR	R7, [SP, #4]
0x4034	0xE60E    B	L_irgrid2_CalculateTo193
L_irgrid2_CalculateTo194:
;__irgrid2_driver.c, 1269 :: 		}
L_end_irgrid2_CalculateTo:
0x4036	0xF8DDE000  LDR	LR, [SP, #0]
0x403A	0xB00F    ADD	SP, SP, #60
0x403C	0x4770    BX	LR
0x403E	0xBF00    NOP
0x4040	0xFE0046FF  	#1191181824
0x4044	0x33334053  	#1079194419
0x4048	0x93334388  	#1133024051
; end of _irgrid2_CalculateTo
_FloatToStr:
;__Lib_Conversions.c, 631 :: 		
; str start address is: 0 (R0)
0x4434	0xB083    SUB	SP, SP, #12
0x4436	0xF8CDE000  STR	LR, [SP, #0]
; fnum start address is: 0 (S0)
0x443A	0x4604    MOV	R4, R0
; str end address is: 0 (R0)
; fnum end address is: 0 (S0)
; fnum start address is: 0 (S0)
; str start address is: 16 (R4)
;__Lib_Conversions.c, 633 :: 		
; bpoint start address is: 0 (R0)
0x443C	0x2000    MOVS	R0, #0
;__Lib_Conversions.c, 635 :: 		
; dexpon start address is: 12 (R3)
0x443E	0x2300    MOVS	R3, #0
0x4440	0xB25B    SXTB	R3, R3
;__Lib_Conversions.c, 638 :: 		
0x4442	0xED8D0A02  VSTR.32	S0, [SP, #8]
; fnum end address is: 0 (S0)
;__Lib_Conversions.c, 639 :: 		
0x4446	0x9902    LDR	R1, [SP, #8]
0x4448	0xF1B13FFF  CMP	R1, #-1
0x444C	0xD105    BNE	L_FloatToStr117
; bpoint end address is: 0 (R0)
; dexpon end address is: 12 (R3)
;__Lib_Conversions.c, 640 :: 		
0x444E	0x4970    LDR	R1, [PC, #448]
0x4450	0x4620    MOV	R0, R4
; str end address is: 16 (R4)
0x4452	0xF7FFFDFB  BL	_strcpy+0
;__Lib_Conversions.c, 641 :: 		
0x4456	0x2003    MOVS	R0, #3
0x4458	0xE0D5    B	L_end_FloatToStr
;__Lib_Conversions.c, 642 :: 		
L_FloatToStr117:
;__Lib_Conversions.c, 643 :: 		
; dexpon start address is: 12 (R3)
; str start address is: 16 (R4)
; i start address is: 20 (R5)
; bpoint start address is: 0 (R0)
0x445A	0x2501    MOVS	R5, #1
;__Lib_Conversions.c, 644 :: 		
0x445C	0xA902    ADD	R1, SP, #8
0x445E	0x1CC9    ADDS	R1, R1, #3
0x4460	0x7809    LDRB	R1, [R1, #0]
0x4462	0xF0010180  AND	R1, R1, #128
0x4466	0xB2C9    UXTB	R1, R1
0x4468	0xB169    CBZ	R1, L__FloatToStr179
;__Lib_Conversions.c, 645 :: 		
0x446A	0xA902    ADD	R1, SP, #8
0x446C	0x1CCA    ADDS	R2, R1, #3
0x446E	0x7811    LDRB	R1, [R2, #0]
0x4470	0xF0810180  EOR	R1, R1, #128
0x4474	0x7011    STRB	R1, [R2, #0]
;__Lib_Conversions.c, 646 :: 		
0x4476	0x1C69    ADDS	R1, R5, #1
; i end address is: 20 (R5)
; i start address is: 8 (R2)
0x4478	0xB2CA    UXTB	R2, R1
;__Lib_Conversions.c, 647 :: 		
0x447A	0x212D    MOVS	R1, #45
0x447C	0x7021    STRB	R1, [R4, #0]
0x447E	0x1C64    ADDS	R4, R4, #1
; i end address is: 8 (R2)
; str end address is: 16 (R4)
0x4480	0xB2D7    UXTB	R7, R2
0x4482	0x4626    MOV	R6, R4
;__Lib_Conversions.c, 648 :: 		
0x4484	0xE001    B	L_FloatToStr118
L__FloatToStr179:
;__Lib_Conversions.c, 644 :: 		
0x4486	0x4626    MOV	R6, R4
0x4488	0xB2EF    UXTB	R7, R5
;__Lib_Conversions.c, 648 :: 		
L_FloatToStr118:
;__Lib_Conversions.c, 649 :: 		
; str start address is: 24 (R6)
; i start address is: 28 (R7)
0x448A	0x9902    LDR	R1, [SP, #8]
0x448C	0xB929    CBNZ	R1, L_FloatToStr119
; bpoint end address is: 0 (R0)
; i end address is: 28 (R7)
; dexpon end address is: 12 (R3)
;__Lib_Conversions.c, 650 :: 		
0x448E	0x4961    LDR	R1, [PC, #388]
0x4490	0x4630    MOV	R0, R6
; str end address is: 24 (R6)
0x4492	0xF7FFFDDB  BL	_strcpy+0
;__Lib_Conversions.c, 651 :: 		
0x4496	0x2000    MOVS	R0, #0
0x4498	0xE0B5    B	L_end_FloatToStr
;__Lib_Conversions.c, 652 :: 		
L_FloatToStr119:
;__Lib_Conversions.c, 653 :: 		
; dexpon start address is: 12 (R3)
; i start address is: 28 (R7)
; str start address is: 24 (R6)
; bpoint start address is: 0 (R0)
0x449A	0x9902    LDR	R1, [SP, #8]
0x449C	0xF1B14FFF  CMP	R1, #2139095040
0x44A0	0xD105    BNE	L_FloatToStr120
; bpoint end address is: 0 (R0)
; dexpon end address is: 12 (R3)
;__Lib_Conversions.c, 654 :: 		
0x44A2	0x495D    LDR	R1, [PC, #372]
0x44A4	0x4630    MOV	R0, R6
; str end address is: 24 (R6)
0x44A6	0xF7FFFDD1  BL	_strcpy+0
;__Lib_Conversions.c, 655 :: 		
0x44AA	0xB2F8    UXTB	R0, R7
; i end address is: 28 (R7)
0x44AC	0xE0AB    B	L_end_FloatToStr
;__Lib_Conversions.c, 656 :: 		
L_FloatToStr120:
;__Lib_Conversions.c, 664 :: 		
; dexpon start address is: 12 (R3)
; str start address is: 24 (R6)
; bpoint start address is: 0 (R0)
0x44AE	0xF88D3004  STRB	R3, [SP, #4]
; str end address is: 24 (R6)
; dexpon end address is: 12 (R3)
0x44B2	0xB2C3    UXTB	R3, R0
0x44B4	0x4634    MOV	R4, R6
0x44B6	0xF99D0004  LDRSB	R0, [SP, #4]
L_FloatToStr121:
; bpoint end address is: 0 (R0)
; str start address is: 16 (R4)
; dexpon start address is: 0 (R0)
; bpoint start address is: 12 (R3)
0x44BA	0xEDDD0A02  VLDR.32	S1, [SP, #8]
0x44BE	0xEEB70A00  VMOV.F32	S0, #1
0x44C2	0xEEF40AC0  VCMPE.F32	S1, S0
0x44C6	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x44CA	0xDA0A    BGE	L_FloatToStr122
;__Lib_Conversions.c, 665 :: 		
0x44CC	0xEDDD0A02  VLDR.32	S1, [SP, #8]
0x44D0	0xEEB20A04  VMOV.F32	S0, #10
0x44D4	0xEE200A80  VMUL.F32	S0, S1, S0
0x44D8	0xED8D0A02  VSTR.32	S0, [SP, #8]
;__Lib_Conversions.c, 666 :: 		
0x44DC	0x1E40    SUBS	R0, R0, #1
0x44DE	0xB240    SXTB	R0, R0
;__Lib_Conversions.c, 667 :: 		
0x44E0	0xE7EB    B	L_FloatToStr121
L_FloatToStr122:
;__Lib_Conversions.c, 672 :: 		
; bpoint end address is: 12 (R3)
; dexpon end address is: 0 (R0)
L_FloatToStr123:
; str end address is: 16 (R4)
; bpoint start address is: 12 (R3)
; dexpon start address is: 0 (R0)
; str start address is: 16 (R4)
0x44E2	0xEDDD0A02  VLDR.32	S1, [SP, #8]
0x44E6	0xEEB20A04  VMOV.F32	S0, #10
0x44EA	0xEEF40AC0  VCMPE.F32	S1, S0
0x44EE	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x44F2	0xDB0B    BLT	L_FloatToStr124
;__Lib_Conversions.c, 673 :: 		
0x44F4	0xEDDD0A02  VLDR.32	S1, [SP, #8]
0x44F8	0x4948    LDR	R1, [PC, #288]
0x44FA	0xEE001A10  VMOV	S0, R1
0x44FE	0xEE200A80  VMUL.F32	S0, S1, S0
0x4502	0xED8D0A02  VSTR.32	S0, [SP, #8]
;__Lib_Conversions.c, 674 :: 		
0x4506	0x1C40    ADDS	R0, R0, #1
0x4508	0xB240    SXTB	R0, R0
;__Lib_Conversions.c, 675 :: 		
0x450A	0xE7EA    B	L_FloatToStr123
L_FloatToStr124:
;__Lib_Conversions.c, 680 :: 		
0x450C	0x9902    LDR	R1, [SP, #8]
0x450E	0x0049    LSLS	R1, R1, #1
0x4510	0x9102    STR	R1, [SP, #8]
;__Lib_Conversions.c, 689 :: 		
0x4512	0xA902    ADD	R1, SP, #8
0x4514	0x1CC9    ADDS	R1, R1, #3
0x4516	0x7809    LDRB	R1, [R1, #0]
0x4518	0x397F    SUBS	R1, #127
; d start address is: 20 (R5)
0x451A	0xB2CD    UXTB	R5, R1
;__Lib_Conversions.c, 692 :: 		
0x451C	0xA902    ADD	R1, SP, #8
0x451E	0x1CCA    ADDS	R2, R1, #3
0x4520	0x2101    MOVS	R1, #1
0x4522	0x7011    STRB	R1, [R2, #0]
;__Lib_Conversions.c, 693 :: 		
0x4524	0x9902    LDR	R1, [SP, #8]
0x4526	0x40A9    LSLS	R1, R5
; d end address is: 20 (R5)
0x4528	0x9102    STR	R1, [SP, #8]
;__Lib_Conversions.c, 694 :: 		
0x452A	0xA902    ADD	R1, SP, #8
0x452C	0x1CC9    ADDS	R1, R1, #3
0x452E	0x7809    LDRB	R1, [R1, #0]
0x4530	0x3130    ADDS	R1, #48
0x4532	0x7021    STRB	R1, [R4, #0]
0x4534	0x1C62    ADDS	R2, R4, #1
; str end address is: 16 (R4)
; str start address is: 8 (R2)
;__Lib_Conversions.c, 695 :: 		
0x4536	0x2801    CMP	R0, #1
0x4538	0xDB03    BLT	L__FloatToStr178
0x453A	0x2806    CMP	R0, #6
0x453C	0xDC01    BGT	L__FloatToStr177
0x453E	0x4615    MOV	R5, R2
; bpoint end address is: 12 (R3)
0x4540	0xE003    B	L_FloatToStr127
L__FloatToStr178:
L__FloatToStr177:
;__Lib_Conversions.c, 696 :: 		
0x4542	0x212E    MOVS	R1, #46
0x4544	0x7011    STRB	R1, [R2, #0]
0x4546	0x1C55    ADDS	R5, R2, #1
; str end address is: 8 (R2)
; str start address is: 20 (R5)
;__Lib_Conversions.c, 697 :: 		
; bpoint start address is: 12 (R3)
0x4548	0x2301    MOVS	R3, #1
; str end address is: 20 (R5)
; bpoint end address is: 12 (R3)
;__Lib_Conversions.c, 698 :: 		
L_FloatToStr127:
;__Lib_Conversions.c, 699 :: 		
; bpoint start address is: 12 (R3)
; str start address is: 20 (R5)
; d start address is: 4 (R1)
0x454A	0x2106    MOVS	R1, #6
; d end address is: 4 (R1)
; str end address is: 20 (R5)
; bpoint end address is: 12 (R3)
; dexpon end address is: 0 (R0)
0x454C	0xB244    SXTB	R4, R0
0x454E	0xB2C8    UXTB	R0, R1
L_FloatToStr128:
; d start address is: 0 (R0)
; str start address is: 20 (R5)
; bpoint start address is: 12 (R3)
; dexpon start address is: 16 (R4)
0x4550	0xB310    CBZ	R0, L_FloatToStr129
;__Lib_Conversions.c, 700 :: 		
0x4552	0xA902    ADD	R1, SP, #8
0x4554	0x1CCA    ADDS	R2, R1, #3
0x4556	0x2100    MOVS	R1, #0
0x4558	0x7011    STRB	R1, [R2, #0]
;__Lib_Conversions.c, 701 :: 		
0x455A	0x9902    LDR	R1, [SP, #8]
0x455C	0x008A    LSLS	R2, R1, #2
0x455E	0x9902    LDR	R1, [SP, #8]
0x4560	0x1889    ADDS	R1, R1, R2
0x4562	0x9102    STR	R1, [SP, #8]
;__Lib_Conversions.c, 702 :: 		
0x4564	0x9902    LDR	R1, [SP, #8]
0x4566	0x0049    LSLS	R1, R1, #1
0x4568	0x9102    STR	R1, [SP, #8]
;__Lib_Conversions.c, 703 :: 		
0x456A	0xA902    ADD	R1, SP, #8
0x456C	0x1CC9    ADDS	R1, R1, #3
0x456E	0x7809    LDRB	R1, [R1, #0]
0x4570	0x3130    ADDS	R1, #48
0x4572	0x7029    STRB	R1, [R5, #0]
0x4574	0x1C6D    ADDS	R5, R5, #1
;__Lib_Conversions.c, 704 :: 		
0x4576	0xB963    CBNZ	R3, L__FloatToStr181
;__Lib_Conversions.c, 705 :: 		
0x4578	0x1E61    SUBS	R1, R4, #1
0x457A	0xB249    SXTB	R1, R1
; dexpon end address is: 16 (R4)
; dexpon start address is: 8 (R2)
0x457C	0xB24A    SXTB	R2, R1
0x457E	0xB921    CBNZ	R1, L__FloatToStr180
; bpoint end address is: 12 (R3)
;__Lib_Conversions.c, 706 :: 		
0x4580	0x212E    MOVS	R1, #46
0x4582	0x7029    STRB	R1, [R5, #0]
0x4584	0x1C6D    ADDS	R5, R5, #1
;__Lib_Conversions.c, 707 :: 		
; bpoint start address is: 4 (R1)
0x4586	0x2101    MOVS	R1, #1
; bpoint end address is: 4 (R1)
; str end address is: 20 (R5)
;__Lib_Conversions.c, 708 :: 		
0x4588	0xE000    B	L_FloatToStr132
L__FloatToStr180:
;__Lib_Conversions.c, 705 :: 		
0x458A	0xB2D9    UXTB	R1, R3
;__Lib_Conversions.c, 708 :: 		
L_FloatToStr132:
; bpoint start address is: 4 (R1)
; str start address is: 20 (R5)
0x458C	0xB254    SXTB	R4, R2
; dexpon end address is: 8 (R2)
; bpoint end address is: 4 (R1)
; str end address is: 20 (R5)
0x458E	0xB2CB    UXTB	R3, R1
0x4590	0xE7FF    B	L_FloatToStr131
L__FloatToStr181:
;__Lib_Conversions.c, 704 :: 		
;__Lib_Conversions.c, 708 :: 		
L_FloatToStr131:
;__Lib_Conversions.c, 699 :: 		
; str start address is: 20 (R5)
; bpoint start address is: 12 (R3)
; dexpon start address is: 16 (R4)
0x4592	0x1E40    SUBS	R0, R0, #1
0x4594	0xB2C0    UXTB	R0, R0
;__Lib_Conversions.c, 709 :: 		
; bpoint end address is: 12 (R3)
; d end address is: 0 (R0)
0x4596	0xE7DB    B	L_FloatToStr128
L_FloatToStr129:
;__Lib_Conversions.c, 710 :: 		
0x4598	0x462A    MOV	R2, R5
; dexpon end address is: 16 (R4)
0x459A	0xB260    SXTB	R0, R4
L_FloatToStr133:
; str end address is: 20 (R5)
; dexpon start address is: 0 (R0)
; str start address is: 8 (R2)
0x459C	0x1E51    SUBS	R1, R2, #1
0x459E	0x7809    LDRB	R1, [R1, #0]
0x45A0	0x2930    CMP	R1, #48
0x45A2	0xD101    BNE	L_FloatToStr134
;__Lib_Conversions.c, 711 :: 		
0x45A4	0x1E52    SUBS	R2, R2, #1
0x45A6	0xE7F9    B	L_FloatToStr133
L_FloatToStr134:
;__Lib_Conversions.c, 712 :: 		
0x45A8	0x1E51    SUBS	R1, R2, #1
0x45AA	0x7809    LDRB	R1, [R1, #0]
0x45AC	0x292E    CMP	R1, #46
0x45AE	0xD101    BNE	L__FloatToStr182
;__Lib_Conversions.c, 713 :: 		
0x45B0	0x1E52    SUBS	R2, R2, #1
; str end address is: 8 (R2)
0x45B2	0xE7FF    B	L_FloatToStr135
L__FloatToStr182:
;__Lib_Conversions.c, 712 :: 		
;__Lib_Conversions.c, 713 :: 		
L_FloatToStr135:
;__Lib_Conversions.c, 714 :: 		
; str start address is: 8 (R2)
0x45B4	0xB318    CBZ	R0, L__FloatToStr185
;__Lib_Conversions.c, 715 :: 		
0x45B6	0x2165    MOVS	R1, #101
0x45B8	0x7011    STRB	R1, [R2, #0]
0x45BA	0x1C52    ADDS	R2, R2, #1
;__Lib_Conversions.c, 716 :: 		
0x45BC	0x2800    CMP	R0, #0
0x45BE	0xDA06    BGE	L__FloatToStr183
;__Lib_Conversions.c, 717 :: 		
0x45C0	0x212D    MOVS	R1, #45
0x45C2	0x7011    STRB	R1, [R2, #0]
0x45C4	0x1C52    ADDS	R2, R2, #1
;__Lib_Conversions.c, 718 :: 		
0x45C6	0x4241    RSBS	R1, R0, #0
0x45C8	0xB248    SXTB	R0, R1
; dexpon end address is: 0 (R0)
; str end address is: 8 (R2)
0x45CA	0xB243    SXTB	R3, R0
;__Lib_Conversions.c, 719 :: 		
0x45CC	0xE000    B	L_FloatToStr137
L__FloatToStr183:
;__Lib_Conversions.c, 716 :: 		
0x45CE	0xB243    SXTB	R3, R0
;__Lib_Conversions.c, 719 :: 		
L_FloatToStr137:
;__Lib_Conversions.c, 720 :: 		
; dexpon start address is: 12 (R3)
; str start address is: 8 (R2)
; d start address is: 0 (R0)
0x45D0	0xB2D8    UXTB	R0, R3
;__Lib_Conversions.c, 721 :: 		
0x45D2	0xB2D9    UXTB	R1, R3
; dexpon end address is: 12 (R3)
0x45D4	0x2909    CMP	R1, #9
0x45D6	0xD907    BLS	L__FloatToStr184
;__Lib_Conversions.c, 722 :: 		
0x45D8	0x210A    MOVS	R1, #10
0x45DA	0xFBB0F1F1  UDIV	R1, R0, R1
0x45DE	0xB2C9    UXTB	R1, R1
0x45E0	0x3130    ADDS	R1, #48
0x45E2	0x7011    STRB	R1, [R2, #0]
0x45E4	0x1C53    ADDS	R3, R2, #1
; str end address is: 8 (R2)
; str start address is: 12 (R3)
; str end address is: 12 (R3)
0x45E6	0xE000    B	L_FloatToStr138
L__FloatToStr184:
;__Lib_Conversions.c, 721 :: 		
0x45E8	0x4613    MOV	R3, R2
;__Lib_Conversions.c, 722 :: 		
L_FloatToStr138:
;__Lib_Conversions.c, 723 :: 		
; str start address is: 12 (R3)
0x45EA	0x220A    MOVS	R2, #10
0x45EC	0xFBB0F1F2  UDIV	R1, R0, R2
0x45F0	0xFB020111  MLS	R1, R2, R1, R0
0x45F4	0xB2C9    UXTB	R1, R1
; d end address is: 0 (R0)
0x45F6	0x3130    ADDS	R1, #48
0x45F8	0x7019    STRB	R1, [R3, #0]
0x45FA	0x1C58    ADDS	R0, R3, #1
; str end address is: 12 (R3)
; str start address is: 0 (R0)
; str end address is: 0 (R0)
;__Lib_Conversions.c, 724 :: 		
0x45FC	0xE000    B	L_FloatToStr136
L__FloatToStr185:
;__Lib_Conversions.c, 714 :: 		
0x45FE	0x4610    MOV	R0, R2
;__Lib_Conversions.c, 724 :: 		
L_FloatToStr136:
;__Lib_Conversions.c, 725 :: 		
; str start address is: 0 (R0)
0x4600	0x2100    MOVS	R1, #0
0x4602	0x7001    STRB	R1, [R0, #0]
; str end address is: 0 (R0)
;__Lib_Conversions.c, 726 :: 		
0x4604	0x2000    MOVS	R0, #0
;__Lib_Conversions.c, 727 :: 		
L_end_FloatToStr:
0x4606	0xF8DDE000  LDR	LR, [SP, #0]
0x460A	0xB003    ADD	SP, SP, #12
0x460C	0x4770    BX	LR
0x460E	0xBF00    NOP
0x4610	0x007B2000  	?lstr1___Lib_Conversions+0
0x4614	0x007F2000  	?lstr2___Lib_Conversions+0
0x4618	0x00812000  	?lstr3___Lib_Conversions+0
0x461C	0xCCCD3DCC  	#1036831949
; end of _FloatToStr
_strcpy:
;__Lib_CString.c, 133 :: 		
; from start address is: 4 (R1)
; to start address is: 0 (R0)
0x404C	0xB081    SUB	SP, SP, #4
0x404E	0x9100    STR	R1, [SP, #0]
0x4050	0x4601    MOV	R1, R0
0x4052	0x9800    LDR	R0, [SP, #0]
; from end address is: 4 (R1)
; to end address is: 0 (R0)
; to start address is: 4 (R1)
; from start address is: 0 (R0)
;__Lib_CString.c, 136 :: 		
; cp start address is: 12 (R3)
0x4054	0x460B    MOV	R3, R1
; cp end address is: 12 (R3)
; to end address is: 4 (R1)
;__Lib_CString.c, 137 :: 		
L_strcpy34:
; cp start address is: 20 (R5)
; cp start address is: 12 (R3)
; from start address is: 0 (R0)
; to start address is: 4 (R1)
0x4056	0x461C    MOV	R4, R3
0x4058	0x1C5A    ADDS	R2, R3, #1
; cp end address is: 12 (R3)
; cp start address is: 20 (R5)
0x405A	0x4615    MOV	R5, R2
; cp end address is: 20 (R5)
0x405C	0x4603    MOV	R3, R0
0x405E	0x1C42    ADDS	R2, R0, #1
0x4060	0x4610    MOV	R0, R2
; from end address is: 0 (R0)
0x4062	0x781A    LDRB	R2, [R3, #0]
0x4064	0x7022    STRB	R2, [R4, #0]
0x4066	0x7822    LDRB	R2, [R4, #0]
0x4068	0xB10A    CBZ	R2, L_strcpy35
; cp end address is: 20 (R5)
; from end address is: 0 (R0)
;__Lib_CString.c, 138 :: 		
; from start address is: 0 (R0)
; cp start address is: 20 (R5)
; cp end address is: 20 (R5)
; from end address is: 0 (R0)
0x406A	0x462B    MOV	R3, R5
0x406C	0xE7F3    B	L_strcpy34
L_strcpy35:
;__Lib_CString.c, 139 :: 		
0x406E	0x4608    MOV	R0, R1
; to end address is: 4 (R1)
;__Lib_CString.c, 140 :: 		
L_end_strcpy:
0x4070	0xB001    ADD	SP, SP, #4
0x4072	0x4770    BX	LR
; end of _strcpy
__Lib_System_TIVA_InitialSetUpRCCRCC2:
;__Lib_System_TIVA.c, 318 :: 		
0x486C	0xB081    SUB	SP, SP, #4
0x486E	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_System_TIVA.c, 322 :: 		
; ulRSCLKCFG start address is: 8 (R2)
0x4872	0x4A34    LDR	R2, [PC, #208]
;__Lib_System_TIVA.c, 323 :: 		
; ulMOSCCTL start address is: 12 (R3)
0x4874	0x4B34    LDR	R3, [PC, #208]
;__Lib_System_TIVA.c, 324 :: 		
; ulPLLFREQ0 start address is: 16 (R4)
0x4876	0x4C35    LDR	R4, [PC, #212]
;__Lib_System_TIVA.c, 325 :: 		
; ulPLLFREQ1 start address is: 20 (R5)
0x4878	0x4D35    LDR	R5, [PC, #212]
;__Lib_System_TIVA.c, 326 :: 		
; Fosc_kHz start address is: 24 (R6)
0x487A	0x4E36    LDR	R6, [PC, #216]
;__Lib_System_TIVA.c, 329 :: 		
0x487C	0xF04F1130  MOV	R1, #3145776
0x4880	0x4835    LDR	R0, [PC, #212]
0x4882	0x6001    STR	R1, [R0, #0]
;__Lib_System_TIVA.c, 330 :: 		
0x4884	0x2100    MOVS	R1, #0
0x4886	0x4835    LDR	R0, [PC, #212]
0x4888	0x6001    STR	R1, [R0, #0]
;__Lib_System_TIVA.c, 333 :: 		
0x488A	0xF06F0001  MVN	R0, #1
0x488E	0xEA030100  AND	R1, R3, R0, LSL #0
0x4892	0x4833    LDR	R0, [PC, #204]
0x4894	0x6001    STR	R1, [R0, #0]
;__Lib_System_TIVA.c, 334 :: 		
0x4896	0xF3C300C0  UBFX	R0, R3, #3, #1
0x489A	0xB918    CBNZ	R0, L___Lib_System_TIVA_InitialSetUpRCCRCC228
;__Lib_System_TIVA.c, 337 :: 		
0x489C	0xF7FFFED4  BL	_Delay_10ms+0
;__Lib_System_TIVA.c, 338 :: 		
0x48A0	0xF7FFFED2  BL	_Delay_10ms+0
;__Lib_System_TIVA.c, 339 :: 		
L___Lib_System_TIVA_InitialSetUpRCCRCC228:
;__Lib_System_TIVA.c, 340 :: 		
0x48A4	0xF3C30000  UBFX	R0, R3, #0, #1
; ulMOSCCTL end address is: 12 (R3)
0x48A8	0xB118    CBZ	R0, L___Lib_System_TIVA_InitialSetUpRCCRCC229
;__Lib_System_TIVA.c, 341 :: 		
0x48AA	0x2101    MOVS	R1, #1
0x48AC	0xB249    SXTB	R1, R1
0x48AE	0x482D    LDR	R0, [PC, #180]
0x48B0	0x6001    STR	R1, [R0, #0]
L___Lib_System_TIVA_InitialSetUpRCCRCC229:
;__Lib_System_TIVA.c, 343 :: 		
0x48B2	0x482D    LDR	R0, [PC, #180]
0x48B4	0x4286    CMP	R6, R0
0x48B6	0xD903    BLS	L___Lib_System_TIVA_InitialSetUpRCCRCC230
; Fosc_kHz end address is: 24 (R6)
;__Lib_System_TIVA.c, 344 :: 		
0x48B8	0x492C    LDR	R1, [PC, #176]
0x48BA	0x4827    LDR	R0, [PC, #156]
0x48BC	0x6001    STR	R1, [R0, #0]
0x48BE	0xE021    B	L___Lib_System_TIVA_InitialSetUpRCCRCC231
L___Lib_System_TIVA_InitialSetUpRCCRCC230:
;__Lib_System_TIVA.c, 345 :: 		
; Fosc_kHz start address is: 24 (R6)
0x48C0	0x482B    LDR	R0, [PC, #172]
0x48C2	0x4286    CMP	R6, R0
0x48C4	0xD903    BLS	L___Lib_System_TIVA_InitialSetUpRCCRCC232
; Fosc_kHz end address is: 24 (R6)
;__Lib_System_TIVA.c, 346 :: 		
0x48C6	0x492B    LDR	R1, [PC, #172]
0x48C8	0x4823    LDR	R0, [PC, #140]
0x48CA	0x6001    STR	R1, [R0, #0]
0x48CC	0xE01A    B	L___Lib_System_TIVA_InitialSetUpRCCRCC233
L___Lib_System_TIVA_InitialSetUpRCCRCC232:
;__Lib_System_TIVA.c, 347 :: 		
; Fosc_kHz start address is: 24 (R6)
0x48CE	0xF24C3050  MOVW	R0, #50000
0x48D2	0x4286    CMP	R6, R0
0x48D4	0xD903    BLS	L___Lib_System_TIVA_InitialSetUpRCCRCC234
; Fosc_kHz end address is: 24 (R6)
;__Lib_System_TIVA.c, 348 :: 		
0x48D6	0x4928    LDR	R1, [PC, #160]
0x48D8	0x481F    LDR	R0, [PC, #124]
0x48DA	0x6001    STR	R1, [R0, #0]
0x48DC	0xE012    B	L___Lib_System_TIVA_InitialSetUpRCCRCC235
L___Lib_System_TIVA_InitialSetUpRCCRCC234:
;__Lib_System_TIVA.c, 349 :: 		
; Fosc_kHz start address is: 24 (R6)
0x48DE	0xF2475030  MOVW	R0, #30000
0x48E2	0x4286    CMP	R6, R0
0x48E4	0xD903    BLS	L___Lib_System_TIVA_InitialSetUpRCCRCC236
; Fosc_kHz end address is: 24 (R6)
;__Lib_System_TIVA.c, 350 :: 		
0x48E6	0x4925    LDR	R1, [PC, #148]
0x48E8	0x481B    LDR	R0, [PC, #108]
0x48EA	0x6001    STR	R1, [R0, #0]
0x48EC	0xE00A    B	L___Lib_System_TIVA_InitialSetUpRCCRCC237
L___Lib_System_TIVA_InitialSetUpRCCRCC236:
;__Lib_System_TIVA.c, 351 :: 		
; Fosc_kHz start address is: 24 (R6)
0x48EE	0xF5B65F7A  CMP	R6, #16000
0x48F2	0xD903    BLS	L___Lib_System_TIVA_InitialSetUpRCCRCC238
; Fosc_kHz end address is: 24 (R6)
;__Lib_System_TIVA.c, 352 :: 		
0x48F4	0x4922    LDR	R1, [PC, #136]
0x48F6	0x4818    LDR	R0, [PC, #96]
0x48F8	0x6001    STR	R1, [R0, #0]
0x48FA	0xE003    B	L___Lib_System_TIVA_InitialSetUpRCCRCC239
L___Lib_System_TIVA_InitialSetUpRCCRCC238:
;__Lib_System_TIVA.c, 354 :: 		
0x48FC	0xF04F1130  MOV	R1, #3145776
0x4900	0x4815    LDR	R0, [PC, #84]
0x4902	0x6001    STR	R1, [R0, #0]
L___Lib_System_TIVA_InitialSetUpRCCRCC239:
L___Lib_System_TIVA_InitialSetUpRCCRCC237:
L___Lib_System_TIVA_InitialSetUpRCCRCC235:
L___Lib_System_TIVA_InitialSetUpRCCRCC233:
L___Lib_System_TIVA_InitialSetUpRCCRCC231:
;__Lib_System_TIVA.c, 356 :: 		
0x4904	0x481F    LDR	R0, [PC, #124]
0x4906	0x6004    STR	R4, [R0, #0]
; ulPLLFREQ0 end address is: 16 (R4)
;__Lib_System_TIVA.c, 357 :: 		
0x4908	0x481F    LDR	R0, [PC, #124]
0x490A	0x6005    STR	R5, [R0, #0]
; ulPLLFREQ1 end address is: 20 (R5)
;__Lib_System_TIVA.c, 359 :: 		
0x490C	0xF06F5080  MVN	R0, #268435456
0x4910	0xEA020100  AND	R1, R2, R0, LSL #0
0x4914	0x4811    LDR	R0, [PC, #68]
0x4916	0x6001    STR	R1, [R0, #0]
;__Lib_System_TIVA.c, 361 :: 		
0x4918	0x2101    MOVS	R1, #1
0x491A	0xB249    SXTB	R1, R1
0x491C	0x481B    LDR	R0, [PC, #108]
0x491E	0x6001    STR	R1, [R0, #0]
;__Lib_System_TIVA.c, 362 :: 		
0x4920	0x481B    LDR	R0, [PC, #108]
0x4922	0x6001    STR	R1, [R0, #0]
;__Lib_System_TIVA.c, 364 :: 		
0x4924	0xF0025080  AND	R0, R2, #268435456
; ulRSCLKCFG end address is: 8 (R2)
0x4928	0xB138    CBZ	R0, L___Lib_System_TIVA_InitialSetUpRCCRCC240
;__Lib_System_TIVA.c, 365 :: 		
L___Lib_System_TIVA_InitialSetUpRCCRCC241:
0x492A	0x481A    LDR	R0, [PC, #104]
0x492C	0x6800    LDR	R0, [R0, #0]
0x492E	0xB900    CBNZ	R0, L___Lib_System_TIVA_InitialSetUpRCCRCC242
;__Lib_System_TIVA.c, 366 :: 		
0x4930	0xE7FB    B	L___Lib_System_TIVA_InitialSetUpRCCRCC241
L___Lib_System_TIVA_InitialSetUpRCCRCC242:
;__Lib_System_TIVA.c, 367 :: 		
0x4932	0x2101    MOVS	R1, #1
0x4934	0xB249    SXTB	R1, R1
0x4936	0x4818    LDR	R0, [PC, #96]
0x4938	0x6001    STR	R1, [R0, #0]
;__Lib_System_TIVA.c, 368 :: 		
L___Lib_System_TIVA_InitialSetUpRCCRCC240:
;__Lib_System_TIVA.c, 369 :: 		
L_end_InitialSetUpRCCRCC2:
0x493A	0xF8DDE000  LDR	LR, [SP, #0]
0x493E	0xB001    ADD	SP, SP, #4
0x4940	0x4770    BX	LR
0x4942	0xBF00    NOP
0x4944	0x00043330  	#858783748
0x4948	0x00110000  	#17
0x494C	0x00180080  	#8388632
0x4950	0x00000000  	#0
0x4954	0xD4C00001  	#120000
0x4958	0xE0C0400F  	SYSCTL_MEMTIM0+0
0x495C	0xE0B0400F  	SYSCTL_RSCLKCFG+0
0x4960	0xE07C400F  	SYSCTL_MOSCCTL+0
0x4964	0x0F8043FC  	SYSCTL_MOSCCTL+0
0x4968	0x86A00001  	#100000
0x496C	0x01960030  	#3146134
0x4970	0x38800001  	#80000
0x4974	0x01550030  	#3146069
0x4978	0x00D30030  	#3145939
0x497C	0x00B20030  	#3145906
0x4980	0x00710030  	#3145841
0x4984	0xE160400F  	SYSCTL_PLLFREQ0+0
0x4988	0xE164400F  	SYSCTL_PLLFREQ1+0
0x498C	0x167C43FC  	SYSCTL_RSCLKCFG+0
0x4990	0x167843FC  	SYSCTL_RSCLKCFG+0
0x4994	0x2D0043FC  	SYSCTL_PLLSTAT+0
0x4998	0x167043FC  	SYSCTL_RSCLKCFG+0
; end of __Lib_System_TIVA_InitialSetUpRCCRCC2
_Delay_10ms:
;__Lib_Delays.c, 57 :: 		void Delay_10ms() {
;__Lib_Delays.c, 58 :: 		Delay_ms(10);
0x4648	0xF641277E  MOVW	R7, #6782
0x464C	0xF2C00706  MOVT	R7, #6
L_Delay_10ms22:
0x4650	0x1E7F    SUBS	R7, R7, #1
0x4652	0xD1FD    BNE	L_Delay_10ms22
0x4654	0xBF00    NOP
0x4656	0xBF00    NOP
0x4658	0xBF00    NOP
0x465A	0xBF00    NOP
0x465C	0xBF00    NOP
;__Lib_Delays.c, 59 :: 		}
L_end_Delay_10ms:
0x465E	0x4770    BX	LR
; end of _Delay_10ms
__Lib_System_TIVA_InitialSetUpFosc:
;__Lib_System_TIVA.c, 314 :: 		
0x4858	0xB081    SUB	SP, SP, #4
;__Lib_System_TIVA.c, 315 :: 		
0x485A	0x4902    LDR	R1, [PC, #8]
0x485C	0x4802    LDR	R0, [PC, #8]
0x485E	0x6001    STR	R1, [R0, #0]
;__Lib_System_TIVA.c, 316 :: 		
L_end_InitialSetUpFosc:
0x4860	0xB001    ADD	SP, SP, #4
0x4862	0x4770    BX	LR
0x4864	0xD4C00001  	#120000
0x4868	0x44982000  	___System_CLOCK_IN_KHZ+0
; end of __Lib_System_TIVA_InitialSetUpFosc
___GenExcept:
;__Lib_System_TIVA.c, 281 :: 		
0x4824	0xB081    SUB	SP, SP, #4
;__Lib_System_TIVA.c, 282 :: 		
L___GenExcept24:
;__Lib_System_TIVA.c, 283 :: 		
0x4826	0xE7FE    B	L___GenExcept24
;__Lib_System_TIVA.c, 284 :: 		
L_end___GenExcept:
0x4828	0xB001    ADD	SP, SP, #4
0x482A	0x4770    BX	LR
; end of ___GenExcept
___EnableFPU:
;__Lib_System_TIVA.c, 87 :: 		
0x482C	0xB081    SUB	SP, SP, #4
;__Lib_System_TIVA.c, 90 :: 		
0x482E	0xF64E5088  MOVW	R0, #60808
;__Lib_System_TIVA.c, 91 :: 		
0x4832	0xF2CE0000  MOVT	R0, #57344
;__Lib_System_TIVA.c, 93 :: 		
0x4836	0x6801    LDR	R1, [R0, #0]
;__Lib_System_TIVA.c, 95 :: 		
0x4838	0xF4410170  ORR	R1, R1, #15728640
;__Lib_System_TIVA.c, 97 :: 		
0x483C	0x6001    STR	R1, [R0, #0]
;__Lib_System_TIVA.c, 99 :: 		
0x483E	0xBF00    NOP
;__Lib_System_TIVA.c, 100 :: 		
0x4840	0xBF00    NOP
;__Lib_System_TIVA.c, 101 :: 		
0x4842	0xBF00    NOP
;__Lib_System_TIVA.c, 102 :: 		
0x4844	0xBF00    NOP
;__Lib_System_TIVA.c, 104 :: 		
0x4846	0xEEF10A10  VMRS	R0, FPSCR
;__Lib_System_TIVA.c, 105 :: 		
0x484A	0xF4400040  ORR	R0, R0, #12582912
;__Lib_System_TIVA.c, 106 :: 		
0x484E	0xEEE10A10  VMSR	FPSCR, R0
;__Lib_System_TIVA.c, 107 :: 		
L_end___EnableFPU:
0x4852	0xB001    ADD	SP, SP, #4
0x4854	0x4770    BX	LR
; end of ___EnableFPU
0x5518	0xB500    PUSH	(R14)
0x551A	0xF8DFB024  LDR	R11, [PC, #36]
0x551E	0xF8DFA024  LDR	R10, [PC, #36]
0x5522	0xF8DFC024  LDR	R12, [PC, #36]
0x5526	0xF7FFF973  BL	18448
0x552A	0xF8DFB020  LDR	R11, [PC, #32]
0x552E	0xF8DFA020  LDR	R10, [PC, #32]
0x5532	0xF8DFC020  LDR	R12, [PC, #32]
0x5536	0xF7FFF96B  BL	18448
0x553A	0xBD00    POP	(R15)
0x553C	0x4770    BX	LR
0x553E	0xBF00    NOP
0x5540	0x00002000  	#536870912
0x5544	0x00852000  	#536871045
0x5548	0x53B00000  	#21424
0x554C	0x00882000  	#536871048
0x5550	0x00B02000  	#536871088
0x5554	0x54980000  	#21656
0x55B4	0xB500    PUSH	(R14)
0x55B6	0xF8DFB010  LDR	R11, [PC, #16]
0x55BA	0xF8DFA010  LDR	R10, [PC, #16]
0x55BE	0xF7FFF84F  BL	18016
0x55C2	0xBD00    POP	(R15)
0x55C4	0x4770    BX	LR
0x55C6	0xBF00    NOP
0x55C8	0x00002000  	#536870912
0x55CC	0x44E82000  	#536888552
;Click_IR_Grid2_TIVA.c,3 :: __IRGRID2_I2C_CFG [4]
0x1394	0x000186A0 ;__IRGRID2_I2C_CFG+0
; end of __IRGRID2_I2C_CFG
;__irgrid2_driver.c,0 :: ?ICSirgrid2_readData_readReg_L0 [1664]
0x49C0	0x00000000 ;?ICSirgrid2_readData_readReg_L0+0
0x49C4	0x00000000 ;?ICSirgrid2_readData_readReg_L0+4
0x49C8	0x00000000 ;?ICSirgrid2_readData_readReg_L0+8
0x49CC	0x00000000 ;?ICSirgrid2_readData_readReg_L0+12
0x49D0	0x00000000 ;?ICSirgrid2_readData_readReg_L0+16
0x49D4	0x00000000 ;?ICSirgrid2_readData_readReg_L0+20
0x49D8	0x00000000 ;?ICSirgrid2_readData_readReg_L0+24
0x49DC	0x00000000 ;?ICSirgrid2_readData_readReg_L0+28
0x49E0	0x00000000 ;?ICSirgrid2_readData_readReg_L0+32
0x49E4	0x00000000 ;?ICSirgrid2_readData_readReg_L0+36
0x49E8	0x00000000 ;?ICSirgrid2_readData_readReg_L0+40
0x49EC	0x00000000 ;?ICSirgrid2_readData_readReg_L0+44
0x49F0	0x00000000 ;?ICSirgrid2_readData_readReg_L0+48
0x49F4	0x00000000 ;?ICSirgrid2_readData_readReg_L0+52
0x49F8	0x00000000 ;?ICSirgrid2_readData_readReg_L0+56
0x49FC	0x00000000 ;?ICSirgrid2_readData_readReg_L0+60
0x4A00	0x00000000 ;?ICSirgrid2_readData_readReg_L0+64
0x4A04	0x00000000 ;?ICSirgrid2_readData_readReg_L0+68
0x4A08	0x00000000 ;?ICSirgrid2_readData_readReg_L0+72
0x4A0C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+76
0x4A10	0x00000000 ;?ICSirgrid2_readData_readReg_L0+80
0x4A14	0x00000000 ;?ICSirgrid2_readData_readReg_L0+84
0x4A18	0x00000000 ;?ICSirgrid2_readData_readReg_L0+88
0x4A1C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+92
0x4A20	0x00000000 ;?ICSirgrid2_readData_readReg_L0+96
0x4A24	0x00000000 ;?ICSirgrid2_readData_readReg_L0+100
0x4A28	0x00000000 ;?ICSirgrid2_readData_readReg_L0+104
0x4A2C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+108
0x4A30	0x00000000 ;?ICSirgrid2_readData_readReg_L0+112
0x4A34	0x00000000 ;?ICSirgrid2_readData_readReg_L0+116
0x4A38	0x00000000 ;?ICSirgrid2_readData_readReg_L0+120
0x4A3C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+124
0x4A40	0x00000000 ;?ICSirgrid2_readData_readReg_L0+128
0x4A44	0x00000000 ;?ICSirgrid2_readData_readReg_L0+132
0x4A48	0x00000000 ;?ICSirgrid2_readData_readReg_L0+136
0x4A4C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+140
0x4A50	0x00000000 ;?ICSirgrid2_readData_readReg_L0+144
0x4A54	0x00000000 ;?ICSirgrid2_readData_readReg_L0+148
0x4A58	0x00000000 ;?ICSirgrid2_readData_readReg_L0+152
0x4A5C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+156
0x4A60	0x00000000 ;?ICSirgrid2_readData_readReg_L0+160
0x4A64	0x00000000 ;?ICSirgrid2_readData_readReg_L0+164
0x4A68	0x00000000 ;?ICSirgrid2_readData_readReg_L0+168
0x4A6C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+172
0x4A70	0x00000000 ;?ICSirgrid2_readData_readReg_L0+176
0x4A74	0x00000000 ;?ICSirgrid2_readData_readReg_L0+180
0x4A78	0x00000000 ;?ICSirgrid2_readData_readReg_L0+184
0x4A7C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+188
0x4A80	0x00000000 ;?ICSirgrid2_readData_readReg_L0+192
0x4A84	0x00000000 ;?ICSirgrid2_readData_readReg_L0+196
0x4A88	0x00000000 ;?ICSirgrid2_readData_readReg_L0+200
0x4A8C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+204
0x4A90	0x00000000 ;?ICSirgrid2_readData_readReg_L0+208
0x4A94	0x00000000 ;?ICSirgrid2_readData_readReg_L0+212
0x4A98	0x00000000 ;?ICSirgrid2_readData_readReg_L0+216
0x4A9C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+220
0x4AA0	0x00000000 ;?ICSirgrid2_readData_readReg_L0+224
0x4AA4	0x00000000 ;?ICSirgrid2_readData_readReg_L0+228
0x4AA8	0x00000000 ;?ICSirgrid2_readData_readReg_L0+232
0x4AAC	0x00000000 ;?ICSirgrid2_readData_readReg_L0+236
0x4AB0	0x00000000 ;?ICSirgrid2_readData_readReg_L0+240
0x4AB4	0x00000000 ;?ICSirgrid2_readData_readReg_L0+244
0x4AB8	0x00000000 ;?ICSirgrid2_readData_readReg_L0+248
0x4ABC	0x00000000 ;?ICSirgrid2_readData_readReg_L0+252
0x4AC0	0x00000000 ;?ICSirgrid2_readData_readReg_L0+256
0x4AC4	0x00000000 ;?ICSirgrid2_readData_readReg_L0+260
0x4AC8	0x00000000 ;?ICSirgrid2_readData_readReg_L0+264
0x4ACC	0x00000000 ;?ICSirgrid2_readData_readReg_L0+268
0x4AD0	0x00000000 ;?ICSirgrid2_readData_readReg_L0+272
0x4AD4	0x00000000 ;?ICSirgrid2_readData_readReg_L0+276
0x4AD8	0x00000000 ;?ICSirgrid2_readData_readReg_L0+280
0x4ADC	0x00000000 ;?ICSirgrid2_readData_readReg_L0+284
0x4AE0	0x00000000 ;?ICSirgrid2_readData_readReg_L0+288
0x4AE4	0x00000000 ;?ICSirgrid2_readData_readReg_L0+292
0x4AE8	0x00000000 ;?ICSirgrid2_readData_readReg_L0+296
0x4AEC	0x00000000 ;?ICSirgrid2_readData_readReg_L0+300
0x4AF0	0x00000000 ;?ICSirgrid2_readData_readReg_L0+304
0x4AF4	0x00000000 ;?ICSirgrid2_readData_readReg_L0+308
0x4AF8	0x00000000 ;?ICSirgrid2_readData_readReg_L0+312
0x4AFC	0x00000000 ;?ICSirgrid2_readData_readReg_L0+316
0x4B00	0x00000000 ;?ICSirgrid2_readData_readReg_L0+320
0x4B04	0x00000000 ;?ICSirgrid2_readData_readReg_L0+324
0x4B08	0x00000000 ;?ICSirgrid2_readData_readReg_L0+328
0x4B0C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+332
0x4B10	0x00000000 ;?ICSirgrid2_readData_readReg_L0+336
0x4B14	0x00000000 ;?ICSirgrid2_readData_readReg_L0+340
0x4B18	0x00000000 ;?ICSirgrid2_readData_readReg_L0+344
0x4B1C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+348
0x4B20	0x00000000 ;?ICSirgrid2_readData_readReg_L0+352
0x4B24	0x00000000 ;?ICSirgrid2_readData_readReg_L0+356
0x4B28	0x00000000 ;?ICSirgrid2_readData_readReg_L0+360
0x4B2C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+364
0x4B30	0x00000000 ;?ICSirgrid2_readData_readReg_L0+368
0x4B34	0x00000000 ;?ICSirgrid2_readData_readReg_L0+372
0x4B38	0x00000000 ;?ICSirgrid2_readData_readReg_L0+376
0x4B3C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+380
0x4B40	0x00000000 ;?ICSirgrid2_readData_readReg_L0+384
0x4B44	0x00000000 ;?ICSirgrid2_readData_readReg_L0+388
0x4B48	0x00000000 ;?ICSirgrid2_readData_readReg_L0+392
0x4B4C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+396
0x4B50	0x00000000 ;?ICSirgrid2_readData_readReg_L0+400
0x4B54	0x00000000 ;?ICSirgrid2_readData_readReg_L0+404
0x4B58	0x00000000 ;?ICSirgrid2_readData_readReg_L0+408
0x4B5C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+412
0x4B60	0x00000000 ;?ICSirgrid2_readData_readReg_L0+416
0x4B64	0x00000000 ;?ICSirgrid2_readData_readReg_L0+420
0x4B68	0x00000000 ;?ICSirgrid2_readData_readReg_L0+424
0x4B6C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+428
0x4B70	0x00000000 ;?ICSirgrid2_readData_readReg_L0+432
0x4B74	0x00000000 ;?ICSirgrid2_readData_readReg_L0+436
0x4B78	0x00000000 ;?ICSirgrid2_readData_readReg_L0+440
0x4B7C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+444
0x4B80	0x00000000 ;?ICSirgrid2_readData_readReg_L0+448
0x4B84	0x00000000 ;?ICSirgrid2_readData_readReg_L0+452
0x4B88	0x00000000 ;?ICSirgrid2_readData_readReg_L0+456
0x4B8C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+460
0x4B90	0x00000000 ;?ICSirgrid2_readData_readReg_L0+464
0x4B94	0x00000000 ;?ICSirgrid2_readData_readReg_L0+468
0x4B98	0x00000000 ;?ICSirgrid2_readData_readReg_L0+472
0x4B9C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+476
0x4BA0	0x00000000 ;?ICSirgrid2_readData_readReg_L0+480
0x4BA4	0x00000000 ;?ICSirgrid2_readData_readReg_L0+484
0x4BA8	0x00000000 ;?ICSirgrid2_readData_readReg_L0+488
0x4BAC	0x00000000 ;?ICSirgrid2_readData_readReg_L0+492
0x4BB0	0x00000000 ;?ICSirgrid2_readData_readReg_L0+496
0x4BB4	0x00000000 ;?ICSirgrid2_readData_readReg_L0+500
0x4BB8	0x00000000 ;?ICSirgrid2_readData_readReg_L0+504
0x4BBC	0x00000000 ;?ICSirgrid2_readData_readReg_L0+508
0x4BC0	0x00000000 ;?ICSirgrid2_readData_readReg_L0+512
0x4BC4	0x00000000 ;?ICSirgrid2_readData_readReg_L0+516
0x4BC8	0x00000000 ;?ICSirgrid2_readData_readReg_L0+520
0x4BCC	0x00000000 ;?ICSirgrid2_readData_readReg_L0+524
0x4BD0	0x00000000 ;?ICSirgrid2_readData_readReg_L0+528
0x4BD4	0x00000000 ;?ICSirgrid2_readData_readReg_L0+532
0x4BD8	0x00000000 ;?ICSirgrid2_readData_readReg_L0+536
0x4BDC	0x00000000 ;?ICSirgrid2_readData_readReg_L0+540
0x4BE0	0x00000000 ;?ICSirgrid2_readData_readReg_L0+544
0x4BE4	0x00000000 ;?ICSirgrid2_readData_readReg_L0+548
0x4BE8	0x00000000 ;?ICSirgrid2_readData_readReg_L0+552
0x4BEC	0x00000000 ;?ICSirgrid2_readData_readReg_L0+556
0x4BF0	0x00000000 ;?ICSirgrid2_readData_readReg_L0+560
0x4BF4	0x00000000 ;?ICSirgrid2_readData_readReg_L0+564
0x4BF8	0x00000000 ;?ICSirgrid2_readData_readReg_L0+568
0x4BFC	0x00000000 ;?ICSirgrid2_readData_readReg_L0+572
0x4C00	0x00000000 ;?ICSirgrid2_readData_readReg_L0+576
0x4C04	0x00000000 ;?ICSirgrid2_readData_readReg_L0+580
0x4C08	0x00000000 ;?ICSirgrid2_readData_readReg_L0+584
0x4C0C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+588
0x4C10	0x00000000 ;?ICSirgrid2_readData_readReg_L0+592
0x4C14	0x00000000 ;?ICSirgrid2_readData_readReg_L0+596
0x4C18	0x00000000 ;?ICSirgrid2_readData_readReg_L0+600
0x4C1C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+604
0x4C20	0x00000000 ;?ICSirgrid2_readData_readReg_L0+608
0x4C24	0x00000000 ;?ICSirgrid2_readData_readReg_L0+612
0x4C28	0x00000000 ;?ICSirgrid2_readData_readReg_L0+616
0x4C2C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+620
0x4C30	0x00000000 ;?ICSirgrid2_readData_readReg_L0+624
0x4C34	0x00000000 ;?ICSirgrid2_readData_readReg_L0+628
0x4C38	0x00000000 ;?ICSirgrid2_readData_readReg_L0+632
0x4C3C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+636
0x4C40	0x00000000 ;?ICSirgrid2_readData_readReg_L0+640
0x4C44	0x00000000 ;?ICSirgrid2_readData_readReg_L0+644
0x4C48	0x00000000 ;?ICSirgrid2_readData_readReg_L0+648
0x4C4C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+652
0x4C50	0x00000000 ;?ICSirgrid2_readData_readReg_L0+656
0x4C54	0x00000000 ;?ICSirgrid2_readData_readReg_L0+660
0x4C58	0x00000000 ;?ICSirgrid2_readData_readReg_L0+664
0x4C5C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+668
0x4C60	0x00000000 ;?ICSirgrid2_readData_readReg_L0+672
0x4C64	0x00000000 ;?ICSirgrid2_readData_readReg_L0+676
0x4C68	0x00000000 ;?ICSirgrid2_readData_readReg_L0+680
0x4C6C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+684
0x4C70	0x00000000 ;?ICSirgrid2_readData_readReg_L0+688
0x4C74	0x00000000 ;?ICSirgrid2_readData_readReg_L0+692
0x4C78	0x00000000 ;?ICSirgrid2_readData_readReg_L0+696
0x4C7C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+700
0x4C80	0x00000000 ;?ICSirgrid2_readData_readReg_L0+704
0x4C84	0x00000000 ;?ICSirgrid2_readData_readReg_L0+708
0x4C88	0x00000000 ;?ICSirgrid2_readData_readReg_L0+712
0x4C8C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+716
0x4C90	0x00000000 ;?ICSirgrid2_readData_readReg_L0+720
0x4C94	0x00000000 ;?ICSirgrid2_readData_readReg_L0+724
0x4C98	0x00000000 ;?ICSirgrid2_readData_readReg_L0+728
0x4C9C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+732
0x4CA0	0x00000000 ;?ICSirgrid2_readData_readReg_L0+736
0x4CA4	0x00000000 ;?ICSirgrid2_readData_readReg_L0+740
0x4CA8	0x00000000 ;?ICSirgrid2_readData_readReg_L0+744
0x4CAC	0x00000000 ;?ICSirgrid2_readData_readReg_L0+748
0x4CB0	0x00000000 ;?ICSirgrid2_readData_readReg_L0+752
0x4CB4	0x00000000 ;?ICSirgrid2_readData_readReg_L0+756
0x4CB8	0x00000000 ;?ICSirgrid2_readData_readReg_L0+760
0x4CBC	0x00000000 ;?ICSirgrid2_readData_readReg_L0+764
0x4CC0	0x00000000 ;?ICSirgrid2_readData_readReg_L0+768
0x4CC4	0x00000000 ;?ICSirgrid2_readData_readReg_L0+772
0x4CC8	0x00000000 ;?ICSirgrid2_readData_readReg_L0+776
0x4CCC	0x00000000 ;?ICSirgrid2_readData_readReg_L0+780
0x4CD0	0x00000000 ;?ICSirgrid2_readData_readReg_L0+784
0x4CD4	0x00000000 ;?ICSirgrid2_readData_readReg_L0+788
0x4CD8	0x00000000 ;?ICSirgrid2_readData_readReg_L0+792
0x4CDC	0x00000000 ;?ICSirgrid2_readData_readReg_L0+796
0x4CE0	0x00000000 ;?ICSirgrid2_readData_readReg_L0+800
0x4CE4	0x00000000 ;?ICSirgrid2_readData_readReg_L0+804
0x4CE8	0x00000000 ;?ICSirgrid2_readData_readReg_L0+808
0x4CEC	0x00000000 ;?ICSirgrid2_readData_readReg_L0+812
0x4CF0	0x00000000 ;?ICSirgrid2_readData_readReg_L0+816
0x4CF4	0x00000000 ;?ICSirgrid2_readData_readReg_L0+820
0x4CF8	0x00000000 ;?ICSirgrid2_readData_readReg_L0+824
0x4CFC	0x00000000 ;?ICSirgrid2_readData_readReg_L0+828
0x4D00	0x00000000 ;?ICSirgrid2_readData_readReg_L0+832
0x4D04	0x00000000 ;?ICSirgrid2_readData_readReg_L0+836
0x4D08	0x00000000 ;?ICSirgrid2_readData_readReg_L0+840
0x4D0C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+844
0x4D10	0x00000000 ;?ICSirgrid2_readData_readReg_L0+848
0x4D14	0x00000000 ;?ICSirgrid2_readData_readReg_L0+852
0x4D18	0x00000000 ;?ICSirgrid2_readData_readReg_L0+856
0x4D1C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+860
0x4D20	0x00000000 ;?ICSirgrid2_readData_readReg_L0+864
0x4D24	0x00000000 ;?ICSirgrid2_readData_readReg_L0+868
0x4D28	0x00000000 ;?ICSirgrid2_readData_readReg_L0+872
0x4D2C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+876
0x4D30	0x00000000 ;?ICSirgrid2_readData_readReg_L0+880
0x4D34	0x00000000 ;?ICSirgrid2_readData_readReg_L0+884
0x4D38	0x00000000 ;?ICSirgrid2_readData_readReg_L0+888
0x4D3C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+892
0x4D40	0x00000000 ;?ICSirgrid2_readData_readReg_L0+896
0x4D44	0x00000000 ;?ICSirgrid2_readData_readReg_L0+900
0x4D48	0x00000000 ;?ICSirgrid2_readData_readReg_L0+904
0x4D4C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+908
0x4D50	0x00000000 ;?ICSirgrid2_readData_readReg_L0+912
0x4D54	0x00000000 ;?ICSirgrid2_readData_readReg_L0+916
0x4D58	0x00000000 ;?ICSirgrid2_readData_readReg_L0+920
0x4D5C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+924
0x4D60	0x00000000 ;?ICSirgrid2_readData_readReg_L0+928
0x4D64	0x00000000 ;?ICSirgrid2_readData_readReg_L0+932
0x4D68	0x00000000 ;?ICSirgrid2_readData_readReg_L0+936
0x4D6C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+940
0x4D70	0x00000000 ;?ICSirgrid2_readData_readReg_L0+944
0x4D74	0x00000000 ;?ICSirgrid2_readData_readReg_L0+948
0x4D78	0x00000000 ;?ICSirgrid2_readData_readReg_L0+952
0x4D7C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+956
0x4D80	0x00000000 ;?ICSirgrid2_readData_readReg_L0+960
0x4D84	0x00000000 ;?ICSirgrid2_readData_readReg_L0+964
0x4D88	0x00000000 ;?ICSirgrid2_readData_readReg_L0+968
0x4D8C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+972
0x4D90	0x00000000 ;?ICSirgrid2_readData_readReg_L0+976
0x4D94	0x00000000 ;?ICSirgrid2_readData_readReg_L0+980
0x4D98	0x00000000 ;?ICSirgrid2_readData_readReg_L0+984
0x4D9C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+988
0x4DA0	0x00000000 ;?ICSirgrid2_readData_readReg_L0+992
0x4DA4	0x00000000 ;?ICSirgrid2_readData_readReg_L0+996
0x4DA8	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1000
0x4DAC	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1004
0x4DB0	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1008
0x4DB4	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1012
0x4DB8	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1016
0x4DBC	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1020
0x4DC0	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1024
0x4DC4	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1028
0x4DC8	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1032
0x4DCC	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1036
0x4DD0	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1040
0x4DD4	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1044
0x4DD8	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1048
0x4DDC	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1052
0x4DE0	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1056
0x4DE4	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1060
0x4DE8	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1064
0x4DEC	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1068
0x4DF0	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1072
0x4DF4	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1076
0x4DF8	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1080
0x4DFC	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1084
0x4E00	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1088
0x4E04	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1092
0x4E08	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1096
0x4E0C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1100
0x4E10	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1104
0x4E14	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1108
0x4E18	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1112
0x4E1C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1116
0x4E20	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1120
0x4E24	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1124
0x4E28	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1128
0x4E2C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1132
0x4E30	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1136
0x4E34	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1140
0x4E38	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1144
0x4E3C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1148
0x4E40	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1152
0x4E44	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1156
0x4E48	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1160
0x4E4C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1164
0x4E50	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1168
0x4E54	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1172
0x4E58	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1176
0x4E5C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1180
0x4E60	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1184
0x4E64	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1188
0x4E68	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1192
0x4E6C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1196
0x4E70	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1200
0x4E74	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1204
0x4E78	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1208
0x4E7C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1212
0x4E80	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1216
0x4E84	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1220
0x4E88	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1224
0x4E8C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1228
0x4E90	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1232
0x4E94	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1236
0x4E98	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1240
0x4E9C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1244
0x4EA0	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1248
0x4EA4	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1252
0x4EA8	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1256
0x4EAC	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1260
0x4EB0	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1264
0x4EB4	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1268
0x4EB8	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1272
0x4EBC	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1276
0x4EC0	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1280
0x4EC4	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1284
0x4EC8	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1288
0x4ECC	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1292
0x4ED0	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1296
0x4ED4	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1300
0x4ED8	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1304
0x4EDC	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1308
0x4EE0	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1312
0x4EE4	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1316
0x4EE8	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1320
0x4EEC	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1324
0x4EF0	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1328
0x4EF4	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1332
0x4EF8	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1336
0x4EFC	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1340
0x4F00	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1344
0x4F04	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1348
0x4F08	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1352
0x4F0C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1356
0x4F10	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1360
0x4F14	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1364
0x4F18	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1368
0x4F1C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1372
0x4F20	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1376
0x4F24	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1380
0x4F28	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1384
0x4F2C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1388
0x4F30	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1392
0x4F34	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1396
0x4F38	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1400
0x4F3C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1404
0x4F40	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1408
0x4F44	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1412
0x4F48	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1416
0x4F4C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1420
0x4F50	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1424
0x4F54	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1428
0x4F58	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1432
0x4F5C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1436
0x4F60	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1440
0x4F64	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1444
0x4F68	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1448
0x4F6C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1452
0x4F70	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1456
0x4F74	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1460
0x4F78	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1464
0x4F7C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1468
0x4F80	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1472
0x4F84	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1476
0x4F88	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1480
0x4F8C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1484
0x4F90	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1488
0x4F94	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1492
0x4F98	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1496
0x4F9C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1500
0x4FA0	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1504
0x4FA4	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1508
0x4FA8	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1512
0x4FAC	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1516
0x4FB0	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1520
0x4FB4	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1524
0x4FB8	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1528
0x4FBC	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1532
0x4FC0	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1536
0x4FC4	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1540
0x4FC8	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1544
0x4FCC	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1548
0x4FD0	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1552
0x4FD4	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1556
0x4FD8	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1560
0x4FDC	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1564
0x4FE0	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1568
0x4FE4	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1572
0x4FE8	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1576
0x4FEC	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1580
0x4FF0	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1584
0x4FF4	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1588
0x4FF8	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1592
0x4FFC	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1596
0x5000	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1600
0x5004	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1604
0x5008	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1608
0x500C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1612
0x5010	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1616
0x5014	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1620
0x5018	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1624
0x501C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1628
0x5020	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1632
0x5024	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1636
0x5028	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1640
0x502C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1644
0x5030	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1648
0x5034	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1652
0x5038	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1656
0x503C	0x00000000 ;?ICSirgrid2_readData_readReg_L0+1660
; end of ?ICSirgrid2_readData_readReg_L0
;__Lib_GPIO_6_Defs.c,268 :: __GPIO_MODULE_UART5_H67_AHB [220]
0x5040	0x4005F000 ;__GPIO_MODULE_UART5_H67_AHB+0
0x5044	0x05400040 ;__GPIO_MODULE_UART5_H67_AHB+4
0x5048	0x00000001 ;__GPIO_MODULE_UART5_H67_AHB+8
0x504C	0x4005F000 ;__GPIO_MODULE_UART5_H67_AHB+12
0x5050	0x05400080 ;__GPIO_MODULE_UART5_H67_AHB+16
0x5054	0x00000001 ;__GPIO_MODULE_UART5_H67_AHB+20
0x5058	0x00000000 ;__GPIO_MODULE_UART5_H67_AHB+24
0x505C	0x00000000 ;__GPIO_MODULE_UART5_H67_AHB+28
0x5060	0x00000000 ;__GPIO_MODULE_UART5_H67_AHB+32
0x5064	0x00000000 ;__GPIO_MODULE_UART5_H67_AHB+36
0x5068	0x00000000 ;__GPIO_MODULE_UART5_H67_AHB+40
0x506C	0x00000000 ;__GPIO_MODULE_UART5_H67_AHB+44
0x5070	0x00000000 ;__GPIO_MODULE_UART5_H67_AHB+48
0x5074	0x00000000 ;__GPIO_MODULE_UART5_H67_AHB+52
0x5078	0x00000000 ;__GPIO_MODULE_UART5_H67_AHB+56
0x507C	0x00000000 ;__GPIO_MODULE_UART5_H67_AHB+60
0x5080	0x00000000 ;__GPIO_MODULE_UART5_H67_AHB+64
0x5084	0x00000000 ;__GPIO_MODULE_UART5_H67_AHB+68
0x5088	0x00000000 ;__GPIO_MODULE_UART5_H67_AHB+72
0x508C	0x00000000 ;__GPIO_MODULE_UART5_H67_AHB+76
0x5090	0x00000000 ;__GPIO_MODULE_UART5_H67_AHB+80
0x5094	0x00000000 ;__GPIO_MODULE_UART5_H67_AHB+84
0x5098	0x00000000 ;__GPIO_MODULE_UART5_H67_AHB+88
0x509C	0x00000000 ;__GPIO_MODULE_UART5_H67_AHB+92
0x50A0	0x00000000 ;__GPIO_MODULE_UART5_H67_AHB+96
0x50A4	0x00000000 ;__GPIO_MODULE_UART5_H67_AHB+100
0x50A8	0x00000000 ;__GPIO_MODULE_UART5_H67_AHB+104
0x50AC	0x00000000 ;__GPIO_MODULE_UART5_H67_AHB+108
0x50B0	0x00000000 ;__GPIO_MODULE_UART5_H67_AHB+112
0x50B4	0x00000000 ;__GPIO_MODULE_UART5_H67_AHB+116
0x50B8	0x00000000 ;__GPIO_MODULE_UART5_H67_AHB+120
0x50BC	0x00000000 ;__GPIO_MODULE_UART5_H67_AHB+124
0x50C0	0x00000000 ;__GPIO_MODULE_UART5_H67_AHB+128
0x50C4	0x00000000 ;__GPIO_MODULE_UART5_H67_AHB+132
0x50C8	0x00000000 ;__GPIO_MODULE_UART5_H67_AHB+136
0x50CC	0x00000000 ;__GPIO_MODULE_UART5_H67_AHB+140
0x50D0	0x00000000 ;__GPIO_MODULE_UART5_H67_AHB+144
0x50D4	0x00000000 ;__GPIO_MODULE_UART5_H67_AHB+148
0x50D8	0x00000000 ;__GPIO_MODULE_UART5_H67_AHB+152
0x50DC	0x00000000 ;__GPIO_MODULE_UART5_H67_AHB+156
0x50E0	0x00000000 ;__GPIO_MODULE_UART5_H67_AHB+160
0x50E4	0x00000000 ;__GPIO_MODULE_UART5_H67_AHB+164
0x50E8	0x00000000 ;__GPIO_MODULE_UART5_H67_AHB+168
0x50EC	0x00000000 ;__GPIO_MODULE_UART5_H67_AHB+172
0x50F0	0x00000000 ;__GPIO_MODULE_UART5_H67_AHB+176
0x50F4	0x00000000 ;__GPIO_MODULE_UART5_H67_AHB+180
0x50F8	0x00000000 ;__GPIO_MODULE_UART5_H67_AHB+184
0x50FC	0x00000000 ;__GPIO_MODULE_UART5_H67_AHB+188
0x5100	0x00000000 ;__GPIO_MODULE_UART5_H67_AHB+192
0x5104	0x00000000 ;__GPIO_MODULE_UART5_H67_AHB+196
0x5108	0x00000000 ;__GPIO_MODULE_UART5_H67_AHB+200
0x510C	0x00000000 ;__GPIO_MODULE_UART5_H67_AHB+204
0x5110	0x00000000 ;__GPIO_MODULE_UART5_H67_AHB+208
0x5114	0x00000000 ;__GPIO_MODULE_UART5_H67_AHB+212
0x5118	0x00000002 ;__GPIO_MODULE_UART5_H67_AHB+216
; end of __GPIO_MODULE_UART5_H67_AHB
;__Lib_GPIO_6_Defs.c,266 :: __GPIO_MODULE_UART2_D45_AHB [220]
0x511C	0x4005B000 ;__GPIO_MODULE_UART2_D45_AHB+0
0x5120	0x05400010 ;__GPIO_MODULE_UART2_D45_AHB+4
0x5124	0x00000001 ;__GPIO_MODULE_UART2_D45_AHB+8
0x5128	0x4005B000 ;__GPIO_MODULE_UART2_D45_AHB+12
0x512C	0x05400020 ;__GPIO_MODULE_UART2_D45_AHB+16
0x5130	0x00000001 ;__GPIO_MODULE_UART2_D45_AHB+20
0x5134	0x00000000 ;__GPIO_MODULE_UART2_D45_AHB+24
0x5138	0x00000000 ;__GPIO_MODULE_UART2_D45_AHB+28
0x513C	0x00000000 ;__GPIO_MODULE_UART2_D45_AHB+32
0x5140	0x00000000 ;__GPIO_MODULE_UART2_D45_AHB+36
0x5144	0x00000000 ;__GPIO_MODULE_UART2_D45_AHB+40
0x5148	0x00000000 ;__GPIO_MODULE_UART2_D45_AHB+44
0x514C	0x00000000 ;__GPIO_MODULE_UART2_D45_AHB+48
0x5150	0x00000000 ;__GPIO_MODULE_UART2_D45_AHB+52
0x5154	0x00000000 ;__GPIO_MODULE_UART2_D45_AHB+56
0x5158	0x00000000 ;__GPIO_MODULE_UART2_D45_AHB+60
0x515C	0x00000000 ;__GPIO_MODULE_UART2_D45_AHB+64
0x5160	0x00000000 ;__GPIO_MODULE_UART2_D45_AHB+68
0x5164	0x00000000 ;__GPIO_MODULE_UART2_D45_AHB+72
0x5168	0x00000000 ;__GPIO_MODULE_UART2_D45_AHB+76
0x516C	0x00000000 ;__GPIO_MODULE_UART2_D45_AHB+80
0x5170	0x00000000 ;__GPIO_MODULE_UART2_D45_AHB+84
0x5174	0x00000000 ;__GPIO_MODULE_UART2_D45_AHB+88
0x5178	0x00000000 ;__GPIO_MODULE_UART2_D45_AHB+92
0x517C	0x00000000 ;__GPIO_MODULE_UART2_D45_AHB+96
0x5180	0x00000000 ;__GPIO_MODULE_UART2_D45_AHB+100
0x5184	0x00000000 ;__GPIO_MODULE_UART2_D45_AHB+104
0x5188	0x00000000 ;__GPIO_MODULE_UART2_D45_AHB+108
0x518C	0x00000000 ;__GPIO_MODULE_UART2_D45_AHB+112
0x5190	0x00000000 ;__GPIO_MODULE_UART2_D45_AHB+116
0x5194	0x00000000 ;__GPIO_MODULE_UART2_D45_AHB+120
0x5198	0x00000000 ;__GPIO_MODULE_UART2_D45_AHB+124
0x519C	0x00000000 ;__GPIO_MODULE_UART2_D45_AHB+128
0x51A0	0x00000000 ;__GPIO_MODULE_UART2_D45_AHB+132
0x51A4	0x00000000 ;__GPIO_MODULE_UART2_D45_AHB+136
0x51A8	0x00000000 ;__GPIO_MODULE_UART2_D45_AHB+140
0x51AC	0x00000000 ;__GPIO_MODULE_UART2_D45_AHB+144
0x51B0	0x00000000 ;__GPIO_MODULE_UART2_D45_AHB+148
0x51B4	0x00000000 ;__GPIO_MODULE_UART2_D45_AHB+152
0x51B8	0x00000000 ;__GPIO_MODULE_UART2_D45_AHB+156
0x51BC	0x00000000 ;__GPIO_MODULE_UART2_D45_AHB+160
0x51C0	0x00000000 ;__GPIO_MODULE_UART2_D45_AHB+164
0x51C4	0x00000000 ;__GPIO_MODULE_UART2_D45_AHB+168
0x51C8	0x00000000 ;__GPIO_MODULE_UART2_D45_AHB+172
0x51CC	0x00000000 ;__GPIO_MODULE_UART2_D45_AHB+176
0x51D0	0x00000000 ;__GPIO_MODULE_UART2_D45_AHB+180
0x51D4	0x00000000 ;__GPIO_MODULE_UART2_D45_AHB+184
0x51D8	0x00000000 ;__GPIO_MODULE_UART2_D45_AHB+188
0x51DC	0x00000000 ;__GPIO_MODULE_UART2_D45_AHB+192
0x51E0	0x00000000 ;__GPIO_MODULE_UART2_D45_AHB+196
0x51E4	0x00000000 ;__GPIO_MODULE_UART2_D45_AHB+200
0x51E8	0x00000000 ;__GPIO_MODULE_UART2_D45_AHB+204
0x51EC	0x00000000 ;__GPIO_MODULE_UART2_D45_AHB+208
0x51F0	0x00000000 ;__GPIO_MODULE_UART2_D45_AHB+212
0x51F4	0x00000002 ;__GPIO_MODULE_UART2_D45_AHB+216
; end of __GPIO_MODULE_UART2_D45_AHB
;__Lib_GPIO_6_Defs.c,189 :: __GPIO_MODULE_I2C0_B23_AHB [220]
0x51F8	0x40059000 ;__GPIO_MODULE_I2C0_B23_AHB+0
0x51FC	0x05400004 ;__GPIO_MODULE_I2C0_B23_AHB+4
0x5200	0x00000002 ;__GPIO_MODULE_I2C0_B23_AHB+8
0x5204	0x40059000 ;__GPIO_MODULE_I2C0_B23_AHB+12
0x5208	0x05080008 ;__GPIO_MODULE_I2C0_B23_AHB+16
0x520C	0x00000002 ;__GPIO_MODULE_I2C0_B23_AHB+20
0x5210	0x00000000 ;__GPIO_MODULE_I2C0_B23_AHB+24
0x5214	0x00000000 ;__GPIO_MODULE_I2C0_B23_AHB+28
0x5218	0x00000000 ;__GPIO_MODULE_I2C0_B23_AHB+32
0x521C	0x00000000 ;__GPIO_MODULE_I2C0_B23_AHB+36
0x5220	0x00000000 ;__GPIO_MODULE_I2C0_B23_AHB+40
0x5224	0x00000000 ;__GPIO_MODULE_I2C0_B23_AHB+44
0x5228	0x00000000 ;__GPIO_MODULE_I2C0_B23_AHB+48
0x522C	0x00000000 ;__GPIO_MODULE_I2C0_B23_AHB+52
0x5230	0x00000000 ;__GPIO_MODULE_I2C0_B23_AHB+56
0x5234	0x00000000 ;__GPIO_MODULE_I2C0_B23_AHB+60
0x5238	0x00000000 ;__GPIO_MODULE_I2C0_B23_AHB+64
0x523C	0x00000000 ;__GPIO_MODULE_I2C0_B23_AHB+68
0x5240	0x00000000 ;__GPIO_MODULE_I2C0_B23_AHB+72
0x5244	0x00000000 ;__GPIO_MODULE_I2C0_B23_AHB+76
0x5248	0x00000000 ;__GPIO_MODULE_I2C0_B23_AHB+80
0x524C	0x00000000 ;__GPIO_MODULE_I2C0_B23_AHB+84
0x5250	0x00000000 ;__GPIO_MODULE_I2C0_B23_AHB+88
0x5254	0x00000000 ;__GPIO_MODULE_I2C0_B23_AHB+92
0x5258	0x00000000 ;__GPIO_MODULE_I2C0_B23_AHB+96
0x525C	0x00000000 ;__GPIO_MODULE_I2C0_B23_AHB+100
0x5260	0x00000000 ;__GPIO_MODULE_I2C0_B23_AHB+104
0x5264	0x00000000 ;__GPIO_MODULE_I2C0_B23_AHB+108
0x5268	0x00000000 ;__GPIO_MODULE_I2C0_B23_AHB+112
0x526C	0x00000000 ;__GPIO_MODULE_I2C0_B23_AHB+116
0x5270	0x00000000 ;__GPIO_MODULE_I2C0_B23_AHB+120
0x5274	0x00000000 ;__GPIO_MODULE_I2C0_B23_AHB+124
0x5278	0x00000000 ;__GPIO_MODULE_I2C0_B23_AHB+128
0x527C	0x00000000 ;__GPIO_MODULE_I2C0_B23_AHB+132
0x5280	0x00000000 ;__GPIO_MODULE_I2C0_B23_AHB+136
0x5284	0x00000000 ;__GPIO_MODULE_I2C0_B23_AHB+140
0x5288	0x00000000 ;__GPIO_MODULE_I2C0_B23_AHB+144
0x528C	0x00000000 ;__GPIO_MODULE_I2C0_B23_AHB+148
0x5290	0x00000000 ;__GPIO_MODULE_I2C0_B23_AHB+152
0x5294	0x00000000 ;__GPIO_MODULE_I2C0_B23_AHB+156
0x5298	0x00000000 ;__GPIO_MODULE_I2C0_B23_AHB+160
0x529C	0x00000000 ;__GPIO_MODULE_I2C0_B23_AHB+164
0x52A0	0x00000000 ;__GPIO_MODULE_I2C0_B23_AHB+168
0x52A4	0x00000000 ;__GPIO_MODULE_I2C0_B23_AHB+172
0x52A8	0x00000000 ;__GPIO_MODULE_I2C0_B23_AHB+176
0x52AC	0x00000000 ;__GPIO_MODULE_I2C0_B23_AHB+180
0x52B0	0x00000000 ;__GPIO_MODULE_I2C0_B23_AHB+184
0x52B4	0x00000000 ;__GPIO_MODULE_I2C0_B23_AHB+188
0x52B8	0x00000000 ;__GPIO_MODULE_I2C0_B23_AHB+192
0x52BC	0x00000000 ;__GPIO_MODULE_I2C0_B23_AHB+196
0x52C0	0x00000000 ;__GPIO_MODULE_I2C0_B23_AHB+200
0x52C4	0x00000000 ;__GPIO_MODULE_I2C0_B23_AHB+204
0x52C8	0x00000000 ;__GPIO_MODULE_I2C0_B23_AHB+208
0x52CC	0x00000000 ;__GPIO_MODULE_I2C0_B23_AHB+212
0x52D0	0x00000002 ;__GPIO_MODULE_I2C0_B23_AHB+216
; end of __GPIO_MODULE_I2C0_B23_AHB
;__Lib_GPIO_6_Defs.c,264 :: __GPIO_MODULE_UART7_C45_AHB [220]
0x52D4	0x4005A000 ;__GPIO_MODULE_UART7_C45_AHB+0
0x52D8	0x05400010 ;__GPIO_MODULE_UART7_C45_AHB+4
0x52DC	0x00000001 ;__GPIO_MODULE_UART7_C45_AHB+8
0x52E0	0x4005A000 ;__GPIO_MODULE_UART7_C45_AHB+12
0x52E4	0x05400020 ;__GPIO_MODULE_UART7_C45_AHB+16
0x52E8	0x00000001 ;__GPIO_MODULE_UART7_C45_AHB+20
0x52EC	0x00000000 ;__GPIO_MODULE_UART7_C45_AHB+24
0x52F0	0x00000000 ;__GPIO_MODULE_UART7_C45_AHB+28
0x52F4	0x00000000 ;__GPIO_MODULE_UART7_C45_AHB+32
0x52F8	0x00000000 ;__GPIO_MODULE_UART7_C45_AHB+36
0x52FC	0x00000000 ;__GPIO_MODULE_UART7_C45_AHB+40
0x5300	0x00000000 ;__GPIO_MODULE_UART7_C45_AHB+44
0x5304	0x00000000 ;__GPIO_MODULE_UART7_C45_AHB+48
0x5308	0x00000000 ;__GPIO_MODULE_UART7_C45_AHB+52
0x530C	0x00000000 ;__GPIO_MODULE_UART7_C45_AHB+56
0x5310	0x00000000 ;__GPIO_MODULE_UART7_C45_AHB+60
0x5314	0x00000000 ;__GPIO_MODULE_UART7_C45_AHB+64
0x5318	0x00000000 ;__GPIO_MODULE_UART7_C45_AHB+68
0x531C	0x00000000 ;__GPIO_MODULE_UART7_C45_AHB+72
0x5320	0x00000000 ;__GPIO_MODULE_UART7_C45_AHB+76
0x5324	0x00000000 ;__GPIO_MODULE_UART7_C45_AHB+80
0x5328	0x00000000 ;__GPIO_MODULE_UART7_C45_AHB+84
0x532C	0x00000000 ;__GPIO_MODULE_UART7_C45_AHB+88
0x5330	0x00000000 ;__GPIO_MODULE_UART7_C45_AHB+92
0x5334	0x00000000 ;__GPIO_MODULE_UART7_C45_AHB+96
0x5338	0x00000000 ;__GPIO_MODULE_UART7_C45_AHB+100
0x533C	0x00000000 ;__GPIO_MODULE_UART7_C45_AHB+104
0x5340	0x00000000 ;__GPIO_MODULE_UART7_C45_AHB+108
0x5344	0x00000000 ;__GPIO_MODULE_UART7_C45_AHB+112
0x5348	0x00000000 ;__GPIO_MODULE_UART7_C45_AHB+116
0x534C	0x00000000 ;__GPIO_MODULE_UART7_C45_AHB+120
0x5350	0x00000000 ;__GPIO_MODULE_UART7_C45_AHB+124
0x5354	0x00000000 ;__GPIO_MODULE_UART7_C45_AHB+128
0x5358	0x00000000 ;__GPIO_MODULE_UART7_C45_AHB+132
0x535C	0x00000000 ;__GPIO_MODULE_UART7_C45_AHB+136
0x5360	0x00000000 ;__GPIO_MODULE_UART7_C45_AHB+140
0x5364	0x00000000 ;__GPIO_MODULE_UART7_C45_AHB+144
0x5368	0x00000000 ;__GPIO_MODULE_UART7_C45_AHB+148
0x536C	0x00000000 ;__GPIO_MODULE_UART7_C45_AHB+152
0x5370	0x00000000 ;__GPIO_MODULE_UART7_C45_AHB+156
0x5374	0x00000000 ;__GPIO_MODULE_UART7_C45_AHB+160
0x5378	0x00000000 ;__GPIO_MODULE_UART7_C45_AHB+164
0x537C	0x00000000 ;__GPIO_MODULE_UART7_C45_AHB+168
0x5380	0x00000000 ;__GPIO_MODULE_UART7_C45_AHB+172
0x5384	0x00000000 ;__GPIO_MODULE_UART7_C45_AHB+176
0x5388	0x00000000 ;__GPIO_MODULE_UART7_C45_AHB+180
0x538C	0x00000000 ;__GPIO_MODULE_UART7_C45_AHB+184
0x5390	0x00000000 ;__GPIO_MODULE_UART7_C45_AHB+188
0x5394	0x00000000 ;__GPIO_MODULE_UART7_C45_AHB+192
0x5398	0x00000000 ;__GPIO_MODULE_UART7_C45_AHB+196
0x539C	0x00000000 ;__GPIO_MODULE_UART7_C45_AHB+200
0x53A0	0x00000000 ;__GPIO_MODULE_UART7_C45_AHB+204
0x53A4	0x00000000 ;__GPIO_MODULE_UART7_C45_AHB+208
0x53A8	0x00000000 ;__GPIO_MODULE_UART7_C45_AHB+212
0x53AC	0x00000002 ;__GPIO_MODULE_UART7_C45_AHB+216
; end of __GPIO_MODULE_UART7_C45_AHB
;Click_IR_Grid2_TIVA.c,0 :: ?ICS?lstr1_Click_IR_Grid2_TIVA [22]
0x53B0	0x2D2D2D20 ;?ICS?lstr1_Click_IR_Grid2_TIVA+0
0x53B4	0x73795320 ;?ICS?lstr1_Click_IR_Grid2_TIVA+4
0x53B8	0x206D6574 ;?ICS?lstr1_Click_IR_Grid2_TIVA+8
0x53BC	0x74696E49 ;?ICS?lstr1_Click_IR_Grid2_TIVA+12
0x53C0	0x2D2D2D20 ;?ICS?lstr1_Click_IR_Grid2_TIVA+16
0x53C4	0x0020 ;?ICS?lstr1_Click_IR_Grid2_TIVA+20
; end of ?ICS?lstr1_Click_IR_Grid2_TIVA
;Click_IR_Grid2_TIVA.c,0 :: ?ICS?lstr2_Click_IR_Grid2_TIVA [26]
0x53C6	0x202D2D2D ;?ICS?lstr2_Click_IR_Grid2_TIVA+0
0x53CA	0x72617453 ;?ICS?lstr2_Click_IR_Grid2_TIVA+4
0x53CE	0x656D2074 ;?ICS?lstr2_Click_IR_Grid2_TIVA+8
0x53D2	0x72757361 ;?ICS?lstr2_Click_IR_Grid2_TIVA+12
0x53D6	0x6E656D65 ;?ICS?lstr2_Click_IR_Grid2_TIVA+16
0x53DA	0x2D2D2074 ;?ICS?lstr2_Click_IR_Grid2_TIVA+20
0x53DE	0x002D ;?ICS?lstr2_Click_IR_Grid2_TIVA+24
; end of ?ICS?lstr2_Click_IR_Grid2_TIVA
;Click_IR_Grid2_TIVA.c,0 :: ?ICS_Ta [4]
0x53E0	0x00000000 ;?ICS_Ta+0
; end of ?ICS_Ta
;,0 :: _initBlock_9 [64]
; Containing: ?ICS?lstr3_Click_IR_Grid2_TIVA [23]
;             ?ICS?lstr4_Click_IR_Grid2_TIVA [2]
;             ?ICS?lstr5_Click_IR_Grid2_TIVA [39]
0x53E4	0x69626D41 ;_initBlock_9+0 : ?ICS?lstr3_Click_IR_Grid2_TIVA at 0x53E4
0x53E8	0x20746E65 ;_initBlock_9+4
0x53EC	0x706D6574 ;_initBlock_9+8
0x53F0	0x74617265 ;_initBlock_9+12
0x53F4	0x3A657275 ;_initBlock_9+16
0x53F8	0x20002020 ;_initBlock_9+20 : ?ICS?lstr4_Click_IR_Grid2_TIVA at 0x53FB
0x53FC	0x2D2D2D00 ;_initBlock_9+24 : ?ICS?lstr5_Click_IR_Grid2_TIVA at 0x53FD
0x5400	0x78695020 ;_initBlock_9+28
0x5404	0x74206C65 ;_initBlock_9+32
0x5408	0x65706D65 ;_initBlock_9+36
0x540C	0x75746172 ;_initBlock_9+40
0x5410	0x6D206572 ;_initBlock_9+44
0x5414	0x69727461 ;_initBlock_9+48
0x5418	0x32332078 ;_initBlock_9+52
0x541C	0x20343278 ;_initBlock_9+56
0x5420	0x002D2D2D ;_initBlock_9+60
; end of _initBlock_9
;Click_IR_Grid2_TIVA.c,0 :: ?ICS?lstr6_Click_IR_Grid2_TIVA [2]
0x5424	0x007C ;?ICS?lstr6_Click_IR_Grid2_TIVA+0
; end of ?ICS?lstr6_Click_IR_Grid2_TIVA
;Click_IR_Grid2_TIVA.c,0 :: ?ICS?lstr7_Click_IR_Grid2_TIVA [2]
0x5426	0x0020 ;?ICS?lstr7_Click_IR_Grid2_TIVA+0
; end of ?ICS?lstr7_Click_IR_Grid2_TIVA
;Click_IR_Grid2_TIVA.c,0 :: ?ICS?lstr8_Click_IR_Grid2_TIVA [2]
0x5428	0x0020 ;?ICS?lstr8_Click_IR_Grid2_TIVA+0
; end of ?ICS?lstr8_Click_IR_Grid2_TIVA
;,0 :: _initBlock_13 [11]
; Containing: ?ICS__irgrid2_driver_startF [1]
;             ?ICS?lstr1___Lib_Conversions [4]
;             ?ICS?lstr2___Lib_Conversions [2]
;             ?ICS?lstr3___Lib_Conversions [4]
0x542A	0x4E614E00 ;_initBlock_13+0 : ?ICS__irgrid2_driver_startF at 0x542A : ?ICS?lstr1___Lib_Conversions at 0x542B
0x542E	0x49003000 ;_initBlock_13+4 : ?ICS?lstr2___Lib_Conversions at 0x542F : ?ICS?lstr3___Lib_Conversions at 0x5431
0x5432	0x00464E ;_initBlock_13+8
; end of _initBlock_13
;easymx_v7_TM4C129XNCZAD.c,47 :: __MIKROBUS1_GPIO [96]
0x5438	0x00000269 ;__MIKROBUS1_GPIO+0
0x543C	0x0000025D ;__MIKROBUS1_GPIO+4
0x5440	0x00000251 ;__MIKROBUS1_GPIO+8
0x5444	0x0000028D ;__MIKROBUS1_GPIO+12
0x5448	0x00000281 ;__MIKROBUS1_GPIO+16
0x544C	0x00000275 ;__MIKROBUS1_GPIO+20
0x5450	0x00000221 ;__MIKROBUS1_GPIO+24
0x5454	0x00000215 ;__MIKROBUS1_GPIO+28
0x5458	0x00000209 ;__MIKROBUS1_GPIO+32
0x545C	0x00000245 ;__MIKROBUS1_GPIO+36
0x5460	0x00000239 ;__MIKROBUS1_GPIO+40
0x5464	0x0000022D ;__MIKROBUS1_GPIO+44
0x5468	0xFFFFFFFF ;__MIKROBUS1_GPIO+48
0x546C	0xFFFFFFFF ;__MIKROBUS1_GPIO+52
0x5470	0xFFFFFFFF ;__MIKROBUS1_GPIO+56
0x5474	0xFFFFFFFF ;__MIKROBUS1_GPIO+60
0x5478	0xFFFFFFFF ;__MIKROBUS1_GPIO+64
0x547C	0xFFFFFFFF ;__MIKROBUS1_GPIO+68
0x5480	0xFFFFFFFF ;__MIKROBUS1_GPIO+72
0x5484	0xFFFFFFFF ;__MIKROBUS1_GPIO+76
0x5488	0xFFFFFFFF ;__MIKROBUS1_GPIO+80
0x548C	0xFFFFFFFF ;__MIKROBUS1_GPIO+84
0x5490	0xFFFFFFFF ;__MIKROBUS1_GPIO+88
0x5494	0xFFFFFFFF ;__MIKROBUS1_GPIO+92
; end of __MIKROBUS1_GPIO
;__Lib_I2C_09.c,0 :: ?ICS__Lib_I2C_09__I2C0_TIMEOUT [4]
0x5498	0x00000000 ;?ICS__Lib_I2C_09__I2C0_TIMEOUT+0
; end of ?ICS__Lib_I2C_09__I2C0_TIMEOUT
;__Lib_I2C_09.c,0 :: ?ICS__Lib_I2C_09__I2C1_TIMEOUT [4]
0x549C	0x00000000 ;?ICS__Lib_I2C_09__I2C1_TIMEOUT+0
; end of ?ICS__Lib_I2C_09__I2C1_TIMEOUT
;__Lib_I2C_09.c,0 :: ?ICS__Lib_I2C_09__I2C2_TIMEOUT [4]
0x54A0	0x00000000 ;?ICS__Lib_I2C_09__I2C2_TIMEOUT+0
; end of ?ICS__Lib_I2C_09__I2C2_TIMEOUT
;__Lib_I2C_09.c,0 :: ?ICS__Lib_I2C_09__I2C3_TIMEOUT [4]
0x54A4	0x00000000 ;?ICS__Lib_I2C_09__I2C3_TIMEOUT+0
; end of ?ICS__Lib_I2C_09__I2C3_TIMEOUT
;__Lib_I2C_09.c,0 :: ?ICS__Lib_I2C_09__I2C4_TIMEOUT [4]
0x54A8	0x00000000 ;?ICS__Lib_I2C_09__I2C4_TIMEOUT+0
; end of ?ICS__Lib_I2C_09__I2C4_TIMEOUT
;__Lib_I2C_09.c,0 :: ?ICS__Lib_I2C_09__I2C5_TIMEOUT [4]
0x54AC	0x00000000 ;?ICS__Lib_I2C_09__I2C5_TIMEOUT+0
; end of ?ICS__Lib_I2C_09__I2C5_TIMEOUT
;__Lib_I2C_09.c,0 :: ?ICS__Lib_I2C_09__I2C6_TIMEOUT [4]
0x54B0	0x00000000 ;?ICS__Lib_I2C_09__I2C6_TIMEOUT+0
; end of ?ICS__Lib_I2C_09__I2C6_TIMEOUT
;__Lib_I2C_09.c,0 :: ?ICS__Lib_I2C_09__I2C7_TIMEOUT [4]
0x54B4	0x00000000 ;?ICS__Lib_I2C_09__I2C7_TIMEOUT+0
; end of ?ICS__Lib_I2C_09__I2C7_TIMEOUT
;__Lib_I2C_09.c,0 :: ?ICS__Lib_I2C_09__I2C8_TIMEOUT [4]
0x54B8	0x00000000 ;?ICS__Lib_I2C_09__I2C8_TIMEOUT+0
; end of ?ICS__Lib_I2C_09__I2C8_TIMEOUT
;__Lib_I2C_09.c,0 :: ?ICS__Lib_I2C_09__I2C9_TIMEOUT [4]
0x54BC	0x00000000 ;?ICS__Lib_I2C_09__I2C9_TIMEOUT+0
; end of ?ICS__Lib_I2C_09__I2C9_TIMEOUT
;__irgrid2_driver.c,154 :: __irgrid2_driver__exp_coeff_L0 [40]
0x54C0	0x3F800000 ;__irgrid2_driver__exp_coeff_L0+0
0x54C4	0x3F317218 ;__irgrid2_driver__exp_coeff_L0+4
0x54C8	0x3E75FDF0 ;__irgrid2_driver__exp_coeff_L0+8
0x54CC	0x3D635847 ;__irgrid2_driver__exp_coeff_L0+12
0x54D0	0x3C1D9558 ;__irgrid2_driver__exp_coeff_L0+16
0x54D4	0x3AAEC482 ;__irgrid2_driver__exp_coeff_L0+20
0x54D8	0x392178A8 ;__irgrid2_driver__exp_coeff_L0+24
0x54DC	0x378093EF ;__irgrid2_driver__exp_coeff_L0+28
0x54E0	0x35A792A0 ;__irgrid2_driver__exp_coeff_L0+32
0x54E4	0x34155646 ;__irgrid2_driver__exp_coeff_L0+36
; end of __irgrid2_driver__exp_coeff_L0
;__irgrid2_driver.c,192 :: __irgrid2_driver__log_coeff_L0 [36]
0x54E8	0x2EDBE6FF ;__irgrid2_driver__log_coeff_L0+0
0x54EC	0x3F7FFFC4 ;__irgrid2_driver__log_coeff_L0+4
0x54F0	0xBEFFEF80 ;__irgrid2_driver__log_coeff_L0+8
0x54F4	0x3EA9E190 ;__irgrid2_driver__log_coeff_L0+12
0x54F8	0xBE7682EC ;__irgrid2_driver__log_coeff_L0+16
0x54FC	0x3E2BAD82 ;__irgrid2_driver__log_coeff_L0+20
0x5500	0xBDC33C0E ;__irgrid2_driver__log_coeff_L0+24
0x5504	0x3D13D187 ;__irgrid2_driver__log_coeff_L0+28
0x5508	0xBBD37841 ;__irgrid2_driver__log_coeff_L0+32
; end of __irgrid2_driver__log_coeff_L0
;easymx_v7_TM4C129XNCZAD.c,15 :: __MIKROBUS1_I2C [12]
0x550C	0x000014C9 ;__MIKROBUS1_I2C+0
0x5510	0x0000143D ;__MIKROBUS1_I2C+4
0x5514	0x00001379 ;__MIKROBUS1_I2C+8
; end of __MIKROBUS1_I2C
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0208      [12]    easymx_v7_TM4C129XNCZAD__setRX_1
0x0214      [12]    easymx_v7_TM4C129XNCZAD__setINT_1
0x0220      [12]    easymx_v7_TM4C129XNCZAD__setPWM_1
0x022C      [12]    easymx_v7_TM4C129XNCZAD__setSDA_1
0x0238      [12]    easymx_v7_TM4C129XNCZAD__setSCL_1
0x0244      [12]    easymx_v7_TM4C129XNCZAD__setTX_1
0x0250      [12]    easymx_v7_TM4C129XNCZAD__setCS_1
0x025C      [12]    easymx_v7_TM4C129XNCZAD__setRST_1
0x0268      [12]    easymx_v7_TM4C129XNCZAD__setAN_1
0x0274      [12]    easymx_v7_TM4C129XNCZAD__setMOSI_1
0x0280      [12]    easymx_v7_TM4C129XNCZAD__setMISO_1
0x028C      [12]    easymx_v7_TM4C129XNCZAD__setSCK_1
0x0298      [12]    easymx_v7_TM4C129XNCZAD__setAN_2
0x02A4      [12]    easymx_v7_TM4C129XNCZAD__setTX_2
0x02B0      [12]    easymx_v7_TM4C129XNCZAD__setRX_2
0x02BC      [12]    easymx_v7_TM4C129XNCZAD__setINT_2
0x02C8      [24]    _Delay_1us
0x02E0      [12]    easymx_v7_TM4C129XNCZAD__setSDA_2
0x02EC      [12]    easymx_v7_TM4C129XNCZAD__setSCL_2
0x02F8      [12]    easymx_v7_TM4C129XNCZAD__setSCK_2
0x0304      [12]    easymx_v7_TM4C129XNCZAD__setCS_2
0x0310      [12]    easymx_v7_TM4C129XNCZAD__setRST_2
0x031C      [12]    easymx_v7_TM4C129XNCZAD__setPWM_2
0x0328      [12]    easymx_v7_TM4C129XNCZAD__setMOSI_2
0x0334      [12]    easymx_v7_TM4C129XNCZAD__setMISO_2
0x0340     [492]    _GPIO_Clk_Enable
0x052C    [1408]    _GPIO_Config
0x0AAC      [96]    __irgrid2_driver__ldexp
0x0B0C      [16]    __Lib_I2C_09_I2Cx_Master_Slave_Addr_Set
0x0B1C     [516]    __Lib_I2C_09_I2Cx_Read
0x0D20      [64]    __irgrid2_driver__eval_poly
0x0D60     [504]    __Lib_I2C_09_I2Cx_Write
0x0F58     [126]    __irgrid2_driver__floor
0x0FD8      [42]    __irgrid2_driver__frexp
0x1004      [28]    _I2C5_Write
0x1020      [28]    _I2C8_Write
0x103C      [28]    _I2C7_Write
0x1058      [28]    _I2C6_Write
0x1074      [28]    _I2C1_Write
0x1090     [146]    _GPIO_Alternate_Function_Enable
0x1124      [12]    _Get_Fosc_kHz
0x1130      [28]    _I2C4_Write
0x114C      [28]    _I2C3_Write
0x1168      [28]    _I2C2_Write
0x1184      [28]    _I2C7_Read
0x11A0      [28]    _I2C6_Read
0x11BC      [28]    _I2C5_Read
0x11D8      [28]    _I2C8_Read
0x11F4     [244]    __irgrid2_driver__exp
0x12E8     [116]    __irgrid2_driver__log
0x135C      [28]    _I2C9_Read
0x1378      [28]    _I2C0_Read
0x1398      [24]    _Delay_1ms
0x13B0      [28]    _I2C9_Write
0x13CC      [28]    _I2C1_Read
0x13E8      [28]    _I2C4_Read
0x1404      [28]    _I2C3_Read
0x1420      [28]    _I2C2_Read
0x143C      [28]    _I2C0_Write
0x1458      [28]    _I2C6_Master_Slave_Addr_Set
0x1474      [28]    _I2C5_Master_Slave_Addr_Set
0x1490      [28]    _I2C8_Master_Slave_Addr_Set
0x14AC      [28]    _I2C7_Master_Slave_Addr_Set
0x14C8      [28]    _I2C0_Master_Slave_Addr_Set
0x14E4      [28]    _I2C2_Master_Slave_Addr_Set
0x1500      [28]    _I2C1_Master_Slave_Addr_Set
0x151C      [28]    _I2C4_Master_Slave_Addr_Set
0x1538      [28]    _I2C3_Master_Slave_Addr_Set
0x1554      [28]    _I2C9_Master_Slave_Addr_Set
0x1570      [36]    __Lib_UART_07_UART2_Enable
0x1594      [20]    __irgrid2_driver_hal_i2cStart
0x15A8     [292]    __irgrid2_driver_hal_i2cRead
0x16CC     [166]    __irgrid2_driver__pow
0x1774      [36]    __Lib_UART_07_UART2_Disable
0x1798      [36]    __Lib_UART_07_UART7_Enable
0x17BC     [304]    __irgrid2_driver_hal_i2cWrite
0x18EC      [36]    __Lib_UART_07_UART7_Disable
0x1910      [36]    __Lib_UART_07_UART5_Enable
0x1934      [36]    __Lib_UART_07_UART5_Disable
0x1958      [72]    __irgrid2_driver_CheckAdjacentPixels
0x19A0    [1016]    __Lib_I2C_09_I2Cx_Init_Advanced
0x1D98      [28]    _UART3_Write
0x1DB4      [28]    __irgrid2_driver_CheckEEPROMValid
0x1DD0      [28]    _UART4_Write
0x1DEC      [28]    _UART1_Write
0x1E08      [28]    _UART2_Write
0x1E24      [28]    _UART0_Write
0x1E40      [72]    __irgrid2_driver_ExtractVDDParameters
0x1E88     [256]    __irgrid2_driver_ExtractPTATParameters
0x1F88     [700]    __irgrid2_driver_ExtractCPParameters
0x2244     [370]    __irgrid2_driver_ExtractKvPixelParameters
0x23B8     [546]    __irgrid2_driver_ExtractKtaPixelParameters
0x25DC     [378]    __irgrid2_driver_ExtractCILCParameters
0x2758     [200]    _irgrid2_GetVdd
0x2820      [76]    _irgrid2_writeByte
0x286C     [486]    __irgrid2_driver_ExtractDeviatingPixels
0x2A54      [24]    __irgrid2_driver_ExtractResolutionParameters
0x2A6C      [84]    __irgrid2_driver_ExtractTgcParameters
0x2AC0      [34]    __irgrid2_driver_ExtractGainParameters
0x2AE4      [88]    __irgrid2_driver_ExtractKsTaParameters
0x2B3C     [740]    __irgrid2_driver_ExtractOffsetParameters
0x2E20     [910]    __irgrid2_driver_ExtractAlphaParameters
0x31B0     [380]    __irgrid2_driver_ExtractKsToParameters
0x332C      [28]    _I2C0_Init_Advanced
0x3348     [204]    _irgrid2_readData
0x3414     [200]    _UART5_Init
0x34DC     [200]    _UART2_Init
0x35A4     [200]    _UART7_Init
0x366C      [28]    _UART5_Write
0x3688      [28]    _UART7_Write
0x36A4      [28]    _UART6_Write
0x36C0      [36]    easymx_v7_TM4C129XNCZAD__log_init2
0x36E4      [32]    easymx_v7_TM4C129XNCZAD__i2cInit_1
0x3704      [32]    easymx_v7_TM4C129XNCZAD__i2cInit_2
0x3724      [36]    easymx_v7_TM4C129XNCZAD__log_init1
0x3748      [70]    _irgrid2_setRefreshRate
0x3790     [260]    _irgrid2_GetTa
0x3894    [1976]    _irgrid2_CalculateTo
0x404C      [40]    _strcpy
0x4074      [36]    easymx_v7_TM4C129XNCZAD__log_initUartA
0x4098      [24]    _Delay_100ms
0x40B0     [178]    _irgrid2_getFrameData
0x4164     [150]    _irgrid2_ExtractParameters
0x41FC       [2]    __irgrid2_driver_hal_gpioMap
0x4200      [40]    __irgrid2_driver_hal_i2cMap
0x4228      [28]    _irgrid2_readEEPROM
0x4244      [32]    easymx_v7_TM4C129XNCZAD__log_write
0x4264      [36]    easymx_v7_TM4C129XNCZAD__log_initUartB
0x4288      [48]    _irgrid2_init
0x42B8      [24]    _Delay_80us
0x42D0      [46]    _mikrobus_i2cInit
0x4300     [124]    _irgrid2_getPixelTemperature
0x437C     [112]    _mikrobus_logWrite
0x43EC      [70]    _mikrobus_logInit
0x4434     [492]    _FloatToStr
0x4620      [36]    _irgrid2_i2cDriverInit
0x4648      [24]    _Delay_10ms
0x4660      [58]    ___FillZeros
0x46A0      [76]    _systemInit
0x46EC      [52]    _applicationInit
0x4720     [240]    _applicationTask
0x4810      [20]    ___CC2DW
0x4824       [8]    ___GenExcept
0x482C      [42]    ___EnableFPU
0x4858      [20]    __Lib_System_TIVA_InitialSetUpFosc
0x486C     [304]    __Lib_System_TIVA_InitialSetUpRCCRCC2
0x499C      [36]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [8]    FARG_LongDoubleToStr_dnum
0x0000       [4]    FARG_FloatToStr_fnum
0x0000       [4]    FARG_irgrid2_CalculateTo_emissivity
0x0000       [4]    FARG___irgrid2_driver__log_x
0x0000       [4]    FARG___irgrid2_driver__exp_x
0x0000       [4]    FARG___irgrid2_driver__pow_x
0x0000       [4]    FARG___irgrid2_driver__ldexp_value
0x0000       [4]    FARG___irgrid2_driver__floor_x
0x0000       [4]    FARG___irgrid2_driver__frexp_value
0x0000       [4]    FARG___irgrid2_driver__eval_poly_x
0x0004       [4]    FARG___irgrid2_driver__pow_y
0x0004       [4]    FARG_irgrid2_CalculateTo_tr
0x20000000      [22]    ?lstr1_Click_IR_Grid2_TIVA
0x20000016      [26]    ?lstr2_Click_IR_Grid2_TIVA
0x20000030       [4]    _Ta
0x20000034      [23]    ?lstr3_Click_IR_Grid2_TIVA
0x2000004B       [2]    ?lstr4_Click_IR_Grid2_TIVA
0x2000004D      [39]    ?lstr5_Click_IR_Grid2_TIVA
0x20000074       [2]    ?lstr6_Click_IR_Grid2_TIVA
0x20000076       [2]    ?lstr7_Click_IR_Grid2_TIVA
0x20000078       [2]    ?lstr8_Click_IR_Grid2_TIVA
0x2000007A       [1]    __irgrid2_driver_startF
0x2000007B       [4]    ?lstr1___Lib_Conversions
0x2000007F       [2]    ?lstr2___Lib_Conversions
0x20000081       [4]    ?lstr3___Lib_Conversions
0x20000085       [1]    __irgrid2_driver__slaveAddress
0x20000086       [2]    _cnt
0x20000088       [4]    __Lib_I2C_09__I2C0_TIMEOUT
0x2000008C       [4]    __Lib_I2C_09__I2C1_TIMEOUT
0x20000090       [4]    __Lib_I2C_09__I2C2_TIMEOUT
0x20000094       [4]    __Lib_I2C_09__I2C3_TIMEOUT
0x20000098       [4]    __Lib_I2C_09__I2C4_TIMEOUT
0x2000009C       [4]    __Lib_I2C_09__I2C5_TIMEOUT
0x200000A0       [4]    __Lib_I2C_09__I2C6_TIMEOUT
0x200000A4       [4]    __Lib_I2C_09__I2C7_TIMEOUT
0x200000A8       [4]    __Lib_I2C_09__I2C8_TIMEOUT
0x200000AC       [4]    __Lib_I2C_09__I2C9_TIMEOUT
0x200000B0    [3072]    _pixelTemp
0x20000CB0     [100]    _demoText
0x20000D14       [4]    _logger
0x20000D18       [4]    __irgrid2_driver_fp_i2cStart
0x20000D1C       [4]    __irgrid2_driver_fp_i2cRead
0x20000D20    [1664]    __irgrid2_driver_eeMLX90640
0x200013A0   [10864]    __irgrid2_driver_mlx90640
0x20003E10    [1668]    __irgrid2_driver_mlx90640Frame
0x20004494       [4]    __irgrid2_driver_fp_i2cWrite
0x20004498       [4]    ___System_CLOCK_IN_KHZ
0x2000449C       [4]    _I2C0_Timeout_Ptr
0x200044A0       [4]    _I2C1_Timeout_Ptr
0x200044A4       [4]    _I2C2_Timeout_Ptr
0x200044A8       [4]    _I2C3_Timeout_Ptr
0x200044AC       [4]    _I2C4_Timeout_Ptr
0x200044B0       [4]    _I2C5_Timeout_Ptr
0x200044B4       [4]    _I2C6_Timeout_Ptr
0x200044B8       [4]    _I2C7_Timeout_Ptr
0x200044BC       [4]    _I2C8_Timeout_Ptr
0x200044C0       [4]    _I2C9_Timeout_Ptr
0x200044C4       [4]    _I2C_Enable_Ptr
0x200044C8       [4]    _I2C_Master_Slave_Addr_Set_Ptr
0x200044CC       [4]    _I2C_Write_Ptr
0x200044D0       [4]    _I2C_Read_Ptr
0x200044D4       [4]    _I2C_Disable_Ptr
0x200044D8       [4]    _UART_Wr_Ptr
0x200044DC       [4]    _UART_Rd_Ptr
0x200044E0       [4]    _UART_Rdy_Ptr
0x200044E4       [4]    _UART_Tx_Idle_Ptr
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x1394       [4]    __IRGRID2_I2C_CFG
0x49C0    [1664]    ?ICSirgrid2_readData_readReg_L0
0x5040     [220]    __GPIO_MODULE_UART5_H67_AHB
0x511C     [220]    __GPIO_MODULE_UART2_D45_AHB
0x51F8     [220]    __GPIO_MODULE_I2C0_B23_AHB
0x52D4     [220]    __GPIO_MODULE_UART7_C45_AHB
0x53B0      [22]    ?ICS?lstr1_Click_IR_Grid2_TIVA
0x53C6      [26]    ?ICS?lstr2_Click_IR_Grid2_TIVA
0x53E0       [4]    ?ICS_Ta
0x53E4      [23]    ?ICS?lstr3_Click_IR_Grid2_TIVA
0x53FB       [2]    ?ICS?lstr4_Click_IR_Grid2_TIVA
0x53FD      [39]    ?ICS?lstr5_Click_IR_Grid2_TIVA
0x5424       [2]    ?ICS?lstr6_Click_IR_Grid2_TIVA
0x5426       [2]    ?ICS?lstr7_Click_IR_Grid2_TIVA
0x5428       [2]    ?ICS?lstr8_Click_IR_Grid2_TIVA
0x542A       [1]    ?ICS__irgrid2_driver_startF
0x542B       [4]    ?ICS?lstr1___Lib_Conversions
0x542F       [2]    ?ICS?lstr2___Lib_Conversions
0x5431       [4]    ?ICS?lstr3___Lib_Conversions
0x5438      [96]    __MIKROBUS1_GPIO
0x5498       [4]    ?ICS__Lib_I2C_09__I2C0_TIMEOUT
0x549C       [4]    ?ICS__Lib_I2C_09__I2C1_TIMEOUT
0x54A0       [4]    ?ICS__Lib_I2C_09__I2C2_TIMEOUT
0x54A4       [4]    ?ICS__Lib_I2C_09__I2C3_TIMEOUT
0x54A8       [4]    ?ICS__Lib_I2C_09__I2C4_TIMEOUT
0x54AC       [4]    ?ICS__Lib_I2C_09__I2C5_TIMEOUT
0x54B0       [4]    ?ICS__Lib_I2C_09__I2C6_TIMEOUT
0x54B4       [4]    ?ICS__Lib_I2C_09__I2C7_TIMEOUT
0x54B8       [4]    ?ICS__Lib_I2C_09__I2C8_TIMEOUT
0x54BC       [4]    ?ICS__Lib_I2C_09__I2C9_TIMEOUT
0x54C0      [40]    __irgrid2_driver__exp_coeff_L0
0x54E8      [36]    __irgrid2_driver__log_coeff_L0
0x550C      [12]    __MIKROBUS1_I2C
